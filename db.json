{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-reimu/source/css/fontawesome.styl","path":"css/fontawesome.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/css/heat-map.styl","path":"css/heat-map.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/css/iconfont.styl","path":"css/iconfont.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/css/loader.styl","path":"css/loader.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/css/tag-roulette.styl","path":"css/tag-roulette.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/banner-600w.webp","path":"images/banner-600w.webp","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/banner-800w.webp","path":"images/banner-800w.webp","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/banner.png","path":"images/banner.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/banner.webp","path":"images/banner.webp","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/reimu.png","path":"images/reimu.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi-fill.png","path":"images/taichi-fill.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi-fill.svg","path":"images/taichi-fill.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi.svg","path":"images/taichi.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi.png","path":"images/taichi.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/algolia_search.js","path":"js/algolia_search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/aos.js","path":"js/aos.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/heat_map.js","path":"js/heat_map.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/generator_search.js","path":"js/generator_search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/insert_highlight.js","path":"js/insert_highlight.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/pjax_script.js","path":"js/pjax_script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/service_worker.js","path":"js/service_worker.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/js/sw.js","path":"js/sw.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-default.png","path":"images/cursor/reimu-cursor-default.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-text.png","path":"images/cursor/reimu-cursor-text.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-pointer.png","path":"images/cursor/reimu-cursor-pointer.png","modified":1,"renderable":1},{"_id":"source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":0},{"_id":"source/images/banner-800w.webp","path":"images/banner-800w.webp","modified":1,"renderable":0},{"_id":"source/images/banner-600w.webp","path":"images/banner-600w.webp","modified":1,"renderable":0},{"_id":"source/images/banner.webp","path":"images/banner.webp","modified":1,"renderable":0},{"_id":"source/images/banner.jpg","path":"images/banner.jpg","modified":1,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":0},{"_id":"source/images/reimu.png","path":"images/reimu.png","modified":1,"renderable":0},{"_id":"source/images/taichi-fill.png","path":"images/taichi-fill.png","modified":1,"renderable":0},{"_id":"source/images/taichi-fill.svg","path":"images/taichi-fill.svg","modified":1,"renderable":0},{"_id":"source/images/taichi.png","path":"images/taichi.png","modified":1,"renderable":0},{"_id":"source/images/taichi.svg","path":"images/taichi.svg","modified":1,"renderable":0},{"_id":"source/sponsor/wechat.png","path":"sponsor/wechat.png","modified":1,"renderable":0},{"_id":"source/images/cursor/reimu-cursor-default.png","path":"images/cursor/reimu-cursor-default.png","modified":1,"renderable":0},{"_id":"source/images/cursor/reimu-cursor-pointer.png","path":"images/cursor/reimu-cursor-pointer.png","modified":1,"renderable":0},{"_id":"source/images/cursor/reimu-cursor-text.png","path":"images/cursor/reimu-cursor-text.png","modified":1,"renderable":0},{"_id":"source/images/posts/C语言函数指针作为结构体成员实现成员操作/1.png","path":"images/posts/C语言函数指针作为结构体成员实现成员操作/1.png","modified":1,"renderable":0},{"_id":"source/images/posts/C语言函数指针作为结构体成员实现成员操作/2.png","path":"images/posts/C语言函数指针作为结构体成员实现成员操作/2.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/1.png","path":"images/posts/ESP32-IDF新建工程和创建分区/1.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/3.png","path":"images/posts/ESP32-IDF新建工程和创建分区/3.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/4.png","path":"images/posts/ESP32-IDF新建工程和创建分区/4.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/2.png","path":"images/posts/ESP32-IDF新建工程和创建分区/2.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/6.png","path":"images/posts/ESP32-IDF新建工程和创建分区/6.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/5.png","path":"images/posts/ESP32-IDF新建工程和创建分区/5.png","modified":1,"renderable":0},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/7.png","path":"images/posts/ESP32-IDF新建工程和创建分区/7.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/1.webp","path":"images/posts/STM32单片机外设初始化例程/1.webp","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/3.webp","path":"images/posts/STM32单片机外设初始化例程/3.webp","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/2.webp","path":"images/posts/STM32单片机外设初始化例程/2.webp","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/4.webp","path":"images/posts/STM32单片机外设初始化例程/4.webp","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/6.png","path":"images/posts/STM32单片机外设初始化例程/6.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/4.png","path":"images/posts/STM32单片机外设初始化例程/4.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/5.png","path":"images/posts/STM32单片机外设初始化例程/5.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/7.png","path":"images/posts/STM32单片机外设初始化例程/7.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/8.png","path":"images/posts/STM32单片机外设初始化例程/8.png","modified":1,"renderable":0},{"_id":"source/images/posts/STM32单片机外设初始化例程/9.png","path":"images/posts/STM32单片机外设初始化例程/9.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/1.png","path":"images/posts/ros学习/1.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/2.png","path":"images/posts/ros学习/2.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/3.png","path":"images/posts/ros学习/3.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/4.png","path":"images/posts/ros学习/4.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/5.png","path":"images/posts/ros学习/5.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/6.png","path":"images/posts/ros学习/6.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/7.png","path":"images/posts/ros学习/7.png","modified":1,"renderable":0},{"_id":"source/images/posts/ros学习/8.png","path":"images/posts/ros学习/8.png","modified":1,"renderable":0},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png","path":"images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png","modified":1,"renderable":0},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png","path":"images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png","modified":1,"renderable":0},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png","path":"images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png","modified":1,"renderable":0},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png","path":"images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png","modified":1,"renderable":0},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png","path":"images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.nojekyll","hash":"665332b36fc8fa1ed11210cdee83b639b451e592","modified":1752482081183},{"_id":"source/about/index.md","hash":"b5211c23aa46989494af9f6856bfe37531e627da","modified":1752722635381},{"_id":"source/_data/covers.yml","hash":"f4db3dde3153a18d5db2a243df2d4da0f42e83ea","modified":1752567323475},{"_id":"source/_posts/Csharp学习之旅.md","hash":"a16645e50565b05dc5ad3b101fc8b1e826486b0a","modified":1752649144030},{"_id":"source/_posts/C语言函数指针作为结构体成员实现成员操作.md","hash":"9f930ef6b4f48918330ae7400602208434cd4d15","modified":1752654232050},{"_id":"source/_posts/ESP32-IDF新建工程和创建分区.md","hash":"f57c4c64ea48422eea113cf36a17d97715909606","modified":1752650781906},{"_id":"source/_posts/LIN总线OTA升级协议定义.md","hash":"4d6faa9a2fa8164b0b516b43c801a36861ebbf05","modified":1752647864053},{"_id":"source/_posts/QML_Fluid_Element动态元素.md","hash":"f6b6c34ef8dcde847732a182d336ce06a8daad7d","modified":1752652878199},{"_id":"source/_posts/ROS学习.md","hash":"c5e8243820442feb7fdbe2862ba90877c8558dd2","modified":1752658719484},{"_id":"source/_posts/STM32单片机外设初始化例程.md","hash":"955de39a657809e99f3905c3b7151993dcdb4cb1","modified":1752656519164},{"_id":"source/_posts/WPF解析教程.md","hash":"49ac091e2a1829d95c9b73b9c92dc1153d25ee50","modified":1752647922697},{"_id":"source/_posts/hello-world.md","hash":"012fa5851f02a12f0b48a4117c33e201b84740c6","modified":1752736050477},{"_id":"source/_posts/longtimelove.md","hash":"4c4f9c2a432e15bc20ff0d163f8e215219c7a623","modified":1752638261263},{"_id":"source/_posts/love.md","hash":"c22a7907669a36ad7d16fab0902de7459f26d0a6","modified":1752645915896},{"_id":"source/_posts/shearchphone.md","hash":"c6199876fcbf2ef6f7a4044175207b711e504a66","modified":1752649199505},{"_id":"source/_posts/基于Modbus-RTU协议的Bootloader升级系统设计.md","hash":"5371ab1d5375ed9e45fd68350fb360b42af1182d","modified":1752651491649},{"_id":"source/_posts/基于Cortex-M0内核的Bootloader开发指南.md","hash":"e83a3952ac04c7013f80d349e90ce72eff667ed6","modified":1752651381575},{"_id":"source/_posts/汽车电子固件升级（OTA）实现详解.md","hash":"a1819fd731f7a73077ed5d9af9842c1863abd54e","modified":1752651752203},{"_id":"source/css/_animation.styl","hash":"befe096e99f3fa971d8048b89499019af7293522","modified":1752569823808},{"_id":"source/css/_extend.styl","hash":"5bb717cb9402222955524b28684575b3dde43b80","modified":1752569823808},{"_id":"source/css/_variables.styl","hash":"a96ef63e259ce5089e42c4154fdaa342c9a75e50","modified":1752569823813},{"_id":"source/css/fontawesome.styl","hash":"47c1954d958b2e60c8556dcc97509cb8565296ec","modified":1752569823813},{"_id":"source/css/iconfont.styl","hash":"afb43923c10fd9cfa3eaf6edefd60387491d2546","modified":1752569823813},{"_id":"source/css/heat-map.styl","hash":"3906f525023a810ff148f7bea1260080ec60e094","modified":1752569823813},{"_id":"source/css/loader.styl","hash":"be3628d3c3bf55f731ca8f4663923597a6129894","modified":1752569823814},{"_id":"source/css/style.styl","hash":"206c5eabddc1d8f51837154f6c9c458f44e51245","modified":1752569823814},{"_id":"source/css/tag-roulette.styl","hash":"cd6920db4844a7769513ca2fc064c88cc896f0c3","modified":1752569823814},{"_id":"source/friend/_data.yml","hash":"7254da4ca68ae1e1a91ae95801886c2c35ba9056","modified":1752557616600},{"_id":"source/friend/index.md","hash":"af3f361969a68444ecc83420c6e0f64613544c71","modified":1752647230107},{"_id":"source/images/algolia_logo.svg","hash":"6ddea54d87cc9dc2abf77bb22b615e5cb8e322b3","modified":1752569823814},{"_id":"source/images/banner-800w.webp","hash":"33a90a2a08eaa97b365f31ed1ec331b511794c6b","modified":1752625545880},{"_id":"source/images/banner-600w.webp","hash":"c66d19262d4820edc226f126dd120d97f532732e","modified":1752625472213},{"_id":"source/images/favicon.ico","hash":"6c94938e3b4748880493631c9a8e4a29b4ac30a6","modified":1752572229307},{"_id":"source/images/taichi-fill.svg","hash":"f519dd6608fb405258e547ef3a99b0459c0d21e0","modified":1752640601318},{"_id":"source/images/taichi-fill.png","hash":"c9a20aff88f5bba6771fb91e4898f9828b4aa7d9","modified":1752640895240},{"_id":"source/images/taichi.png","hash":"5ed019ead7635e8dac1aac8509388b80704c94ae","modified":1752640853399},{"_id":"source/images/taichi.svg","hash":"f519dd6608fb405258e547ef3a99b0459c0d21e0","modified":1752640601318},{"_id":"source/_data/avatar/avatar.webp","hash":"26db897d9cd6ca6280530b28af78728483284975","modified":1752558945132},{"_id":"source/css/_partial/aplayer.styl","hash":"4141cf8473a95ab6931a2cc59e89b9dd110ddd15","modified":1752569823808},{"_id":"source/css/_partial/archive.styl","hash":"d62552f747d733fc2e9dc115728b0f4c7beca0cb","modified":1752569823809},{"_id":"source/css/_partial/article.styl","hash":"6a55f1282032aaf79ee56654bd9da3f467890345","modified":1752569823809},{"_id":"source/css/_partial/card.styl","hash":"1bb7facd17b4674e6a2a7c153b2007a6d4066e03","modified":1752569823809},{"_id":"source/css/_partial/footer.styl","hash":"1f73c31fc85896007bf6e2f1aa6112558682fbd3","modified":1752569823810},{"_id":"source/css/_partial/comment.styl","hash":"ab9c9e57819ad2969cb8133be8e1e1de48371e9f","modified":1752569823809},{"_id":"source/css/_partial/container.styl","hash":"0d1a478585e0c5f7c181083a6de30d52d03c65a1","modified":1752569823810},{"_id":"source/css/_partial/friend.styl","hash":"2f8737922008c9c163cae438d23c006f2136f1ba","modified":1752569823810},{"_id":"source/css/_partial/live2d_widgets.styl","hash":"894812732770b597e464f0abb35166213000f1f1","modified":1752569823811},{"_id":"source/css/_partial/highlight.styl","hash":"ebdc25f69acc68d9045fe40d0bda66ef960f0c09","modified":1752569823811},{"_id":"source/css/_partial/header.styl","hash":"5c619ae7f916533777a21876b64afa5bdb31f307","modified":1752569823811},{"_id":"source/css/_partial/live2d.styl","hash":"1222f53d2fe4c95d786dabaac399a043a10d2aa7","modified":1752569823811},{"_id":"source/css/_partial/notification.styl","hash":"3d963fc19d5ab64a014dfaa7c8880f6af4826a14","modified":1752569823811},{"_id":"source/css/_partial/mobile.styl","hash":"638f045874b30d2b6d3efe93eeeec22238b3d007","modified":1752569823811},{"_id":"source/css/_partial/post.styl","hash":"ec4a6d37e2c21cfb4e6e495e491db2557169fbc1","modified":1752569823811},{"_id":"source/css/_partial/search.styl","hash":"2a0544aed1fdf3a439e853e9368e2b4589aa2066","modified":1752569823812},{"_id":"source/css/_partial/sidebar.styl","hash":"53a66c87e7f89312054616d170a81729e88a6223","modified":1752569823812},{"_id":"source/css/_partial/share.styl","hash":"6c132f4cbd83a516f3cd5237416bfdb3d2dc386b","modified":1752569823812},{"_id":"source/css/_partial/sponsor.styl","hash":"016fddfe629bce1b8479dfe35ea4fb4423b9498b","modified":1752569823812},{"_id":"source/css/_partial/top.styl","hash":"680ade22b3c9cbf0c980fbded4bf28a3313d3e7b","modified":1752569823812},{"_id":"source/css/_partial/widget.styl","hash":"a77fdc0c39e3a57b16ca161f25a6c9b127f35a82","modified":1752569823812},{"_id":"source/images/cursor/reimu-cursor-default.png","hash":"ac31e9dee5bfd4e170a3765e9144e28cefdc05cc","modified":1752572441819},{"_id":"source/images/cursor/reimu-cursor-pointer.png","hash":"c4d05feb601224dc4fea6c2991141d74fe20439d","modified":1752572517382},{"_id":"source/images/cursor/reimu-cursor-text.png","hash":"55c9f4a6b4d05263ac79bee38250abd016641efd","modified":1752572551283},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/3.png","hash":"52e3acc77d4f0cd22b3404c5b13f42eead7c5f9c","modified":1752649473039},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/2.png","hash":"a502f64ec07f4dbfe5c8a8bf23034f9950d1df2e","modified":1752649468226},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/7.png","hash":"a3d47ddba87a4ecdbb290d579642360a93698ac6","modified":1752649496766},{"_id":"source/images/posts/STM32单片机外设初始化例程/1.webp","hash":"ce7a772a92ade43363cce027e8efa73a34d2f032","modified":1752654457445},{"_id":"source/images/posts/STM32单片机外设初始化例程/3.webp","hash":"5b5f22c0d4aba2eaeefe2b6b987b02cb9fd232f7","modified":1752654466376},{"_id":"source/images/posts/STM32单片机外设初始化例程/4.webp","hash":"2257f5732cb603f916504aa28d30ac3d969b4174","modified":1752655269791},{"_id":"source/images/posts/STM32单片机外设初始化例程/6.png","hash":"f74315f1c51b084ff4832936ca008fa563bb244c","modified":1752654484780},{"_id":"source/images/posts/STM32单片机外设初始化例程/4.png","hash":"284573889986faefb901e8c3d2406f9b7e0d2702","modified":1752654474753},{"_id":"source/images/posts/STM32单片机外设初始化例程/5.png","hash":"a93f4df491e35477ba7ad839fb19d143c7214ffe","modified":1752654481210},{"_id":"source/images/posts/STM32单片机外设初始化例程/7.png","hash":"fc3462f9cffb2a0e55812f510b27212a76d0280d","modified":1752654490861},{"_id":"source/images/posts/STM32单片机外设初始化例程/8.png","hash":"cb0d3ddc8edad3d022928e5a65b65648f321cdfc","modified":1752654495556},{"_id":"source/images/posts/STM32单片机外设初始化例程/9.png","hash":"47479a80e08f768ba056b01194429c45a9e4e30f","modified":1752654500366},{"_id":"source/images/posts/ros学习/1.png","hash":"b3765082c88ef796d6e0a885f1c9679e49377ce9","modified":1752651908067},{"_id":"source/images/posts/ros学习/2.png","hash":"6888219a9b12aea95185c5c34a82999fc19f00b5","modified":1752651924593},{"_id":"source/images/posts/ros学习/3.png","hash":"c74afd903ef9e7449070a505a6ede7c1869554bd","modified":1752651929024},{"_id":"source/images/posts/ros学习/4.png","hash":"b2fd216bb9bab2f882757423fc4f1dad8975427c","modified":1752651933201},{"_id":"source/images/posts/ros学习/5.png","hash":"235b7b86f0f978eb28bbce7ce2a539ad9f259ddf","modified":1752651938223},{"_id":"source/images/posts/ros学习/6.png","hash":"a814e724840ed6c1bf385a002595b686c471e28d","modified":1752651944087},{"_id":"source/images/posts/ros学习/7.png","hash":"64ac85adbcdb6fa0b3955142a5ecfbebb264bd41","modified":1752651947521},{"_id":"source/images/posts/ros学习/8.png","hash":"9899a01ab8e6781f6e4bbf50147268ab62e1f493","modified":1752651952035},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png","hash":"f9ed9af55ddf9832f1e9fdf855e7cada4765f0b9","modified":1752651061460},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png","hash":"27f804edb03b301e5c9306d36eb6ce4e85b45bc4","modified":1752651078548},{"_id":"source/images/reimu.png","hash":"2742a664354977e6b1cbdcfc463948a5686a5509","modified":1752625402607},{"_id":"source/sponsor/wechat.png","hash":"72033d55983d311ac8c263c12f8dbe89cb497b27","modified":1752632276511},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/4.png","hash":"cb0504762448b723c6533b690418914c8ed7e77c","modified":1752649480497},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/5.png","hash":"7579f2bb92c423f656f1a06b8002e9e07a556b56","modified":1752649483699},{"_id":"source/images/posts/STM32单片机外设初始化例程/2.webp","hash":"abb5fb545ad84784f1ff05533015dfe8517964d1","modified":1752654462611},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png","hash":"54d5f753d7bd85e4f7a4e3f43b780fdd4b2d6ed1","modified":1752651070360},{"_id":"node_modules/hexo-theme-reimu/LICENSE","hash":"789d8582b9537dd3a87a108958664cde10839f96","modified":1752550873201},{"_id":"node_modules/hexo-theme-reimu/README.en.md","hash":"43166a8f0d1ef68533315f38612073d83a581d7e","modified":1752550874097},{"_id":"node_modules/hexo-theme-reimu/README.md","hash":"4d4728404ef06d60dc8d240651eaaf6ed479c792","modified":1752550874724},{"_id":"node_modules/hexo-theme-reimu/_config.yml","hash":"6157448b8c230ecb1a70afe932c1fced0d96a83c","modified":1752731098416},{"_id":"node_modules/hexo-theme-reimu/package.json","hash":"c3c0102739977dbafd048625733c993003fb2894","modified":1752550874090},{"_id":"node_modules/hexo-theme-reimu/languages/en.yml","hash":"63bdabe9b03ee508395c1b8ab862d4464933b7be","modified":1752550880970},{"_id":"node_modules/hexo-theme-reimu/languages/ja.yml","hash":"595716ee2a92762d29040a001e8974d9e684e625","modified":1752550880971},{"_id":"node_modules/hexo-theme-reimu/languages/zh-CN.yml","hash":"e5be0f4790f6d0d3d24aa8fb6bce5a12ca0b92fa","modified":1752550880972},{"_id":"node_modules/hexo-theme-reimu/languages/zh-TW.yml","hash":"d1652fd866e6ca44bf078bb36affa9ddbc9ed7f9","modified":1752550880974},{"_id":"node_modules/hexo-theme-reimu/layout/404.ejs","hash":"44e38723f169a9185605a0abea6db93b9c936fa7","modified":1752550873204},{"_id":"node_modules/hexo-theme-reimu/layout/category.ejs","hash":"dc34aa8129bf18c92066609765da70d6801b6d3d","modified":1752550873222},{"_id":"node_modules/hexo-theme-reimu/layout/archive.ejs","hash":"dc34aa8129bf18c92066609765da70d6801b6d3d","modified":1752550873215},{"_id":"node_modules/hexo-theme-reimu/layout/index.ejs","hash":"a0db58330fd45aac4ecb907c7e89d789ff137c44","modified":1752550873235},{"_id":"node_modules/hexo-theme-reimu/layout/post.ejs","hash":"d7ca807fc9a41f8c004e671ff3569e0840021fe3","modified":1752550873243},{"_id":"node_modules/hexo-theme-reimu/layout/layout.ejs","hash":"7e7b4322d74b761a368af8962179a1f45c904e05","modified":1752550873236},{"_id":"node_modules/hexo-theme-reimu/layout/page.ejs","hash":"d7ca807fc9a41f8c004e671ff3569e0840021fe3","modified":1752550873240},{"_id":"node_modules/hexo-theme-reimu/layout/tag.ejs","hash":"dc34aa8129bf18c92066609765da70d6801b6d3d","modified":1752550873251},{"_id":"node_modules/hexo-theme-reimu/_example/_data/covers.yml","hash":"83ce8dacfb7696940252f3b7f0d8bc0dcd0bf10b","modified":1752550880968},{"_id":"node_modules/hexo-theme-reimu/_example/_posts/hello-world.md","hash":"363739945255456ae78712c4de42f71931e7e17b","modified":1752550874091},{"_id":"node_modules/hexo-theme-reimu/_example/about/index.md","hash":"7f72d268971fdf372813ed159e59bb52b3f4944d","modified":1752550874093},{"_id":"node_modules/hexo-theme-reimu/_example/friend/_data.yml","hash":"7254da4ca68ae1e1a91ae95801886c2c35ba9056","modified":1752550880966},{"_id":"node_modules/hexo-theme-reimu/_example/friend/index.md","hash":"55f5c93219efd7e89b913072ff2b866c9c980857","modified":1752550874094},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/after-footer.ejs","hash":"aac31524fb28bf2ee40b512d69b58ee77e730be7","modified":1752550873207},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/archive-post.ejs","hash":"28eb8fac353a9b82cea3e6b8e835a9c6d2c6196b","modified":1752550873209},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/archive.ejs","hash":"2e480c4b15f1526bbcdb4f6f457b38de3ef30a6c","modified":1752550873212},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/footer.ejs","hash":"9dba7dca17370a7271c1dd32f83f1aa8339f0292","modified":1752550873229},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/article.ejs","hash":"33534c39263aa01df66d59fa7ec6f5699f54ea4b","modified":1752550873219},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/head.ejs","hash":"5d2b31af62c33feef940f25ce4069d013a2b24c9","modified":1752550873233},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/header.ejs","hash":"d797bcae9d46d148649192c1d1fba106b3fc4772","modified":1752550873234},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/loader.ejs","hash":"998eec5550f5fac3af7bb6d5a3fe6e68c4102da0","modified":1752550873238},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/mobile-nav.ejs","hash":"647a3d83fc2069588e2c09041452dac68ae6923c","modified":1752550873238},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post.ejs","hash":"bc97eedb90604175b72817c59c73869748513747","modified":1752550873242},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/sidebar.ejs","hash":"a016822ffabd05051d328c5aa6089656cf8beb07","modified":1752550873247},{"_id":"node_modules/hexo-theme-reimu/layout/_widget/archive.ejs","hash":"938ee8c152a24d4fe6837406e2669c8ce727c258","modified":1752550873213},{"_id":"node_modules/hexo-theme-reimu/layout/_widget/category.ejs","hash":"2f9d9768d0f5bb173ec52b738e25e8ba181d6179","modified":1752550873222},{"_id":"node_modules/hexo-theme-reimu/layout/_widget/recent_posts.ejs","hash":"691b57e09f67cbc1183b28aff88fd9fbba802f8c","modified":1752550873244},{"_id":"node_modules/hexo-theme-reimu/layout/_widget/tag.ejs","hash":"8d651506474267f0af024c891e69d0862b1f6eb2","modified":1752550873250},{"_id":"node_modules/hexo-theme-reimu/layout/_widget/tagcloud.ejs","hash":"8a63b940102030dd28a841e8591d066b8d07db6c","modified":1752550873252},{"_id":"node_modules/hexo-theme-reimu/scripts/filter/stylus.js","hash":"7186f5b02c1787731241ba15d0178e092089917b","modified":1752550874083},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/articleCopyright.js","hash":"fd993f52085080d2202d294543dd106c4738842d","modified":1752550873395},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/asyncCss.js","hash":"cc27c977e9b2809beec12296aca6c60a31663f74","modified":1752550873396},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/cache.js","hash":"09ab4e101051aa56c67d2f2a78df01eb99b17d59","modified":1752550873398},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/config.js","hash":"39a70da24bf8e05183783f6eb968774129486826","modified":1752550873404},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/copyright.js","hash":"8889aece9de4a8e284e5f72099ed22302d013159","modified":1752550873405},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/i18n.js","hash":"e61bb2ac2863cc68f14a4c13f18d251f3544f45b","modified":1752550874042},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/listCategories.js","hash":"4f79435eee9a5d90fa64797fbdd2373e5d212486","modified":1752550874047},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/listTags.js","hash":"798b5d8b7e0af3541bb482f531a9441d9e0541a6","modified":1752550874049},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/outdate.js","hash":"a56e9b84e49a1676849a08c9c39b65fdf09f5cdd","modified":1752550874051},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/override.js","hash":"62814f721fb2fcb7b2f0a5fe95ca5b12390b9a1a","modified":1752550874054},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/parseHomeCategories.js","hash":"1b4b2180a22c7851560862e30edf3365d6fe806a","modified":1752550874057},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/partialLang.js","hash":"ac549bc4468d9318e8eefff07d9c405f2a2742d5","modified":1752550874058},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/randomCover.js","hash":"2421862c7e4c4d52ed97a1b0ce2d0cc3faf9c4de","modified":1752550874069},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/shareLink.js","hash":"67f3c723aafd48031b3dfd56fa4ef94cddb12a08","modified":1752550874079},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/stripHtml.js","hash":"5b70c29fc2d955944bc009cd58dfd4be1bbb28a7","modified":1752550874080},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/vendorCdn.js","hash":"2e8ca22a9e6107472e0dad4fbb1b050fe376f601","modified":1752550874087},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/vendorFont.js","hash":"33fb049698b154f734d1ec00657437878fea82ce","modified":1752550874088},{"_id":"node_modules/hexo-theme-reimu/scripts/helper/wordCount.js","hash":"b9b31756e234fc085a2c2fd1d3e8d3dbd6a592a7","modified":1752550874089},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/404.js","hash":"e29a951e9e53a93061423b3201a31ecdf571f29e","modified":1752550873256},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/i18n.js","hash":"eb75f9fe499be1cfd40ee1c3b72d47ab5698020e","modified":1752550874039},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/images.js","hash":"1951bed1a64b04e42102abf7404177572d504f97","modified":1752550874043},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/override.js","hash":"e069daca4e92d40529509ba80f22b1258d0b8a9c","modified":1752550874053},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/search.js","hash":"a629600225d37114bf1cd03f8a8c29a81527e716","modified":1752550874073},{"_id":"node_modules/hexo-theme-reimu/scripts/generator/servicework.js","hash":"bc57adcadcdaabb3a1afb3085855b8fbec54d05b","modified":1752550874077},{"_id":"node_modules/hexo-theme-reimu/scripts/tag/externalLinkCard.js","hash":"367d6caddd5190359e2dee4f25e60a1dea7a8c82","modified":1752550873407},{"_id":"node_modules/hexo-theme-reimu/scripts/tag/friendLink.js","hash":"9fe2b5988549ba132d0b3c31cee328f173cdeebd","modified":1752550873408},{"_id":"node_modules/hexo-theme-reimu/scripts/tag/heatMapCard.js","hash":"8810c204fdea851245f4073f854ebff3ab648ada","modified":1752550874038},{"_id":"node_modules/hexo-theme-reimu/scripts/tag/postLinkCard.js","hash":"e9b17b2ea2bd5ab45af7c5e7dcec604553b95e4e","modified":1752550874067},{"_id":"node_modules/hexo-theme-reimu/scripts/tag/tagRoulette.js","hash":"ff38221f0c553288e13ceee7c3cb91c4c035d866","modified":1752550874087},{"_id":"node_modules/hexo-theme-reimu/scripts/util/checkConfig.js","hash":"b5ef0b52fa5c2678b60c4bed93a260d24160fd6d","modified":1752550873400},{"_id":"node_modules/hexo-theme-reimu/scripts/util/checkVersion.js","hash":"ab34e305981458c22ede8957fa32a308cdc377b7","modified":1752550873402},{"_id":"node_modules/hexo-theme-reimu/source/css/_animation.styl","hash":"1479901db587eeb2b419233c0c44cef04d21d541","modified":1752550878370},{"_id":"node_modules/hexo-theme-reimu/source/css/_extend.styl","hash":"42e6095741db7d1aab1ad7511be35232e96fad31","modified":1752550878371},{"_id":"node_modules/hexo-theme-reimu/source/css/_variables.styl","hash":"1e7af8689cd66878e189118348b6e4a733dfeeba","modified":1752550878372},{"_id":"node_modules/hexo-theme-reimu/source/css/fontawesome.styl","hash":"db4a2a618245e9c71a9a83664424ff4738e7041b","modified":1752550878381},{"_id":"node_modules/hexo-theme-reimu/source/css/heat-map.styl","hash":"3906f525023a810ff148f7bea1260080ec60e094","modified":1752550878385},{"_id":"node_modules/hexo-theme-reimu/source/css/iconfont.styl","hash":"cac25988dfa15a787bde839617750d36feed27a4","modified":1752550878388},{"_id":"node_modules/hexo-theme-reimu/source/css/loader.styl","hash":"4d4fe118826568a6d82d4002cf667c22d085b654","modified":1752550878390},{"_id":"node_modules/hexo-theme-reimu/source/css/style.styl","hash":"3bb94d6f04e11707ea0bf0b0331db16580941fcc","modified":1752550878463},{"_id":"node_modules/hexo-theme-reimu/source/css/tag-roulette.styl","hash":"cd6920db4844a7769513ca2fc064c88cc896f0c3","modified":1752550878465},{"_id":"node_modules/hexo-theme-reimu/source/images/algolia_logo.svg","hash":"be6c3b8022eaabf5402737ea6dc334b0478181e4","modified":1752550878469},{"_id":"node_modules/hexo-theme-reimu/source/images/banner-600w.webp","hash":"21a2f645b88e10b3bcbddc617142820897087b9c","modified":1752550879628},{"_id":"node_modules/hexo-theme-reimu/source/images/banner-800w.webp","hash":"b6816d3aff990eb6776c1257ef4489a9a75e9a1d","modified":1752550879910},{"_id":"node_modules/hexo-theme-reimu/source/images/favicon.ico","hash":"71abb7df9c06622a19baf55841dc36ac0b965a6f","modified":1752550873255},{"_id":"node_modules/hexo-theme-reimu/source/images/reimu.png","hash":"7bbaba99fda7b420759e169d72d226e4c4e9e665","modified":1752550878279},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi-fill.png","hash":"1b1411207fc92903e76d414ebe6f4f32267de991","modified":1752550878366},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi-fill.svg","hash":"bd2598a12c1ad5f17d6ebdb635c192e2365ec156","modified":1752550878471},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi.svg","hash":"d6d0ab8bc997a416d63b0257d6c2530e792c91ed","modified":1752550878472},{"_id":"node_modules/hexo-theme-reimu/source/images/taichi.png","hash":"297865b94e16a14c14447f6265d850cdbbb31852","modified":1752550878369},{"_id":"node_modules/hexo-theme-reimu/source/js/algolia_search.js","hash":"b01c5d9d443f4a073a24212fcf536fb5ce593c94","modified":1752550873258},{"_id":"node_modules/hexo-theme-reimu/source/js/aos.js","hash":"703e8ed1163f299905a81721ebdef0f74ae77353","modified":1752550873392},{"_id":"node_modules/hexo-theme-reimu/source/js/heat_map.js","hash":"a69352938618278d8546de81a6db527445fd626f","modified":1752550874035},{"_id":"node_modules/hexo-theme-reimu/source/js/generator_search.js","hash":"672bf9f15d0eb32145a8786d4c1b2b4724c162f3","modified":1752550873808},{"_id":"node_modules/hexo-theme-reimu/source/js/insert_highlight.js","hash":"2fcb5828e3d40e3c254081bf0c162a941c851532","modified":1752550874045},{"_id":"node_modules/hexo-theme-reimu/source/js/pjax.js","hash":"9eba500d50e8adca7f30908c37f3cca1f199ac8a","modified":1752550874065},{"_id":"node_modules/hexo-theme-reimu/source/js/pjax_script.js","hash":"25528c760b2fa14db98759406aae1edd883708cb","modified":1752550874061},{"_id":"node_modules/hexo-theme-reimu/source/js/service_worker.js","hash":"578892dc37035e5d75623061daab284a55d580ce","modified":1752550874075},{"_id":"node_modules/hexo-theme-reimu/source/js/script.js","hash":"067a123933be9126f42b4e434185aa39eb7e888c","modified":1752550874072},{"_id":"node_modules/hexo-theme-reimu/source/js/sw.js","hash":"72a5e8709e5d1087f74a42eb0287398d3ed7a6a0","modified":1752550874086},{"_id":"node_modules/hexo-theme-reimu/_example/_data/avatar/avatar.webp","hash":"427278caef0a47f8d0de7dabd51625856cd55a67","modified":1752550878694},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/analytics/clarity.ejs","hash":"8d90749b72ce89c4aaeb70db7471a55e96066a71","modified":1752550873223},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/analytics/baidu-analytics.ejs","hash":"746e09b5b94cfee70a955cbaed1049f388b93a12","modified":1752550873220},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/analytics/google-analytics.ejs","hash":"a00d704965d9717fd40b528c7c9829dda413c9bd","modified":1752550873231},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/category.ejs","hash":"104e87cb8743dca7e3e25b3e316f01c1d1d29bb0","modified":1752550873221},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/archives.ejs","hash":"8a90a823155c28cddc407a185d9e3bf5b3c0243c","modified":1752550873216},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/comment.ejs","hash":"df3f3eb0c180dcb4485c494fd5d8f069db6ee79d","modified":1752550873226},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/nav.ejs","hash":"1ceec49f5e11f9728dd30b4bd3df967ae8483935","modified":1752550873239},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/date.ejs","hash":"3657417ac02633621693a158d5ea6e8cbaebe218","modified":1752550873228},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/gallery.ejs","hash":"0a759ced625eebd47a1be295d783bc09acd36d48","modified":1752550873230},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/share.ejs","hash":"49b480d50e2653623bca4544a584c4e32dbf4640","modified":1752550873246},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/tag.ejs","hash":"f7632b1abb375171f755f9918934336be3f79d17","modified":1752550873250},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/sidebar/common-sidebar.ejs","hash":"fc4f23de146225f3c8388f5dd9d47cb0294e9063","modified":1752550873227},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/post/sponsor.ejs","hash":"4e1526a5883a4c14b9377858e559f24ef78e99fd","modified":1752550873249},{"_id":"node_modules/hexo-theme-reimu/layout/_partial/sidebar/toc-sidebar.ejs","hash":"4e8b1b37a54f62853ccc7c948a125f35132f39eb","modified":1752550873253},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/aplayer.styl","hash":"4141cf8473a95ab6931a2cc59e89b9dd110ddd15","modified":1752550878374},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/archive.styl","hash":"34d80f2eea5813af3cde174937f357e625573538","modified":1752550878375},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/article.styl","hash":"1a3338dc412efda15e667b229d738643553d283a","modified":1752550878377},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/card.styl","hash":"6feb71a2b64fd4b03eb3d59d00f905be30b9389f","modified":1752550878378},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/friend.styl","hash":"93a2e0a57179da3aec885913224a66147688fc98","modified":1752550878384},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/container.styl","hash":"0d1a478585e0c5f7c181083a6de30d52d03c65a1","modified":1752550878379},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/comment.styl","hash":"e0ebb20ac941178b4cfd98cca018e3c7d46c5569","modified":1752550878378},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/footer.styl","hash":"ee7831e4b712027a3f26295f5f12309f70c07591","modified":1752550878382},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/highlight.styl","hash":"d5771f79a15e7b3be980851a7c16a7aeb946a8df","modified":1752550878387},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/header.styl","hash":"80b46ccc026c5f1eca8d9b5c74a09a020823e4e6","modified":1752550878385},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/mobile.styl","hash":"fc1880dc1df9548dc8344cecca59ca38a216e264","modified":1752550878390},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/live2d.styl","hash":"1222f53d2fe4c95d786dabaac399a043a10d2aa7","modified":1752550878389},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/notification.styl","hash":"35c5f931e52d31a12a5416f98a250e50a8d6f708","modified":1752550878391},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/live2d_widgets.styl","hash":"894812732770b597e464f0abb35166213000f1f1","modified":1752550878388},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/search.styl","hash":"3cb6c5f732cb923959bd11e8480745ee63278e97","modified":1752550878458},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/post.styl","hash":"1b552d38b68e72735b1a8d86ca91bd6105e2b5fd","modified":1752550878456},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/sidebar.styl","hash":"e8024af363ec8d403a3e8741f4f211e0286ed583","modified":1752550878461},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/share.styl","hash":"6c132f4cbd83a516f3cd5237416bfdb3d2dc386b","modified":1752550878459},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/sponsor.styl","hash":"a1d13a2806176cc04b66583e2b5f7e9e3762f6aa","modified":1752550878462},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/top.styl","hash":"37c8dbdd679dd18306fdb275006797ffc5cc20dd","modified":1752550878467},{"_id":"node_modules/hexo-theme-reimu/source/css/_partial/widget.styl","hash":"f186530b7d5b59c123bf7f417bcfb451257145dd","modified":1752550878468},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-text.png","hash":"c9fb0e6ed0e35033ea77544ff64531a6e0ac4e03","modified":1752550878278},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-default.png","hash":"f2346c0da25f0657641de8d37ad2236fcd73580e","modified":1752550878264},{"_id":"node_modules/hexo-theme-reimu/source/images/cursor/reimu-cursor-pointer.png","hash":"e5e8ec35303257face7e9ddca0a17e45a33c19c8","modified":1752550878266},{"_id":"source/_posts/image.png","hash":"bb95adbd97aff4ee54dff8bbe6675841a040c4d6","modified":1752655303815},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/1.png","hash":"88699897670fed96d0dca51f3a0629295688db99","modified":1752649460927},{"_id":"source/images/posts/ESP32-IDF新建工程和创建分区/6.png","hash":"9cf6e2b53d8a9d3c7ac57d2488fbf1451e64d6c9","modified":1752649487417},{"_id":"node_modules/hexo-theme-reimu/source/images/banner.webp","hash":"3ce4678c7510496b551672808b95dc21c4709eb7","modified":1752550880961},{"_id":"source/images/posts/C语言函数指针作为结构体成员实现成员操作/1.png","hash":"b6a7ce3879156e5473ad6ff4636a736bbb37594f","modified":1752653484124},{"_id":"source/images/posts/C语言函数指针作为结构体成员实现成员操作/2.png","hash":"16fd834dd335a0f8a53c0aa67133e4ac5ec6d6e3","modified":1752653488854},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png","hash":"b87d1fb7abb1a91a7396325069f3fa4005f55a9a","modified":1752651074765},{"_id":"source/images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png","hash":"89611d154c30ca0f63a8d7779259529544782566","modified":1752651066303},{"_id":"node_modules/hexo-theme-reimu/source/images/banner.png","hash":"74b7747a8e48c2e53f7d2e80059aa40afe29b3a0","modified":1752550877927},{"_id":"source/images/banner.webp","hash":"d08e23a3aae6a748fb6e092c6606886f3d9d94a8","modified":1752571117938},{"_id":"source/images/banner.jpg","hash":"3f86628a7be45dea7235db2b52e5375e25e4f89b","modified":1752571074141},{"_id":"public/css/fontawesome.css","hash":"f3c0b1e423bb44987e3089c2a5d6180b2f64a36d","modified":1752736086087},{"_id":"public/css/heat-map.css","hash":"b8acebe035965f85e1a4d7099ae9fd78e4e3d732","modified":1752736086087},{"_id":"public/css/style.css","hash":"80a287d67aca663719ea869ffe62d61903ac9bc4","modified":1752736086087},{"_id":"public/css/iconfont.css","hash":"d7dcdd7ec9368dae8e883dee1e8e6e83143b15cb","modified":1752736086087},{"_id":"public/css/loader.css","hash":"15b83dc02ae09aebfac432324adaea29d8e28921","modified":1752736086087},{"_id":"public/css/tag-roulette.css","hash":"ae73162443c2144d5b3e52ee6004f5f351676e74","modified":1752736086087},{"_id":"public/en/css/iconfont.css","hash":"d7dcdd7ec9368dae8e883dee1e8e6e83143b15cb","modified":1752736086087},{"_id":"public/en/css/fontawesome.css","hash":"f3c0b1e423bb44987e3089c2a5d6180b2f64a36d","modified":1752736086087},{"_id":"public/en/css/heat-map.css","hash":"b8acebe035965f85e1a4d7099ae9fd78e4e3d732","modified":1752736086087},{"_id":"public/en/css/loader.css","hash":"15b83dc02ae09aebfac432324adaea29d8e28921","modified":1752736086087},{"_id":"public/en/css/style.css","hash":"80a287d67aca663719ea869ffe62d61903ac9bc4","modified":1752736086087},{"_id":"public/sw.js","hash":"89712479d71d7e902c6109ec3c5d6b3ef1e9eb07","modified":1752736086087},{"_id":"public/en/css/tag-roulette.css","hash":"ae73162443c2144d5b3e52ee6004f5f351676e74","modified":1752736086087},{"_id":"public/search.json","hash":"2ce34eda5656ffcd1f1177a788eeeab930303533","modified":1752736086087},{"_id":"public/404.html","hash":"a00435b9d9a0373089e64ea765da11e23046139a","modified":1752736086087},{"_id":"public/friend/index.html","hash":"c05f1181fc0fd76778a5bc429485f98e807bf306","modified":1752736086087},{"_id":"public/about/index.html","hash":"f492668be819dd600a84277e9ce1eb182274bf6b","modified":1752736086087},{"_id":"public/2025/07/14/Csharp学习之旅/index.html","hash":"7966d241e7e71a2c6f275ac08c473fe9d5192eaa","modified":1752736086087},{"_id":"public/2025/07/14/LIN总线OTA升级协议定义/index.html","hash":"fd41bdaa611ebed6d7e2fe0ce8f3857528e268f6","modified":1752736086087},{"_id":"public/2025/07/14/WPF解析教程/index.html","hash":"045e7f1dbd13d9a7e75680094d260ba91440f106","modified":1752736086087},{"_id":"public/2025/07/14/汽车电子固件升级（OTA）实现详解/index.html","hash":"30a79664ed756a1997063f42ebc467a213653305","modified":1752736086087},{"_id":"public/2025/07/13/love/index.html","hash":"ebefe6d5ec0352d0095b043ec53dbe4caef2081b","modified":1752736086087},{"_id":"public/2025/07/04/shearchphone/index.html","hash":"2d1c06cb6e1852fd7193921390e064fda69cb79c","modified":1752736086087},{"_id":"public/2025/06/06/ESP32-IDF新建工程和创建分区/index.html","hash":"6604c283a1e89ce01e913d518b5f06d222f3ce0d","modified":1752736086087},{"_id":"public/2025/03/28/基于Cortex-M0内核的Bootloader开发指南/index.html","hash":"7f7aa778ed0146abd8702085c7646362a3fb59a6","modified":1752736086087},{"_id":"public/2025/03/24/基于Modbus-RTU协议的Bootloader升级系统设计/index.html","hash":"4de4151314c0d07b8e99770b9b1e39a70123d2de","modified":1752736086087},{"_id":"public/2024/03/22/QML_Fluid_Element动态元素/index.html","hash":"b423e54dd091c69f860447072c94462d19a38298","modified":1752736086087},{"_id":"public/2024/03/22/ROS学习/index.html","hash":"37e440390a5bca26756c9c690d4059e68f4fb93e","modified":1752736086087},{"_id":"public/2023/09/15/longtimelove/index.html","hash":"5b818f57e1c2084290a8b3e3720191df270eef9a","modified":1752736086087},{"_id":"public/2023/01/18/STM32单片机外设初始化例程/index.html","hash":"a82c2203549a7e6a135a04a72cd291f4c7f92a51","modified":1752736086087},{"_id":"public/2022/11/16/C语言函数指针作为结构体成员实现成员操作/index.html","hash":"2deadcfcfbfa31702ae7ad7bc218dc875f8c1868","modified":1752736086087},{"_id":"public/2013/12/24/hello-world/index.html","hash":"d6dfabbfce4289c5fa742918bc46717a221e0b4b","modified":1752736086087},{"_id":"public/archives/index.html","hash":"27cb2c640c5a32cc861d0cc25a8a60c4d32093e6","modified":1752736086087},{"_id":"public/archives/page/2/index.html","hash":"4165b84cbf10c26d93ea50cede67f5ef0e05bbb3","modified":1752736086087},{"_id":"public/archives/2013/index.html","hash":"dc3e71e59a3a6bd76eea8d39851cf8ae8a598b67","modified":1752736086087},{"_id":"public/archives/2013/12/index.html","hash":"46781ecdfa8abafc979ca6eb3242827baa11a9fc","modified":1752736086087},{"_id":"public/archives/2022/index.html","hash":"f88a6a6a649e6b92f4e762950216808c2abf4c4b","modified":1752736086087},{"_id":"public/archives/2022/11/index.html","hash":"f34a2d44b8f1e539246233ca069e89ce8681f744","modified":1752736086087},{"_id":"public/archives/2023/index.html","hash":"4cae4c6405404c0449aa5010ae9848040e595b06","modified":1752736086087},{"_id":"public/archives/2023/01/index.html","hash":"510ef7e4c93632a9efc28ad587a1d515dee53865","modified":1752736086087},{"_id":"public/archives/2023/09/index.html","hash":"a221b24978af2c0a2ca414cb825b7797570a08d5","modified":1752736086087},{"_id":"public/archives/2024/index.html","hash":"58ab41996e67b9709c23919d3a19b64e6f6d9788","modified":1752736086087},{"_id":"public/archives/2024/03/index.html","hash":"b39da8ef30f61b787d9109ce017c2748089d7b4d","modified":1752736086087},{"_id":"public/archives/2025/index.html","hash":"8e20afbc120714958b68524c6ba5e2fb88c04864","modified":1752736086087},{"_id":"public/archives/2025/03/index.html","hash":"36cc1f3910ea95ab0fc599b3333f75136071fa06","modified":1752736086087},{"_id":"public/archives/2025/06/index.html","hash":"2998636f7339e09b679aedb0b6ab8df87bab925b","modified":1752736086087},{"_id":"public/archives/2025/07/index.html","hash":"914e9bc3e6ff081bfa998ea2f6c58f6027e9c2ea","modified":1752736086087},{"_id":"public/categories/嵌入式/index.html","hash":"aa7af465068ad6fdcdb5a6a486b13d0000f68f04","modified":1752736086087},{"_id":"public/index.html","hash":"ac0e567505362dbb28e4b418a2012eb2f1636020","modified":1752736086087},{"_id":"public/categories/嵌入式/page/2/index.html","hash":"dde2f52f8fb6001de0d039ccda8b1b16df6b3289","modified":1752736086087},{"_id":"public/categories/技术分享-开源项目-工具/index.html","hash":"b509fc82915a28f487884ca6d9545141a5e405ca","modified":1752736086087},{"_id":"public/page/2/index.html","hash":"4726be2734bc0fe0e2650605a1d3a74053809b22","modified":1752736086087},{"_id":"public/tags/嵌入式/index.html","hash":"7c14ea4ac993015992afd3bac7221464c0e71d78","modified":1752736086087},{"_id":"public/tags/嵌入式/page/2/index.html","hash":"0ddbf96cf40bd58291146a4cb2ae1b712341493f","modified":1752736086087},{"_id":"public/tags/C/index.html","hash":"810b4f407217eff5afb5522c6c5e33ede9172839","modified":1752736086087},{"_id":"public/tags/C语言/index.html","hash":"40af9a86d89c59b4e8fdfd1dd570f7ca1ab28712","modified":1752736086087},{"_id":"public/tags/技术/index.html","hash":"004e893db445e057534b3a3a7ec6fa5d4e1de0e8","modified":1752736086087},{"_id":"public/tags/笔记/index.html","hash":"aa2a64c8298ab888f93d8f55dab7b6ad63d28b65","modified":1752736086087},{"_id":"public/tags/单片机/index.html","hash":"f1cac6acdea8fb2a7a37c0c77f5feeb12ec4a0d5","modified":1752736086087},{"_id":"public/tags/Qt/index.html","hash":"c3d43ee4b99886d7400d297cde2380f2656d9ab7","modified":1752736086087},{"_id":"public/tags/QML/index.html","hash":"91b70fcba37dda646fba5bf94468c6f917c94ed6","modified":1752736086087},{"_id":"public/tags/python/index.html","hash":"e0ee985b29d84b3f5a58786cfb93b15fb0fa7915","modified":1752736086087},{"_id":"public/tags/linux/index.html","hash":"b882d31d5a6a68ac6bb6c3e9b9bac3ae34ee58ee","modified":1752736086087},{"_id":"public/tags/ros/index.html","hash":"3ef94339a0c1653e2e6b754a66d7544ed550c31c","modified":1752736086087},{"_id":"public/tags/小程序/index.html","hash":"f5ca6bd334f73ed04d2e34a2b761428d86cf4e83","modified":1752736086087},{"_id":"public/tags/工具/index.html","hash":"a7849e75d1a5ba5a2179ab7e0d01922745539d41","modified":1752736086087},{"_id":"public/tags/应用/index.html","hash":"ab621557a718591e3da4fd4def54c32fd92308ec","modified":1752736086087},{"_id":"public/tags/bootloader/index.html","hash":"78e8597409c687ccc6c4abb820a037babdbaad90","modified":1752736086087},{"_id":"public/tags/教程，技术分享/index.html","hash":"3520ce9dd44dd59c342ddd95dcecfe5825fd95f9","modified":1752736086087},{"_id":"public/en/about/index.html","hash":"b416b66f52012db980c10c5d7b7e167103fc0389","modified":1752736086087},{"_id":"public/en/friend/index.html","hash":"a0e85b910d565b53859cd1885638baa0310d12f9","modified":1752736086087},{"_id":"public/en/2025/07/14/Csharp学习之旅/index.html","hash":"2cb79b7c39d89fe4954ae6d55a49a0dfe11d67dc","modified":1752736086087},{"_id":"public/en/2025/07/14/LIN总线OTA升级协议定义/index.html","hash":"42f03456b9203fc9234a0f55a109dcfb18b3aac1","modified":1752736086087},{"_id":"public/en/2025/07/14/WPF解析教程/index.html","hash":"ea0f8e1621d8e67558ae4392b94e6de0f11df17d","modified":1752736086087},{"_id":"public/en/2025/07/14/汽车电子固件升级（OTA）实现详解/index.html","hash":"306726cf94bd3a9d2677ca2a8cd6e99cc9be03b2","modified":1752736086087},{"_id":"public/en/2025/07/13/love/index.html","hash":"0869c30f51bab30d50994c1383fa082eb39377aa","modified":1752736086087},{"_id":"public/en/2025/07/04/shearchphone/index.html","hash":"50beb967d82432195b42ee56fd8b43991b0133a0","modified":1752736086087},{"_id":"public/en/2025/06/06/ESP32-IDF新建工程和创建分区/index.html","hash":"d62e919cc13460154ba169970ed197ef14f4a30d","modified":1752736086087},{"_id":"public/en/2025/03/28/基于Cortex-M0内核的Bootloader开发指南/index.html","hash":"b87abfaa316e649ab6d09b5f1449f39173842809","modified":1752736086087},{"_id":"public/en/2025/03/24/基于Modbus-RTU协议的Bootloader升级系统设计/index.html","hash":"d673d1f8847186d5597de952cd2e804fbac1d07c","modified":1752736086087},{"_id":"public/en/2024/03/22/QML_Fluid_Element动态元素/index.html","hash":"6ab48c80b0fb025991c2fc99dd5b4789218bc290","modified":1752736086087},{"_id":"public/en/2024/03/22/ROS学习/index.html","hash":"45fc3c995357e35d339fc86369847aa5a224ab2a","modified":1752736086087},{"_id":"public/en/2023/09/15/longtimelove/index.html","hash":"02f11afec64be27675d9f51747da7511ac48fe21","modified":1752736086087},{"_id":"public/en/2023/01/18/STM32单片机外设初始化例程/index.html","hash":"fe5eae609286781d7d0fda7e16d42ed210485945","modified":1752736086087},{"_id":"public/en/2022/11/16/C语言函数指针作为结构体成员实现成员操作/index.html","hash":"ba334ac05796e76fad52bf7144d8813f1afc9ac3","modified":1752736086087},{"_id":"public/en/2013/12/24/hello-world/index.html","hash":"1daf6e42995bf48c1559c3d5dd19c01ce1b30153","modified":1752736086087},{"_id":"public/en/index.html","hash":"5ae81f9d32cdb2b7e8eaf66147373efe985f44b3","modified":1752736086087},{"_id":"public/en/page/2/index.html","hash":"864bc41566b3c6b22614de86d591af824991eb18","modified":1752736086087},{"_id":"public/en/categories/嵌入式/index.html","hash":"297e880aa484a0869fdf51b65a04824a9a251850","modified":1752736086087},{"_id":"public/en/categories/嵌入式/page/2/index.html","hash":"bb49e0edd41cb4e3aaf27934f3df07d8894f1afc","modified":1752736086087},{"_id":"public/en/categories/技术分享-开源项目-工具/index.html","hash":"81f7b5164e636c6616d5dc8a07620409124d4e12","modified":1752736086087},{"_id":"public/en/archives/index.html","hash":"377b5f5fc4700b6b3f9a2f950e3e498154611cff","modified":1752736086087},{"_id":"public/en/archives/page/2/index.html","hash":"208b2424942e50a2f0ebd11133a75813dd7a9a6b","modified":1752736086087},{"_id":"public/en/archives/2013/index.html","hash":"220533c3f0845fed622d56f70e8aab1fba1cda2a","modified":1752736086087},{"_id":"public/en/archives/2013/12/index.html","hash":"dc98c076ddaea774afa0bf5d2cc939805ce74a92","modified":1752736086087},{"_id":"public/en/archives/2022/index.html","hash":"d2851bea405f4d15abc79293f8d4fde4fb0b5f64","modified":1752736086087},{"_id":"public/en/archives/2022/11/index.html","hash":"a0c7188534e6086aca46ca49298e837cdde04cfc","modified":1752736086087},{"_id":"public/en/archives/2023/index.html","hash":"6eb9ccc86bd372ed4bc7e4c5823ba04d2006e6af","modified":1752736086087},{"_id":"public/en/archives/2023/01/index.html","hash":"c6485612c526b2c9b0423cff5c5ada89c4b80bcd","modified":1752736086087},{"_id":"public/en/archives/2023/09/index.html","hash":"10c179c14c092288967d57391cc37824a573e226","modified":1752736086087},{"_id":"public/en/archives/2024/index.html","hash":"b0fa6dbb836314bec715ea547a82b1962fe17a91","modified":1752736086087},{"_id":"public/en/archives/2024/03/index.html","hash":"d20b0f299aa9c168ede0c088edc56b3861c56616","modified":1752736086087},{"_id":"public/en/archives/2025/index.html","hash":"145b969035ce4d6b992cf09d1ae06f4bd5f7622d","modified":1752736086087},{"_id":"public/en/archives/2025/03/index.html","hash":"2d964d1cf7e5754513d2691062037a4100894bc2","modified":1752736086087},{"_id":"public/en/archives/2025/06/index.html","hash":"4b09b067ace1b69b4af80228cd87ac69a6b84bb2","modified":1752736086087},{"_id":"public/en/archives/2025/07/index.html","hash":"3f2b5f777b381485aaac4fc79f94ea2fe0ec7130","modified":1752736086087},{"_id":"public/en/tags/嵌入式/index.html","hash":"27e153fd72f37e61b6917583c4c8dfba8c46540c","modified":1752736086087},{"_id":"public/en/tags/嵌入式/page/2/index.html","hash":"ec3ab61764634cb8226fc24010c7f9b19d86e8ee","modified":1752736086087},{"_id":"public/en/tags/C/index.html","hash":"ffeac7870c610a0686deb624121c3b9eac75fc10","modified":1752736086087},{"_id":"public/en/tags/C语言/index.html","hash":"6fd881299532145a1cd5033241eb4fd988d88bc5","modified":1752736086087},{"_id":"public/en/tags/技术/index.html","hash":"44ee09682f1ad5dbaf4a46516b53ad9448ffe14c","modified":1752736086087},{"_id":"public/en/tags/笔记/index.html","hash":"6ed996e1083c91c77d625971d67bfd2d3d1c0e60","modified":1752736086087},{"_id":"public/en/tags/单片机/index.html","hash":"db5736bfd6f666764d64c6b3e01bfd32415fdfda","modified":1752736086087},{"_id":"public/en/tags/Qt/index.html","hash":"bb5fd29cf7e291afbf84b739d3049a1aad97ab0c","modified":1752736086087},{"_id":"public/en/tags/QML/index.html","hash":"c4c150bc35f1322d0edfb98a50aa28fc32d506fa","modified":1752736086087},{"_id":"public/en/tags/python/index.html","hash":"bbf2204eb37f506d94e0a112cc74782bbb8285bb","modified":1752736086087},{"_id":"public/en/tags/linux/index.html","hash":"f79e2c3065ba92944bdbaefb69ff826da613002d","modified":1752736086087},{"_id":"public/en/tags/ros/index.html","hash":"b53860f9fcb6e960e2f9b4a0065a7a0203c498e7","modified":1752736086087},{"_id":"public/en/tags/小程序/index.html","hash":"d110ec178fe0afa5049d922963ce8a0e778e7316","modified":1752736086087},{"_id":"public/en/tags/工具/index.html","hash":"d10c6d5b8eca9a5c4f26be95de86917a8ec924cb","modified":1752736086087},{"_id":"public/en/tags/应用/index.html","hash":"0f93d61af737c891f0c973d621a69af11f45dc0f","modified":1752736086087},{"_id":"public/en/tags/bootloader/index.html","hash":"2024ccbffc08e75cb766b3aa2b1e1200975402e3","modified":1752736086087},{"_id":"public/en/tags/教程，技术分享/index.html","hash":"daf07cb015c2b4e8f8a03be27ce8e31f2b728c73","modified":1752736086087},{"_id":"public/images/algolia_logo.svg","hash":"6ddea54d87cc9dc2abf77bb22b615e5cb8e322b3","modified":1752736086087},{"_id":"public/images/banner-600w.webp","hash":"c66d19262d4820edc226f126dd120d97f532732e","modified":1752736086087},{"_id":"public/images/banner-800w.webp","hash":"33a90a2a08eaa97b365f31ed1ec331b511794c6b","modified":1752736086087},{"_id":"public/images/favicon.ico","hash":"6c94938e3b4748880493631c9a8e4a29b4ac30a6","modified":1752736086087},{"_id":"public/images/taichi-fill.png","hash":"c9a20aff88f5bba6771fb91e4898f9828b4aa7d9","modified":1752736086087},{"_id":"public/images/taichi-fill.svg","hash":"f519dd6608fb405258e547ef3a99b0459c0d21e0","modified":1752736086087},{"_id":"public/images/taichi.svg","hash":"f519dd6608fb405258e547ef3a99b0459c0d21e0","modified":1752736086087},{"_id":"public/images/cursor/reimu-cursor-default.png","hash":"ac31e9dee5bfd4e170a3765e9144e28cefdc05cc","modified":1752736086087},{"_id":"public/images/taichi.png","hash":"5ed019ead7635e8dac1aac8509388b80704c94ae","modified":1752736086087},{"_id":"public/images/cursor/reimu-cursor-text.png","hash":"55c9f4a6b4d05263ac79bee38250abd016641efd","modified":1752736086087},{"_id":"public/images/cursor/reimu-cursor-pointer.png","hash":"c4d05feb601224dc4fea6c2991141d74fe20439d","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/3.png","hash":"52e3acc77d4f0cd22b3404c5b13f42eead7c5f9c","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/2.png","hash":"a502f64ec07f4dbfe5c8a8bf23034f9950d1df2e","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/7.png","hash":"a3d47ddba87a4ecdbb290d579642360a93698ac6","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/1.webp","hash":"ce7a772a92ade43363cce027e8efa73a34d2f032","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/3.webp","hash":"5b5f22c0d4aba2eaeefe2b6b987b02cb9fd232f7","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/4.webp","hash":"2257f5732cb603f916504aa28d30ac3d969b4174","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/6.png","hash":"f74315f1c51b084ff4832936ca008fa563bb244c","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/4.png","hash":"284573889986faefb901e8c3d2406f9b7e0d2702","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/5.png","hash":"a93f4df491e35477ba7ad839fb19d143c7214ffe","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/7.png","hash":"fc3462f9cffb2a0e55812f510b27212a76d0280d","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/8.png","hash":"cb0d3ddc8edad3d022928e5a65b65648f321cdfc","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/9.png","hash":"47479a80e08f768ba056b01194429c45a9e4e30f","modified":1752736086087},{"_id":"public/images/posts/ros学习/2.png","hash":"6888219a9b12aea95185c5c34a82999fc19f00b5","modified":1752736086087},{"_id":"public/images/posts/ros学习/1.png","hash":"b3765082c88ef796d6e0a885f1c9679e49377ce9","modified":1752736086087},{"_id":"public/images/posts/ros学习/3.png","hash":"c74afd903ef9e7449070a505a6ede7c1869554bd","modified":1752736086087},{"_id":"public/images/posts/ros学习/4.png","hash":"b2fd216bb9bab2f882757423fc4f1dad8975427c","modified":1752736086087},{"_id":"public/images/posts/ros学习/5.png","hash":"235b7b86f0f978eb28bbce7ce2a539ad9f259ddf","modified":1752736086087},{"_id":"public/images/posts/ros学习/6.png","hash":"a814e724840ed6c1bf385a002595b686c471e28d","modified":1752736086087},{"_id":"public/images/posts/ros学习/7.png","hash":"64ac85adbcdb6fa0b3955142a5ecfbebb264bd41","modified":1752736086087},{"_id":"public/images/posts/ros学习/8.png","hash":"9899a01ab8e6781f6e4bbf50147268ab62e1f493","modified":1752736086087},{"_id":"public/images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png","hash":"f9ed9af55ddf9832f1e9fdf855e7cada4765f0b9","modified":1752736086087},{"_id":"public/images/reimu.png","hash":"2742a664354977e6b1cbdcfc463948a5686a5509","modified":1752736086087},{"_id":"public/sponsor/wechat.png","hash":"72033d55983d311ac8c263c12f8dbe89cb497b27","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/4.png","hash":"cb0504762448b723c6533b690418914c8ed7e77c","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/5.png","hash":"7579f2bb92c423f656f1a06b8002e9e07a556b56","modified":1752736086087},{"_id":"public/images/posts/STM32单片机外设初始化例程/2.webp","hash":"abb5fb545ad84784f1ff05533015dfe8517964d1","modified":1752736086087},{"_id":"public/images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png","hash":"27f804edb03b301e5c9306d36eb6ce4e85b45bc4","modified":1752736086087},{"_id":"public/avatar/avatar.webp","hash":"26db897d9cd6ca6280530b28af78728483284975","modified":1752736086087},{"_id":"public/js/algolia_search.js","hash":"b01c5d9d443f4a073a24212fcf536fb5ce593c94","modified":1752736086087},{"_id":"public/js/aos.js","hash":"703e8ed1163f299905a81721ebdef0f74ae77353","modified":1752736086087},{"_id":"public/js/generator_search.js","hash":"672bf9f15d0eb32145a8786d4c1b2b4724c162f3","modified":1752736086087},{"_id":"public/js/insert_highlight.js","hash":"2fcb5828e3d40e3c254081bf0c162a941c851532","modified":1752736086087},{"_id":"public/js/heat_map.js","hash":"0af5408159b5032d1bc2dbc254d9ff5458dd96a2","modified":1752736086087},{"_id":"public/js/pjax.js","hash":"9eba500d50e8adca7f30908c37f3cca1f199ac8a","modified":1752736086087},{"_id":"public/js/pjax_script.js","hash":"25528c760b2fa14db98759406aae1edd883708cb","modified":1752736086087},{"_id":"public/js/script.js","hash":"067a123933be9126f42b4e434185aa39eb7e888c","modified":1752736086087},{"_id":"public/js/sw.js","hash":"72a5e8709e5d1087f74a42eb0287398d3ed7a6a0","modified":1752736086087},{"_id":"public/js/service_worker.js","hash":"578892dc37035e5d75623061daab284a55d580ce","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/1.png","hash":"88699897670fed96d0dca51f3a0629295688db99","modified":1752736086087},{"_id":"public/images/posts/ESP32-IDF新建工程和创建分区/6.png","hash":"9cf6e2b53d8a9d3c7ac57d2488fbf1451e64d6c9","modified":1752736086087},{"_id":"public/images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png","hash":"54d5f753d7bd85e4f7a4e3f43b780fdd4b2d6ed1","modified":1752736086087},{"_id":"public/images/posts/C语言函数指针作为结构体成员实现成员操作/1.png","hash":"b6a7ce3879156e5473ad6ff4636a736bbb37594f","modified":1752736086087},{"_id":"public/images/posts/C语言函数指针作为结构体成员实现成员操作/2.png","hash":"16fd834dd335a0f8a53c0aa67133e4ac5ec6d6e3","modified":1752736086087},{"_id":"public/images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png","hash":"b87d1fb7abb1a91a7396325069f3fa4005f55a9a","modified":1752736086087},{"_id":"public/images/banner.png","hash":"74b7747a8e48c2e53f7d2e80059aa40afe29b3a0","modified":1752736086087},{"_id":"public/images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png","hash":"89611d154c30ca0f63a8d7779259529544782566","modified":1752736086087},{"_id":"public/images/banner.webp","hash":"d08e23a3aae6a748fb6e092c6606886f3d9d94a8","modified":1752736086087},{"_id":"public/images/banner.jpg","hash":"3f86628a7be45dea7235db2b52e5375e25e4f89b","modified":1752736086087}],"Category":[{"name":"嵌入式","_id":"cmd71t80n00043cw6cz8w05r2"},{"name":"技术分享,开源项目,工具","_id":"cmd71t80y00113cw63i9p4cov"}],"Data":[{"_id":"covers","data":["https://tc.z.wiki/autoupload/f/Ps5IehgAltLhD0hfjRTkhN7VJKAhAHChg3aIGYfoUxiyl5f0KlZfm6UsKj-HyTuv/20250715/hOJe/1192X785/xhbz.jpg","https://upload-bbs.miyoushe.com/upload/2024/02/14/292762008/f0cb3676199b75980959b7d972a0771f_384819317620854048.jpg?x-oss-process=image/resize,s_600/quality,q_80/auto-orient,0/interlace,1/format,jpg","https://pic2.zhimg.com/v2-be267e873cd74c34901c80e3e818af5b_1440w.jpg","https://pica.zhimg.com/v2-8709c5a380382373990a2ac5929b6b9c_1440w.jpg","https://pic4.zhimg.com/v2-a41eb02267e586f175382b15cb65c6cd_1440w.jpg","https://pic4.zhimg.com/v2-1db2a15e30e57389a8456fca9b47223d_1440w.jpg","https://pic4.zhimg.com/v2-0ed6984873128f8fdb9d79194cf051ff_1440w.jpg","https://pic2.zhimg.com/v2-8b3ee80fe1101317e2f5b0dcfd1dc2d3_1440w.jpg","https://pic2.zhimg.com/v2-c382edddf69c2aca82a83de85c4c4771_1440w.jpg","https://picx.zhimg.com/v2-e26593268d4ea049dc1646e0afaf21c5_1440w.jpg","https://picx.zhimg.com/v2-5ae04e7387368442ffd8a29d9a0f50bd_1440w.jpg","https://pica.zhimg.com/v2-a273609b57299119d9ed7910e094df74_1440w.jpg","https://pic4.zhimg.com/v2-b96eb3d286b92f5e388a7e1e94fb19f3_1440w.jpg"]},{"_id":"avatar/avatar","data":"RIFF�C\u0000\u0000WEBPVP8X\n\u0000\u0000\u0000(\u0000\u0000\u0000�\u0000\u0000�\u0000\u0000ICCP\u0018\u0002\u0000\u0000\u0000\u0000\u0002\u0018\u0000\u0000\u0000\u0000\u0002\u0010\u0000\u0000mntrRGB XYZ \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000acsp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000��\u0000\u0001\u0000\u0000\u0000\u0000�-\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tdesc\u0000\u0000\u0000�\u0000\u0000\u0000trXYZ\u0000\u0000\u0001d\u0000\u0000\u0000\u0014gXYZ\u0000\u0000\u0001x\u0000\u0000\u0000\u0014bXYZ\u0000\u0000\u0001�\u0000\u0000\u0000\u0014rTRC\u0000\u0000\u0001�\u0000\u0000\u0000(gTRC\u0000\u0000\u0001�\u0000\u0000\u0000(bTRC\u0000\u0000\u0001�\u0000\u0000\u0000(wtpt\u0000\u0000\u0001�\u0000\u0000\u0000\u0014cprt\u0000\u0000\u0001�\u0000\u0000\u0000<mluc\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\fenUS\u0000\u0000\u0000X\u0000\u0000\u0000\u001c\u0000s\u0000R\u0000G\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000XYZ \u0000\u0000\u0000\u0000\u0000\u0000o�\u0000\u00008�\u0000\u0000\u0003�XYZ \u0000\u0000\u0000\u0000\u0000\u0000b�\u0000\u0000��\u0000\u0000\u0018�XYZ \u0000\u0000\u0000\u0000\u0000\u0000$�\u0000\u0000\u000f�\u0000\u0000��para\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002ff\u0000\u0000�\u0000\u0000\rY\u0000\u0000\u0013�\u0000\u0000\n[\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000XYZ \u0000\u0000\u0000\u0000\u0000\u0000��\u0000\u0001\u0000\u0000\u0000\u0000�-mluc\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\fenUS\u0000\u0000\u0000 \u0000\u0000\u0000\u001c\u0000G\u0000o\u0000o\u0000g\u0000l\u0000e\u0000 \u0000I\u0000n\u0000c\u0000.\u0000 \u00002\u00000\u00001\u00006VP8 VA\u0000\u0000p�\u0000�\u0001*�\u0000�\u0000>\u001d\f�A�\u0005[!b\u0004\u0000q)���dk��|��'ㇱ�Y��o�_���~���鷰<����\u0007�/ɿ���?����A�\u000f�o�/�7��_�5`=�~�z������7�?���O���>�?����\u0007���G����_�G�G��g��\u001f�_\n?ٿ�����\u0015�o������\u0007�?�\rU\u001eJ}������>_�w��֟�������7�7������/�_W����������\u001f�������o�\u000f��&0���\u000e�7�S�G�������=�w��_�_ٿ[�\u0002=b�����߯��?����e�?�^�}��\u001f�)�\u0003�����oퟲ\u001fܿ��q���������� �\u0001�C�\u001b����ٿ���k���!�k�W�_�_��+~���7���?����\u0004�3�������_濻�����m�G�O���_�_�q�T\u001f�1^��tx\u0007\u0010�N�_�c��*B��������\u001fu���Ǫ\u0017�� X1�A�\u00044W��'�_�{\b�\u0013tm��T_��;���$�\"?�J���6�\u0001��_7.4��5�A��'��Ӟ\u000f\u0006��g�9xx�s�j{��\u0015��d���\u0004��¾�^�Ǟ\"\nM���P��RJ���;�U�\u0007vj�TϺ�Q7`p>x|0t1����,GI�\t,ev�\u000f�g\u0012�{\n.0u����F+83��\u000e��B{\u001b�F.dW��\u00100���9\u0006O+�\r\u0017�\u0005:�xJ?m\u0001\u0006��*�K?��3��^���p�0�$b^�I�k\t\u0019�!�\u0001�v�\u001a\f�\u000fo�߬��D�\u0010���{7b���2�1\u0003�\"0Tr��G\u0018�͵��Dq�����%��ǘ\fڢ��\u000e#\u0015qk�\u0001Qt(\"\u001d�x3ݨ_\u0007G�\r�\u0016�\u0015�ʣ\u0003l�+z�N��\u0001NVC4�d�\u001c��\u0001nA6Mgy\r��~�\u0007\u0010Y�6K�f�\u0003��Hw�>��\u0013�$S�V�'ch�an'�w��B\u0014M��6b�<XxR���z��k��Ѐ(K�\u0003�HaFfp�\u000b�)�i\u0003�\u0012z�\r���X��K<��\u0017\u000eTMn�\u000f�,�z)���\u0014z\u0001�t&M�|��U�\u0010�K­h\u0007��\u0012\t���O���y�J��\u0003�>��/çD�b\u0003\n�\f�c��ʫ\u0010#�\u000fz^\u00188�>��b:\u000fT\u0011�pDr�\u0018\u0013�K������k�6lo��T\r1�rŁ�N0[�N\u001d\u0006�\u001b���a~\u0017�\u0016\u0019�ɮR�\u0005\b섌\u0015\b9��τQb;Ȭ��\u0003;K\u0013�.9;�V\u0007\u0004\u0013\u0001��\u0002S��)uLZ\u0017�2N�H��R]�\u0012y_Q��9�\u001f\u0005�\u0006����[�m\n���p&*���m�Cd�P�̾\u0002�Ӕ9�bδ<\u000b�Y�\u001c�tᗉ,�k����\u001e\u0000=\u0013� �;�\u0002w��NL��e�^�{�\n\u0018�ؐU\u0012�D\u0000�\u0014e\u0017gWQ���\u001d,ˌ��ɜ���������\u001fc�,�9\u0013�>�Nqzr\u001d\u000bU�H���e\u0014;��(��J\u0006&��H3S��9�7�|h(\u0010R\u0000�;��i[tU�\u0000���M��<,��}>�������{�2��\u001d_�A3Z\b\u001d�D9\u0015����(���\u0019�@�X��F����\r�ۺJ�,s�����X\u0004ԋ�o�g`�\u0005\t����43\"\u000eΦ.��h�͋\u001b~5j}\u0015`��������|�Y8\u00143b��e\u0000��$�\u001f\u001b��\t�[�la��ԥ��\u0012n��\u0016�Nk\r�ձ}�r�䐯��\u0012Xv3�zӸ��ush�\u0002��a��$��;��Ϭ=��,\\��V���1�,\u0001]�g*z�x�gk�5\f{g}^�\u0006�H���\u00115\u001d�1}�?G�\u0012`/��|�:s�\u0019��\u0012M\r�J\u0007\u0000M��Z����{O�z��5\u001e\u000e\u0014����.���Xj�u�\f�\u0004��o�3ZM�T�\u0012�� ��$(�\u001d'\u0019؁�\u0014$&�B�F�����d���b.q2�E���:\u000b3�a�4�4+\t2\"��\\��/`\u0002>6\u0018�K=].<w�\u0011\u000b��\u0000&|���hQ����0ǁT�!�R�!S+�\nK�;�j�8�i�>S�A�W�\u0004G� `�h�m �:'M\u001c��\u0010���\u001b0�bh��[\u0004���7�\u0011�������j$+�\u00182�T\be!+@�\u001c�q��\u001b�Y�.ޤ]IM\u001b^z:��1��;��g��W��\b�\u0019\"vuv<�(\r)���7�<�\r�\\��'��\u001dä^-�\u001f~1M�K�P�\u000e~��]\u000b\u0005=��\"$\u00005�\u001fJd�Zz�C�\nɁo�C\u0015�۟6x�#�\u001b�)� 0��~8\u0018;�>iّ5�=�/|\u0012�3��\fSL\u0000��@�\u001f��k#E����o0gfյ9\u0014�3�x����!F��\u0003\u0001.Ŝw��^��A\u000f$�ױ�p\u001f\u001e�6*�q\u0013G\u000b\u001b�P\u0007\u00068���ya\u0004�\u0015�\b�n�Ȳ���3�����\u00173��n��\u001eF�g\u0005��Yϒ�\u0015^Vr\f\u0017k\u0013�R�{��AN)\u001d�F^^�����:����$����u�\u001fY\u0011T~-\u0016�&$t���4��)\u001bgv���2�\u0002�鎨t�e�GS��3D\tltO���v�6\u001f�R�U\f\u0006���\u0010\".�^�U�\u0019�\u001f��7�L.\u001a�\u0019w�n�\u0019���0t\u001e�t�a\u001c�\u0012���\u0000qm\t^�m��\u0012�\u0007+��Z�W�\u001a��$�YLkO��\u0018�D\"�\u0002�t�\b^��\u0014VZ(�r3�ay�D'\u0004\u0010C z�T�_���\u0019�W6�\u0016(U�խ�|8DH\u000b�CN��m4�}V\tw~r�\u0012/\u00049���׏���ۮ�B�Y���r�\u0010�3n�#-rp,s\u0000���*�j]�͗���k���h��\u0016��V{_^�� e���Đ��@oE1�\u0014i\r��[�m�Ӓ\u000e�\u001c?�\u001f�qX�\r\u0013�C��i��d��?;\u001e����x�\u0007�n�1�9��r�A\rHЬ���th�?F#�%\u0000�\u0007mG;���3�y�WA\u0002�R�\u0011��;΂�T\fP��^��s˨LWEl3c\u0007���D|h#���\u0014�@/�Au]�]�4\u001f=�G��\u0004�!��\b!��f�9�T��Ӥ\u001c�����̦�8���=I�/�\\��m�µ�9��3�\u001aoG��\u0005��9$�\f�Ě?tX)]�-��Y9m��\u0017�gAh���\u001d\u000bΏ��`�ާ\b;����~1����O\b,)+�\u0017���E\u0004����$\u0017�\u000e0��~C���Z��\u001a\f/�\u000bo\u0003\t�v\u0001ه��~�Xc�?\u0013UM�\u0016$�\"\u0010:�\u0002@>ͷ`r�@-\n؍D��?�ϡ�65\u0000��ZY�A\u0017��s�k�L���\f]\u0018��)�&0\u0010y��h�B{�[�\u0002v?�F:�R��Ҷ�b��U�ߙI+�>S��Z��d<���Ӊ\u0018���V2]qOY�\r(��\t��:���W�,G\u001d�\u000eq\n�*~��%ֿ��\u00167�/�U3\rX]�$�\u0019\u0016�'�\u0007�p�\u0013����._\f\n\u001fv\u0016�t>W�і�s\u001b\tq�ʲ9M�Ͱ!ݹo�\u0005�<����b��ӆ�Ve�ȵm��Օ%ƎP�qn��a��m���~�I�v��Iғ}��m\u0006\u001fEf\u00161����:��S����!\u0018�I�p�X>pQ�Hw\u0015�\u0013ѧ�/.\t�\u0001\u001b�AlK�I�ۻ���_�gm�)�~�|���w�*s���2\u0003��U\tc)�F8z�F�E\t\u001c\u001c�\u0001L� �rzݝj��8?��D�\t�L�sR�(F��5�\f&x׽�I�<:\\;�ۏ�����ZY+��[\u0003L\u0016\"+��*�\u000b\u001dI�a�\u001c� ��<�\u001a��x[�S�>I�}EZ��\u001cgk�1?v��\u001d��\u0007�EU������B�ΐ@&}b�ׂ�u�y�\u0007\f̬����0+����:�6{|\u0010��|�<�Q��r��]�s��\u001ew�\u001f\u0019�?�k�F\u000b�P�N��\f�6���P%��a>���A\u0012e�\n﹑�\u0004L#\t2ůb��Rd��f�\u0005\u0010\u0003�P\u0016�_��9���\u0018�k�c\u0013�\u0011��+\u0013�j��ڙ�H�\\\u0007��r>tқ���\u0006>\u000f��A!P���\u0015c+�c>��Q�H^�\u0019\u001f�����\u0004x�%\r�\t�\u0010��u�>���p�j�����\u0012�\u001b[�q\u0006R\u00190�\u0018U����nkH�s��(~MZf�a\u0002\u0019�r{�\u0005\u000f����J\u0011u�0�\u001c\r��*\u001b����=\u000e���\u0004��PA�2��9ڗ��\u001d�G\ffK���ď������tt]Һ���p�Ψ\u0016���mZ\u000br��!�n*\u000f�9�\u0017�\u001e:�s�C?\u0015�[���\u0015��o\u0018|b�<�#���\u0013����\f�渂DWGa&.kj�KF�\u0010S `�m�\\���\u0012\n<�󏩅u\"�Vӻ@\rT����\u0007w,�%�@:�\u0012])�\f~�����di���\u0003kb�no�h\u0010<!�\u0004az\u0003M�$�;�\u0007Boۋy�v8\u0005\u0006�*�QD˜nm;�}�O�\u0001�;�\u0005�B?r��)�\u0001�S|��\u0001*m��\bq7��;�n�9���\u0012�.\t��\u001c�c\u0001 �.g\nYL2ArC;jK�\u000e�\"�\u000f��\u0018t�}�#��&1��v\u001f�U���u\u0014${�t謟AK~��3����\u001a��4�B\u0005F�����͑4,F�\u0005FJ\u001dK}i\u0004;\f\u0015�����\u0003��^�F\u000f�C�\u0010�/��\u000f�\u0019\\�_*P�^\u0016�����ˆt~�0R��3��\u000e�����@��6����ɣ��#xR~<E�Ϋ�\u001d\"��\u0016�sU��Sۡ�/J#�Д��c�\u0019g#0u\u0018\u0010�\u001e[+\\EO�\u0015��nA>����+��4�q`�7\u001cz\u000bC�Ҡ��FVg���\u0002�\u0015>�^R��r䫲���\u001b�@BT���x�B$�o\u0005|��;�^+S�\u001dCSA�K:�i�c��z���ʭM�f2.��T���\\u�\\\u001c�߆��6�\u001f���:_��l���T\u0000g�\u000fZ�\u0005�mU?�O��.PV\u0012Ӑ�\n�A�\u0001��äj��\u0014�G¯�p�C\u001f6��m\u000fd�N�:�\u0016\u001d�\u000e�\b��Ruұ��A�\b�\u001e�=�@��_�c�q\u00004��U\u0015K4�\u0013��qY\u000f�\u001b�kW(\u0003��Ĺ�߳�)�\u0001K���\u0015mj�\u0012==$��k�^�Y�$\u001b�p5K�q�:�X�|y�l����/�{���n�~\u001f�w�+�o���@�:/m�&�\u0016,�q�+k\u00135b�b\u0016�T���W\u0014 �Ũ\u0005λך�\u0019�\u001a��{)����,y\\\u0010/��<�����2�EC�\fǩ\u0018\u0010\u001b���)sxb\u000b��W\u001c~�t�\u001c<P�M�[\u0003I\u000e\u0018\b�\u0002\u0017�\f\u0012޾\r4�8\u001e�\u0010�Q0��umV\b���t��!O�(@�?���ԩ@��[�\rxGS���)7� ���\u0011܉�v;�A���Ge��N\u0015V�\u001fG�c\u0000��q&�d�X��\u0013�Y��\u000e>����\u001bW��>{�&��\u0011��r\u0015�!4�B��6B=��\\M�VU �����\u001fߒ��*�l=>�\rs�<���\u0004@����\u000e����\u0018�{O���\u0017u`���5�\u0001[�<�<~\u0011\u0001Ub�w\u0001}������i\u001e��a/�\u001di��n�B�\u0011�m��SWS�] \u001312Ǘ-@2��o���\u0000\u000b��J\u0016\u0016�\u0015��6��\r����e��\u0003%\"s����jE�\u0019ה\u001c\u001f�\u001d02���o)�ƄX�YH��/�d\u0002|uj\u0014zXa��J��2\u0016ޒ{ŝ�S7D�\u0016��_ŀ��5N�=��\u0014|��P�\u0005��G�X�0�0���`\u001f�*|:\u001eE�\u00167E��e�z$\u0006��\u0005�5\u0017G\u0011��r��Z+,��\u001d� ��\u001a���\u0019'!�\u0002�\u0002�Ӄo&9%��n�*O�����J5[\u0016\u000e\tf\r�\\т5�\u001f��VI\u0015ϻu�}:�f���W�m>��k�o\rY2��`3~.06������\u0006D)U��q\u000fI��c!6���q$I��k��(\t\u0010\u0001;�_�E�H��R�J|\u0005\u000bd]�A��}�l�\u0017�R�jB�;z�k|�\u0002�o���\n}�O�̢b�����v\"咽5#cc\u0001�����m\u0007����D\u0013��\u001c\u0004�EB��\u0001�\u0005�ۇ.�6�����R�\\ >�p\u000b/���\u0019�\\��\u001a��~�DN\u000fE�1��s�a�\u0000E�'��?\u0011^�\u0010�k�O\u00154�\u0005��\n�\u0003\u0011pO\u0006�\u0014�Dz��\u0015^8\"X)֢�)��aa\t4�\u001e\u0007�P��u%��˒�8J�9o�\u0001\u0015��\u0019�\u0004ɨ��\u0019j���8o\u0014u�\u0012�\u001e�h�`7N�ꧼ�V\u001fj�������\u001c������\u0002yۏ�mr����`p�����/U�ۗ�8�:8:�qq��E�\u001e)f�ĸ�-\u001e��{2��R(\u001fǾo�+\u0015K����[�O\u0000�����\u000b���\"�J\"�&�\u001f�ѧc\u0015\u0011�b\u001b���m\n�($:\u001f\u000bm`^��Gw�5W)��r7\nF��ؕ�C\r٘�@��>�E�<-���\n.�\u0002\u0004{�XK3�B�;{ȝB\f:��[\u0010'�\u000bj�M`� g��0��\u000e�\u001a�ԓ����Ev�S��6Nw��\u0011b�\u0018H<\u0010\u000b�\u001e[!�j\u0011|A��`!��o!F�*R8u<���ӿ�w�\u0014角0��P���Db[\u0004\u0005(�\u0010��{�%����R\u0010�����(�\u0011�� ��Wlj��k��\"�\\�)�H�\u001d�4%�y%[0[�;L\t��\u0003z|�0\\��]z*\b��\u0003&��6+�Շ�3����Z�\u0006I2�\u0004�X��K^���\u001dУ�\u001a��_\u001c-��k�q����*Hn4-]\fQ4\u0002��#��6��S|�Z\u000bP�^��E'��J� �\u000f!t&�D���3ֽ�I%�b���ޘ�\u001f��*\u0012��aً'��a�EV\b����qOe��\u001f5ݛs�?\u0014�\fEZIdr�\u001d�Xx�����J�t�T�v,�C?�T�zY��\u000e���8�@X4�9���\u001b^\u0012�B�)!3�S|z��:�mZ3g~�kW�ؘ\u000b��Z\u0007\u001cv|K�e�iސ�p=��\u001b�\f����~|4�i*dǱ\u0004�\f���=\\\u0006��n\u0007�\u0016T���%c�\u000e�#�\u0007����o�T�8�fe����(/�i4A�$�\u0007ɥ���Þ��_V�쯑�j�\u0001�\u000b��8.�iTR�\t�ŵ*\u001a\u001c\\Xod\u0016EfA�W�|E����o����\u0006~�\u0002F\u0017�u�\u001a�+*>Т\u0013\u00174�A\u0014\u001a��\r?�,ޔ\u0000���u0��j�b�\u0011C�\\�������h�3�\u0006��\bB��M�\u0014���V\f-�l��E��\u0005�^�l�j����8IM�̜/��I�\u0016�w��7Á�&�B�n�\u0019��C��^ĻXJIP8\n��z���8,�\\�T?�\u0013o!�������A�1�^'\u001ci1�F�u]K�p�*�a�r�5���VM��\u001f\u001b����1-\u0018 ����L�H.:L���O6�\bd\u0006R\u0000kh�\u0011@L\u0012�\t#h\u0012�\u001a\u001b]���\u0019C\u0000u��̉�+�E\u001d��\\�E\u0002xc��)!\u0012��\u000b�Q\u000b�0���\u0015.� ˫�'@\u0004r\u0014f�u\u0011b j<�C�L�6*�P�$\u0006��\u0018�\u0016�Z�nQ\u0018����O���g=N�u�~ÔV�\u0004���8Vo\\^��������e�8ю>�g�u0�\u001dP%Ꮳ��\u0000�\ft\u0014֬\f#�N쮎�\u0000�Ԧ^�X\u0001O\u0000��\t��\r\u000e�\u0014�\u001a�/9C0�@\u000b\u001bҺ\u0000���j���E�O�8�M9���f\u0010Q�i�\f�D_\u00045�~0Rmr���y��C�\r�J\u0015\u0018���\u0005�5�g�SίH�����'\u001f���H�k�\u001e|\u001b��w%�\u001ef��D\u0005CX@�kf��\r�r�2�֭l�6\nRF�\\U�c��\bO\u0012�j����^G\u0004�Q/�\u00064��ё\\E��Xv�I�1b\u0018z���\u0007۴��W5_𦥈(A�bw�\u001b���.-��G�Ю�t��\u000eE\u0004� p��&�������\u0010�OCOc�5Q���z֭\u0005h��p�\n�\u0001�\u00054�\u000e�p��n��o0�\u001eP��\u0016$�'O`J��\u0017\u0000|�}�D-�zr^\f��׀\u0019����\u000e����6�\b�}�@��ӝN��A�E���\"\u001f:2\u0006�\t˘4�^H��E��~\n��b��%3K��!�F.��.�\f��\u0004�����_\u000b��\u001d�,ذd\u001c\u0006��u�!: xX�%];�\u0001� ���#�i�0�HA\u001fXp��@�g�P�A�JSf\u001c�@��l�5\u0019��`q��Q�<]9����O�}t��c\u0003�S�\f��V�\u0019�W!�\f\u001c�:cH�����H�y�n#W�\u0006.~G{��~��:���\u0013����\u0019\u000e���^\u0007���Wj��M\u0012¯\u0005�6�\r\u0018�r`ZwB�x�0\r\u0000�(v��\u0019�:7���\u0013�����b�Z���\"�yR�L����k�_�.\u000b��/\u0006(\\��>p\u0004o�&�Bi�*�_���$��\u0012�k*\u0014?���{@?H�G�7�\u0015�\u0016\u000e�o�-�\u000bPx�䰰ō��U!6S\u0000���c&\t��\u000fJq��q��n3u��d�k����c�l�\f�5�f��(\u0000�5�\u0017?s����cJ�\u0011�Kgᥡ\u000bKC�Svl~7�{�\u0005\u0017\u000e�\u000e�\u0015.C�n��)$���\u0014\u0014�]��'\\ب�����\u0013h�\u0004c:{+v��\u0016v�J��\u0019&���\u001d��5�\u0019�2�y�\u001f����j�\u000b��馘3�G\u0005<\u0010'fI@p��H�8��\u0014��\u0013\u0019�\u0011<�z/m\u0019Hkj�/\u00102�0�}\u0016�5)@�9�2~>�Iy��.\u0017�>\u0001,��\u0007jig�\u001db��0�������\u0017��\u001a�!�\u0018�A�07\u001a�\u0011E�V\u0019\u001a-t�eOC�\b%�\u001e\u001b1\u0000�%?�*�т*��U\u0012�����U���A�k\u0018(f9�F5\u0012\u0004\u0011F�\u0010��\u001c41�&\u0000c���_�\u0000D�\b���z?u��I����\u0004\f�\u001c���vx��/�Jn��\u001a\u0002�\u0013\u001c��\u0017�!Ǹ$R!��k�j�T\u0014�5�\u0014fJ&���\\�NfB]kX���TN��\u0014\t��\u001fu��BϤ�&\u000b�$-�\u0012<�Zq8��&kFzY�V\n����|�\u000eD�'�*�\u0001��ǵ��n;w�j���k��J\u001bis��H����d�S���Nz�F\u0018�\u001a����Q\u0011��\\�%�0��.�3�/�-d��%��F���\u001d�\b�\u0017�A/�fU?s�7�0���:7\u000b^�Q���Υqu���\u0013!-\u0014w\bp�粅�X$�\u0019۔�W�\u0012`�K�5�\u000e���\u0012\n�26�ݮ����j୐��Ur.��RʮJO'\f�\u001c��0\u000b丩M#�\u000f�yf)\u001d7\u0010?s��w��\u0004\u0015X�<�aP���]�wG�������!-���\u0005�:P=,5���˅�.~���R\fa�(\u000eAE?\u0016���\f���(��V�WE�~��\u0003� ���\u0012���H�ee�g\u000f~x9S5�h��\b\u001a�:�}�\u000f\u0014�\nu S\u000brw��6;��l�h`��M�U�ȸ�V�5�9��\u0002�/���#�V�Jf\u000f���ٙA�~�j��o\u0010��Wτ$�\u0011,\u000b����&dV\u0002ß\u001fT��ןRS��k%��J���L0\u0007LǱY*ZJT�u�z)�l\b|\u0013\u0007\nKb�R����\u001c�4�\u001f6��\u0016\u0017��?�\n�.�=NÙ\u0007C�\f��;\u0003��F��\u001fr\u001e�l�\\1:X�~����R�w�Dm٧����o�7I�\n��\u0006�t�5�5\u0004��\u00040��'\u0005����\u0006����۩��C�ր�k.%��ϖJ�z]����\u0012+�^lF�ϯ��~�8�՘�;}*\u001fє�~�շ_!��kz�l%�\u000ei����slΨ;���F�{,����4��\u0006������\u001c�\u0010\fT�Z��-�h�x��L�T�� Ӊ�'�]��9\u0014\u0007�A�&\u0002�W��v�N��L\r\u001a7�]G\u000f�&��2�6\u0012\\1���ը����,�\t��}\u0007\u0018\u0002\tE������;�m��Pl\u0004Ľ�e�K=��\u0010yQ\nԴp�v�� ��G������E��\u0012\u0016�\f��T \u0007tϽ���k|hX�� \u0004.Nv���\\�x�\u0019f>W�(�2_�/H\u001f`{G�h\u000fr�ʹ\u001e�~l�g����#�J\u0005�u\u0010��ht�ɱ�6J��\u0005\u0019��\u0000�\u0003��˕-\u0000L\\����(C(���Y�X\u000f��$�n\u000fx%i��\u001c��fs�$�\u0011K�$�\u0006�J�H�ʝ�~�\u0002ń\u001d�� 8zI:co,u7\u000b��j2:rdđ��fK�\t��ޱ�\u0018��\t�|���'A���TZC�\f��Dhj��t�h���1�n$���G\u001b�������V�\r����5I����J\u0017:���{\u001e�VZ�\u0015�����c{��\u0016���5\u0017�c�+)I\t\u0002+��k�\"�S�9�y�E�\u0016\u0003JX.|,��\u0003���Z�ct�����,�����7�\u000bg�\u001f��*�}��0��\u0015u�j�\u0003�K`׈Zζ�������.������u��R��<���}�'{9���� \u0007��wS�<\u0013��|�~\u0019\u0006U��~��uߙh=�>\u0012�Q,5χ\u00128��������|m%�W��\u001e�M`g�\u0006Go�fk�7%�thhy4��Y����GNY����U`�\u001a\u0005e\u0019�\u001dV�5��@\u0018�}�\u0016�\u0006a$���V�o\u0002k�ۈ;Iˌ���NA\u0018o\u001c\u000e�I�\u0004��\u0006�\u0014�|M��Z���=�\u0013����@Y\u0019��0'�\u001f���\u0012��1��wp�\u0011�:�8\u0003�^Q4������$�����\u001a�\u0002\u0010�/��\b\u0010�F\u001eL�8�)�%.l��\u0004�cj�\u001b\u001be\tY{8�P�D�[F��x\u001e�b���V\u000b�\t���-�\bD��'[g����WG�\u0018�V<�\r�sF&\bХ�\b\u0004\u000f\rwz^���W�4D��M!0���\u0019�\u000f�w��j��\u0007��\u0000b\u0014I����>�l�tH��넯\fѷ2�\u0019�X\tG{u\u0012c�޽�)�~{ݨ���,?�\u0018~\u001b�M\b\nvi�(�_�w���j�I!���\u0012�\u00134ӝd�\n��Ӛ��ƈ\u0013�'��\u0003�6\"]��cLwQy$C�\u0013����!m,u�\u001e����֘t�b�_���\fn�P!��Z-%|!�Y��P�o���OL���߿(\u0007���ݨy�ޑ��/���zI�.\u001e$�AR�F��\u0016�ӑ;\u0005��D9�W�Y!\u0000;���d�Z�K#�/H�ߌ�V����]�\u0015�\nzI�=�jyB�}.\u0004�\u0005c:!R�s�F��\u0003E0��o�9Ի�2\b�m�\u0005/�#�\u0000�\u0002�ŌN͛���ޛH��\u0010\u000b\t+��\u000e\u0017��R�³\u000bʽ�,?�&Y\u000f���D\u0000e�\u0014��1x�f<d��D�r���h��p�K�lT\u0013��(���w�s��\u0005D�ۓ1M���fjhR�` ��\f��pm+0ւ�.�F,�g��7��\u0015\u0013�~@�j����!�2p�\u0000\u001e\"��n� d��\u001b-\u001a���\u0000=\u0007��}{m�rl�E�6� �\u001f���c�\u001e\ny�:�O�)\fL�0�6�\u00142��!k�NC�ʪ\u0007*�M����)\u0004�0�>x_�/�\u001b݈\u0006�ÙYV�B�\u00186���\u001c]B��rK�e��7B\u0007rՑ4s\u0018�\u0004�S\u0001*O\u001f�}qpg�(�����[B�?�z\u0007-\u0018�Π`lo�\u0003��V�\nPs�N�A��cma�>\u0000��5ԉ�(\u0015��[���59�\u0006\r�k�M8\u0007׍�A/�X�7�߉�r[\u0015��\u001f02�\u0004\n�\u0017{��\u000fqɾ�z���1\u001f���c�4L���\t�\u0016e\u0001���i��&nS�&�&\u000e\\��k\u0017\u0007\u001f=��wh\biT���m����\u0007��@?\u0001\u0000�ږ��c\u0017�#[����K@��Zӷ�P��k�@\u0016�ᤅ\n\u0006�\b\u000eMp$>ܝ�\u001c�nۆ���[�2�����h\u001d�\u0003Ҭb\u001fx��!��R�IR@\u001f3�\u0000��\r��eH>2�u\u000b\f�\u001aS]�����f���r�/�H���\r����\u001d��,n�o\u001a#=fu7�t�\u001e\u001d�EҊ,�#\tΧ\u0005�OB\u0019�a\u0001\u0002��z\u0003\u001e\n��\u001b(s�g�u\u001aVj\u0014Z��\r�\u00179\r�*�lq���\u0005��\u0001�\u001f(:o\u0018��o��\u0005�32զ�ZV�����\ra֡�s\r]K^��\u0005hԪ&�j�\u001e��\u0010\u0007��E@h���x�RP^��>�3I�(�a�����{{\u0015�&s>ʳ\u000bo�~�I;0���a�(j�1�����5�\u001c����\u0013�C��ȃ�\u0004���b�G'Bl�y$��\u0012-3*\u0018h]~��\b�|�/�e�1���.�\u001ej�\u0018@/�\r��hij^��k�������\ns�^�\u0013�Ú\u001f\u001d����\r\u000eU�#6ºޛ0`\u000fo�a�)[GȘH�\u0015��Q\u00186�:�k��H\"nX`��Ҝ2�\\������1����-w�\u0015\u0014�i��A(g'�@m���~�A�A�r\b\u0002~�(����R�a\u0000(��\t\t�\u001e\u0012X� � n\u0002��\u0016c\u0019�\u0006!�6����\u0012�;.���A���\u0001���k��󒳽z�&�\b\u0011uA�(�d�\u0019r�l��I\u0004\u000erֽQ�\r�\u0007&Λ���]�~�/����\u0005\u0002u\u0016�sXL�j�ϹC�v8�!�:A�5�5?=P���\u0005\u0003�\u0002ܣ��~\u001e ���e����ə\u001a\u001eM8E\u000fyn2��\u000e�\u001fdR�o����X��ˠ�%A�0�6A�jS���M6�\u001a���\u000e��D\u0015\f�L}V�He7�&Qx\u0003�\u0001�/\u000e��G�\f�I�\u0013�\u0004�\bA�xڿ���.,��qC���r�]�}��ͺ�۞�2�D���,��\rv��5jY��\u0006w�y���f57}��\u001f�\u0017��<�w�w\r�\u000bא��/K��x\u0014�$&\u001a7��\u001d�П�t*^,f'�2U�8x1���&~i�\u0003�)�\u0010G��(\u0002��3�\u0019��\u000b�P�j�\u0019\u0015<FEbbA徨��(\u001c\"HS8Ʉ(s8�*=C�T*���\u0000b`8��-�\u0019Oi��\f^��i�\u001e8�_��t\u0012\u0000q�#�8\u000epf\\c�\u001a\n��'�\u0014\u0011\u0010��/��u7٠��5J�߄������\u0007\u0016\u0015TQ�\u0017d��/Yi���\u0002Jy�s��Z��w�H�`�\fIҋ�m9��\u0005��������t��\u001a@�\u000e�\u0018�z����IE�u�\u0011Z������\u001a,=@\u001bR�\u00136we�v�\u0015�C)�:!�d���c[}K��ze�$r�;)\\3\u0010\u0018,�H\u00064�ɿ��\u0001hl����N\u0004��\n�-�#M��e��H�\u0007\\R<x6�EL �&�ITn�\u0019����h��'�\u0019\f]��D(�e�\u0014\u001cX\u0004s��9�����O8ƀȽ�]�=օ��wi�V�J\u0006\\�fI�\u000f��;��\u0001�]@�FB5K\u0018ߚ���.T�<Y��a\t��6\u001b����z\u0003�\u0007�\u0002�<�E�ߕ���;�Ae�G+ϟ�O�ɬ��2��Kl��\u001eY�\f��vjOl���+y�3P�Nd}�H��\u0000��\u001b\u0015X hڬ`��}����\u0002 `)yܻ���B�\u001cv�i^\u0011,����h&����.\u0018�\r\u001d����-N��X&\u0001��\u0003W�~�Bm��\u001b\u0011�T5�\u0016�ʀaC���#Z{k�K�j�D�9\u001b{���0j\u0016^'�%���\u0010\u0012Ή/�����y���S�3�\t2������2�ݳ6\u0011�\u0012\u0011��\u0019����Nf+F��h���o\u001c\u00192O��,�OK��q#rF�N\u0005\u000e��$�j\tSa����#z�!i�������6�ך���/�H�c\u000f�0)�V��ͺj0�)\u0001<�+S\u001f��4lI\u0011�%GXt\\!�dA�kN�%u�[N�|��y�P��\rz9\f�m*X�Ѣ@�m&��t�d\u0001NA\u000f�n��\u0017\u001c�M\u001d��]a�IΛ0��o�OhB��ƇC3w�tC��+:��;^�\u0007&�8́K���ū%\t�S^V9�OX.\"\u0016\u0019\u0011��;8a<�VB�w�+ߎ���ˣeN\u0001G|�*z)Ҝދ�B\f��\u0013�2\u000e^��/��\u0019�X�\u0003y�d\u0000�.�7a�P;\u000fd��c�\u0018�cU+\u0014.\bO Qs�\u0000֤�\u0011K��I�ʒ5�wM.�\nGq�L�F)�\np\f&��\u0000х�0s\u0002�\u001fH��7<�y\u0019�`��7����\u001dx�?����bt'����CDŏ\u0010�\f=�r\u0019�V\u001d�9<��\u001e�ŬN�<�l�4�Ek?\u0018�G�,bU\u000b��\u000e���b\n�\t@3L�o\u001c\u0001�Z_���Q4Hw2��0}\\�����\u0001��tcN��d�c�\u001a;���S����#����\u00147b#\u001e`\u0015\u000b�a{�ȿ&e�v�\tc\u001aT���dd�>��/|��K�♦��,T&mx��\u0010R_60_�To�\u0018�\u0015�o=��)e���FN4\u0006�ZF\u0007���A�V�|Uz�mg�\b�3I�\rC���'N2��TOg�Wc2�z\u0000�ռ���T.r|\u0011\u0012\u0012��,5\u0017�\"�\u0011wc��e��\fI���΀R*\u0002���t���\"��\u00187�O�8#\u001f���{TRdO��U7�@z��\tt#k:N�Џ�Zҗr���+����5�O/�\u0015�\"�UE�\u0006�(��.4��.7�Ir\u001a-\u0000\u001d����9x�����\u0015\u001dm�������\u001f������\u0010F\b�2���)�y%M\u0012\u0012^]�i�j-���\u001d��D*\u0003\u0000z4\u0004��g^�Q�kR����\u001f48��V\u0014\u001f�99�\u0002���\n�κ�\u0006iң\u0010\b�H^3b�T�l�O�\u0014\u0018�`\u0013\u0007l��3*Q+1V-���w�<km\n{�_��\u0000�����Fx\u001cxw�ٶ��=\u0007����\\�t��\u0018�,�\b�V���N\t�ق�8V���Xh]��J䅚UF?L�\t�\u0011���\b�����<J\\\u0007�Ț����t\u000bb�\u0001R��zNS%\u0006�\u0007��?\u0018���\n�\u0003\u001c�\u0019~��0�?1�q�����A�_��i��[�\u0006%A0\u001fnò2$-��~x�M��I\u0014��\u0006����\u001c����J�}�\u0007���D\u0000\u0005��6�������`\u0004�YlZ�\u0014p|�A&\n���\n�+���>�\n\u0001�-�'6\u001c����*���`RͪS���N�τGL�����C$�V��&�'_*Hސ�\t�]rq��\u0010�\u0000�1a���t}x������s'lW�.㨕8D�y\u0014�t��vL6�o\u001c\r�k�I\u0017��p�m���c9k�&�p|��������\u0007�m��*��LC�\u001b���\u0016�n{\t�\u0005���W��H\u0019T��/<�z�=�\r�IM�[�\u0013�s(�l�Me���[��O\u0000/�W�\u001f\u0010����\u000b��\u0013IM=�v\u001cQH�\u000f�p#4Yr��6Q5���K�T\u0019�\u000e�OMj�\u000f�}4L�w�[(g��\t�Ә����V����t����\u0002\u001d\u0006������Tӥ$�IY�cW^J�Y��\u001b�鏚\u001e\u001d=��B@�N��_<���Jl����xa�yN\u0011�d�Z�NϷ�)�\u000e����Ѥf�W�L�W\u001b��A�yy>�=w\u0013=�\u0012�\u001ei�hb\u0004�6\u000f�v�rt<B\t\u0005IF�ΠQa��\u0017�m\u0012��O��M�}V���5��\u0014��OQ2yX�O{�o�д���\u000f�����\u000e�I�q\nB��.\u0017��:{�!s��\b玍_�BJ$e�Zc|s^F�\u0015C�9�x��$\u0011�\u0018�Q\"�+�A���]���[d�Q;�p\t�U&.�\u000b���V�\"I۴\"ܛY\u0002\u0003s�1i\u0000mјLu��/��%Hҡ���# 869���\rr�G��I {��\u00176F��|R�\u0003��\u0003L\u000f��b�/J��\u001a\u0018i�hG�+(}P�;��V�HBG\u0000Z��\u0017W=]\u0002\u0013�V/YAk\r�%\u0002q�>���\u000b�,�Ԝn��\u0002�g)eѫPD�޿N�qf�7��O�8��0?�:Lc�.e8^\u000b\n\u0003��(#�<�!�{�t���py\u0005�Yg����?ޭ�)������lɕj���z�����1��\u0011\u001cՑ��@�9�рs�\u0005+��؟YMp��R6to����\u000e\u0005\u001b9\u0011z�I�U?\u000b�x��\u0004�N�N�*��{�O\b<8pO�\u0006�m-�e����\u0014H�M\u0015����:�ߗ�:���m\u001b X\u0003�\u001fK�\u0006\ryɏ�ƛ.�SKT:�@��I�h8�\u0001�{��\u0019W��ib�]<�M�\"��gw����~^X�\u001f�\t�$�\u0014�IN�{![N�18>A\u0001\b4>1:\tN\u001a��\"���9�9&� �y�z?�P�R\u0019���\u0016��\u00019�\u0013�5���8��&�]��������\u0003�\u001f��yaAy�Y�~:(������\u0012\"�\u000f��H\b����2X(J�{S�G�[S�e��\u0013�\u001a~+��{�g��+��6?l\rN6����\u000fֻ���'xi��Z\u000b�d\u0016#�����N���\u0019��ش�,�:���P!\u001c&am�}/�n�ɮD�\u0016UFtSk\u001f�9��lbBo�^�am��ގ/��g\u001b�@xS��x�-�②V�\u0016�_xES�\t�7e�\u0019ۢT�\u0018�N�\u0001�v?W<�\u000f���⻉Rl\f�\u001f򛉌\t�zM��\tj�\f�.c1\u0010�\u0012�����؛�+�\u000b�O���\f�bZ��\t�Is�gw$��F�m\t\n�e1?�\u001f[�z�G��sn!?d��}M4U���\f�\u0004%�q8�tr�\r�\\a��f���^�U�z�e��i��{�9��\\��m�\u0006T]t(\u0002]$�\u0007'\f\u000b�\u0003HB�xB��I���հ\u001fԠopX�����7��l~�����\"��ev��\u001f�1S�FL�1ˇ�`\u0001�d\u0019}�_C��=��J�\u001d�\u0017#�\u0013в���\u001d����n�><˪n��\u0005�8�\u001c�^%4\t6Ԟsi2���1�\u0017En���\u0017H\u000eD�\u0010�LH�2�G�֛��~��\u0003\u0001t�����!��}o\t��!g\u000b��\u0007f��\u0000�\u0000JT�i՟�&�X�6Ͼ&2\u0014\u0000�>\u0001 !�ƐNF�\u0019X{I\u0002sχ)A��8͙�\u001f6�t!n��k�d��-����a�\u001d����٫�I+᧶�r=��8��`{�\u0003�i?��\u001b�R;����s��\u0000�l�3�������\f��kL\r���o9m���#�\r`\u001d�^\u0018�j>\u0019��'\u0014���%��\u000e�.;]д�Tu��f^\u000eb|��YZKw\u001e遷Wx}@#ZJ.\u0013\u0018U�fX�\u0016��\u0001�\u0011\u0019d���o/\u0012����R\u0017\u0002d\u000f�wP�B�圛0����\bk���9{@�1k�2��\u0018�\u0015�^��\u0005i�\u0000�\u0016�7��\t�*\u000eu��wEVq�Bt{|\u001d\u0019~��=\t�B��_\u001e\u0018%`�\u0014i�>Z�T8�~������\u0003�\u0014z;\u0019 �#cj��\u0007��!XL\u0007_DXP�5[��)f\u000f.�Ҡ\u000bI�f�O��P<�k\u0013͞��\u0000m1T\\#w����\u0004���I&Q��pښa7\u0010\u0001,\u0007�+\u0015�\u0018Y���[Ҝ�1O���#r9�*ߌ{�?���ŋ(�37��w|\b�&.��?X\u0002\u0011ӎ@��64+ ǐ��s\u0003T@GlM����/`��b&材(��2Y��:U�<�㵸�6Y�(/sl�wҏ�.\u000b\u0001$H\u001b�3\u001b�E��\u0019d5S�}�C�a�\t����i=�/�r<\u0005<�_Yi \u0003��#-\u001f�\u0012EE�䬥�3r�KDY�\u001f���\u0001b\u0000�Ӣ\u000b\"�\u0010ϯ��\n~h� �\u001c?�b>���yi�\u001cm�\u0017ԯ\u0006�%�\u0004��Z⮂2EɎ��\u0001Kx\u00103������w1�?�l�[\u0017��P}&�/�\u001cV\u0007j\u000fX}ަ�˯N�Zb���8��1�W�%\u0006\u0003\u0016�itɶ�B\u0015�\u001b몐|����:�4\u001d\u0012Y��\u000e��\\)U�\\�Ԡ��'��~Kf\u001e����6��x��\u0005F������⩻��+S��J��->\u0005ا��E\u0012\u0019�����\u0012�\u0019+�\u0002xȍ̬�8�=�\u0013�w;\u0011��׊9�2�Y���\u000b#Q���\u0005X;�\b���\u0017�\u0014�\u0019�La�\r��cO�.�\u0014��b\t�Ӡ4�j]�\u0016}��Ȼ��j*E`��8�脦i\u0012K�\u0006P����&�[r\u0011Ox;Z�\t||��\u0019O��m6���\\�x�Au8�9�\u001d��n�c؝jr�\u0014�/d}��\u000e0�$U���v�1\u0016��7�\u001c�6B��'a�\tAQ�7vqq͎ҧ��6\u0003�L\u0002+`�^�\u0018�%chi��y��-�\u0019I�}�J@�H�,F�e\u0010\u0019�*�a\b�d��!�\u001c\u0015�&�\u001e���W���,V�ґ1\r\u0007=��k�0.\u001a���h\r�Hș!o.Rj��t\u0006&t{�_a����2\u0001<��}��K�� \b�g��\u001c\u001d+h\t�\u001b7t\u0012xf�/ݚ����c\u0004�ö�\u0017����\u0010v�Q�\u0012�\u0016C,q�vJ�GE~�jȘ���P�@_���\nb1�l\u001b��� L�hhk�\u0000�\u001b�B���i��c��E�I�ix\u0017�\u00014𷓐�:;�e\u0018�̗�=^��uwS�x��c��\u001eD��\u001d��6���S��\u0013\u001899r²\u0001뀺��l���p���\u0012;���\u0013طm2�R\u000b%\u001c%\u001c\u0000�ihj��x���\u0002b�[\u0002�b�ҩ��_\u0017i�_��\r�j���d�\u0013<�V��A�\u0014@��-`NE�@�|�\u000b��v�.�67)@��φ��83\u001bU����۪#�^�\u0003��̷\u00015�@�\u0016�;?F�\u0017O\n�1Ew��ˆ��t4�\u00193�ʏ�\"����TK\u001a�ɇΚ�My�y��K9�x�)�c�u�N�o�G�Y�u�]���ܥ�\u0019XI~�[��\u0016��\u0015t�\u001f)\u0003s�D�C�\u000e��oH�V\u000e�n\u0014��U�q\u000e�=�\r+���\b_z\u001f\u000f@�d(�+���\\Cں�ӓ+`\t\b�\bf\u0018X�\u001a�\u0015�^���\u0019(nh?1<j_+����Yp�~��`;\\��$��h��\u0001�hxa�W\tt�2m�g��\u001b:�\u001b��L�S��\u001d�1�!��#��馦J\"ų�C����(\u0019�2�*��2K�k�C���o�/r���!\u0002����\u0013���ּR��\u0013�L}����A��Xh���ʖߺR^�\u0006Fl�m\u000em��t\u0015\u0013���A�+�L���8�u�e,)I\u0001��f�^P�\u0006�a\u0019\u001cw�m5����\u0003�,`���M�9S4;\u0015��#wo���݀��8\u0019�Iep��p�I>1���Z�F4�<�\u0005o\u0014+x����\u001d\u0012�q\t��.v���6�a��S���d�i��D\u001f�\u001e8�ܟ�C�D{�7�\u001eE�ݬ��k����\u0012�V������bK��a\u001f\"n�PT\fmx# �\u0003�;�{��TX\u0001=\u0016�}����\\2\u000f\bS@�G1F�w�Oo󲗰��1>~���:\u0007�;\u0007�0�t��59�\u0019IG8�����\u001d_��jR�q\u001f��s�-%tew'�%�ל�Y�'G)�۬�G�Ɔ\u00143.�;\u0012k�Qt��\u0019�\u0010�9�(��8v]M�<�\u001eh~����5uD��>\u0005���������\u0003�\u000b�ݘ\u000e�Pk殡;�R\u0014�A�E��\nog�\u0012�<�MQ9�\u0017ry\u001f\u000e��b�WK\u0018�~�����5+�\u0015t��\u001b�\n�p��2\u001dv��[�\u00114�7۟h��\u0018c�X~z딐P^@\u000b2�\u0007�_k��\u000b�Т\u0015�6��\u0019���\u001c8�\u0003���Um��WQP�\u0002�\r�������\u0017h�^���#��,�k�]��/3�.�6�{\u0000�'����R��\u0015\u00159В'p\t���-٦\n���4N�����H�(\u0015\\\u001b�E�cTK�\tݠ��^<\r��s[u�|`d�]���2�ˏ�T��<�\u000e٨jc2M���\u0014��z��61յn8��f����I��k�\u0000�M\u0003��<�G�!3\u0012\u0000}�%�SE��?\u0019���\b\u0014�=�'\\?_\r�6�)�$�,�w���\u0013Q�\u001c�\u0012��NU\u0016..:<��B\u0018��ͪ�\u0000��Of!��g�(C秼�l�}z���`����\u0002r\u0017����L|I�\u0018\tK\u001f�x\u0010���Γ\u0018\b�w���A�\r��MX[�\u0015tһ�&oG�\u0013���2\u001b�fG!�H\u0000�.�w�0gn��>$Q�պ�p�땂 \u000f�����&\u001cH�s��5���\u000fs�G/��u`�����1+h\u001c���\u0010>�\u001bC�\u0006��\t\u0014qzE�c�1\b}����P?j\b�o���u�P�\r]ʀz���\r�,4�8QjI�\u000f�}��d�w\"\u0016!�����_:I3�˪��$i��\u001e��\u001e8�Ic嫱Wi͔A��m�@%���x�A@\u001a������`���k��=�1�\u0001�f\u0000���?wB�A&�p���,h�T�\u0000\u0003E#���Q��OJ�Av\u0019a�h\u0016��\u0019KW�b\u0013䶚��\u0003 !�4�b8�\u001dD\u001d\u0005\u001e\u0018��R� �\u001bs��i#���q�ŧ�\u001c)\u001c;���ؑ폙\u0013\u0005\u0016�\u0000\u00101)��\n?)\u0007B�e~��,�?\u0019�$8ov\t��\u0018��&��mS͚Z�y.���ӱ[e��2��?����\u001b\u0006�v�?���Z\u000b���`\u001fW0\u0000\u0019lE�\u0000\u0000\u0000\u0000EXIFR\u0000\u0000\u0000MM\u0000*\u0000\u0000\u0000\b\u0000\u0002\u0001\u0012\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000�i\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0003�\u0001\u0000\u0003\u0000\u0000\u0000\u0001��\u0000\u0000�\u0002\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0005\u0000�\u0003\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000"}],"Page":[{"title":"关于","date":"2021-09-22T13:01:47.000Z","comments":1,"_content":"\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>冯笑一 | 嵌入式工程师</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;500;700&family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\n    <style>      \n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-family: 'Noto Sans SC', sans-serif;\n            padding: 20px;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1000px;\n            width: 100%;\n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.1);\n            position: relative;\n            z-index: 1;\n        }\n        \n        /* 顶部装饰 */\n        .top-decoration {\n            height: 8px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n        }\n        \n        /* 头部区域 */\n        .header {\n            position: relative;\n            padding: 40px;\n            background: linear-gradient(rgba(255,255,255,0.95), rgba(255,255,255,0.95)), \n                        url('https://i.pinimg.com/564x/0c/76/7c/0c767c1d9b6d9f1b9b5b0b5c5e5b5b5b.jpg');\n            background-size: cover;\n            background-position: center;\n            text-align: center;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .avatar {\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            border: 5px solid white;\n            box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n            margin: 0 auto 20px;\n            background: linear-gradient(45deg, #ffffffff, #e0eafcff);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 60px;\n            font-weight: bold;\n            overflow: hidden; /* 隐藏图片超出圆形的部分 */\n        }\n        \n        .name {\n            font-size: 2.8rem;\n            font-weight: 700;\n            margin-bottom: 10px;\n            color: #2c3e50;\n            position: relative;\n            display: inline-block;\n        }\n        \n        .name::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(90deg, #6a11cb, #2575fc);\n            border-radius: 2px;\n        }\n        \n        .title {\n            font-size: 1.5rem;\n            color: #556270;\n            margin-bottom: 25px;\n        }\n        \n        .intro {\n            font-size: 1.2rem;\n            line-height: 1.8;\n            max-width: 800px;\n            margin: 0 auto;\n            color: #4a5568;\n            background: rgba(255,255,255,0.7);\n            padding: 20px;\n            border-radius: 15px;\n            backdrop-filter: blur(5px);\n            box-shadow: 0 5px 15px rgba(0,0,0,0.05);\n        }\n        \n        .highlight {\n            background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);\n            padding: 2px 8px;\n            border-radius: 5px;\n            font-weight: 600;\n        }\n        \n        /* 内容区域 */\n        .content {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n            padding: 40px;\n        }\n        \n        @media (max-width: 768px) {\n            .content {\n                grid-template-columns: 1fr;\n            }\n        }\n        \n        .card {\n            background: white;\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease;\n            border: 1px solid #f0f4f8;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);\n        }\n        \n        .card-title {\n            display: flex;\n            align-items: center;\n            font-size: 1.5rem;\n            margin-bottom: 25px;\n            color: #2c3e50;\n            padding-bottom: 15px;\n            border-bottom: 2px solid #f0f4f8;\n        }\n        \n        .card-title i {\n            margin-right: 12px;\n            color: #2575fc;\n        }\n        \n        /* 联系信息 */\n        .contact-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .contact-item {\n            display: flex;\n            align-items: center;\n            padding: 12px 0;\n        }\n        \n        .contact-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            flex-shrink: 0;\n        }\n        \n        .contact-icon i {\n            color: white;\n            font-size: 20px;\n        }\n        \n        .contact-details {\n            flex-grow: 1;\n        }\n        \n        .contact-label {\n            font-weight: 600;\n            color: #556270;\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n        \n        .contact-value {\n            font-size: 1.1rem;\n            color: #2c3e50;\n            font-weight: 500;\n        }\n        \n        /* 兴趣爱好 */\n        .hobby-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n        }\n        \n        .hobby-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            padding: 20px;\n            background: #f9fbfd;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n        \n        .hobby-item:hover {\n            background: #eef7ff;\n            transform: translateY(-3px);\n        }\n        \n        .hobby-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #4ecdc4 0%, #5563de 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 15px;\n            font-size: 24px;\n            color: white;\n        }\n        \n        .hobby-name {\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 5px;\n        }\n        \n        .hobby-desc {\n            font-size: 0.9rem;\n            color: #718096;\n        }\n        \n        /* 网站信息 */\n        .website-info {\n            grid-column: span 2;\n        }\n        \n        @media (max-width: 768px) {\n            .website-info {\n                grid-column: span 1;\n            }\n        }\n        \n        .tech-stack {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            flex-wrap: wrap;\n            margin: 25px 0;\n        }\n        \n        .tech-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        .tech-icon {\n            width: 60px;\n            height: 60px;\n            background: white;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n            margin-bottom: 10px;\n            font-size: 28px;\n            color: #2575fc;\n        }\n        \n        .tech-name {\n            font-weight: 600;\n            color: #4a5568;\n        }\n        \n        /* 底部区域 */\n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 30px;\n        }\n        \n        .social-links {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0 30px;\n        }\n        \n        .social-icon {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            background: rgba(255,255,255,0.1);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: all 0.3s ease;\n            color: white;\n            font-size: 20px;\n        }\n        \n        .social-icon:hover {\n            background: #2575fc;\n            transform: translateY(-5px);\n        }\n        \n        .copyright {\n            margin-top: 20px;\n            color: rgba(255,255,255,0.7);\n            font-size: 0.9rem;\n        }\n        \n        /* 二次元装饰元素 */\n        .anime-element {\n            position: absolute;\n            z-index: 0;\n        }\n        \n        .element-1 {\n            top: 50px;\n            left: 5%;\n            font-size: 50px;\n            transform: rotate(-15deg);\n            color: rgba(106, 17, 203, 0.1);\n        }\n        \n        .element-2 {\n            top: 100px;\n            right: 5%;\n            font-size: 40px;\n            transform: rotate(15deg);\n            color: rgba(37, 117, 252, 0.1);\n        }\n        \n        .element-3 {\n            bottom: 100px;\n            left: 10%;\n            font-size: 45px;\n            transform: rotate(10deg);\n            color: rgba(78, 205, 196, 0.1);\n        }\n        \n        .element-4 {\n            bottom: 150px;\n            right: 8%;\n            font-size: 55px;\n            transform: rotate(-10deg);\n            color: rgba(85, 99, 222, 0.1);\n        }\n        \n        /* 按钮样式 */\n        .blog-button {\n            display: inline-block;\n            margin-top: 25px;\n            padding: 12px 30px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n            color: white;\n            border-radius: 30px;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 1.1rem;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(37, 117, 252, 0.3);\n        }\n        \n        .blog-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(37, 117, 252, 0.4);\n        }\n        \n        .blog-button i {\n            margin-left: 8px;\n        }\n        \n        /* 动画效果 */\n        @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        .floating {\n            animation: float 4s ease-in-out infinite;\n        }\n    </style>\n</head>\n<bodydiv>\n    <!-- 二次元装饰元素 -->\n    <div class=\"anime-element element-1\">(>ω<)</div>\n    <div class=\"anime-element element-2\">(◕‿◕✿)</div>\n    <div class=\"anime-element element-3\">(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧</div>\n    <div class=\"anime-element element-4\">✧⁺⸜(●′▾‵●)⸝⁺✧</div>\n    \n    <div class=\"container\">\n        <div class=\"top-decoration\"></div>\n        \n        <div class=\"header\">\n            <div class=\"avatar floating\"><img src=\"/avatar/avatar.webp\" alt=\"冯\"/></div>\n            <h1 class=\"name\">冯笑一</h1>\n            <div class=\"title\">嵌入式软件工程师 | 二次元爱好者 | 原神玩家</div>\n            \n            <div class=\"intro\">\n                <p>你好！我是冯笑一，一名电子信息爱好者，在这里用代码、电路和奇思妙想构建我的\"数字乐园\"。</p>\n                <p>欢迎访问我的个人博客 <span class=\"highlight\">https://www.f123.club/</span>，这里记录了我在嵌入式开发、硬件设计、物联网探索中的点滴思考与实践。</p>\n                <p>如果你也痴迷于芯片的呼吸、电路的脉搏，这里或许能成为你的灵感加油站！</p>\n                \n                <a href=\"https://www.f123.club/\" class=\"blog-button\">\n                    访问我的博客 <i class=\"fas fa-arrow-right\"></i>\n                </a>\n            </div>\n        </div>\n        \n        <div class=\"content\">\n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-id-card\"></i> 联系信息</h2>\n                <div class=\"contact-grid\">\n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电子邮箱</div>\n                            <div class=\"contact-value\">qingchunhuoli@live.com</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-mobile-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电话</div>\n                            <div class=\"contact-value\">188-9694-7665</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-birthday-cake\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">生日</div>\n                            <div class=\"contact-value\">1999年6月29日</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-map-marker-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">所在地</div>\n                            <div class=\"contact-value\">中国 · 苏州</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-heart\"></i> 兴趣爱好</h2>\n                <div class=\"hobby-grid\">\n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-microchip\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">嵌入式开发</h3>\n                        <p class=\"hobby-desc\">探索微控制器与嵌入式系统的无限可能</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-gamepad\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">原神</h3>\n                        <p class=\"hobby-desc\">提瓦特大陆的忠实旅行者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-headphones\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">二次元文化</h3>\n                        <p class=\"hobby-desc\">动漫、漫画、游戏的深度爱好者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-laptop-code\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">物联网开发</h3>\n                        <p class=\"hobby-desc\">连接物理世界与数字世界</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card website-info\">\n                <h2 class=\"card-title\"><i class=\"fas fa-globe\"></i> 网站信息</h2>\n                <p>✨ 欢迎访问我的小窝欢迎━(*｀∀´*)ノ亻! ✨</p>\n                \n                <div class=\"tech-stack\"> \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fab fa-github\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-paint-brush\"></i>\n                        </div>\n                        <div class=\"tech-name\">Reimu主题</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-server\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub托管</div>\n                    </div>\n                </div>\n                \n                <p>本站使用 <span class=\"highlight\">Hexo</span> 静态网站生成器构建，采用 <span class=\"highlight\">Reimu</span> 主题，托管在 <span class=\"highlight\">GitHub Pages</span> 平台上。</p>\n                <p>博客内容主要涵盖嵌入式开发、硬件设计、物联网技术以及个人技术思考，同时也会分享一些二次元文化相关内容。</p>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 添加简单的悬浮动画效果\n        document.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('mouseenter', function() {\n                this.classList.add('floating');\n            });\n            \n            card.addEventListener('mouseleave', function() {\n                this.classList.remove('floating');\n            });\n        });\n    </script>\n</bodydiv>\n</html>\n{% endraw %}\n\n## 📌 我是谁？\n\n- **硬核极客**  \n  从焊接到开发智能家居系统，我与电子技术的故事始于童年，却永无终点。\n\n- **开源信徒**  \n  热爱分享代码和原理图，坚持用开源精神推动技术普惠。\n\n- **跨界玩家**  \n  横跨硬件与软件，从8位单片机到Linux嵌入式，从PCB设计到机器学习，拒绝被标签定义。\n\n---\n\n## 🔍 在这里，你能找到什么？\n\n### 1. 嵌入式开发实战\n- **ARM Cortex-M系列**  \n  基于STM32、MM32的Bootloader开发、RTOS移植与低功耗优化。\n  \n- **硬件底层揭秘**  \n  中断机制、DMA调优、外设驱动源码解析。\n  \n- **奇技淫巧**  \n  用示波器捕捉电磁漏洞，用Python脚本自动化硬件测试。\n\n### 2. 硬核科普与工具链\n- **芯片逆向入门**  \n  从拆解到逻辑分析，看懂一颗芯片的\"灵魂\"。\n  \n- **EDA工具指南**  \n  立创EDA、KiCad、Altium Designer的实战技巧与避坑手册。\n  \n- **行业观察**  \n  RISC-V生态崛起、半导体供应链危机背后的技术逻辑。\n\n---\n\n## 🌟 近期热门文章\n\n1. **[MM32G0001 Bootloader开发全指南](https://www.f123.club/posts/mm32-bootloader/)**  \n   手把手实现Cortex-M0芯片的固件空中升级！\n   \n2. **[C语言|函数指针作为结构体成员实现成员操作](https://www.f123.club/posts/c-function-pointer-in-struct/)**  \n   深入了解C语音机制的精妙之处。\n   \n3. **[基于VScode使用pyOCD进行单片机调试](https://www.f123.club/posts/pyocd-vscode-debug/)**  \n   探索新型调试工具的强大功能。\n\n---\n\n## 🤝 加入讨论，一起玩转技术！\n\n<center>🚀 **为什么关注这个博客？**</center>\n\n- **拒绝纸上谈兵**  \n  所有内容均经过实际项目验证，提供可复现的代码与数据。\n- **垂直深耕**  \n  专注电子技术领域，不做泛泛而谈的\"技术搬运工\"。\n\n---\n\n## 📬 联系与合作\n\n| 联系方式         | 地址/ID                               |\n|------------------|---------------------------------------|\n| 📧 **邮箱**       | [qingchunhuoli@live.com](mailto:qingchunhuoli@live.com) |\n| 💻 **GitHub**     | [MYxiaoyi](https://github.com/MYxiaoyi) |\n| 📺 **哔哩哔哩**   | 搜索\"MY_梦翼\"                          |\n| 💬 **QQ**         | 2028132607                            |\n\n\n\n{% externalLinkCard \"冯笑一小窝\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n\n{% heatMapCard %}\n\n---\n{% tagRoulette \"代码,电路,嵌入式,单片机,STM32,ESP32,Arduino,树莓派,物联网,机器人,电子制作,DIY,开源硬件,编程,电子设计,电子技术,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友\" \"🔧\" %}\n\n<center>*—— 在这里，电路与代码交织成诗，平凡器件亦可点亮星辰。*</center>","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-09-22 21:01:47\ncomments: true\n---\n\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>冯笑一 | 嵌入式工程师</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;500;700&family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\n    <style>      \n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-family: 'Noto Sans SC', sans-serif;\n            padding: 20px;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1000px;\n            width: 100%;\n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.1);\n            position: relative;\n            z-index: 1;\n        }\n        \n        /* 顶部装饰 */\n        .top-decoration {\n            height: 8px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n        }\n        \n        /* 头部区域 */\n        .header {\n            position: relative;\n            padding: 40px;\n            background: linear-gradient(rgba(255,255,255,0.95), rgba(255,255,255,0.95)), \n                        url('https://i.pinimg.com/564x/0c/76/7c/0c767c1d9b6d9f1b9b5b0b5c5e5b5b5b.jpg');\n            background-size: cover;\n            background-position: center;\n            text-align: center;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .avatar {\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            border: 5px solid white;\n            box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n            margin: 0 auto 20px;\n            background: linear-gradient(45deg, #ffffffff, #e0eafcff);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 60px;\n            font-weight: bold;\n            overflow: hidden; /* 隐藏图片超出圆形的部分 */\n        }\n        \n        .name {\n            font-size: 2.8rem;\n            font-weight: 700;\n            margin-bottom: 10px;\n            color: #2c3e50;\n            position: relative;\n            display: inline-block;\n        }\n        \n        .name::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(90deg, #6a11cb, #2575fc);\n            border-radius: 2px;\n        }\n        \n        .title {\n            font-size: 1.5rem;\n            color: #556270;\n            margin-bottom: 25px;\n        }\n        \n        .intro {\n            font-size: 1.2rem;\n            line-height: 1.8;\n            max-width: 800px;\n            margin: 0 auto;\n            color: #4a5568;\n            background: rgba(255,255,255,0.7);\n            padding: 20px;\n            border-radius: 15px;\n            backdrop-filter: blur(5px);\n            box-shadow: 0 5px 15px rgba(0,0,0,0.05);\n        }\n        \n        .highlight {\n            background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);\n            padding: 2px 8px;\n            border-radius: 5px;\n            font-weight: 600;\n        }\n        \n        /* 内容区域 */\n        .content {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n            padding: 40px;\n        }\n        \n        @media (max-width: 768px) {\n            .content {\n                grid-template-columns: 1fr;\n            }\n        }\n        \n        .card {\n            background: white;\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease;\n            border: 1px solid #f0f4f8;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);\n        }\n        \n        .card-title {\n            display: flex;\n            align-items: center;\n            font-size: 1.5rem;\n            margin-bottom: 25px;\n            color: #2c3e50;\n            padding-bottom: 15px;\n            border-bottom: 2px solid #f0f4f8;\n        }\n        \n        .card-title i {\n            margin-right: 12px;\n            color: #2575fc;\n        }\n        \n        /* 联系信息 */\n        .contact-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .contact-item {\n            display: flex;\n            align-items: center;\n            padding: 12px 0;\n        }\n        \n        .contact-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            flex-shrink: 0;\n        }\n        \n        .contact-icon i {\n            color: white;\n            font-size: 20px;\n        }\n        \n        .contact-details {\n            flex-grow: 1;\n        }\n        \n        .contact-label {\n            font-weight: 600;\n            color: #556270;\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n        \n        .contact-value {\n            font-size: 1.1rem;\n            color: #2c3e50;\n            font-weight: 500;\n        }\n        \n        /* 兴趣爱好 */\n        .hobby-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n        }\n        \n        .hobby-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            padding: 20px;\n            background: #f9fbfd;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n        \n        .hobby-item:hover {\n            background: #eef7ff;\n            transform: translateY(-3px);\n        }\n        \n        .hobby-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #4ecdc4 0%, #5563de 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 15px;\n            font-size: 24px;\n            color: white;\n        }\n        \n        .hobby-name {\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 5px;\n        }\n        \n        .hobby-desc {\n            font-size: 0.9rem;\n            color: #718096;\n        }\n        \n        /* 网站信息 */\n        .website-info {\n            grid-column: span 2;\n        }\n        \n        @media (max-width: 768px) {\n            .website-info {\n                grid-column: span 1;\n            }\n        }\n        \n        .tech-stack {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            flex-wrap: wrap;\n            margin: 25px 0;\n        }\n        \n        .tech-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        .tech-icon {\n            width: 60px;\n            height: 60px;\n            background: white;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n            margin-bottom: 10px;\n            font-size: 28px;\n            color: #2575fc;\n        }\n        \n        .tech-name {\n            font-weight: 600;\n            color: #4a5568;\n        }\n        \n        /* 底部区域 */\n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 30px;\n        }\n        \n        .social-links {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0 30px;\n        }\n        \n        .social-icon {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            background: rgba(255,255,255,0.1);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: all 0.3s ease;\n            color: white;\n            font-size: 20px;\n        }\n        \n        .social-icon:hover {\n            background: #2575fc;\n            transform: translateY(-5px);\n        }\n        \n        .copyright {\n            margin-top: 20px;\n            color: rgba(255,255,255,0.7);\n            font-size: 0.9rem;\n        }\n        \n        /* 二次元装饰元素 */\n        .anime-element {\n            position: absolute;\n            z-index: 0;\n        }\n        \n        .element-1 {\n            top: 50px;\n            left: 5%;\n            font-size: 50px;\n            transform: rotate(-15deg);\n            color: rgba(106, 17, 203, 0.1);\n        }\n        \n        .element-2 {\n            top: 100px;\n            right: 5%;\n            font-size: 40px;\n            transform: rotate(15deg);\n            color: rgba(37, 117, 252, 0.1);\n        }\n        \n        .element-3 {\n            bottom: 100px;\n            left: 10%;\n            font-size: 45px;\n            transform: rotate(10deg);\n            color: rgba(78, 205, 196, 0.1);\n        }\n        \n        .element-4 {\n            bottom: 150px;\n            right: 8%;\n            font-size: 55px;\n            transform: rotate(-10deg);\n            color: rgba(85, 99, 222, 0.1);\n        }\n        \n        /* 按钮样式 */\n        .blog-button {\n            display: inline-block;\n            margin-top: 25px;\n            padding: 12px 30px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n            color: white;\n            border-radius: 30px;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 1.1rem;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(37, 117, 252, 0.3);\n        }\n        \n        .blog-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(37, 117, 252, 0.4);\n        }\n        \n        .blog-button i {\n            margin-left: 8px;\n        }\n        \n        /* 动画效果 */\n        @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        .floating {\n            animation: float 4s ease-in-out infinite;\n        }\n    </style>\n</head>\n<bodydiv>\n    <!-- 二次元装饰元素 -->\n    <div class=\"anime-element element-1\">(>ω<)</div>\n    <div class=\"anime-element element-2\">(◕‿◕✿)</div>\n    <div class=\"anime-element element-3\">(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧</div>\n    <div class=\"anime-element element-4\">✧⁺⸜(●′▾‵●)⸝⁺✧</div>\n    \n    <div class=\"container\">\n        <div class=\"top-decoration\"></div>\n        \n        <div class=\"header\">\n            <div class=\"avatar floating\"><img src=\"/avatar/avatar.webp\" alt=\"冯\"/></div>\n            <h1 class=\"name\">冯笑一</h1>\n            <div class=\"title\">嵌入式软件工程师 | 二次元爱好者 | 原神玩家</div>\n            \n            <div class=\"intro\">\n                <p>你好！我是冯笑一，一名电子信息爱好者，在这里用代码、电路和奇思妙想构建我的\"数字乐园\"。</p>\n                <p>欢迎访问我的个人博客 <span class=\"highlight\">https://www.f123.club/</span>，这里记录了我在嵌入式开发、硬件设计、物联网探索中的点滴思考与实践。</p>\n                <p>如果你也痴迷于芯片的呼吸、电路的脉搏，这里或许能成为你的灵感加油站！</p>\n                \n                <a href=\"https://www.f123.club/\" class=\"blog-button\">\n                    访问我的博客 <i class=\"fas fa-arrow-right\"></i>\n                </a>\n            </div>\n        </div>\n        \n        <div class=\"content\">\n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-id-card\"></i> 联系信息</h2>\n                <div class=\"contact-grid\">\n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电子邮箱</div>\n                            <div class=\"contact-value\">qingchunhuoli@live.com</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-mobile-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电话</div>\n                            <div class=\"contact-value\">188-9694-7665</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-birthday-cake\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">生日</div>\n                            <div class=\"contact-value\">1999年6月29日</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-map-marker-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">所在地</div>\n                            <div class=\"contact-value\">中国 · 苏州</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-heart\"></i> 兴趣爱好</h2>\n                <div class=\"hobby-grid\">\n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-microchip\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">嵌入式开发</h3>\n                        <p class=\"hobby-desc\">探索微控制器与嵌入式系统的无限可能</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-gamepad\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">原神</h3>\n                        <p class=\"hobby-desc\">提瓦特大陆的忠实旅行者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-headphones\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">二次元文化</h3>\n                        <p class=\"hobby-desc\">动漫、漫画、游戏的深度爱好者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-laptop-code\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">物联网开发</h3>\n                        <p class=\"hobby-desc\">连接物理世界与数字世界</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card website-info\">\n                <h2 class=\"card-title\"><i class=\"fas fa-globe\"></i> 网站信息</h2>\n                <p>✨ 欢迎访问我的小窝欢迎━(*｀∀´*)ノ亻! ✨</p>\n                \n                <div class=\"tech-stack\"> \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fab fa-github\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-paint-brush\"></i>\n                        </div>\n                        <div class=\"tech-name\">Reimu主题</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-server\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub托管</div>\n                    </div>\n                </div>\n                \n                <p>本站使用 <span class=\"highlight\">Hexo</span> 静态网站生成器构建，采用 <span class=\"highlight\">Reimu</span> 主题，托管在 <span class=\"highlight\">GitHub Pages</span> 平台上。</p>\n                <p>博客内容主要涵盖嵌入式开发、硬件设计、物联网技术以及个人技术思考，同时也会分享一些二次元文化相关内容。</p>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 添加简单的悬浮动画效果\n        document.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('mouseenter', function() {\n                this.classList.add('floating');\n            });\n            \n            card.addEventListener('mouseleave', function() {\n                this.classList.remove('floating');\n            });\n        });\n    </script>\n</bodydiv>\n</html>\n{% endraw %}\n\n## 📌 我是谁？\n\n- **硬核极客**  \n  从焊接到开发智能家居系统，我与电子技术的故事始于童年，却永无终点。\n\n- **开源信徒**  \n  热爱分享代码和原理图，坚持用开源精神推动技术普惠。\n\n- **跨界玩家**  \n  横跨硬件与软件，从8位单片机到Linux嵌入式，从PCB设计到机器学习，拒绝被标签定义。\n\n---\n\n## 🔍 在这里，你能找到什么？\n\n### 1. 嵌入式开发实战\n- **ARM Cortex-M系列**  \n  基于STM32、MM32的Bootloader开发、RTOS移植与低功耗优化。\n  \n- **硬件底层揭秘**  \n  中断机制、DMA调优、外设驱动源码解析。\n  \n- **奇技淫巧**  \n  用示波器捕捉电磁漏洞，用Python脚本自动化硬件测试。\n\n### 2. 硬核科普与工具链\n- **芯片逆向入门**  \n  从拆解到逻辑分析，看懂一颗芯片的\"灵魂\"。\n  \n- **EDA工具指南**  \n  立创EDA、KiCad、Altium Designer的实战技巧与避坑手册。\n  \n- **行业观察**  \n  RISC-V生态崛起、半导体供应链危机背后的技术逻辑。\n\n---\n\n## 🌟 近期热门文章\n\n1. **[MM32G0001 Bootloader开发全指南](https://www.f123.club/posts/mm32-bootloader/)**  \n   手把手实现Cortex-M0芯片的固件空中升级！\n   \n2. **[C语言|函数指针作为结构体成员实现成员操作](https://www.f123.club/posts/c-function-pointer-in-struct/)**  \n   深入了解C语音机制的精妙之处。\n   \n3. **[基于VScode使用pyOCD进行单片机调试](https://www.f123.club/posts/pyocd-vscode-debug/)**  \n   探索新型调试工具的强大功能。\n\n---\n\n## 🤝 加入讨论，一起玩转技术！\n\n<center>🚀 **为什么关注这个博客？**</center>\n\n- **拒绝纸上谈兵**  \n  所有内容均经过实际项目验证，提供可复现的代码与数据。\n- **垂直深耕**  \n  专注电子技术领域，不做泛泛而谈的\"技术搬运工\"。\n\n---\n\n## 📬 联系与合作\n\n| 联系方式         | 地址/ID                               |\n|------------------|---------------------------------------|\n| 📧 **邮箱**       | [qingchunhuoli@live.com](mailto:qingchunhuoli@live.com) |\n| 💻 **GitHub**     | [MYxiaoyi](https://github.com/MYxiaoyi) |\n| 📺 **哔哩哔哩**   | 搜索\"MY_梦翼\"                          |\n| 💬 **QQ**         | 2028132607                            |\n\n\n\n{% externalLinkCard \"冯笑一小窝\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n\n{% heatMapCard %}\n\n---\n{% tagRoulette \"代码,电路,嵌入式,单片机,STM32,ESP32,Arduino,树莓派,物联网,机器人,电子制作,DIY,开源硬件,编程,电子设计,电子技术,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友\" \"🔧\" %}\n\n<center>*—— 在这里，电路与代码交织成诗，平凡器件亦可点亮星辰。*</center>","updated":"2025-07-17T03:23:55.381Z","path":"about/index.html","layout":"page","_id":"cmd71t80h00003cw69sfi6mdf","content":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>冯笑一 | 嵌入式工程师</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;500;700&family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\n    <style>      \n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-family: 'Noto Sans SC', sans-serif;\n            padding: 20px;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1000px;\n            width: 100%;\n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.1);\n            position: relative;\n            z-index: 1;\n        }\n        \n        /* 顶部装饰 */\n        .top-decoration {\n            height: 8px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n        }\n        \n        /* 头部区域 */\n        .header {\n            position: relative;\n            padding: 40px;\n            background: linear-gradient(rgba(255,255,255,0.95), rgba(255,255,255,0.95)), \n                        url('https://i.pinimg.com/564x/0c/76/7c/0c767c1d9b6d9f1b9b5b0b5c5e5b5b5b.jpg');\n            background-size: cover;\n            background-position: center;\n            text-align: center;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .avatar {\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            border: 5px solid white;\n            box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n            margin: 0 auto 20px;\n            background: linear-gradient(45deg, #ffffffff, #e0eafcff);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 60px;\n            font-weight: bold;\n            overflow: hidden; /* 隐藏图片超出圆形的部分 */\n        }\n        \n        .name {\n            font-size: 2.8rem;\n            font-weight: 700;\n            margin-bottom: 10px;\n            color: #2c3e50;\n            position: relative;\n            display: inline-block;\n        }\n        \n        .name::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(90deg, #6a11cb, #2575fc);\n            border-radius: 2px;\n        }\n        \n        .title {\n            font-size: 1.5rem;\n            color: #556270;\n            margin-bottom: 25px;\n        }\n        \n        .intro {\n            font-size: 1.2rem;\n            line-height: 1.8;\n            max-width: 800px;\n            margin: 0 auto;\n            color: #4a5568;\n            background: rgba(255,255,255,0.7);\n            padding: 20px;\n            border-radius: 15px;\n            backdrop-filter: blur(5px);\n            box-shadow: 0 5px 15px rgba(0,0,0,0.05);\n        }\n        \n        .highlight {\n            background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);\n            padding: 2px 8px;\n            border-radius: 5px;\n            font-weight: 600;\n        }\n        \n        /* 内容区域 */\n        .content {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n            padding: 40px;\n        }\n        \n        @media (max-width: 768px) {\n            .content {\n                grid-template-columns: 1fr;\n            }\n        }\n        \n        .card {\n            background: white;\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease;\n            border: 1px solid #f0f4f8;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);\n        }\n        \n        .card-title {\n            display: flex;\n            align-items: center;\n            font-size: 1.5rem;\n            margin-bottom: 25px;\n            color: #2c3e50;\n            padding-bottom: 15px;\n            border-bottom: 2px solid #f0f4f8;\n        }\n        \n        .card-title i {\n            margin-right: 12px;\n            color: #2575fc;\n        }\n        \n        /* 联系信息 */\n        .contact-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .contact-item {\n            display: flex;\n            align-items: center;\n            padding: 12px 0;\n        }\n        \n        .contact-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            flex-shrink: 0;\n        }\n        \n        .contact-icon i {\n            color: white;\n            font-size: 20px;\n        }\n        \n        .contact-details {\n            flex-grow: 1;\n        }\n        \n        .contact-label {\n            font-weight: 600;\n            color: #556270;\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n        \n        .contact-value {\n            font-size: 1.1rem;\n            color: #2c3e50;\n            font-weight: 500;\n        }\n        \n        /* 兴趣爱好 */\n        .hobby-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n        }\n        \n        .hobby-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            padding: 20px;\n            background: #f9fbfd;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n        \n        .hobby-item:hover {\n            background: #eef7ff;\n            transform: translateY(-3px);\n        }\n        \n        .hobby-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #4ecdc4 0%, #5563de 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 15px;\n            font-size: 24px;\n            color: white;\n        }\n        \n        .hobby-name {\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 5px;\n        }\n        \n        .hobby-desc {\n            font-size: 0.9rem;\n            color: #718096;\n        }\n        \n        /* 网站信息 */\n        .website-info {\n            grid-column: span 2;\n        }\n        \n        @media (max-width: 768px) {\n            .website-info {\n                grid-column: span 1;\n            }\n        }\n        \n        .tech-stack {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            flex-wrap: wrap;\n            margin: 25px 0;\n        }\n        \n        .tech-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        .tech-icon {\n            width: 60px;\n            height: 60px;\n            background: white;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n            margin-bottom: 10px;\n            font-size: 28px;\n            color: #2575fc;\n        }\n        \n        .tech-name {\n            font-weight: 600;\n            color: #4a5568;\n        }\n        \n        /* 底部区域 */\n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 30px;\n        }\n        \n        .social-links {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0 30px;\n        }\n        \n        .social-icon {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            background: rgba(255,255,255,0.1);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: all 0.3s ease;\n            color: white;\n            font-size: 20px;\n        }\n        \n        .social-icon:hover {\n            background: #2575fc;\n            transform: translateY(-5px);\n        }\n        \n        .copyright {\n            margin-top: 20px;\n            color: rgba(255,255,255,0.7);\n            font-size: 0.9rem;\n        }\n        \n        /* 二次元装饰元素 */\n        .anime-element {\n            position: absolute;\n            z-index: 0;\n        }\n        \n        .element-1 {\n            top: 50px;\n            left: 5%;\n            font-size: 50px;\n            transform: rotate(-15deg);\n            color: rgba(106, 17, 203, 0.1);\n        }\n        \n        .element-2 {\n            top: 100px;\n            right: 5%;\n            font-size: 40px;\n            transform: rotate(15deg);\n            color: rgba(37, 117, 252, 0.1);\n        }\n        \n        .element-3 {\n            bottom: 100px;\n            left: 10%;\n            font-size: 45px;\n            transform: rotate(10deg);\n            color: rgba(78, 205, 196, 0.1);\n        }\n        \n        .element-4 {\n            bottom: 150px;\n            right: 8%;\n            font-size: 55px;\n            transform: rotate(-10deg);\n            color: rgba(85, 99, 222, 0.1);\n        }\n        \n        /* 按钮样式 */\n        .blog-button {\n            display: inline-block;\n            margin-top: 25px;\n            padding: 12px 30px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n            color: white;\n            border-radius: 30px;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 1.1rem;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(37, 117, 252, 0.3);\n        }\n        \n        .blog-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(37, 117, 252, 0.4);\n        }\n        \n        .blog-button i {\n            margin-left: 8px;\n        }\n        \n        /* 动画效果 */\n        @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        .floating {\n            animation: float 4s ease-in-out infinite;\n        }\n    </style>\n</head>\n<bodydiv>\n    <!-- 二次元装饰元素 -->\n    <div class=\"anime-element element-1\">(>ω<)</div>\n    <div class=\"anime-element element-2\">(◕‿◕✿)</div>\n    <div class=\"anime-element element-3\">(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧</div>\n    <div class=\"anime-element element-4\">✧⁺⸜(●′▾‵●)⸝⁺✧</div>\n    \n    <div class=\"container\">\n        <div class=\"top-decoration\"></div>\n        \n        <div class=\"header\">\n            <div class=\"avatar floating\"><img src=\"/avatar/avatar.webp\" alt=\"冯\"/></div>\n            <h1 class=\"name\">冯笑一</h1>\n            <div class=\"title\">嵌入式软件工程师 | 二次元爱好者 | 原神玩家</div>\n            \n            <div class=\"intro\">\n                <p>你好！我是冯笑一，一名电子信息爱好者，在这里用代码、电路和奇思妙想构建我的\"数字乐园\"。</p>\n                <p>欢迎访问我的个人博客 <span class=\"highlight\">https://www.f123.club/</span>，这里记录了我在嵌入式开发、硬件设计、物联网探索中的点滴思考与实践。</p>\n                <p>如果你也痴迷于芯片的呼吸、电路的脉搏，这里或许能成为你的灵感加油站！</p>\n                \n                <a href=\"https://www.f123.club/\" class=\"blog-button\">\n                    访问我的博客 <i class=\"fas fa-arrow-right\"></i>\n                </a>\n            </div>\n        </div>\n        \n        <div class=\"content\">\n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-id-card\"></i> 联系信息</h2>\n                <div class=\"contact-grid\">\n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电子邮箱</div>\n                            <div class=\"contact-value\">qingchunhuoli@live.com</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-mobile-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电话</div>\n                            <div class=\"contact-value\">188-9694-7665</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-birthday-cake\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">生日</div>\n                            <div class=\"contact-value\">1999年6月29日</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-map-marker-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">所在地</div>\n                            <div class=\"contact-value\">中国 · 苏州</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-heart\"></i> 兴趣爱好</h2>\n                <div class=\"hobby-grid\">\n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-microchip\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">嵌入式开发</h3>\n                        <p class=\"hobby-desc\">探索微控制器与嵌入式系统的无限可能</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-gamepad\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">原神</h3>\n                        <p class=\"hobby-desc\">提瓦特大陆的忠实旅行者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-headphones\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">二次元文化</h3>\n                        <p class=\"hobby-desc\">动漫、漫画、游戏的深度爱好者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-laptop-code\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">物联网开发</h3>\n                        <p class=\"hobby-desc\">连接物理世界与数字世界</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card website-info\">\n                <h2 class=\"card-title\"><i class=\"fas fa-globe\"></i> 网站信息</h2>\n                <p>✨ 欢迎访问我的小窝欢迎━(*｀∀´*)ノ亻! ✨</p>\n                \n                <div class=\"tech-stack\"> \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fab fa-github\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-paint-brush\"></i>\n                        </div>\n                        <div class=\"tech-name\">Reimu主题</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-server\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub托管</div>\n                    </div>\n                </div>\n                \n                <p>本站使用 <span class=\"highlight\">Hexo</span> 静态网站生成器构建，采用 <span class=\"highlight\">Reimu</span> 主题，托管在 <span class=\"highlight\">GitHub Pages</span> 平台上。</p>\n                <p>博客内容主要涵盖嵌入式开发、硬件设计、物联网技术以及个人技术思考，同时也会分享一些二次元文化相关内容。</p>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 添加简单的悬浮动画效果\n        document.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('mouseenter', function() {\n                this.classList.add('floating');\n            });\n            \n            card.addEventListener('mouseleave', function() {\n                this.classList.remove('floating');\n            });\n        });\n    </script>\n</bodydiv>\n</html>\n\n<h2 id=\"我是谁\"><a class=\"markdownIt-Anchor\" href=\"#我是谁\"></a> 📌 我是谁？</h2>\n<ul>\n<li>\n<p><strong>硬核极客</strong><br />\n从焊接到开发智能家居系统，我与电子技术的故事始于童年，却永无终点。</p>\n</li>\n<li>\n<p><strong>开源信徒</strong><br />\n热爱分享代码和原理图，坚持用开源精神推动技术普惠。</p>\n</li>\n<li>\n<p><strong>跨界玩家</strong><br />\n横跨硬件与软件，从8位单片机到Linux嵌入式，从PCB设计到机器学习，拒绝被标签定义。</p>\n</li>\n</ul>\n<hr />\n<h2 id=\"在这里你能找到什么\"><a class=\"markdownIt-Anchor\" href=\"#在这里你能找到什么\"></a> 🔍 在这里，你能找到什么？</h2>\n<h3 id=\"1-嵌入式开发实战\"><a class=\"markdownIt-Anchor\" href=\"#1-嵌入式开发实战\"></a> 1. 嵌入式开发实战</h3>\n<ul>\n<li>\n<p><strong>ARM Cortex-M系列</strong><br />\n基于STM32、MM32的Bootloader开发、RTOS移植与低功耗优化。</p>\n</li>\n<li>\n<p><strong>硬件底层揭秘</strong><br />\n中断机制、DMA调优、外设驱动源码解析。</p>\n</li>\n<li>\n<p><strong>奇技淫巧</strong><br />\n用示波器捕捉电磁漏洞，用Python脚本自动化硬件测试。</p>\n</li>\n</ul>\n<h3 id=\"2-硬核科普与工具链\"><a class=\"markdownIt-Anchor\" href=\"#2-硬核科普与工具链\"></a> 2. 硬核科普与工具链</h3>\n<ul>\n<li>\n<p><strong>芯片逆向入门</strong><br />\n从拆解到逻辑分析，看懂一颗芯片的&quot;灵魂&quot;。</p>\n</li>\n<li>\n<p><strong>EDA工具指南</strong><br />\n立创EDA、KiCad、Altium Designer的实战技巧与避坑手册。</p>\n</li>\n<li>\n<p><strong>行业观察</strong><br />\nRISC-V生态崛起、半导体供应链危机背后的技术逻辑。</p>\n</li>\n</ul>\n<hr />\n<h2 id=\"近期热门文章\"><a class=\"markdownIt-Anchor\" href=\"#近期热门文章\"></a> 🌟 近期热门文章</h2>\n<ol>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/mm32-bootloader/\">MM32G0001 Bootloader开发全指南</a></strong><br />\n手把手实现Cortex-M0芯片的固件空中升级！</p>\n</li>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/c-function-pointer-in-struct/\">C语言|函数指针作为结构体成员实现成员操作</a></strong><br />\n深入了解C语音机制的精妙之处。</p>\n</li>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/pyocd-vscode-debug/\">基于VScode使用pyOCD进行单片机调试</a></strong><br />\n探索新型调试工具的强大功能。</p>\n</li>\n</ol>\n<hr />\n<h2 id=\"加入讨论一起玩转技术\"><a class=\"markdownIt-Anchor\" href=\"#加入讨论一起玩转技术\"></a> 🤝 加入讨论，一起玩转技术！</h2>\n<center>🚀 **为什么关注这个博客？**</center>\n<ul>\n<li><strong>拒绝纸上谈兵</strong><br />\n所有内容均经过实际项目验证，提供可复现的代码与数据。</li>\n<li><strong>垂直深耕</strong><br />\n专注电子技术领域，不做泛泛而谈的&quot;技术搬运工&quot;。</li>\n</ul>\n<hr />\n<h2 id=\"联系与合作\"><a class=\"markdownIt-Anchor\" href=\"#联系与合作\"></a> 📬 联系与合作</h2>\n<table>\n<thead>\n<tr>\n<th>联系方式</th>\n<th>地址/ID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>📧 <strong>邮箱</strong></td>\n<td><a href=\"mailto:qingchunhuoli@live.com\">qingchunhuoli@live.com</a></td>\n</tr>\n<tr>\n<td>💻 <strong>GitHub</strong></td>\n<td><a href=\"https://github.com/MYxiaoyi\">MYxiaoyi</a></td>\n</tr>\n<tr>\n<td>📺 <strong>哔哩哔哩</strong></td>\n<td>搜索&quot;MY_梦翼&quot;</td>\n</tr>\n<tr>\n<td>💬 <strong>QQ</strong></td>\n<td>2028132607</td>\n</tr>\n</tbody>\n</table>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/\" title=\"冯笑一小窝\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      <div class=\"post-link-card-cover-wrap\"><img src=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" class=\"no-lightbox\" title=\"冯笑一小窝\" alt=\"冯笑一小窝\"/></div>\n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">冯笑一小窝</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n<hr />\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🔧</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"代码,电路,嵌入式,单片机,STM32,ESP32,Arduino,树莓派,物联网,机器人,电子制作,DIY,开源硬件,编程,电子设计,电子技术,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  \n<center>*—— 在这里，电路与代码交织成诗，平凡器件亦可点亮星辰。*</center>","excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>冯笑一 | 嵌入式工程师</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;500;700&family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\n    <style>      \n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-family: 'Noto Sans SC', sans-serif;\n            padding: 20px;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1000px;\n            width: 100%;\n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.1);\n            position: relative;\n            z-index: 1;\n        }\n        \n        /* 顶部装饰 */\n        .top-decoration {\n            height: 8px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n        }\n        \n        /* 头部区域 */\n        .header {\n            position: relative;\n            padding: 40px;\n            background: linear-gradient(rgba(255,255,255,0.95), rgba(255,255,255,0.95)), \n                        url('https://i.pinimg.com/564x/0c/76/7c/0c767c1d9b6d9f1b9b5b0b5c5e5b5b5b.jpg');\n            background-size: cover;\n            background-position: center;\n            text-align: center;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .avatar {\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            border: 5px solid white;\n            box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n            margin: 0 auto 20px;\n            background: linear-gradient(45deg, #ffffffff, #e0eafcff);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 60px;\n            font-weight: bold;\n            overflow: hidden; /* 隐藏图片超出圆形的部分 */\n        }\n        \n        .name {\n            font-size: 2.8rem;\n            font-weight: 700;\n            margin-bottom: 10px;\n            color: #2c3e50;\n            position: relative;\n            display: inline-block;\n        }\n        \n        .name::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(90deg, #6a11cb, #2575fc);\n            border-radius: 2px;\n        }\n        \n        .title {\n            font-size: 1.5rem;\n            color: #556270;\n            margin-bottom: 25px;\n        }\n        \n        .intro {\n            font-size: 1.2rem;\n            line-height: 1.8;\n            max-width: 800px;\n            margin: 0 auto;\n            color: #4a5568;\n            background: rgba(255,255,255,0.7);\n            padding: 20px;\n            border-radius: 15px;\n            backdrop-filter: blur(5px);\n            box-shadow: 0 5px 15px rgba(0,0,0,0.05);\n        }\n        \n        .highlight {\n            background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);\n            padding: 2px 8px;\n            border-radius: 5px;\n            font-weight: 600;\n        }\n        \n        /* 内容区域 */\n        .content {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n            padding: 40px;\n        }\n        \n        @media (max-width: 768px) {\n            .content {\n                grid-template-columns: 1fr;\n            }\n        }\n        \n        .card {\n            background: white;\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease;\n            border: 1px solid #f0f4f8;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);\n        }\n        \n        .card-title {\n            display: flex;\n            align-items: center;\n            font-size: 1.5rem;\n            margin-bottom: 25px;\n            color: #2c3e50;\n            padding-bottom: 15px;\n            border-bottom: 2px solid #f0f4f8;\n        }\n        \n        .card-title i {\n            margin-right: 12px;\n            color: #2575fc;\n        }\n        \n        /* 联系信息 */\n        .contact-grid {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n        }\n        \n        .contact-item {\n            display: flex;\n            align-items: center;\n            padding: 12px 0;\n        }\n        \n        .contact-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            flex-shrink: 0;\n        }\n        \n        .contact-icon i {\n            color: white;\n            font-size: 20px;\n        }\n        \n        .contact-details {\n            flex-grow: 1;\n        }\n        \n        .contact-label {\n            font-weight: 600;\n            color: #556270;\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n        \n        .contact-value {\n            font-size: 1.1rem;\n            color: #2c3e50;\n            font-weight: 500;\n        }\n        \n        /* 兴趣爱好 */\n        .hobby-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n        }\n        \n        .hobby-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            padding: 20px;\n            background: #f9fbfd;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n        \n        .hobby-item:hover {\n            background: #eef7ff;\n            transform: translateY(-3px);\n        }\n        \n        .hobby-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #4ecdc4 0%, #5563de 100%);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 15px;\n            font-size: 24px;\n            color: white;\n        }\n        \n        .hobby-name {\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 5px;\n        }\n        \n        .hobby-desc {\n            font-size: 0.9rem;\n            color: #718096;\n        }\n        \n        /* 网站信息 */\n        .website-info {\n            grid-column: span 2;\n        }\n        \n        @media (max-width: 768px) {\n            .website-info {\n                grid-column: span 1;\n            }\n        }\n        \n        .tech-stack {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            flex-wrap: wrap;\n            margin: 25px 0;\n        }\n        \n        .tech-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        .tech-icon {\n            width: 60px;\n            height: 60px;\n            background: white;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n            margin-bottom: 10px;\n            font-size: 28px;\n            color: #2575fc;\n        }\n        \n        .tech-name {\n            font-weight: 600;\n            color: #4a5568;\n        }\n        \n        /* 底部区域 */\n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 30px;\n        }\n        \n        .social-links {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0 30px;\n        }\n        \n        .social-icon {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            background: rgba(255,255,255,0.1);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: all 0.3s ease;\n            color: white;\n            font-size: 20px;\n        }\n        \n        .social-icon:hover {\n            background: #2575fc;\n            transform: translateY(-5px);\n        }\n        \n        .copyright {\n            margin-top: 20px;\n            color: rgba(255,255,255,0.7);\n            font-size: 0.9rem;\n        }\n        \n        /* 二次元装饰元素 */\n        .anime-element {\n            position: absolute;\n            z-index: 0;\n        }\n        \n        .element-1 {\n            top: 50px;\n            left: 5%;\n            font-size: 50px;\n            transform: rotate(-15deg);\n            color: rgba(106, 17, 203, 0.1);\n        }\n        \n        .element-2 {\n            top: 100px;\n            right: 5%;\n            font-size: 40px;\n            transform: rotate(15deg);\n            color: rgba(37, 117, 252, 0.1);\n        }\n        \n        .element-3 {\n            bottom: 100px;\n            left: 10%;\n            font-size: 45px;\n            transform: rotate(10deg);\n            color: rgba(78, 205, 196, 0.1);\n        }\n        \n        .element-4 {\n            bottom: 150px;\n            right: 8%;\n            font-size: 55px;\n            transform: rotate(-10deg);\n            color: rgba(85, 99, 222, 0.1);\n        }\n        \n        /* 按钮样式 */\n        .blog-button {\n            display: inline-block;\n            margin-top: 25px;\n            padding: 12px 30px;\n            background: linear-gradient(90deg, #6b11cb97, #81adf8ff, #4ecdc4);\n            color: white;\n            border-radius: 30px;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 1.1rem;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(37, 117, 252, 0.3);\n        }\n        \n        .blog-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(37, 117, 252, 0.4);\n        }\n        \n        .blog-button i {\n            margin-left: 8px;\n        }\n        \n        /* 动画效果 */\n        @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        .floating {\n            animation: float 4s ease-in-out infinite;\n        }\n    </style>\n</head>\n<bodydiv>\n    <!-- 二次元装饰元素 -->\n    <div class=\"anime-element element-1\">(>ω<)</div>\n    <div class=\"anime-element element-2\">(◕‿◕✿)</div>\n    <div class=\"anime-element element-3\">(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧</div>\n    <div class=\"anime-element element-4\">✧⁺⸜(●′▾‵●)⸝⁺✧</div>\n    \n    <div class=\"container\">\n        <div class=\"top-decoration\"></div>\n        \n        <div class=\"header\">\n            <div class=\"avatar floating\"><img src=\"/avatar/avatar.webp\" alt=\"冯\"/></div>\n            <h1 class=\"name\">冯笑一</h1>\n            <div class=\"title\">嵌入式软件工程师 | 二次元爱好者 | 原神玩家</div>\n            \n            <div class=\"intro\">\n                <p>你好！我是冯笑一，一名电子信息爱好者，在这里用代码、电路和奇思妙想构建我的\"数字乐园\"。</p>\n                <p>欢迎访问我的个人博客 <span class=\"highlight\">https://www.f123.club/</span>，这里记录了我在嵌入式开发、硬件设计、物联网探索中的点滴思考与实践。</p>\n                <p>如果你也痴迷于芯片的呼吸、电路的脉搏，这里或许能成为你的灵感加油站！</p>\n                \n                <a href=\"https://www.f123.club/\" class=\"blog-button\">\n                    访问我的博客 <i class=\"fas fa-arrow-right\"></i>\n                </a>\n            </div>\n        </div>\n        \n        <div class=\"content\">\n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-id-card\"></i> 联系信息</h2>\n                <div class=\"contact-grid\">\n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-envelope\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电子邮箱</div>\n                            <div class=\"contact-value\">qingchunhuoli@live.com</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-mobile-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">电话</div>\n                            <div class=\"contact-value\">188-9694-7665</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-birthday-cake\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">生日</div>\n                            <div class=\"contact-value\">1999年6月29日</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"contact-item\">\n                        <div class=\"contact-icon\">\n                            <i class=\"fas fa-map-marker-alt\"></i>\n                        </div>\n                        <div class=\"contact-details\">\n                            <div class=\"contact-label\">所在地</div>\n                            <div class=\"contact-value\">中国 · 苏州</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card\">\n                <h2 class=\"card-title\"><i class=\"fas fa-heart\"></i> 兴趣爱好</h2>\n                <div class=\"hobby-grid\">\n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-microchip\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">嵌入式开发</h3>\n                        <p class=\"hobby-desc\">探索微控制器与嵌入式系统的无限可能</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-gamepad\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">原神</h3>\n                        <p class=\"hobby-desc\">提瓦特大陆的忠实旅行者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-headphones\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">二次元文化</h3>\n                        <p class=\"hobby-desc\">动漫、漫画、游戏的深度爱好者</p>\n                    </div>\n                    \n                    <div class=\"hobby-item\">\n                        <div class=\"hobby-icon\">\n                            <i class=\"fas fa-laptop-code\"></i>\n                        </div>\n                        <h3 class=\"hobby-name\">物联网开发</h3>\n                        <p class=\"hobby-desc\">连接物理世界与数字世界</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"card website-info\">\n                <h2 class=\"card-title\"><i class=\"fas fa-globe\"></i> 网站信息</h2>\n                <p>✨ 欢迎访问我的小窝欢迎━(*｀∀´*)ノ亻! ✨</p>\n                \n                <div class=\"tech-stack\"> \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fab fa-github\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-paint-brush\"></i>\n                        </div>\n                        <div class=\"tech-name\">Reimu主题</div>\n                    </div>\n                    \n                    <div class=\"tech-item\">\n                        <div class=\"tech-icon\">\n                            <i class=\"fas fa-server\"></i>\n                        </div>\n                        <div class=\"tech-name\">GitHub托管</div>\n                    </div>\n                </div>\n                \n                <p>本站使用 <span class=\"highlight\">Hexo</span> 静态网站生成器构建，采用 <span class=\"highlight\">Reimu</span> 主题，托管在 <span class=\"highlight\">GitHub Pages</span> 平台上。</p>\n                <p>博客内容主要涵盖嵌入式开发、硬件设计、物联网技术以及个人技术思考，同时也会分享一些二次元文化相关内容。</p>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 添加简单的悬浮动画效果\n        document.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('mouseenter', function() {\n                this.classList.add('floating');\n            });\n            \n            card.addEventListener('mouseleave', function() {\n                this.classList.remove('floating');\n            });\n        });\n    </script>\n</bodydiv>\n</html>\n\n<h2 id=\"我是谁\"><a class=\"markdownIt-Anchor\" href=\"#我是谁\"></a> 📌 我是谁？</h2>\n<ul>\n<li>\n<p><strong>硬核极客</strong><br />\n从焊接到开发智能家居系统，我与电子技术的故事始于童年，却永无终点。</p>\n</li>\n<li>\n<p><strong>开源信徒</strong><br />\n热爱分享代码和原理图，坚持用开源精神推动技术普惠。</p>\n</li>\n<li>\n<p><strong>跨界玩家</strong><br />\n横跨硬件与软件，从8位单片机到Linux嵌入式，从PCB设计到机器学习，拒绝被标签定义。</p>\n</li>\n</ul>\n<hr />\n<h2 id=\"在这里你能找到什么\"><a class=\"markdownIt-Anchor\" href=\"#在这里你能找到什么\"></a> 🔍 在这里，你能找到什么？</h2>\n<h3 id=\"1-嵌入式开发实战\"><a class=\"markdownIt-Anchor\" href=\"#1-嵌入式开发实战\"></a> 1. 嵌入式开发实战</h3>\n<ul>\n<li>\n<p><strong>ARM Cortex-M系列</strong><br />\n基于STM32、MM32的Bootloader开发、RTOS移植与低功耗优化。</p>\n</li>\n<li>\n<p><strong>硬件底层揭秘</strong><br />\n中断机制、DMA调优、外设驱动源码解析。</p>\n</li>\n<li>\n<p><strong>奇技淫巧</strong><br />\n用示波器捕捉电磁漏洞，用Python脚本自动化硬件测试。</p>\n</li>\n</ul>\n<h3 id=\"2-硬核科普与工具链\"><a class=\"markdownIt-Anchor\" href=\"#2-硬核科普与工具链\"></a> 2. 硬核科普与工具链</h3>\n<ul>\n<li>\n<p><strong>芯片逆向入门</strong><br />\n从拆解到逻辑分析，看懂一颗芯片的&quot;灵魂&quot;。</p>\n</li>\n<li>\n<p><strong>EDA工具指南</strong><br />\n立创EDA、KiCad、Altium Designer的实战技巧与避坑手册。</p>\n</li>\n<li>\n<p><strong>行业观察</strong><br />\nRISC-V生态崛起、半导体供应链危机背后的技术逻辑。</p>\n</li>\n</ul>\n<hr />\n<h2 id=\"近期热门文章\"><a class=\"markdownIt-Anchor\" href=\"#近期热门文章\"></a> 🌟 近期热门文章</h2>\n<ol>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/mm32-bootloader/\">MM32G0001 Bootloader开发全指南</a></strong><br />\n手把手实现Cortex-M0芯片的固件空中升级！</p>\n</li>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/c-function-pointer-in-struct/\">C语言|函数指针作为结构体成员实现成员操作</a></strong><br />\n深入了解C语音机制的精妙之处。</p>\n</li>\n<li>\n<p><strong><a href=\"https://www.f123.club/posts/pyocd-vscode-debug/\">基于VScode使用pyOCD进行单片机调试</a></strong><br />\n探索新型调试工具的强大功能。</p>\n</li>\n</ol>\n<hr />\n<h2 id=\"加入讨论一起玩转技术\"><a class=\"markdownIt-Anchor\" href=\"#加入讨论一起玩转技术\"></a> 🤝 加入讨论，一起玩转技术！</h2>\n<center>🚀 **为什么关注这个博客？**</center>\n<ul>\n<li><strong>拒绝纸上谈兵</strong><br />\n所有内容均经过实际项目验证，提供可复现的代码与数据。</li>\n<li><strong>垂直深耕</strong><br />\n专注电子技术领域，不做泛泛而谈的&quot;技术搬运工&quot;。</li>\n</ul>\n<hr />\n<h2 id=\"联系与合作\"><a class=\"markdownIt-Anchor\" href=\"#联系与合作\"></a> 📬 联系与合作</h2>\n<table>\n<thead>\n<tr>\n<th>联系方式</th>\n<th>地址/ID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>📧 <strong>邮箱</strong></td>\n<td><a href=\"mailto:qingchunhuoli@live.com\">qingchunhuoli@live.com</a></td>\n</tr>\n<tr>\n<td>💻 <strong>GitHub</strong></td>\n<td><a href=\"https://github.com/MYxiaoyi\">MYxiaoyi</a></td>\n</tr>\n<tr>\n<td>📺 <strong>哔哩哔哩</strong></td>\n<td>搜索&quot;MY_梦翼&quot;</td>\n</tr>\n<tr>\n<td>💬 <strong>QQ</strong></td>\n<td>2028132607</td>\n</tr>\n</tbody>\n</table>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/\" title=\"冯笑一小窝\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      <div class=\"post-link-card-cover-wrap\"><img src=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" class=\"no-lightbox\" title=\"冯笑一小窝\" alt=\"冯笑一小窝\"/></div>\n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">冯笑一小窝</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n<hr />\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🔧</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"代码,电路,嵌入式,单片机,STM32,ESP32,Arduino,树莓派,物联网,机器人,电子制作,DIY,开源硬件,编程,电子设计,电子技术,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友,电子工程师,电子爱好者,电子发烧友\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  \n<center>*—— 在这里，电路与代码交织成诗，平凡器件亦可点亮星辰。*</center>"},{"_content":"font-icon = \"iconfont\"\nid = hexo-config(\"icon_font\")\n_a = '//at.alicdn.com/t/c/font_' + id + '.woff2'\n@font-face\n  font-family: font-icon;\n  src: url(_a) format('woff2');\n  font-display: swap;\n\n.archives-tag-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e622\"\n\n.archives-category-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e604\"\n\n.article-date-link\n  &:before\n    font-family: font-icon\n    content: \"\\e606\"\n\n.article-category-link\n  &:before\n    font-family: font-icon\n    content: \"\\e604\"\n\n.article-tag-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e622\"\n\n.article-comment-link\n  &:before\n    font-family: font-icon\n    content: \"\\e608\"\n\n.icon-copyright\n  &:before\n    font-family: font-icon\n    content: \"\\e60a\"\n\n.icon-brush\n  &:before\n    font-family: font-icon\n    content: \"\\e618\"\n\n.icon-coffee\n  &:before\n    font-family: font-icon\n    content: \"\\e607\"\n\n.icon-eye\n  &:before\n    font-family: font-icon\n    content: \"\\e60f\"\n\n.icon-user\n  &:before\n    font-family: font-icon\n    content: \"\\e628\"\n\n#main-nav-toggle\n  &:before\n    font-family: font-icon\n    content: \"\\e62f\"\n\n#nav-rss-link\n  &:before\n    font-family: font-icon\n    content: \"\\e61f\"\n\n#nav-search-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e631\"\n\n#nav-sun-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e621\"\n\n#nav-moon-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e617\"\n\n#nav-circle-half-stroke-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e641\"\n\n#nav-language-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e642\"\n\n.icon-copy\n  &:before\n    font-family: font-icon\n    content: \"\\e60c\"\n\n.icon-chevron-down\n  &:before\n    font-family: font-icon\n    content: \"\\e609\"\n\n.icon-check\n  &:before\n    font-family: font-icon\n    content: \"\\e636\"\n\n.icon-times\n  &:before\n    font-family: font-icon\n    content: \"\\e637\"\n\n.icon-calendar\n  &:before\n    font-family: font-icon\n    content: \"\\e605\"\n\n.icon-pencil\n  &:before\n    font-family: font-icon\n    content: \"\\e61b\"\n\n.icon-clock\n  &:before\n    font-family: font-icon\n    content: \"\\e613\"\n\n.post-sticky\n  &:before\n    font-family: font-icon\n    content:\"\\e627\"\n\n.popup-btn-close\n  &:before\n    font-family: font-icon\n    content: \"\\e626\"\n\n.reimu-search-input-icon\n  &:before\n    font-family: font-icon\n    content: \"\\e631\"\n\n.ais-pagination--item__previous\n  a\n    &:before\n      font-family: font-icon\n      content: \"\\e601\"\n\n.ais-pagination--item__next\n  a\n    &:before\n      font-family: font-icon\n      content: \"\\e630\"\n\nif ('github' in social-keys)\n  .icon-github\n    &:before\n      content: \"\\e619\"\n\nif ('google' in social-keys)\n  .icon-google\n    &:before\n      content: \"\\e611\"\n\nif ('facebook' in social-keys) || ('facebook' in share-keys)\n  .icon-facebook\n    &:before\n      content: \"\\e60e\"\n\nif ('twitter' in social-keys) || ('twitter' in share-keys)\n  .icon-twitter\n    &:before\n      content: \"\\e62a\"\n\nif ('instagram' in social-keys)\n  .icon-instagram\n    &:before\n      content: \"\\e615\"\n\nif ('linkedin' in social-keys) || ('linkedin' in share-keys)\n  .icon-linkedin\n    &:before\n      content: \"\\e614\"\n\nif ('pinterest' in social-keys)\n  .icon-pinterest\n    &:before\n      content: \"\\e61a\"\n\nif ('youtube' in social-keys)\n  .icon-youtube\n    &:before\n      content: \"\\e62d\"\n\nif ('vimeo' in social-keys)\n  .icon-vimeo\n    &:before\n      content: \"\\e629\"\n\nif ('flickr' in social-keys)\n  .icon-flickr\n    &:before\n      content: \"\\e612\"\n\nif ('dribbble' in social-keys)\n  .icon-dribbble\n    &:before\n      content: \"\\e610\"\n\nif ('behance' in social-keys)\n  .icon-behance\n    &:before\n      content: \"\\e602\"\n\nif ('bilibili' in social-keys)\n  .icon-bilibili\n    &:before\n      content: \"\\e603\"\n\nif ('weibo' in social-keys) || ('weibo' in share-keys)\n  .icon-weibo\n    &:before\n      content: \"\\e62c\"\n\nif ('zhihu' in social-keys)\n  .icon-zhihu\n    &:before\n      content: \"\\e62e\"\n\nif ('reddit' in social-keys) || ('reddit' in share-keys)\n  .icon-reddit\n    &:before\n      content: \"\\e61c\"\n\nif ('tumblr' in social-keys)\n  .icon-tumblr\n    &:before\n      content: \"\\e625\"\n\nif ('medium' in social-keys)\n  .icon-medium\n    &:before\n      content: \"\\e616\"\n\nif ('deviantart' in social-keys)\n  .icon-deviantart\n    &:before\n      content: \"\\e60b\"\n\nif ('stackoverflow' in social-keys)\n  .icon-stackoverflow\n    &:before\n      content: \"\\e620\"\n\nif ('keybase' in social-keys)\n  .icon-keybase\n    &:before\n      content: \"\\e61e\"\n\nif ('telegram' in social-keys)\n  .icon-telegram\n    &:before\n      content: \"\\e623\"\n\nif ('discord' in social-keys)\n  .icon-discord\n    &:before\n      content: \"\\e60d\"\n\nif ('steam' in social-keys)\n  .icon-steam\n    &:before\n      content: \"\\e624\"\n\nif ('email' in social-keys)\n  .icon-email\n    &:before\n      content: \"\\e63c\"\n\n.sidebar-btn-wrapper\n  .sidebar-toc-btn\n    &:before\n      font-family: font-icon\n      content: \"\\e633\"\n\n  .sidebar-common-btn\n    &:before\n      font-family: font-icon\n      content: \"\\e632\"\n\n.sidebar-top\n  .arrow-up\n    &:before\n      font-family: font-icon\n      content: \"\\e634\"\n\n.icon-link\n  &:before\n    font-family: font-icon\n    content: \"\\e639\"\n\n.icon-globe\n  &:before\n    font-family: font-icon\n    content: \"\\e638\"\n\n.icon-creative-commons\n  &:before\n    font-family: font-icon\n    content: \"\\e63a\"\n\n.icon-taichi\n  &:before\n    font-family: font-icon\n    content: \"\\e62b\"\n\nif ('weixin' in share-keys)\n  .icon-weixin\n    &:before\n      font-family: font-icon\n      content: \"\\e640\"\n\nif ('qq' in share-keys)\n  .icon-qq\n    &:before\n      font-family: font-icon\n      content: \"\\e63e\"\n\n.icon-image\n  &:before\n    font-family: font-icon\n    content: \"\\e63f\"\n\n.icon\n  font-family: font-icon","source":"css/iconfont.styl","raw":"font-icon = \"iconfont\"\nid = hexo-config(\"icon_font\")\n_a = '//at.alicdn.com/t/c/font_' + id + '.woff2'\n@font-face\n  font-family: font-icon;\n  src: url(_a) format('woff2');\n  font-display: swap;\n\n.archives-tag-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e622\"\n\n.archives-category-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e604\"\n\n.article-date-link\n  &:before\n    font-family: font-icon\n    content: \"\\e606\"\n\n.article-category-link\n  &:before\n    font-family: font-icon\n    content: \"\\e604\"\n\n.article-tag-list-link\n  &:before\n    font-family: font-icon\n    content: \"\\e622\"\n\n.article-comment-link\n  &:before\n    font-family: font-icon\n    content: \"\\e608\"\n\n.icon-copyright\n  &:before\n    font-family: font-icon\n    content: \"\\e60a\"\n\n.icon-brush\n  &:before\n    font-family: font-icon\n    content: \"\\e618\"\n\n.icon-coffee\n  &:before\n    font-family: font-icon\n    content: \"\\e607\"\n\n.icon-eye\n  &:before\n    font-family: font-icon\n    content: \"\\e60f\"\n\n.icon-user\n  &:before\n    font-family: font-icon\n    content: \"\\e628\"\n\n#main-nav-toggle\n  &:before\n    font-family: font-icon\n    content: \"\\e62f\"\n\n#nav-rss-link\n  &:before\n    font-family: font-icon\n    content: \"\\e61f\"\n\n#nav-search-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e631\"\n\n#nav-sun-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e621\"\n\n#nav-moon-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e617\"\n\n#nav-circle-half-stroke-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e641\"\n\n#nav-language-btn\n  &:before\n    font-family: font-icon\n    content: \"\\e642\"\n\n.icon-copy\n  &:before\n    font-family: font-icon\n    content: \"\\e60c\"\n\n.icon-chevron-down\n  &:before\n    font-family: font-icon\n    content: \"\\e609\"\n\n.icon-check\n  &:before\n    font-family: font-icon\n    content: \"\\e636\"\n\n.icon-times\n  &:before\n    font-family: font-icon\n    content: \"\\e637\"\n\n.icon-calendar\n  &:before\n    font-family: font-icon\n    content: \"\\e605\"\n\n.icon-pencil\n  &:before\n    font-family: font-icon\n    content: \"\\e61b\"\n\n.icon-clock\n  &:before\n    font-family: font-icon\n    content: \"\\e613\"\n\n.post-sticky\n  &:before\n    font-family: font-icon\n    content:\"\\e627\"\n\n.popup-btn-close\n  &:before\n    font-family: font-icon\n    content: \"\\e626\"\n\n.reimu-search-input-icon\n  &:before\n    font-family: font-icon\n    content: \"\\e631\"\n\n.ais-pagination--item__previous\n  a\n    &:before\n      font-family: font-icon\n      content: \"\\e601\"\n\n.ais-pagination--item__next\n  a\n    &:before\n      font-family: font-icon\n      content: \"\\e630\"\n\nif ('github' in social-keys)\n  .icon-github\n    &:before\n      content: \"\\e619\"\n\nif ('google' in social-keys)\n  .icon-google\n    &:before\n      content: \"\\e611\"\n\nif ('facebook' in social-keys) || ('facebook' in share-keys)\n  .icon-facebook\n    &:before\n      content: \"\\e60e\"\n\nif ('twitter' in social-keys) || ('twitter' in share-keys)\n  .icon-twitter\n    &:before\n      content: \"\\e62a\"\n\nif ('instagram' in social-keys)\n  .icon-instagram\n    &:before\n      content: \"\\e615\"\n\nif ('linkedin' in social-keys) || ('linkedin' in share-keys)\n  .icon-linkedin\n    &:before\n      content: \"\\e614\"\n\nif ('pinterest' in social-keys)\n  .icon-pinterest\n    &:before\n      content: \"\\e61a\"\n\nif ('youtube' in social-keys)\n  .icon-youtube\n    &:before\n      content: \"\\e62d\"\n\nif ('vimeo' in social-keys)\n  .icon-vimeo\n    &:before\n      content: \"\\e629\"\n\nif ('flickr' in social-keys)\n  .icon-flickr\n    &:before\n      content: \"\\e612\"\n\nif ('dribbble' in social-keys)\n  .icon-dribbble\n    &:before\n      content: \"\\e610\"\n\nif ('behance' in social-keys)\n  .icon-behance\n    &:before\n      content: \"\\e602\"\n\nif ('bilibili' in social-keys)\n  .icon-bilibili\n    &:before\n      content: \"\\e603\"\n\nif ('weibo' in social-keys) || ('weibo' in share-keys)\n  .icon-weibo\n    &:before\n      content: \"\\e62c\"\n\nif ('zhihu' in social-keys)\n  .icon-zhihu\n    &:before\n      content: \"\\e62e\"\n\nif ('reddit' in social-keys) || ('reddit' in share-keys)\n  .icon-reddit\n    &:before\n      content: \"\\e61c\"\n\nif ('tumblr' in social-keys)\n  .icon-tumblr\n    &:before\n      content: \"\\e625\"\n\nif ('medium' in social-keys)\n  .icon-medium\n    &:before\n      content: \"\\e616\"\n\nif ('deviantart' in social-keys)\n  .icon-deviantart\n    &:before\n      content: \"\\e60b\"\n\nif ('stackoverflow' in social-keys)\n  .icon-stackoverflow\n    &:before\n      content: \"\\e620\"\n\nif ('keybase' in social-keys)\n  .icon-keybase\n    &:before\n      content: \"\\e61e\"\n\nif ('telegram' in social-keys)\n  .icon-telegram\n    &:before\n      content: \"\\e623\"\n\nif ('discord' in social-keys)\n  .icon-discord\n    &:before\n      content: \"\\e60d\"\n\nif ('steam' in social-keys)\n  .icon-steam\n    &:before\n      content: \"\\e624\"\n\nif ('email' in social-keys)\n  .icon-email\n    &:before\n      content: \"\\e63c\"\n\n.sidebar-btn-wrapper\n  .sidebar-toc-btn\n    &:before\n      font-family: font-icon\n      content: \"\\e633\"\n\n  .sidebar-common-btn\n    &:before\n      font-family: font-icon\n      content: \"\\e632\"\n\n.sidebar-top\n  .arrow-up\n    &:before\n      font-family: font-icon\n      content: \"\\e634\"\n\n.icon-link\n  &:before\n    font-family: font-icon\n    content: \"\\e639\"\n\n.icon-globe\n  &:before\n    font-family: font-icon\n    content: \"\\e638\"\n\n.icon-creative-commons\n  &:before\n    font-family: font-icon\n    content: \"\\e63a\"\n\n.icon-taichi\n  &:before\n    font-family: font-icon\n    content: \"\\e62b\"\n\nif ('weixin' in share-keys)\n  .icon-weixin\n    &:before\n      font-family: font-icon\n      content: \"\\e640\"\n\nif ('qq' in share-keys)\n  .icon-qq\n    &:before\n      font-family: font-icon\n      content: \"\\e63e\"\n\n.icon-image\n  &:before\n    font-family: font-icon\n    content: \"\\e63f\"\n\n.icon\n  font-family: font-icon","date":"2025-07-15T08:57:03.813Z","updated":"2025-07-15T08:57:03.813Z","path":"css/iconfont.css","layout":"false","title":"","comments":1,"_id":"cmd71t80l00023cw6cty50bl5","content":"@font-face {\n  font-family: \"iconfont\";\n  src: url(\"//at.alicdn.com/t/c/font_4552607_0khxww3tj3q9.woff2\") format('woff2');\n  font-display: swap;\n}\n.archives-tag-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e622\";\n}\n.archives-category-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e604\";\n}\n.article-date-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e606\";\n}\n.article-category-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e604\";\n}\n.article-tag-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e622\";\n}\n.article-comment-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e608\";\n}\n.icon-copyright:before {\n  font-family: \"iconfont\";\n  content: \"\\e60a\";\n}\n.icon-brush:before {\n  font-family: \"iconfont\";\n  content: \"\\e618\";\n}\n.icon-coffee:before {\n  font-family: \"iconfont\";\n  content: \"\\e607\";\n}\n.icon-eye:before {\n  font-family: \"iconfont\";\n  content: \"\\e60f\";\n}\n.icon-user:before {\n  font-family: \"iconfont\";\n  content: \"\\e628\";\n}\n#main-nav-toggle:before {\n  font-family: \"iconfont\";\n  content: \"\\e62f\";\n}\n#nav-rss-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e61f\";\n}\n#nav-search-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e631\";\n}\n#nav-sun-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e621\";\n}\n#nav-moon-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e617\";\n}\n#nav-circle-half-stroke-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e641\";\n}\n#nav-language-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e642\";\n}\n.icon-copy:before {\n  font-family: \"iconfont\";\n  content: \"\\e60c\";\n}\n.icon-chevron-down:before {\n  font-family: \"iconfont\";\n  content: \"\\e609\";\n}\n.icon-check:before {\n  font-family: \"iconfont\";\n  content: \"\\e636\";\n}\n.icon-times:before {\n  font-family: \"iconfont\";\n  content: \"\\e637\";\n}\n.icon-calendar:before {\n  font-family: \"iconfont\";\n  content: \"\\e605\";\n}\n.icon-pencil:before {\n  font-family: \"iconfont\";\n  content: \"\\e61b\";\n}\n.icon-clock:before {\n  font-family: \"iconfont\";\n  content: \"\\e613\";\n}\n.post-sticky:before {\n  font-family: \"iconfont\";\n  content: \"\\e627\";\n}\n.popup-btn-close:before {\n  font-family: \"iconfont\";\n  content: \"\\e626\";\n}\n.reimu-search-input-icon:before {\n  font-family: \"iconfont\";\n  content: \"\\e631\";\n}\n.ais-pagination--item__previous a:before {\n  font-family: \"iconfont\";\n  content: \"\\e601\";\n}\n.ais-pagination--item__next a:before {\n  font-family: \"iconfont\";\n  content: \"\\e630\";\n}\n.icon-github:before {\n  content: \"\\e619\";\n}\n.icon-bilibili:before {\n  content: \"\\e603\";\n}\n.icon-email:before {\n  content: \"\\e63c\";\n}\n.sidebar-btn-wrapper .sidebar-toc-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e633\";\n}\n.sidebar-btn-wrapper .sidebar-common-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e632\";\n}\n.sidebar-top .arrow-up:before {\n  font-family: \"iconfont\";\n  content: \"\\e634\";\n}\n.icon-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e639\";\n}\n.icon-globe:before {\n  font-family: \"iconfont\";\n  content: \"\\e638\";\n}\n.icon-creative-commons:before {\n  font-family: \"iconfont\";\n  content: \"\\e63a\";\n}\n.icon-taichi:before {\n  font-family: \"iconfont\";\n  content: \"\\e62b\";\n}\n.icon-weixin:before {\n  font-family: \"iconfont\";\n  content: \"\\e640\";\n}\n.icon-qq:before {\n  font-family: \"iconfont\";\n  content: \"\\e63e\";\n}\n.icon-image:before {\n  font-family: \"iconfont\";\n  content: \"\\e63f\";\n}\n.icon {\n  font-family: \"iconfont\";\n}\n"},{"_content":":root\n  --font-icon: \"Font Awesome 6 Free\", \"Font Awesome 6 Brands\", \"Font Awesome 5 Free\", \"Font Awesome 5 Brands\", \"FontAwesome\"\n\n.archives-tag-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02b\"\n\n.archives-category-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02e\"\n\n.article-date-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f017\"\n\n.article-category-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02e\"\n\n.article-tag-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02b\"\n\n.article-comment-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f075\"\n\n.icon-copyright\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1f9\"\n\n.icon-brush\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1fc\"\n\n.icon-coffee\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0f4\"\n\n.icon-eye\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f06e\"\n\n.icon-user\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f007\"\n\n#main-nav-toggle\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c9\"\n\n#nav-rss-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f09e\"\n\n#nav-search-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f002\"\n\n#nav-sun-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f185\"\n\n#nav-moon-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f186\"\n\n#nav-circle-half-stroke-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f042\"\n\n#nav-language-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1ab\"\n\n.icon-copy\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c5\"\n\n.icon-chevron-down\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f078\"\n\n.icon-check\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f00c\"\n\n.icon-times\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f00d\"\n\n.icon-calendar\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f073\"\n\n.icon-pencil\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f5ad\"\n\n.icon-clock\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f252\"\n\n.post-sticky\n  &:before\n    font-family: var(--font-icon)\n    content:\"\\f164\"\n\n.popup-btn-close\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f057\"\n\n.reimu-search-input-icon\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f002\"\n\n.ais-pagination--item__previous\n  a\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f104\"\n\n.ais-pagination--item__next\n  a\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f105\"\n\nif ('github' in social-keys)\n  .icon-github\n    &:before\n      content: \"\\f09b\"\n\nif ('google' in social-keys)\n  .icon-google\n    &:before\n      content: \"\\f0d5\"\n\nif ('facebook' in social-keys) || ('facebook' in share-keys)\n  .icon-facebook\n    &:before\n      content: \"\\f09a\"\n\nif ('twitter' in social-keys) || ('twitter' in share-keys)\n  .icon-twitter\n    &:before\n      content: \"\\e61b\"\n\nif ('instagram' in social-keys)\n  .icon-instagram\n    &:before\n      content: \"\\f16d\"\n\nif ('linkedin' in social-keys) || ('linkedin' in share-keys)\n  .icon-linkedin\n    &:before\n      content: \"\\f08c\"\n\nif ('pinterest' in social-keys)\n  .icon-pinterest\n    &:before\n      content: \"\\f0d2\"\n\nif ('youtube' in social-keys)\n  .icon-youtube\n    &:before\n      content: \"\\f167\"\n\nif ('vimeo' in social-keys)\n  .icon-vimeo\n    &:before\n      content: \"\\f194\"\n\nif ('flickr' in social-keys)\n  .icon-flickr\n    &:before\n      content: \"\\f16e\"\n\nif ('dribbble' in social-keys)\n  .icon-dribbble\n    &:before\n      content: \"\\f17d\"\n\nif ('behance' in social-keys)\n  .icon-behance\n    &:before\n      content: \"\\f1b4\"\n\nif ('bilibili' in social-keys)\n  .icon-bilibili\n    &:before\n      content: \"\\e3d9\"\n\nif ('weibo' in social-keys) || ('weibo' in share-keys)\n  .icon-weibo\n    &:before\n      content: \"\\f18a\"\n\nif ('zhihu' in social-keys)\n  .icon-zhihu\n    &:before\n      content: \"\\f63f\"\n\nif ('reddit' in social-keys) || ('reddit' in share-keys)\n  .icon-reddit\n    &:before\n      content: \"\\f1a1\"\n\nif ('tumblr' in social-keys)\n  .icon-tumblr\n    &:before\n      content: \"\\f173\"\n\nif ('medium' in social-keys)\n  .icon-medium\n    &:before\n      content: \"\\f23a\"\n\nif ('deviantart' in social-keys)\n  .icon-deviantart\n    &:before\n      content: \"\\f1bd\"\n\nif ('stackoverflow' in social-keys)\n  .icon-stackoverflow\n    &:before\n      content: \"\\f16c\"\n\nif ('keybase' in social-keys)\n  .icon-keybase\n    &:before\n      content: \"\\f4f5\"\n\nif ('telegram' in social-keys)\n  .icon-telegram\n    &:before\n      content: \"\\f2c6\"\n\nif ('discord' in social-keys)\n  .icon-discord\n    &:before\n      content: \"\\f392\"\n\nif ('steam' in social-keys)\n  .icon-steam\n    &:before\n      content: \"\\f1b6\"\n\nif ('email' in social-keys)\n  .icon-email\n    &:before\n      content: \"\\f0e0\"\n\n.sidebar-btn-wrapper\n  .sidebar-toc-btn\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f0e8\"\n\n  .sidebar-common-btn\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\e3af\"\n\n.sidebar-top\n  .arrow-up\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f062\"\n\n.icon-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c1\"\n\n.icon-globe\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0ac\"\n\n.icon-creative-commons\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f25e\"\n\n.icon-taichi\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f6ad\"\n\nif ('weixin' in share-keys)\n  .icon-weixin\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f1d7\"\n\nif ('qq' in share-keys)\n  .icon-qq\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f1d6\"\n\n.icon-image\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f03e\"\n\n.icon\n  font-family: var(--font-icon)","source":"css/fontawesome.styl","raw":":root\n  --font-icon: \"Font Awesome 6 Free\", \"Font Awesome 6 Brands\", \"Font Awesome 5 Free\", \"Font Awesome 5 Brands\", \"FontAwesome\"\n\n.archives-tag-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02b\"\n\n.archives-category-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02e\"\n\n.article-date-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f017\"\n\n.article-category-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02e\"\n\n.article-tag-list-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f02b\"\n\n.article-comment-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f075\"\n\n.icon-copyright\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1f9\"\n\n.icon-brush\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1fc\"\n\n.icon-coffee\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0f4\"\n\n.icon-eye\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f06e\"\n\n.icon-user\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f007\"\n\n#main-nav-toggle\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c9\"\n\n#nav-rss-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f09e\"\n\n#nav-search-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f002\"\n\n#nav-sun-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f185\"\n\n#nav-moon-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f186\"\n\n#nav-circle-half-stroke-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f042\"\n\n#nav-language-btn\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f1ab\"\n\n.icon-copy\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c5\"\n\n.icon-chevron-down\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f078\"\n\n.icon-check\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f00c\"\n\n.icon-times\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f00d\"\n\n.icon-calendar\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f073\"\n\n.icon-pencil\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f5ad\"\n\n.icon-clock\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f252\"\n\n.post-sticky\n  &:before\n    font-family: var(--font-icon)\n    content:\"\\f164\"\n\n.popup-btn-close\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f057\"\n\n.reimu-search-input-icon\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f002\"\n\n.ais-pagination--item__previous\n  a\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f104\"\n\n.ais-pagination--item__next\n  a\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f105\"\n\nif ('github' in social-keys)\n  .icon-github\n    &:before\n      content: \"\\f09b\"\n\nif ('google' in social-keys)\n  .icon-google\n    &:before\n      content: \"\\f0d5\"\n\nif ('facebook' in social-keys) || ('facebook' in share-keys)\n  .icon-facebook\n    &:before\n      content: \"\\f09a\"\n\nif ('twitter' in social-keys) || ('twitter' in share-keys)\n  .icon-twitter\n    &:before\n      content: \"\\e61b\"\n\nif ('instagram' in social-keys)\n  .icon-instagram\n    &:before\n      content: \"\\f16d\"\n\nif ('linkedin' in social-keys) || ('linkedin' in share-keys)\n  .icon-linkedin\n    &:before\n      content: \"\\f08c\"\n\nif ('pinterest' in social-keys)\n  .icon-pinterest\n    &:before\n      content: \"\\f0d2\"\n\nif ('youtube' in social-keys)\n  .icon-youtube\n    &:before\n      content: \"\\f167\"\n\nif ('vimeo' in social-keys)\n  .icon-vimeo\n    &:before\n      content: \"\\f194\"\n\nif ('flickr' in social-keys)\n  .icon-flickr\n    &:before\n      content: \"\\f16e\"\n\nif ('dribbble' in social-keys)\n  .icon-dribbble\n    &:before\n      content: \"\\f17d\"\n\nif ('behance' in social-keys)\n  .icon-behance\n    &:before\n      content: \"\\f1b4\"\n\nif ('bilibili' in social-keys)\n  .icon-bilibili\n    &:before\n      content: \"\\e3d9\"\n\nif ('weibo' in social-keys) || ('weibo' in share-keys)\n  .icon-weibo\n    &:before\n      content: \"\\f18a\"\n\nif ('zhihu' in social-keys)\n  .icon-zhihu\n    &:before\n      content: \"\\f63f\"\n\nif ('reddit' in social-keys) || ('reddit' in share-keys)\n  .icon-reddit\n    &:before\n      content: \"\\f1a1\"\n\nif ('tumblr' in social-keys)\n  .icon-tumblr\n    &:before\n      content: \"\\f173\"\n\nif ('medium' in social-keys)\n  .icon-medium\n    &:before\n      content: \"\\f23a\"\n\nif ('deviantart' in social-keys)\n  .icon-deviantart\n    &:before\n      content: \"\\f1bd\"\n\nif ('stackoverflow' in social-keys)\n  .icon-stackoverflow\n    &:before\n      content: \"\\f16c\"\n\nif ('keybase' in social-keys)\n  .icon-keybase\n    &:before\n      content: \"\\f4f5\"\n\nif ('telegram' in social-keys)\n  .icon-telegram\n    &:before\n      content: \"\\f2c6\"\n\nif ('discord' in social-keys)\n  .icon-discord\n    &:before\n      content: \"\\f392\"\n\nif ('steam' in social-keys)\n  .icon-steam\n    &:before\n      content: \"\\f1b6\"\n\nif ('email' in social-keys)\n  .icon-email\n    &:before\n      content: \"\\f0e0\"\n\n.sidebar-btn-wrapper\n  .sidebar-toc-btn\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f0e8\"\n\n  .sidebar-common-btn\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\e3af\"\n\n.sidebar-top\n  .arrow-up\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f062\"\n\n.icon-link\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0c1\"\n\n.icon-globe\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f0ac\"\n\n.icon-creative-commons\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f25e\"\n\n.icon-taichi\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f6ad\"\n\nif ('weixin' in share-keys)\n  .icon-weixin\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f1d7\"\n\nif ('qq' in share-keys)\n  .icon-qq\n    &:before\n      font-family: var(--font-icon)\n      content: \"\\f1d6\"\n\n.icon-image\n  &:before\n    font-family: var(--font-icon)\n    content: \"\\f03e\"\n\n.icon\n  font-family: var(--font-icon)","date":"2025-07-15T08:57:03.813Z","updated":"2025-07-15T08:57:03.813Z","path":"css/fontawesome.css","layout":"false","title":"","comments":1,"_id":"cmd71t80p00063cw6e3mt8pgi","content":":root {\n  --font-icon: \"Font Awesome 6 Free\", \"Font Awesome 6 Brands\", \"Font Awesome 5 Free\", \"Font Awesome 5 Brands\", \"FontAwesome\";\n}\n.archives-tag-list-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f02b\";\n}\n.archives-category-list-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f02e\";\n}\n.article-date-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f017\";\n}\n.article-category-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f02e\";\n}\n.article-tag-list-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f02b\";\n}\n.article-comment-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f075\";\n}\n.icon-copyright:before {\n  font-family: var(--font-icon);\n  content: \"\\f1f9\";\n}\n.icon-brush:before {\n  font-family: var(--font-icon);\n  content: \"\\f1fc\";\n}\n.icon-coffee:before {\n  font-family: var(--font-icon);\n  content: \"\\f0f4\";\n}\n.icon-eye:before {\n  font-family: var(--font-icon);\n  content: \"\\f06e\";\n}\n.icon-user:before {\n  font-family: var(--font-icon);\n  content: \"\\f007\";\n}\n#main-nav-toggle:before {\n  font-family: var(--font-icon);\n  content: \"\\f0c9\";\n}\n#nav-rss-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f09e\";\n}\n#nav-search-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f002\";\n}\n#nav-sun-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f185\";\n}\n#nav-moon-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f186\";\n}\n#nav-circle-half-stroke-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f042\";\n}\n#nav-language-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f1ab\";\n}\n.icon-copy:before {\n  font-family: var(--font-icon);\n  content: \"\\f0c5\";\n}\n.icon-chevron-down:before {\n  font-family: var(--font-icon);\n  content: \"\\f078\";\n}\n.icon-check:before {\n  font-family: var(--font-icon);\n  content: \"\\f00c\";\n}\n.icon-times:before {\n  font-family: var(--font-icon);\n  content: \"\\f00d\";\n}\n.icon-calendar:before {\n  font-family: var(--font-icon);\n  content: \"\\f073\";\n}\n.icon-pencil:before {\n  font-family: var(--font-icon);\n  content: \"\\f5ad\";\n}\n.icon-clock:before {\n  font-family: var(--font-icon);\n  content: \"\\f252\";\n}\n.post-sticky:before {\n  font-family: var(--font-icon);\n  content: \"\\f164\";\n}\n.popup-btn-close:before {\n  font-family: var(--font-icon);\n  content: \"\\f057\";\n}\n.reimu-search-input-icon:before {\n  font-family: var(--font-icon);\n  content: \"\\f002\";\n}\n.ais-pagination--item__previous a:before {\n  font-family: var(--font-icon);\n  content: \"\\f104\";\n}\n.ais-pagination--item__next a:before {\n  font-family: var(--font-icon);\n  content: \"\\f105\";\n}\n.icon-github:before {\n  content: \"\\f09b\";\n}\n.icon-bilibili:before {\n  content: \"\\e3d9\";\n}\n.icon-email:before {\n  content: \"\\f0e0\";\n}\n.sidebar-btn-wrapper .sidebar-toc-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\f0e8\";\n}\n.sidebar-btn-wrapper .sidebar-common-btn:before {\n  font-family: var(--font-icon);\n  content: \"\\e3af\";\n}\n.sidebar-top .arrow-up:before {\n  font-family: var(--font-icon);\n  content: \"\\f062\";\n}\n.icon-link:before {\n  font-family: var(--font-icon);\n  content: \"\\f0c1\";\n}\n.icon-globe:before {\n  font-family: var(--font-icon);\n  content: \"\\f0ac\";\n}\n.icon-creative-commons:before {\n  font-family: var(--font-icon);\n  content: \"\\f25e\";\n}\n.icon-taichi:before {\n  font-family: var(--font-icon);\n  content: \"\\f6ad\";\n}\n.icon-weixin:before {\n  font-family: var(--font-icon);\n  content: \"\\f1d7\";\n}\n.icon-qq:before {\n  font-family: var(--font-icon);\n  content: \"\\f1d6\";\n}\n.icon-image:before {\n  font-family: var(--font-icon);\n  content: \"\\f03e\";\n}\n.icon {\n  font-family: var(--font-icon);\n}\n"},{"_content":".outer-box {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 0;\n\n  --heat-level-0: unquote(\"color-mix(in srgb, var(--red-0) 10%, white)\");\n  --heat-level-1: unquote(\"color-mix(in srgb, var(--red-0) 40%, white)\");\n  --heat-level-2: unquote(\"color-mix(in srgb, var(--red-0) 80%, white)\");\n  --heat-level-3: var(--red-0);\n  --heat-level-4: unquote(\"color-mix(in srgb, var(--red-0) 80%, black)\");\n}\n\n[data-theme=\"dark\"] .outer-box {\n  --heat-level-0: #161b22;\n  --heat-level-1: unquote(\"color-mix(in srgb, var(--red-0) 30%, transparent)\");\n  --heat-level-2: unquote(\"color-mix(in srgb, var(--red-0) 50%, transparent)\");\n  --heat-level-3: unquote(\"color-mix(in srgb, var(--red-0) 70%, transparent)\");\n  --heat-level-4: var(--red-0);\n}\n\n.calendar-container {\n  display: grid;\n  grid: auto repeat(7, 10px) auto / auto repeat(53, 10px);\n  gap: 3px;\n\n\n  width: fit-content;\n  font-size: 12px;\n  padding: 14px;\n  border: solid 1px var(--color-border);\n  border-radius: 0.375rem;\n}\n\n.month {\n  grid-row: 1/2;\n  margin-bottom: -3px;\n}\n\n.week {\n  grid-row: 3;\n  grid-column: 1/2;\n  line-height: 10px;\n  margin-right: 3px;\n}\n.week + .week {\n  grid-row: 5;\n}\n.week + .week + .week {\n  grid-row: 7;\n}\n\n\n.tiles {\n  grid-column: 2/55;\n  grid-row: 2/9;\n\n\n  display: grid;\n  grid-auto-flow: column;\n  grid-template: subgrid / subgrid;\n}\n\n\n.tile {\n  width: 10px;\n  height: 10px;\n  border-radius: 2px;\n  outline: 1px solid unquote(\"color-mix(in srgb, var(--red-2) 10%, transparent)\");\n  outline-offset: -1px;\n}\n.tile[data-level=\"0\"] {\n  background: var(--heat-level-0);\n  // outline: none;\n}\n.tile[data-level=\"1\"] {\n  background: var(--heat-level-1);\n}\n.tile[data-level=\"2\"] {\n  background: var(--heat-level-2);\n}\n.tile[data-level=\"3\"] {\n  background: var(--heat-level-3);\n}\n.tile[data-level=\"4\"] {\n  background: var(--heat-level-4);\n}\n\ni.tile:hover {\n  outline: 1px solid var(--red-2);\n}\n\nline-height = 1.8em;\n\n#heatmap-tooltip {\n  position: fixed;\n  z-index: 1000;\n  padding: 5px;\n  background-color: var(--color-background);\n  border-radius: 0.375rem;\n  border: solid 1px var(--color-border);\n  box-shadow: var(--shadow-meta);\n  font-size: 12px;\n  color: var(--color-default);\n  max-width: 250px;\n  display: none; /* Initially hidden */\n\n  \n  ul {\n    margin: 0 20px;\n    line-height: line-height;\n    list-style: disc;\n    margin-top: (line-height / 2);\n    margin-bottom: (line-height / 2);\n  }\n\n  li {\n    &:hover {\n      &::marker {\n        transition: color 0.2s;\n        color: var(--red-1);\n      }\n    }\n  }\n\n  a {\n    color: var(--color-link);\n    text-decoration: none;\n    word-break: break-word;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .tooltip-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .tooltip-header-content {\n      font-weight: bold;\n      font-size: 16px;\n      color: var(--color-default);\n    }\n\n    .tooltip-close {\n      padding: 0 5px;\n      color: var(--color-link);\n      font-weight: bold;\n      font-size: 12px;\n      cursor: var(--cursor-pointer);\n    }\n  }\n\n  .tooltip-content {\n    max-height: 300px;\n    overflow-y: auto;\n    line-height: 1.2;\n  }\n}\n\n.total {\n  grid-column: 2/30;\n  grid-row: 9;\n  margin-top: 4px;\n}\n\n\n.legend {\n  grid-column: 30/53;\n  grid-row: 9;\n  margin-top: 4px;\n\n\n  display: flex;\n  gap: 5px;\n  justify-content: right;\n  align-items: center;\n}\n\n\n.year-select {\n  height: 140px;\n  padding: 5px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n\n.year-option {\n  padding: 5px 20px;\n  border-radius: 0.375rem;\n  cursor: var(--cursor-pointer) !important;\n}\n\n\n.year-option:hover {\n  background-color: var(--heat-level-1);\n}\n\n\n.year-option.active {\n  background-color: var(--heat-level-2);\n  color: white;\n}\n\n\n.inner-box {\n  overflow: auto;\n\n\n  ::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n  }\n}\n\n\n@media screen and (max-width: 768px) {\n  .year-select {\n    width: 100%;\n    height: auto;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n  }\n\n\n  .outer-box {\n    flex-direction: column;\n  }\n\n\n  .inner-box {\n    width: 100%;\n    overflow-x: auto;\n  }\n}","source":"css/heat-map.styl","raw":".outer-box {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 0;\n\n  --heat-level-0: unquote(\"color-mix(in srgb, var(--red-0) 10%, white)\");\n  --heat-level-1: unquote(\"color-mix(in srgb, var(--red-0) 40%, white)\");\n  --heat-level-2: unquote(\"color-mix(in srgb, var(--red-0) 80%, white)\");\n  --heat-level-3: var(--red-0);\n  --heat-level-4: unquote(\"color-mix(in srgb, var(--red-0) 80%, black)\");\n}\n\n[data-theme=\"dark\"] .outer-box {\n  --heat-level-0: #161b22;\n  --heat-level-1: unquote(\"color-mix(in srgb, var(--red-0) 30%, transparent)\");\n  --heat-level-2: unquote(\"color-mix(in srgb, var(--red-0) 50%, transparent)\");\n  --heat-level-3: unquote(\"color-mix(in srgb, var(--red-0) 70%, transparent)\");\n  --heat-level-4: var(--red-0);\n}\n\n.calendar-container {\n  display: grid;\n  grid: auto repeat(7, 10px) auto / auto repeat(53, 10px);\n  gap: 3px;\n\n\n  width: fit-content;\n  font-size: 12px;\n  padding: 14px;\n  border: solid 1px var(--color-border);\n  border-radius: 0.375rem;\n}\n\n.month {\n  grid-row: 1/2;\n  margin-bottom: -3px;\n}\n\n.week {\n  grid-row: 3;\n  grid-column: 1/2;\n  line-height: 10px;\n  margin-right: 3px;\n}\n.week + .week {\n  grid-row: 5;\n}\n.week + .week + .week {\n  grid-row: 7;\n}\n\n\n.tiles {\n  grid-column: 2/55;\n  grid-row: 2/9;\n\n\n  display: grid;\n  grid-auto-flow: column;\n  grid-template: subgrid / subgrid;\n}\n\n\n.tile {\n  width: 10px;\n  height: 10px;\n  border-radius: 2px;\n  outline: 1px solid unquote(\"color-mix(in srgb, var(--red-2) 10%, transparent)\");\n  outline-offset: -1px;\n}\n.tile[data-level=\"0\"] {\n  background: var(--heat-level-0);\n  // outline: none;\n}\n.tile[data-level=\"1\"] {\n  background: var(--heat-level-1);\n}\n.tile[data-level=\"2\"] {\n  background: var(--heat-level-2);\n}\n.tile[data-level=\"3\"] {\n  background: var(--heat-level-3);\n}\n.tile[data-level=\"4\"] {\n  background: var(--heat-level-4);\n}\n\ni.tile:hover {\n  outline: 1px solid var(--red-2);\n}\n\nline-height = 1.8em;\n\n#heatmap-tooltip {\n  position: fixed;\n  z-index: 1000;\n  padding: 5px;\n  background-color: var(--color-background);\n  border-radius: 0.375rem;\n  border: solid 1px var(--color-border);\n  box-shadow: var(--shadow-meta);\n  font-size: 12px;\n  color: var(--color-default);\n  max-width: 250px;\n  display: none; /* Initially hidden */\n\n  \n  ul {\n    margin: 0 20px;\n    line-height: line-height;\n    list-style: disc;\n    margin-top: (line-height / 2);\n    margin-bottom: (line-height / 2);\n  }\n\n  li {\n    &:hover {\n      &::marker {\n        transition: color 0.2s;\n        color: var(--red-1);\n      }\n    }\n  }\n\n  a {\n    color: var(--color-link);\n    text-decoration: none;\n    word-break: break-word;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .tooltip-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .tooltip-header-content {\n      font-weight: bold;\n      font-size: 16px;\n      color: var(--color-default);\n    }\n\n    .tooltip-close {\n      padding: 0 5px;\n      color: var(--color-link);\n      font-weight: bold;\n      font-size: 12px;\n      cursor: var(--cursor-pointer);\n    }\n  }\n\n  .tooltip-content {\n    max-height: 300px;\n    overflow-y: auto;\n    line-height: 1.2;\n  }\n}\n\n.total {\n  grid-column: 2/30;\n  grid-row: 9;\n  margin-top: 4px;\n}\n\n\n.legend {\n  grid-column: 30/53;\n  grid-row: 9;\n  margin-top: 4px;\n\n\n  display: flex;\n  gap: 5px;\n  justify-content: right;\n  align-items: center;\n}\n\n\n.year-select {\n  height: 140px;\n  padding: 5px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n\n.year-option {\n  padding: 5px 20px;\n  border-radius: 0.375rem;\n  cursor: var(--cursor-pointer) !important;\n}\n\n\n.year-option:hover {\n  background-color: var(--heat-level-1);\n}\n\n\n.year-option.active {\n  background-color: var(--heat-level-2);\n  color: white;\n}\n\n\n.inner-box {\n  overflow: auto;\n\n\n  ::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n  }\n}\n\n\n@media screen and (max-width: 768px) {\n  .year-select {\n    width: 100%;\n    height: auto;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n  }\n\n\n  .outer-box {\n    flex-direction: column;\n  }\n\n\n  .inner-box {\n    width: 100%;\n    overflow-x: auto;\n  }\n}","date":"2025-07-15T08:57:03.813Z","updated":"2025-07-15T08:57:03.813Z","path":"css/heat-map.css","layout":"false","title":"","comments":1,"_id":"cmd71t80q00083cw6ed7q2qa0","content":".outer-box {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 0;\n  --heat-level-0: color-mix(in srgb, var(--red-0) 10%, white);\n  --heat-level-1: color-mix(in srgb, var(--red-0) 40%, white);\n  --heat-level-2: color-mix(in srgb, var(--red-0) 80%, white);\n  --heat-level-3: var(--red-0);\n  --heat-level-4: color-mix(in srgb, var(--red-0) 80%, black);\n}\n[data-theme=\"dark\"] .outer-box {\n  --heat-level-0: #161b22;\n  --heat-level-1: color-mix(in srgb, var(--red-0) 30%, transparent);\n  --heat-level-2: color-mix(in srgb, var(--red-0) 50%, transparent);\n  --heat-level-3: color-mix(in srgb, var(--red-0) 70%, transparent);\n  --heat-level-4: var(--red-0);\n}\n.calendar-container {\n  display: grid;\n  grid: auto repeat(7, 10px) auto/auto repeat(53, 10px);\n  gap: 3px;\n  width: fit-content;\n  font-size: 12px;\n  padding: 14px;\n  border: solid 1px var(--color-border);\n  border-radius: 0.375rem;\n}\n.month {\n  grid-row: 1/2;\n  margin-bottom: -3px;\n}\n.week {\n  grid-row: 3;\n  grid-column: 1/2;\n  line-height: 10px;\n  margin-right: 3px;\n}\n.week + .week {\n  grid-row: 5;\n}\n.week + .week + .week {\n  grid-row: 7;\n}\n.tiles {\n  grid-column: 2/55;\n  grid-row: 2/9;\n  display: grid;\n  grid-auto-flow: column;\n  grid-template: subgrid/subgrid;\n}\n.tile {\n  width: 10px;\n  height: 10px;\n  border-radius: 2px;\n  outline: 1px solid color-mix(in srgb, var(--red-2) 10%, transparent);\n  outline-offset: -1px;\n}\n.tile[data-level=\"0\"] {\n  background: var(--heat-level-0);\n}\n.tile[data-level=\"1\"] {\n  background: var(--heat-level-1);\n}\n.tile[data-level=\"2\"] {\n  background: var(--heat-level-2);\n}\n.tile[data-level=\"3\"] {\n  background: var(--heat-level-3);\n}\n.tile[data-level=\"4\"] {\n  background: var(--heat-level-4);\n}\ni.tile:hover {\n  outline: 1px solid var(--red-2);\n}\n#heatmap-tooltip {\n  position: fixed;\n  z-index: 1000;\n  padding: 5px;\n  background-color: var(--color-background);\n  border-radius: 0.375rem;\n  border: solid 1px var(--color-border);\n  box-shadow: var(--shadow-meta);\n  font-size: 12px;\n  color: var(--color-default);\n  max-width: 250px;\n  display: none; /* Initially hidden */\n}\n#heatmap-tooltip ul {\n  margin: 0 20px;\n  line-height: 1.8em;\n  list-style: disc;\n  margin-top: 0.9em;\n  margin-bottom: 0.9em;\n}\n#heatmap-tooltip li:hover::marker {\n  transition: color 0.2s;\n  color: var(--red-1);\n}\n#heatmap-tooltip a {\n  color: var(--color-link);\n  text-decoration: none;\n  word-break: break-word;\n}\n#heatmap-tooltip a:hover {\n  text-decoration: underline;\n}\n#heatmap-tooltip .tooltip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#heatmap-tooltip .tooltip-header .tooltip-header-content {\n  font-weight: bold;\n  font-size: 16px;\n  color: var(--color-default);\n}\n#heatmap-tooltip .tooltip-header .tooltip-close {\n  padding: 0 5px;\n  color: var(--color-link);\n  font-weight: bold;\n  font-size: 12px;\n  cursor: var(--cursor-pointer);\n}\n#heatmap-tooltip .tooltip-content {\n  max-height: 300px;\n  overflow-y: auto;\n  line-height: 1.2;\n}\n.total {\n  grid-column: 2/30;\n  grid-row: 9;\n  margin-top: 4px;\n}\n.legend {\n  grid-column: 30/53;\n  grid-row: 9;\n  margin-top: 4px;\n  display: flex;\n  gap: 5px;\n  justify-content: right;\n  align-items: center;\n}\n.year-select {\n  height: 140px;\n  padding: 5px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  flex-shrink: 0;\n}\n.year-option {\n  padding: 5px 20px;\n  border-radius: 0.375rem;\n  cursor: var(--cursor-pointer) !important;\n}\n.year-option:hover {\n  background-color: var(--heat-level-1);\n}\n.year-option.active {\n  background-color: var(--heat-level-2);\n  color: #fff;\n}\n.inner-box {\n  overflow: auto;\n}\n.inner-box ::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n@media screen and (max-width: 768px) {\n  .year-select {\n    width: 100%;\n    height: auto;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n  }\n  .outer-box {\n    flex-direction: column;\n  }\n  .inner-box {\n    width: 100%;\n    overflow-x: auto;\n  }\n}\n"},{"_content":"[data-theme=\"dark\"]\n  #loader \n    .loading-bg\n      background-color: rgba(37, 37, 37, .9)\n\n    .spinner-box .loading-word\n      color: var(--red-1, #ff5252)\n\n#loader\n  .loading-bg\n    position: fixed\n    z-index: 1000\n    width: 50%\n    height: 100%\n    background-color: rgba(255, 255, 255, .9)\n    transition: .8s\n\n  .loading-right-bg\n    right: 0\n\n  .spinner-box\n    position: fixed\n    z-index: 1001\n    display: flex\n    justify-content: center\n    align-items: center\n    width: 100%\n    height: 100vh\n    opacity: 1\n    transition: .5s\n\n    .loading-taichi\n      opacity: .8\n      \n    .rotate\n      animation: rotate-all 2s linear infinite\n\n    .loading-word\n      position: absolute\n      color: var(--red-1, #ff5252)\n      top: calc(50% + 110px)\n      left: 50%\n      transform: translate(-50%, -50%)\n      font: 700 1.2rem unquote(custom-article-families) unquote(article-families) unquote(local-article-families)\n\n#loader.loading \n  .loading-left-bg\n\t  transform: translate(-100%, 0)\n\n  .loading-right-bg\n\t  transform: translate(100%, 0)\n\n#loader.loading \n  .spinner-box\n    opacity: 0\n    visibility: hidden\n\nvendors = official\n\n@keyframes rotate-all\n  100%\n    transform: rotate(360deg)\n","source":"css/loader.styl","raw":"[data-theme=\"dark\"]\n  #loader \n    .loading-bg\n      background-color: rgba(37, 37, 37, .9)\n\n    .spinner-box .loading-word\n      color: var(--red-1, #ff5252)\n\n#loader\n  .loading-bg\n    position: fixed\n    z-index: 1000\n    width: 50%\n    height: 100%\n    background-color: rgba(255, 255, 255, .9)\n    transition: .8s\n\n  .loading-right-bg\n    right: 0\n\n  .spinner-box\n    position: fixed\n    z-index: 1001\n    display: flex\n    justify-content: center\n    align-items: center\n    width: 100%\n    height: 100vh\n    opacity: 1\n    transition: .5s\n\n    .loading-taichi\n      opacity: .8\n      \n    .rotate\n      animation: rotate-all 2s linear infinite\n\n    .loading-word\n      position: absolute\n      color: var(--red-1, #ff5252)\n      top: calc(50% + 110px)\n      left: 50%\n      transform: translate(-50%, -50%)\n      font: 700 1.2rem unquote(custom-article-families) unquote(article-families) unquote(local-article-families)\n\n#loader.loading \n  .loading-left-bg\n\t  transform: translate(-100%, 0)\n\n  .loading-right-bg\n\t  transform: translate(100%, 0)\n\n#loader.loading \n  .spinner-box\n    opacity: 0\n    visibility: hidden\n\nvendors = official\n\n@keyframes rotate-all\n  100%\n    transform: rotate(360deg)\n","date":"2025-07-15T08:57:03.814Z","updated":"2025-07-15T08:57:03.814Z","path":"css/loader.css","layout":"false","title":"","comments":1,"_id":"cmd71t80q000a3cw6g76vhgin","content":"[data-theme=\"dark\"] #loader .loading-bg {\n  background-color: rgba(37,37,37,0.9);\n}\n[data-theme=\"dark\"] #loader .spinner-box .loading-word {\n  color: var(--red-1, #ff5252);\n}\n#loader .loading-bg {\n  position: fixed;\n  z-index: 1000;\n  width: 50%;\n  height: 100%;\n  background-color: rgba(255,255,255,0.9);\n  transition: 0.8s;\n}\n#loader .loading-right-bg {\n  right: 0;\n}\n#loader .spinner-box {\n  position: fixed;\n  z-index: 1001;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  opacity: 1;\n  transition: 0.5s;\n}\n#loader .spinner-box .loading-taichi {\n  opacity: 0.8;\n}\n#loader .spinner-box .rotate {\n  animation: rotate-all 2s linear infinite;\n}\n#loader .spinner-box .loading-word {\n  position: absolute;\n  color: var(--red-1, #ff5252);\n  top: calc(50% + 110px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font: 700 1.2rem  'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n}\n#loader.loading .loading-left-bg {\n  transform: translate(-100%, 0);\n}\n#loader.loading .loading-right-bg {\n  transform: translate(100%, 0);\n}\n#loader.loading .spinner-box {\n  opacity: 0;\n  visibility: hidden;\n}\n@keyframes rotate-all {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n"},{"_content":"support-for-ie = false\nvendor-prefixes = official\n\n@import \"nib/reset\"\n@import \"nib/clearfix\"\n@import \"_variables\"\n@import \"_animation\"\n@import \"_extend\"\n\nif hexo-config(\"icon_font\")\n  @import \"iconfont\"\nelse\n  @import \"fontawesome\"\n\nglobal-reset()\n\nh1, h2, h3, h4, h5, h6\n  font-family: font-basic\n  font-weight: 700\n\ninput, button\n  margin: 0\n  padding: 0\n\n  &::-moz-focus-inner\n    border: 0\n    padding: 0\n\nhtml, body, #container\n  height: 100%\n  scroll-behavior: smooth\n  cursor: var(--cursor-default)\n\nbody\n  width: 100%\n  background: var(--color-background)\n  -webkit-text-size-adjust: 100%\n  -webkit-font-smoothing: antialiased\n  text-size-adjust: 100%\n  font-family: font-basic\n  transition: background 1s\n  color: var(--color-default)\n\n  ::selection\n    background: var(--red-1)\n    color: #fff\n\na, button\n  cursor: var(--cursor-pointer) !important\n\n.site-search\n  input\n    cursor: var(--cursor-text) !important\n\n#main\n  span:not(button span), p:not(button p), code, kbd, input, textarea\n    cursor: var(--cursor-text) !important\n\n  nav\n    span\n      cursor: var(--cursor-default) !important\n\n#container\n  position: relative\n\n.mobile-nav-on\n  overflow: hidden !important\n\n#wrap\n  position: absolute\n  z-index: 1\n  top: 0\n  left: 0\n  height: 100%\n  width: 100%\n  transition: 1s\n  background: var(--color-background)\n\n#main\n  flex: 1\n  padding: 0 10px\n  max-width: 100%\n  box-sizing: border-box\n\n  @media mg-large\n    min-width: 100%\n\n#content\n  position: relative\n  display: flex\n  padding-top: 5px\n  align-items: stretch\n  max-width: 1350px;\n  margin: 0 auto;\n  overflow: visible;\n\n.sidebar-left,\n.sidebar-right\n  #main\n    @media mq-large\n      padding: 0\n      width: 73%\n      margin: 0 1%\n\n#content.sidebar-right\n  flex-direction: row-reverse\n\n#mask\n  z-index: 1000\n  position: fixed\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  background: rgba(0, 0, 0, 0.3)\n  backdrop-filter: blur(3px)\n  -webkit-backdrop-filter: blur(3px)\n  opacity: 1\n  transition: 0.3s\n  \n  &.hide\n    opacity: 0\n    visibility: hidden\n\n@import \"_partial/header\"\n@import \"_partial/article\"\n@import \"_partial/post\"\n@import \"_partial/comment\"\n@import \"_partial/archive\"\n@import \"_partial/footer\"\n@import \"_partial/mobile\"\n@import \"_partial/highlight\"\n@import \"_partial/friend\"\n@import \"_partial/card\"\n\nif hexo-config(\"live2d.enable\")\n  @import \"_partial/live2d\"\n\nif hexo-config(\"live2d_widgets.enable\")\n  @import \"_partial/live2d_widgets\"\n\nif hexo-config(\"top.enable\")\n  @import \"_partial/top\"\n\nif post-has-sponsor\n  @import \"_partial/sponsor\"\n\nif site-has-widget\n  @import \"_partial/widget\"\n\nif hexo-config(\"algolia_search.enable\") or hexo-config(\"generator_search.enable\")\n  @import \"_partial/search\"\n\nif hexo-config(\"service_worker.enable\")\n  @import \"_partial/notification\"\n  \nif sidebar\n  @import \"_partial/sidebar\"\n\nif hexo-config(\"player.aplayer.enable\")\n  @import \"_partial/aplayer\"\n\nif site-has-share\n  @import \"_partial/share\"\n\nif hexo-config(\"markdown.container\")\n  @import \"_partial/container\"\n\n// for Pull Quotes\n.left\n  float: left\n\n.right\n  float: right\n\n[data-theme=\"dark\"]\n  ::-webkit-scrollbar, ::-webkit-scrollbar-track\n    background-color: #616161\n\n::-webkit-scrollbar\n  width: 10px\n  height: 10px\n  background-color: #f5f5f5\n\n::-webkit-scrollbar-track\n  border-radius: 10px\n  background-color: #f5f5f5\n\n::-webkit-scrollbar-thumb\n  border-radius: 10px\n  background-color: var(--red-3)\n\nif hexo-config(\"pace.enable\")\n  .pace\n    pointer-events: none\n    -webkit-user-select: none\n    -moz-user-select: none\n    user-select: none\n\n  .pace-inactive\n    display: none\n\n  .pace .pace-progress\n    position: fixed\n    z-index: 2000\n    top: 0\n    right: 100%\n    width: 100%\n    height: 2px\n    background: var(--red-1)\n\n","source":"css/style.styl","raw":"support-for-ie = false\nvendor-prefixes = official\n\n@import \"nib/reset\"\n@import \"nib/clearfix\"\n@import \"_variables\"\n@import \"_animation\"\n@import \"_extend\"\n\nif hexo-config(\"icon_font\")\n  @import \"iconfont\"\nelse\n  @import \"fontawesome\"\n\nglobal-reset()\n\nh1, h2, h3, h4, h5, h6\n  font-family: font-basic\n  font-weight: 700\n\ninput, button\n  margin: 0\n  padding: 0\n\n  &::-moz-focus-inner\n    border: 0\n    padding: 0\n\nhtml, body, #container\n  height: 100%\n  scroll-behavior: smooth\n  cursor: var(--cursor-default)\n\nbody\n  width: 100%\n  background: var(--color-background)\n  -webkit-text-size-adjust: 100%\n  -webkit-font-smoothing: antialiased\n  text-size-adjust: 100%\n  font-family: font-basic\n  transition: background 1s\n  color: var(--color-default)\n\n  ::selection\n    background: var(--red-1)\n    color: #fff\n\na, button\n  cursor: var(--cursor-pointer) !important\n\n.site-search\n  input\n    cursor: var(--cursor-text) !important\n\n#main\n  span:not(button span), p:not(button p), code, kbd, input, textarea\n    cursor: var(--cursor-text) !important\n\n  nav\n    span\n      cursor: var(--cursor-default) !important\n\n#container\n  position: relative\n\n.mobile-nav-on\n  overflow: hidden !important\n\n#wrap\n  position: absolute\n  z-index: 1\n  top: 0\n  left: 0\n  height: 100%\n  width: 100%\n  transition: 1s\n  background: var(--color-background)\n\n#main\n  flex: 1\n  padding: 0 10px\n  max-width: 100%\n  box-sizing: border-box\n\n  @media mg-large\n    min-width: 100%\n\n#content\n  position: relative\n  display: flex\n  padding-top: 5px\n  align-items: stretch\n  max-width: 1350px;\n  margin: 0 auto;\n  overflow: visible;\n\n.sidebar-left,\n.sidebar-right\n  #main\n    @media mq-large\n      padding: 0\n      width: 73%\n      margin: 0 1%\n\n#content.sidebar-right\n  flex-direction: row-reverse\n\n#mask\n  z-index: 1000\n  position: fixed\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  background: rgba(0, 0, 0, 0.3)\n  backdrop-filter: blur(3px)\n  -webkit-backdrop-filter: blur(3px)\n  opacity: 1\n  transition: 0.3s\n  \n  &.hide\n    opacity: 0\n    visibility: hidden\n\n@import \"_partial/header\"\n@import \"_partial/article\"\n@import \"_partial/post\"\n@import \"_partial/comment\"\n@import \"_partial/archive\"\n@import \"_partial/footer\"\n@import \"_partial/mobile\"\n@import \"_partial/highlight\"\n@import \"_partial/friend\"\n@import \"_partial/card\"\n\nif hexo-config(\"live2d.enable\")\n  @import \"_partial/live2d\"\n\nif hexo-config(\"live2d_widgets.enable\")\n  @import \"_partial/live2d_widgets\"\n\nif hexo-config(\"top.enable\")\n  @import \"_partial/top\"\n\nif post-has-sponsor\n  @import \"_partial/sponsor\"\n\nif site-has-widget\n  @import \"_partial/widget\"\n\nif hexo-config(\"algolia_search.enable\") or hexo-config(\"generator_search.enable\")\n  @import \"_partial/search\"\n\nif hexo-config(\"service_worker.enable\")\n  @import \"_partial/notification\"\n  \nif sidebar\n  @import \"_partial/sidebar\"\n\nif hexo-config(\"player.aplayer.enable\")\n  @import \"_partial/aplayer\"\n\nif site-has-share\n  @import \"_partial/share\"\n\nif hexo-config(\"markdown.container\")\n  @import \"_partial/container\"\n\n// for Pull Quotes\n.left\n  float: left\n\n.right\n  float: right\n\n[data-theme=\"dark\"]\n  ::-webkit-scrollbar, ::-webkit-scrollbar-track\n    background-color: #616161\n\n::-webkit-scrollbar\n  width: 10px\n  height: 10px\n  background-color: #f5f5f5\n\n::-webkit-scrollbar-track\n  border-radius: 10px\n  background-color: #f5f5f5\n\n::-webkit-scrollbar-thumb\n  border-radius: 10px\n  background-color: var(--red-3)\n\nif hexo-config(\"pace.enable\")\n  .pace\n    pointer-events: none\n    -webkit-user-select: none\n    -moz-user-select: none\n    user-select: none\n\n  .pace-inactive\n    display: none\n\n  .pace .pace-progress\n    position: fixed\n    z-index: 2000\n    top: 0\n    right: 100%\n    width: 100%\n    height: 2px\n    background: var(--red-1)\n\n","date":"2025-07-15T08:57:03.814Z","updated":"2025-07-15T08:57:03.814Z","path":"css/style.css","layout":"false","title":"","comments":1,"_id":"cmd71t80s000e3cw625tj6rdn","content":":root {\n  --red-0: #06689e;\n  --red-1: #1a77ab;\n  --red-2: #3383ab;\n  --red-3: #4f9bc1;\n  --red-4: #76b2d4;\n  --red-5: #9fcee9;\n  --red-5-5: #c5e2f3;\n  --red-6: #e0f0fa;\n  --grey-9: #888;\n  --grey-7: var(--color-default);\n  --color-archive-year: #000;\n  --color-default: #555;\n  --color-border: var(--red-3);\n  --color-link: var(--red-1);\n  --color-background: #eee;\n  --color-code-background: #f8f8f8;\n  --color-header-background: rgba(255,255,255,0.9);\n  --color-footer-background: #fff;\n  --color-mobile-nav-background: #fff;\n  --color-wrap: #fff;\n  --color-sticky: #fff;\n  --color-h2-border: #eee;\n  --color-meta-shadow: var(--red-6);\n  --color-hover-shadow: rgba(120,120,120,0.15);\n  --color-h2-after: var(--red-1);\n  --color-red-6-shadow: rgba(51, 131, 171, 0.6);\n  --color-red-3-shadow: rgba(51, 131, 171, 0.3);\n  --highlight-nav: #e6f2f8;\n  --highlight-scrollbar: #b8d5e6;\n  --highlight-background: #f7fbfd;\n  --highlight-current-line: #d4e8f4;\n  --highlight-selection: #e3f0f8;\n  --highlight-foreground: #2c3e50;\n  --highlight-comment: #7f9cb0;\n  --highlight-red: #c8362b;\n  --highlight-orange: #b66014;\n  --highlight-yellow: #cb911d;\n  --highlight-green: #2ea52e;\n  --highlight-aqua: #479d9d;\n  --highlight-blue: #1973b8;\n  --highlight-purple: #7135ac;\n  --cursor-default: url(\"../images/cursor/reimu-cursor-default.png\"), auto;\n  --cursor-pointer: url(\"../images/cursor/reimu-cursor-pointer.png\"), pointer;\n  --cursor-text: url(\"../images/cursor/reimu-cursor-text.png\"), text;\n  --footer-icon: url(\"../images/taichi.png\");\n  --sponsor-icon: url(\"../images/taichi.png\");\n  --top-icon: url(\"../images/taichi.png\");\n  --shadow-meta: 0 0 5px 2px var(--color-meta-shadow);\n  --shadow-meta-hover: 0 0 6px 4px var(--color-meta-shadow);\n  --shadow-card: 0 0 10px 2px var(--color-hover-shadow);\n  --shadow-card-hover: 0 0 10px 4px var(--color-hover-shadow);\n  --shadow-red-6-shadow: 0 0 8px var(--color-red-6-shadow);\n}\n[data-theme=\"dark\"]:root {\n  --red-0: var(--red-1);\n  --red-4: rgba(118, 178, 212, 0.6);\n  --red-5: rgba(76, 160, 212, 0.2);\n  --red-5-5: rgba(100, 175, 220, 0.1);\n  --red-6: rgba(140, 200, 240, 0.15);\n  --color-archive-year: #999;\n  --color-default: #999;\n  --color-border: var(--red-5);\n  --color-background: #21252b;\n  --color-code-background: rgba(232,232,232,0.1);\n  --color-header-background: #222;\n  --color-footer-background: #21252b;\n  --color-mobile-nav-background: #21252b;\n  --color-wrap: #272b30;\n  --color-h2-border: #47474a;\n  --color-meta-shadow: rgba(0,0,0,0.2);\n  --color-hover-shadow: rgba(0,0,0,0.2);\n  --highlight-nav: #1a2b3a;\n  --highlight-scrollbar: #2a4d69;\n  --highlight-background: #141f29;\n  --highlight-current-line: #243b50;\n  --highlight-selection: #2c455d;\n  --highlight-foreground: #c7d5e0;\n  --highlight-comment: #7991a5;\n  --highlight-red: #f47067;\n  --highlight-orange: #f69d50;\n  --highlight-yellow: #ffcc66;\n  --highlight-green: #99cc99;\n  --highlight-aqua: #66cccc;\n  --highlight-blue: #54b6ff;\n  --highlight-purple: #dcbdfb;\n}\n[data-theme=\"dark\"]:root img {\n  filter: brightness(70%);\n}\n[data-theme=\"dark\"]:root .pswp__img {\n  opacity: 1;\n  filter: none;\n  animation: none;\n}\n[data-theme=\"dark\"]:root img.lazyloaded {\n  opacity: 1;\n  animation: blur-darken 0.8s ease-in-out forwards;\n}\nbody [data-aos='fade-up'] {\n  transform: translate3d(0, 30px, 0);\n}\nbody [data-aos='zoom-in'] {\n  transform: scale(0.8);\n}\n[data-aos^=fade],\n[data-aos^=zoom] {\n  transition-property: all !important;\n}\n@keyframes blur {\n  0% {\n    filter: blur(10px);\n  }\n  to {\n    filter: blur(0);\n  }\n}\n@keyframes blur-darken {\n  0% {\n    filter: blur(10px) brightness(70%);\n  }\n  to {\n    filter: blur(0) brightness(70%);\n  }\n}\n@keyframes rotate-all {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes transform-all {\n  100% {\n    transform: translateX(-100px);\n  }\n}\n.article-entry h1 {\n  font-size: 2em;\n}\n.article-entry h2 {\n  font-size: 1.5em;\n  position: relative;\n}\n.article-entry h2:before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  border-bottom: 1px solid var(--color-h2-border);\n  bottom: -15px;\n  box-sizing: unset;\n  transition: 1s;\n}\n.article-entry h2:after {\n  content: \"\";\n  position: absolute;\n  background: var(--color-h2-after);\n  width: 1em;\n  height: 7px;\n  bottom: -18px;\n  left: 0;\n  border-radius: 10px;\n  box-shadow: 0 2px 12px var(--color-red-6-shadow);\n  transition: 0.3s;\n}\n.article-entry h2:hover:after {\n  width: 3em;\n}\n.article-entry h3 {\n  font-size: 1.3em;\n}\n.article-entry h4 {\n  font-size: 1.2em;\n}\n.article-entry h5 {\n  font-size: 1em;\n}\n.article-entry h6 {\n  font-size: 1em;\n  color: var(--grey-9);\n}\n.article-entry hr {\n  margin: 10px 0;\n  opacity: 0.3;\n  height: 4px;\n  background-image: linear-gradient(to right, var(--red-0) 50%, transparent 0%);\n  background-size: 50px 4px;\n  background-repeat: repeat-x;\n  border: none;\n  filter: drop-shadow(0px 0px 2px var(--red-1));\n  transition: opacity 0.3s, color 0.3s;\n}\n.article-entry hr:hover {\n  opacity: 0.5;\n}\n.article-entry strong {\n  font-weight: bold;\n}\n.article-entry em,\n.article-entry cite {\n  font-style: italic;\n}\n.article-entry sup,\n.article-entry sub {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n.article-entry sup {\n  top: -0.5em;\n}\n.article-entry sub {\n  bottom: -0.2em;\n}\n.article-entry small {\n  font-size: 0.85em;\n}\n.article-entry acronym,\n.article-entry abbr {\n  text-decoration: none;\n  border-bottom: 1px dotted;\n}\n.article-entry ul,\n.article-entry ol,\n.article-entry dl {\n  margin: 0 20px;\n  line-height: 1.8em;\n}\n.article-entry ul ul,\n.article-entry ol ul,\n.article-entry ul ol,\n.article-entry ol ol {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.article-entry ul {\n  list-style: disc;\n}\n.article-entry ol {\n  list-style: decimal;\n}\n.article-entry dt {\n  font-weight: bold;\n}\n@font-face {\n  font-family: \"iconfont\";\n  src: url(\"//at.alicdn.com/t/c/font_4552607_0khxww3tj3q9.woff2\") format('woff2');\n  font-display: swap;\n}\n.archives-tag-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e622\";\n}\n.archives-category-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e604\";\n}\n.article-date-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e606\";\n}\n.article-category-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e604\";\n}\n.article-tag-list-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e622\";\n}\n.article-comment-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e608\";\n}\n.icon-copyright:before {\n  font-family: \"iconfont\";\n  content: \"\\e60a\";\n}\n.icon-brush:before {\n  font-family: \"iconfont\";\n  content: \"\\e618\";\n}\n.icon-coffee:before {\n  font-family: \"iconfont\";\n  content: \"\\e607\";\n}\n.icon-eye:before {\n  font-family: \"iconfont\";\n  content: \"\\e60f\";\n}\n.icon-user:before {\n  font-family: \"iconfont\";\n  content: \"\\e628\";\n}\n#main-nav-toggle:before {\n  font-family: \"iconfont\";\n  content: \"\\e62f\";\n}\n#nav-rss-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e61f\";\n}\n#nav-search-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e631\";\n}\n#nav-sun-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e621\";\n}\n#nav-moon-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e617\";\n}\n#nav-circle-half-stroke-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e641\";\n}\n#nav-language-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e642\";\n}\n.icon-copy:before {\n  font-family: \"iconfont\";\n  content: \"\\e60c\";\n}\n.icon-chevron-down:before {\n  font-family: \"iconfont\";\n  content: \"\\e609\";\n}\n.icon-check:before {\n  font-family: \"iconfont\";\n  content: \"\\e636\";\n}\n.icon-times:before {\n  font-family: \"iconfont\";\n  content: \"\\e637\";\n}\n.icon-calendar:before {\n  font-family: \"iconfont\";\n  content: \"\\e605\";\n}\n.icon-pencil:before {\n  font-family: \"iconfont\";\n  content: \"\\e61b\";\n}\n.icon-clock:before {\n  font-family: \"iconfont\";\n  content: \"\\e613\";\n}\n.post-sticky:before {\n  font-family: \"iconfont\";\n  content: \"\\e627\";\n}\n.popup-btn-close:before {\n  font-family: \"iconfont\";\n  content: \"\\e626\";\n}\n.reimu-search-input-icon:before {\n  font-family: \"iconfont\";\n  content: \"\\e631\";\n}\n.ais-pagination--item__previous a:before {\n  font-family: \"iconfont\";\n  content: \"\\e601\";\n}\n.ais-pagination--item__next a:before {\n  font-family: \"iconfont\";\n  content: \"\\e630\";\n}\n.icon-github:before {\n  content: \"\\e619\";\n}\n.icon-bilibili:before {\n  content: \"\\e603\";\n}\n.icon-email:before {\n  content: \"\\e63c\";\n}\n.sidebar-btn-wrapper .sidebar-toc-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e633\";\n}\n.sidebar-btn-wrapper .sidebar-common-btn:before {\n  font-family: \"iconfont\";\n  content: \"\\e632\";\n}\n.sidebar-top .arrow-up:before {\n  font-family: \"iconfont\";\n  content: \"\\e634\";\n}\n.icon-link:before {\n  font-family: \"iconfont\";\n  content: \"\\e639\";\n}\n.icon-globe:before {\n  font-family: \"iconfont\";\n  content: \"\\e638\";\n}\n.icon-creative-commons:before {\n  font-family: \"iconfont\";\n  content: \"\\e63a\";\n}\n.icon-taichi:before {\n  font-family: \"iconfont\";\n  content: \"\\e62b\";\n}\n.icon-weixin:before {\n  font-family: \"iconfont\";\n  content: \"\\e640\";\n}\n.icon-qq:before {\n  font-family: \"iconfont\";\n  content: \"\\e63e\";\n}\n.icon-image:before {\n  font-family: \"iconfont\";\n  content: \"\\e63f\";\n}\n.icon {\n  font-family: \"iconfont\";\n}\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-weight: inherit;\n  font-style: inherit;\n  font-family: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\nbody {\n  line-height: 1;\n  color: #000;\n  background: #fff;\n}\nol,\nul {\n  list-style: none;\n}\ntable {\n  border-collapse: separate;\n  border-spacing: 0;\n  vertical-align: middle;\n}\ncaption,\nth,\ntd {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle;\n}\na img {\n  border: none;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: 'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n  font-weight: 700;\n}\ninput,\nbutton {\n  margin: 0;\n  padding: 0;\n}\ninput::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\nhtml,\nbody,\n#container {\n  height: 100%;\n  scroll-behavior: smooth;\n  cursor: var(--cursor-default);\n}\nbody {\n  width: 100%;\n  background: var(--color-background);\n  -webkit-text-size-adjust: 100%;\n  -webkit-font-smoothing: antialiased;\n  text-size-adjust: 100%;\n  font-family: 'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n  transition: background 1s;\n  color: var(--color-default);\n}\nbody ::selection {\n  background: var(--red-1);\n  color: #fff;\n}\na,\nbutton {\n  cursor: var(--cursor-pointer) !important;\n}\n.site-search input {\n  cursor: var(--cursor-text) !important;\n}\n#main span:not(button span),\n#main p:not(button p),\n#main code,\n#main kbd,\n#main input,\n#main textarea {\n  cursor: var(--cursor-text) !important;\n}\n#main nav span {\n  cursor: var(--cursor-default) !important;\n}\n#container {\n  position: relative;\n}\n.mobile-nav-on {\n  overflow: hidden !important;\n}\n#wrap {\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  transition: 1s;\n  background: var(--color-background);\n}\n#main {\n  flex: 1;\n  padding: 0 10px;\n  max-width: 100%;\n  box-sizing: border-box;\n}\n@media screen and (max-width: 959px) {\n  #main {\n    min-width: 100%;\n  }\n}\n#content {\n  position: relative;\n  display: flex;\n  padding-top: 5px;\n  align-items: stretch;\n  max-width: 1350px;\n  margin: 0 auto;\n  overflow: visible;\n}\n@media screen and (min-width: 960px) {\n  .sidebar-left #main,\n  .sidebar-right #main {\n    padding: 0;\n    width: 73%;\n    margin: 0 1%;\n  }\n}\n#content.sidebar-right {\n  flex-direction: row-reverse;\n}\n#mask {\n  z-index: 1000;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.3);\n  backdrop-filter: blur(3px);\n  -webkit-backdrop-filter: blur(3px);\n  opacity: 1;\n  transition: 0.3s;\n}\n#mask.hide {\n  opacity: 0;\n  visibility: hidden;\n}\n#header {\n  min-height: 400px;\n  height: 35vh;\n  position: relative;\n}\n#header img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 150%;\n  z-index: -2;\n  user-select: none;\n  display: block;\n  object-fit: cover;\n  transition: 0.3s;\n  -webkit-mask: linear-gradient(to top, transparent, #fff 50%);\n  mask: linear-gradient(to top, transparent, #fff 50%);\n}\n@media screen and (max-width: 959px) {\n  #header img {\n    height: 120%;\n  }\n}\n@media screen and (max-width: 767px) {\n  #header img {\n    height: 100%;\n  }\n}\n#header-outer {\n  height: 100%;\n  position: relative;\n  max-width: 100%;\n}\n[data-theme=\"dark\"] #header-nav:hover {\n  background: var(--color-header-background);\n}\n#header-nav {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  background: var(--color-header-background);\n  box-shadow: var(--shadow-card);\n  transition: background 1s, top 0.3s;\n  z-index: 200;\n}\n#header-nav:hover {\n  background: rgba(255,255,255,0.95);\n}\n#header-nav.header-nav-hidden {\n  top: -80px;\n}\n#header-title {\n  font-family: 'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n  font-weight: 700;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  margin: -20px 2.5% 0;\n  width: 95%;\n}\n#logo,\n#subtitle {\n  text-decoration: none;\n  color: #fff;\n}\n#logo {\n  font-size: 40px;\n  font-weight: 700;\n  letter-spacing: 2px;\n  display: inline-block;\n  transform: translateY(-20%);\n  text-shadow: 0 0 0.5rem rgba(0,0,0,0.7);\n}\n@media screen and (max-width: 959px) {\n  #logo {\n    font-size: 35px;\n  }\n}\n@media screen and (min-width: 480px) and (max-width: 767px) {\n  #logo {\n    font-size: 30px;\n  }\n}\n@media screen and (max-width: 479px) {\n  #logo {\n    font-size: 30px;\n  }\n}\n#subtitle {\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: 1px;\n  text-shadow: 0 0 5px rgba(0,0,0,0.7);\n}\n@media screen and (max-width: 959px) {\n  #subtitle {\n    font-size: 15px;\n  }\n}\n@media screen and (min-width: 480px) and (max-width: 767px) {\n  #subtitle {\n    font-size: 14px;\n  }\n}\n@media screen and (max-width: 479px) {\n  #subtitle {\n    font-size: 13px;\n  }\n}\n#subtitle-wrap {\n  margin-top: 18px;\n}\n#main-nav {\n  display: flex;\n  align-items: center;\n}\n.nav-icon,\n.main-nav-link-wrap,\n.main-nav-link,\n.main-nav-icon {\n  color: var(--red-0);\n  opacity: 0.8;\n  text-decoration: none;\n  transition: 0.2s;\n  padding: 20px 15px;\n}\n.main-nav-link-wrap {\n  padding: 0 15px;\n  display: flex;\n  transition: 0.3s;\n}\n.main-nav-link-wrap:hover {\n  opacity: 1;\n}\n@media screen and (max-width: 959px) {\n  .main-nav-link-wrap {\n    padding: 0 10px;\n  }\n}\n@media screen and (max-width: 767px) {\n  .main-nav-link-wrap {\n    padding: 0 4px;\n  }\n}\n.nav-icon {\n  text-align: center;\n  font-size: 14px;\n  width: 14px;\n  height: 14px;\n  will-change: transform;\n}\n.nav-icon:hover {\n  opacity: 1;\n  transform: scale(1.1);\n}\n[data-theme=\"dark\"] .main-nav-link,\n[data-theme=\"dark\"] .nav-icon,\n[data-theme=\"dark\"] .main-nav-link-wrap {\n  color: var(--red-2);\n}\n@media screen and (max-width: 767px) {\n  .main-nav-link-wrap {\n    display: none;\n  }\n}\n.main-nav-link-wrap:hover .main-nav-icon:before {\n  transform: rotate(90deg) scale(1.1);\n}\n.main-nav-link-wrap:hover .main-nav-icon {\n  transform: scale(1.1);\n}\n.main-nav-link-wrap:hover .main-nav-icon.rotate {\n  transform: rotate(90deg) scale(1.1);\n}\n.main-nav-link {\n  letter-spacing: 1px;\n  font-weight: 700;\n  opacity: 0.7;\n}\n.main-nav-icon {\n  cursor: var(--cursor-pointer) !important;\n  padding: 15px 5px;\n  display: flex;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 400;\n  transition: transform 0.3s, color 0.3s;\n  will-change: transform;\n}\n.main-nav-icon.rotate {\n  transform: rotate(90deg);\n}\n.main-nav-icon:before {\n  font-size: 24px;\n  font-weight: 400;\n  transform: rotate(90deg);\n  transition: transform 0.3s, color 0.3s;\n  will-change: transform;\n}\n#main-nav-toggle {\n  display: none;\n}\n@media screen and (max-width: 767px) {\n  #main-nav-toggle {\n    display: block;\n  }\n}\n#sub-nav,\n#i18n-nav {\n  display: flex;\n  align-items: center;\n}\n#nav-sun-btn:before,\n#nav-moon-btn:before,\n#nav-circle-half-stroke-btn:before {\n  font-weight: 700;\n}\n#i18n-nav {\n  margin-left: 8px;\n}\n.custom-dropdown {\n  position: relative;\n}\n.select-selected {\n  padding: 14px;\n  color: var(--red-2);\n  cursor: var(--cursor-pointer) !important;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.select-items {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  border-radius: 5px;\n  background-color: var(--color-wrap);\n  margin-top: 5px;\n  display: none;\n  z-index: 1;\n  font-size: 14px;\n  overflow: hidden;\n  box-shadow: var(--shadow-card);\n}\n.select-items li {\n  list-style: none;\n  padding: 10px;\n  cursor: var(--cursor-pointer) !important;\n  color: var(--red-2);\n  transition: 1s;\n}\n.select-items li:hover {\n  color: #fff;\n  background: var(--red-1);\n}\n.select-items.show {\n  display: block;\n}\n.select-items li.selected {\n  background: var(--red-1);\n  color: #fff;\n}\n.hr-line {\n  margin: 10px 35px;\n  opacity: 0.3;\n  height: 4px;\n  background-image: linear-gradient(to right, var(--red-0) 50%, transparent 0%);\n  background-size: 50px 4px;\n  background-repeat: repeat-x;\n  filter: drop-shadow(0px 0px 2px var(--red-1));\n  transition: opacity 0.3s, color 0.3s;\n}\n.hr-line:hover {\n  opacity: 0.5;\n}\n.article-inner {\n  background: var(--color-wrap);\n  border-radius: 10px;\n  display: flow-root;\n  transition: 0.3s;\n}\n.article-meta {\n  display: flex;\n  flex-direction: column;\n  padding: 20px 35px 0;\n}\n.article-date-link,\n.article-category-link {\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 14px;\n  color: var(--red-1);\n  background: var(--red-5);\n  border-radius: 10px;\n  padding: 10px 18px;\n  margin: 0 12px 1em 0;\n  box-shadow: var(--shadow-meta);\n  transition: 0.3s;\n}\n.article-date {\n  display: flex;\n}\n.article-date-link:before {\n  margin-right: 10px;\n}\n.article-category {\n  display: flex;\n  flex-wrap: wrap;\n}\n.article-category-link:before {\n  font-weight: 700;\n  margin-right: 10px;\n}\n.article-entry {\n  overflow: hidden;\n  color: var(--color-default);\n  padding: 0 35px;\n}\n.article-entry:before,\n.article-entry:after {\n  content: \"\";\n  display: table;\n}\n.article-entry:after {\n  clear: both;\n}\n@media screen and (max-width: 767px) {\n  .article-entry {\n    padding: 0 20px;\n  }\n}\n.article-entry p,\n.article-entry table {\n  line-height: 1.8em;\n  margin: 1.2em 0;\n}\n.article-entry h1,\n.article-entry h2,\n.article-entry h3,\n.article-entry h4,\n.article-entry h5,\n.article-entry h6 {\n  font-weight: bold;\n  line-height: 1.2em;\n  margin: 1.2em 0 0.8em;\n}\n.article-entry h1:before,\n.article-entry h2:before,\n.article-entry h3:before,\n.article-entry h4:before,\n.article-entry h5:before,\n.article-entry h6:before {\n  font-family: \"iconfont\";\n  font-weight: normal;\n}\n.article-entry h1 a,\n.article-entry h2 a,\n.article-entry h3 a,\n.article-entry h4 a,\n.article-entry h5 a,\n.article-entry h6 a {\n  font-family: \"iconfont\";\n  opacity: 0.5;\n  margin-right: 5px;\n  transition: 0.3s;\n}\n.article-entry h1 a:hover,\n.article-entry h2 a:hover,\n.article-entry h3 a:hover,\n.article-entry h4 a:hover,\n.article-entry h5 a:hover,\n.article-entry h6 a:hover {\n  opacity: 0.8;\n  text-decoration: none !important;\n}\n.article-entry h2 {\n  margin-bottom: 40px;\n}\n.article-entry a {\n  color: var(--color-link);\n  text-decoration: none;\n  word-break: break-word;\n}\n.article-entry a:hover {\n  text-decoration: underline;\n}\n.article-entry a:not(:has(code),\n.article-entry h1 a,\n.article-entry h2 a,\n.article-entry h3 a,\n.article-entry h4 a,\n.article-entry h5 a,\n.article-entry h6 a,\n.article-entry .post-link-card a,\n.article-entry .friend-item-wrap a,\n.article-entry a.article-gallery-item)::after {\n  font-family: \"iconfont\";\n  content: \"\\e639\";\n  font-size: 0.5em;\n  margin: 0 0.5em;\n  vertical-align: bottom;\n  font-style: normal;\n}\n.article-entry a:not(h1 a,\n.article-entry h2 a,\n.article-entry h3 a,\n.article-entry h4 a,\n.article-entry h5 a,\n.article-entry h6 a) code::after {\n  font-family: \"iconfont\";\n  content: \"\\e639\";\n  font-size: 0.5em;\n  margin: 0 0.5em;\n  vertical-align: bottom;\n  font-style: normal;\n}\n.article-entry ul,\n.article-entry ol,\n.article-entry dl {\n  margin-top: 1.2em;\n  margin-bottom: 1.2em;\n}\n.article-entry li:hover::marker {\n  transition: color 0.2s;\n  color: var(--red-1);\n}\n.article-entry img {\n  opacity: 0;\n  transition: 0.3s;\n}\n.article-entry img,\n.article-entry video {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: auto;\n}\n.article-entry img.lazyloaded {\n  opacity: 1;\n  animation: blur 0.8s ease-in-out forwards;\n}\n.article-entry iframe {\n  border: none;\n}\n.article-entry table {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n.article-entry th {\n  font-weight: bold;\n  border-bottom: 3px solid var(--color-border);\n  padding-bottom: 0.5em;\n}\n.article-entry td {\n  border-bottom: 1px solid var(--color-border);\n  padding: 10px 0;\n}\n.article-entry blockquote {\n  background: var(--red-5-5);\n  border-left: 6px var(--red-4) solid;\n  margin: 1.2em 0;\n  border-radius: 10px;\n  transition: 0.3s;\n  padding: 1px 10px;\n  box-shadow: var(--shadow-meta);\n}\n.article-entry blockquote:hover {\n  box-shadow: var(--shadow-meta-hover);\n}\n.article-entry blockquote footer {\n  font-size: 14px;\n  margin: 1.8em 0;\n}\n.article-entry blockquote footer cite:before {\n  content: \"—\";\n  padding: 0 0.5em;\n}\n.article-entry details {\n  padding: 18px 12px;\n  border-radius: 10px;\n  background-color: var(--red-5-5);\n  box-shadow: var(--shadow-meta);\n  transition: 0.3s;\n}\n.article-entry details:hover {\n  box-shadow: var(--shadow-meta-hover);\n}\n.article-entry summary {\n  font-size: 1.1em;\n  font-weight: bold;\n  cursor: var(--cursor-pointer) !important;\n  padding: 8px;\n  border: none;\n  border-radius: 10px;\n  transition: 0.3s;\n}\n.article-entry summary:hover {\n  background-color: var(--red-5);\n}\n.article-entry details[open] summary {\n  background-color: var(--red-5);\n}\n.article-entry details[open] summary:hover {\n  background-color: var(--red-5);\n}\n.article-entry details p {\n  margin: 20px 0 0;\n  padding: 10px;\n  background-color: var(--color-footer-background);\n  border-radius: 10px;\n  transition: 0.3s;\n}\n.article-entry .pullquote {\n  text-align: left;\n  width: 45%;\n  margin: 0;\n}\n.article-entry .pullquote.left {\n  margin-left: 0.5em;\n  margin-right: 1em;\n}\n.article-entry .pullquote.right {\n  margin-right: 0.5em;\n  margin-left: 1em;\n}\n.article-entry .caption {\n  color: var(--grey-9);\n  display: block;\n  font-size: 0.9em;\n  margin-top: 0.5em;\n  position: relative;\n  text-align: center;\n}\n.article-entry .video-container {\n  position: relative;\n  padding-top: 56.25%;\n  height: 0;\n  overflow: hidden;\n}\n.article-entry .video-container iframe,\n.article-entry .video-container object,\n.article-entry .video-container embed {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin-top: 0;\n}\n.article-more-link a {\n  display: inline-block;\n  line-height: 1em;\n  padding: 10px 18px;\n  border-radius: 10px;\n  background: var(--red-5);\n  color: var(--red-1);\n  text-decoration: none;\n  box-shadow: var(--shadow-meta);\n  transition: 0.3s;\n}\n.article-more-link a:hover {\n  background: var(--color-link);\n  color: #fff;\n  text-decoration: none;\n}\n.article-footer {\n  font-size: 14px;\n  margin: 0 35px 20px;\n}\n.article-footer:before,\n.article-footer:after {\n  content: \"\";\n  display: table;\n}\n.article-footer:after {\n  clear: both;\n}\n@media screen and (max-width: 767px) {\n  .article-footer {\n    margin: 0 20px 20px;\n  }\n}\n.article-footer:hover:before {\n  opacity: 0.5;\n}\n.article-footer:before {\n  content: \"\";\n  display: block;\n  margin-top: 10px;\n  opacity: 0.3;\n  height: 4px;\n  background-image: linear-gradient(to right, var(--red-0) 50%, transparent 0%);\n  background-size: 50px 4px;\n  background-repeat: repeat-x;\n  filter: drop-shadow(0px 0px 2px var(--red-1));\n  transition: 0.3s;\n}\n.article-footer a {\n  text-decoration: none;\n}\n.article-tag-list-link,\n.article-comment-link,\n.article-visitor-link {\n  color: var(--red-1);\n  margin-top: 20px;\n}\n.article-tag-list-item {\n  float: left;\n  text-decoration: none;\n  text-transform: uppercase;\n  background: var(--red-5);\n  border-radius: 10px;\n  padding: 8px 15px;\n  margin-top: 20px;\n  margin-right: 10px;\n  box-shadow: var(--shadow-meta);\n}\n.article-tag-list-link:before {\n  margin-right: 10px;\n}\n.article-comment-link {\n  float: right;\n  background: var(--red-5);\n  margin-left: 20px;\n  border-radius: 10px;\n  padding: 8px 15px;\n}\n.article-comment-link:before {\n  margin-right: 10px;\n}\n.article-visitor-link {\n  float: right;\n  font-size: 14px;\n  background: var(--red-5);\n  margin-left: 20px;\n  border-radius: 10px;\n  padding: 8px 15px;\n}\n#article-nav {\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  overflow: hidden;\n}\n@media screen and (min-width: 768px) {\n  #article-nav {\n    flex-direction: row;\n  }\n}\n.article-nav-link-wrap {\n  color: #fff;\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 20px;\n  opacity: 0.9;\n  transition: opacity 0.3s;\n  height: 150px;\n  min-height: 150px;\n  flex-shrink: 0;\n}\n.article-nav-link-wrap a,\n.article-nav-link-wrap img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  filter: brightness(70%);\n}\n.article-nav-link-wrap img {\n  display: block;\n  opacity: 0;\n  object-fit: cover;\n  z-index: -1;\n}\n.article-nav-link-wrap img.lazyloaded {\n  opacity: 1;\n}\n.article-nav-link-wrap:hover {\n  opacity: 1;\n}\n.article-nav-link-right {\n  align-items: flex-end;\n  padding-right: 20px;\n}\n.article-nav-caption {\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n.article-nav-title {\n  font-size: 1.2em;\n  line-height: 1.8em;\n  margin-top: 0.8em;\n  text-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.5);\n}\n.article-gallery {\n  background: #000;\n  position: relative;\n}\n.article-gallery-photos {\n  position: relative;\n  overflow: hidden;\n}\n.article-gallery-img {\n  display: none;\n  max-width: 100%;\n}\n.article-gallery-img:first-child {\n  display: block;\n}\n.article-gallery-img.loaded {\n  position: absolute;\n  display: block;\n}\n.article-gallery-img img {\n  display: block;\n  max-width: 100%;\n  margin: 0 auto;\n}\n.katex-display {\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n.katex-display::-webkit-scrollbar {\n  display: none;\n}\n.katex {\n  width: calc(100% - 2px);\n}\n.katex-html {\n  padding: 3px;\n}\n.katex-html .base {\n  margin: 0 auto;\n}\n.katex-html:has(span.tag) {\n  display: flex !important;\n}\n.katex-display>.katex>.katex-html>.tag {\n  position: relative !important;\n  float: right;\n  margin-left: 0.25rem;\n}\n.post-link {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.post-wrap-left,\n.post-wrap-right {\n  width: 100%;\n  height: 230px;\n  margin-bottom: 40px;\n  position: relative;\n  border-radius: 10px;\n  background: var(--color-wrap);\n  display: flex;\n  transition: 0.3s;\n}\n[data-theme=\"dark\"] .post-wrap-left,\n[data-theme=\"dark\"] .post-wrap-right {\n  box-shadow: var(--shadow-card);\n}\n.post-wrapper {\n  border-radius: 10px;\n  transition: 0.3s;\n}\n.post-wrapper .aos-animate {\n  transition-property: initial !important;\n}\n@media screen and (min-width: 768px) {\n  .post-wrapper .aos-animate:hover {\n    box-shadow: var(--shadow-card-hover);\n  }\n}\n.post-wrapper img {\n  will-change: transform;\n}\n@media screen and (min-width: 768px) {\n  .post-wrapper:hover {\n    transform: scale(1.01);\n  }\n  .post-wrapper:hover img {\n    transform: scale(1.05);\n  }\n}\n.post-wrap-right {\n  flex-direction: row-reverse;\n}\n@media screen and (max-width: 767px) {\n  .post-wrap-left,\n  .post-wrap-right {\n    flex-direction: column;\n    height: 400px;\n  }\n}\n.post-info {\n  height: 100%;\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n.post-meta {\n  display: flex;\n  justify-content: flex-end;\n  margin: 5px 0;\n}\n.post-meta span {\n  font-size: 14px;\n  color: var(--grey-7);\n  margin: 0 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.post-meta span:before {\n  margin: 0 10px;\n}\n@media screen and (max-width: 767px) {\n  .post-meta span:before {\n    margin: 0;\n  }\n}\n.post-article {\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 3;\n  line-clamp: 3;\n  overflow: hidden;\n  line-height: 30px;\n  font-size: 15px;\n  color: var(--grey-7);\n}\n.post-article a {\n  color: var(--color-link);\n}\n.post-cover-left,\n.post-cover-right {\n  width: 40%;\n  position: relative;\n  overflow: hidden;\n  min-height: 95px;\n  background-color: var(--color-wrap);\n  flex-shrink: 0;\n  pointer-events: none;\n}\n@media screen and (max-width: 767px) {\n  .post-cover-left,\n  .post-cover-right {\n    width: 100%;\n    height: 45%;\n  }\n}\n.post-cover-left img,\n.post-cover-right img {\n  display: block;\n  opacity: 0;\n  transition: 0.2s;\n  position: absolute;\n  left: 0;\n  top: 0;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n}\n.post-cover-left img.lazyloaded,\n.post-cover-right img.lazyloaded {\n  opacity: 1;\n  animation: blur 0.8s forwards;\n}\n@media screen and (min-width: 768px) {\n  .post-cover-left {\n    border-radius: 10px 0 0 10px;\n    -webkit-clip-path: polygon(0 0, 92% 0%, 100% 100%, 0% 100%);\n    clip-path: polygon(0 0, 92% 0%, 100% 100%, 0% 100%);\n  }\n}\n@media screen and (max-width: 767px) {\n  .post-cover-left {\n    border-radius: 10px 10px 0 0;\n  }\n}\n@media screen and (min-width: 768px) {\n  .post-cover-right {\n    border-radius: 0 10px 10px 0;\n    -webkit-clip-path: polygon(0 0, 100% 0%, 100% 100%, 8% 100%);\n    clip-path: polygon(0 0, 100% 0%, 100% 100%, 8% 100%);\n  }\n}\n@media screen and (max-width: 767px) {\n  .post-cover-right {\n    border-radius: 10px 10px 0 0;\n  }\n}\n.post-title {\n  padding: 20px 0;\n  color: var(--color-link);\n  font-size: 25px;\n  letter-spacing: 1px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: color 0.3s;\n}\n.post-sticky {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 70px;\n  height: 35px;\n  background: var(--color-sticky);\n  color: var(--red-1);\n  font-weight: bold;\n  font-size: 15px;\n  z-index: 1;\n  transition: 0.3s;\n  border-top-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n}\n.post-sticky:before {\n  margin-right: 5px;\n}\n.post-categories-wrapper {\n  display: flex;\n  gap: 40px;\n  margin-bottom: 40px;\n  flex-wrap: wrap;\n}\n@media screen and (max-width: 767px) {\n  .post-categories-wrapper {\n    flex-direction: column;\n  }\n}\n.post-categories-wrapper.aos-animate {\n  transition-property: initial !important;\n}\n.post-categories-wrap {\n  width: calc(50% - 20px);\n  flex-grow: 1;\n  height: 230px;\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n  transition: 1s;\n}\n@media screen and (max-width: 767px) {\n  .post-categories-wrap {\n    width: 100%;\n    height: 180px;\n  }\n}\n@media screen and (min-width: 768px) {\n  .post-categories-wrap:hover {\n    transform: scale(1.01);\n  }\n  .post-categories-wrap:hover img {\n    opacity: 0.6 !important;\n    transform: scale(1.05);\n  }\n}\n.post-categories-cover {\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  min-height: 95px;\n  flex-shrink: 0;\n  pointer-events: none;\n  transition: 0.6s;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #000;\n}\n@media screen and (max-width: 767px) {\n  .post-categories-cover {\n    width: 100%;\n  }\n}\n.post-categories-cover img {\n  display: block;\n  opacity: 0;\n  transition: 0.6s;\n  position: absolute;\n  left: 0;\n  top: 0;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n}\n.post-categories-cover img.lazyloaded {\n  opacity: 0.7;\n  animation: blur 0.8s forwards;\n}\n.post-categories-cover h2,\n.post-categories-cover h3 {\n  z-index: 1;\n  color: #fff;\n  text-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.5);\n  margin: 0 5px;\n}\n.post-categories-cover h2 {\n  font-size: 35px;\n}\n.post-categories-cover h3 {\n  font-size: 20px;\n  margin-top: 30px;\n}\n#comments {\n  background: var(--color-wrap);\n  padding: 20px 35px;\n  border-radius: 10px;\n  margin: 10px 0;\n}\n#comments a {\n  color: var(--color-link);\n}\n#comments .comment-header {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n#comments .comment-header .comment-title {\n  margin: 0 0 10px;\n  width: 100%;\n  text-align: center;\n  color: var(--color-default);\n}\n#comments .comment-header .comment-selector {\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 15px;\n}\n#comments .comment-header .comment-selector-wrap {\n  display: flex;\n  overflow: hidden;\n  border-radius: 0.4em;\n}\n#comments .comment-header .comment-selector-wrap .selector-item {\n  font-size: 0.8rem;\n  color: #555;\n  background-color: #c9ccd0;\n  transition: 0.3s;\n  padding: 0.31rem 0.32rem;\n  cursor: var(--cursor-pointer) !important;\n  font-weight: bold;\n}\n#comments .comment-header .comment-selector-wrap .selector-item span {\n  cursor: var(--cursor-pointer) !important;\n}\n[data-theme=\"dark\"] #comments .comment-header .comment-selector-wrap .selector-item {\n  color: #ccc;\n  background-color: #555;\n}\n#comments .comment-header .comment-selector-wrap .selector-item:hover {\n  background-color: var(--red-4);\n}\n#comments .comment-header .comment-selector-wrap .selector-item.active {\n  color: #fff;\n  background-color: var(--red-1);\n}\n.giscus-comment {\n  width: auto;\n}\n.archives-outer-wrap {\n  background: var(--color-wrap);\n  border-radius: 10px;\n  padding: 15px 0;\n}\n.archives-wrap {\n  padding: 20px 50px;\n}\n.archive-year-wrap {\n  margin-bottom: 2em;\n  position: relative;\n}\n.archive-year-wrap:before {\n  content: \"\";\n  width: 100%;\n  border-bottom: 1px solid var(--color-h2-border);\n  position: absolute;\n  bottom: -15px;\n  transition: 1s;\n}\n.archive-year-wrap:after {\n  content: \"\";\n  position: absolute;\n  background: var(--color-h2-after);\n  width: 1em;\n  height: 7px;\n  bottom: -18px;\n  left: 0;\n  border-radius: 10px;\n  box-shadow: var(--shadow-red-6-shadow);\n  transition: 0.3s;\n}\n.archive-year-wrap:hover:after {\n  width: 3em;\n}\n.archive-year {\n  text-decoration: none;\n  color: var(--color-archive-year);\n  margin-bottom: 15px;\n  font-weight: bold;\n  font-size: 25px;\n}\n.archive-article {\n  padding: 15px 0 15px 25px;\n  display: flex;\n  align-items: center;\n}\n.archive-article:before {\n  content: \"\";\n  display: inline-block;\n  vertical-align: middle;\n  width: 6px;\n  height: 15px;\n  background: var(--color-h2-after);\n  margin: -2px 11px 0 -25px;\n  box-shadow: var(--shadow-red-6-shadow);\n  opacity: 0.5;\n  transition: 0.2s;\n  flex-shrink: 0;\n}\n.archive-article:hover:before {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  opacity: 1;\n}\n.archive-article:hover .archive-article-title {\n  opacity: 1;\n}\n.archive-article-date-wrap {\n  flex-shrink: 0;\n}\n.archive-article-date-wrap a {\n  text-decoration: none;\n}\n.dt-published {\n  color: var(--grey-9);\n  margin-left: 5px;\n}\n.archive-article-title {\n  display: inline-block;\n  text-decoration: none;\n  font-weight: bold;\n  color: var(--red-0);\n  transition: 0.3s;\n  opacity: 0.7;\n  margin-left: 15px;\n}\n#page-nav {\n  margin: 50px auto;\n  background: var(--color-wrap);\n  border-radius: 10px;\n  text-align: center;\n  color: var(--grey-9);\n  overflow: hidden;\n  transition: 1s;\n}\n#page-nav:hover {\n  box-shadow: var(--shadow-card);\n}\n#page-nav a,\n#page-nav span {\n  padding: 10px 15px;\n}\n#page-nav a {\n  color: var(--grey-9);\n  text-decoration: none;\n  transition: 0.2s;\n}\n#page-nav a:hover {\n  background: var(--red-2);\n  box-shadow: var(--shadow-red-6-shadow);\n  color: #fff;\n}\n#page-nav .prev {\n  float: left;\n  padding: 15px;\n}\n#page-nav .next {\n  float: right;\n  padding: 15px;\n}\n#page-nav .page-number {\n  display: inline-block;\n  border-radius: 10px;\n  margin: 5px;\n}\n@media screen and (max-width: 479px) {\n  #page-nav .page-number {\n    display: none;\n  }\n}\n#page-nav .current {\n  background: var(--red-1);\n  color: #fff;\n  font-weight: bold;\n  box-shadow: var(--shadow-red-6-shadow);\n}\n@media screen and (max-width: 479px) {\n  #page-nav .current {\n    display: inline-block;\n  }\n}\n#page-nav .space {\n  display: inline-block;\n  margin: 5px;\n  color: var(--color-border);\n}\n@media screen and (max-width: 479px) {\n  #page-nav .space {\n    display: none;\n  }\n}\n.tag-wrap,\n.category-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 50px;\n}\n.tag-wrap a,\n.category-wrap a {\n  text-decoration: none;\n}\n.archives-tag-list-item,\n.archives-category-list-item {\n  display: flex;\n  text-transform: uppercase;\n  background: var(--red-5);\n  border-radius: 10px;\n  padding: 8px 15px;\n  margin: 5px;\n  box-shadow: var(--shadow-meta);\n}\n.archives-tag-list-link,\n.archives-category-list-link {\n  color: var(--red-1);\n  font-size: 12px;\n}\n.archives-tag-list-link:before,\n.archives-category-list-link:before {\n  margin-right: 10px;\n}\n.archives-category-list-item {\n  background: var(--red-5-5);\n  padding: 10px 20px;\n}\n.archives-category-list-link {\n  font-size: 14px;\n}\n.archives-category-list-link:before {\n  font-weight: 700;\n}\n#footer {\n  background-color: linear-gradient(to top, var(--color-footer-background) 50%, transparent);\n  padding: 40px 0 20px;\n  color: var(--grey-9);\n  transition: 1s;\n}\n#footer:hover .footer-line {\n  opacity: 0.5;\n}\n#footer a {\n  color: var(--color-link);\n  text-decoration: none;\n}\n#footer a:hover {\n  text-decoration: underline;\n}\n#footer .footer-beian a {\n  color: var(--grey-9);\n}\n.footer-line {\n  margin: 20px 0 40px;\n  opacity: 0.3;\n  width: 200%;\n  height: 10px;\n  background: linear-gradient(to left, var(--red-1) 50%, transparent 0%) repeat-x 0 0/100px 10px;\n  transition: opacity 0.3s;\n  animation: transform-all 3s linear infinite;\n  filter: drop-shadow(0px 0px 2px var(--red-1));\n}\n#footer-info {\n  line-height: 1.8em;\n  font-size: 0.85em;\n}\n#footer-info div {\n  margin: 5px 0;\n  display: flex;\n  justify-content: center;\n}\n.icon-brush,\n.icon-coffee,\n.icon-eye,\n.icon-user {\n  margin: 0 5px;\n}\n.footer-info-sep {\n  width: 25px;\n  opacity: 0.8;\n}\n.footer-info-sep.rotate {\n  animation: rotate-all 3s linear infinite;\n}\n@supports (-webkit-mask: var(--footer-icon) no-repeat center/80%) {\n  .footer-info-sep {\n    background-color: var(--red-1);\n    -webkit-mask: var(--footer-icon) no-repeat center/80%;\n  }\n}\n@supports (mask: var(--footer-icon) no-repeat center/80%) {\n  .footer-info-sep {\n    background-color: var(--red-1);\n    mask: var(--footer-icon) no-repeat center/80%;\n  }\n}\n@supports not ((mask: var(--footer-icon) no-repeat center/80%) and (-webkit-mask: var(--footer-icon) no-repeat center/80%)) {\n  .footer-info-sep {\n    background: var(--footer-icon) no-repeat center/80%;\n  }\n}\n@media screen and (min-width: 960px) {\n  #mobile-nav {\n    display: none;\n  }\n}\n@media screen and (max-width: 959px) {\n  #mobile-nav {\n    position: fixed;\n    top: 0;\n    left: -280px;\n    width: 280px;\n    height: 100%;\n    background: var(--color-mobile-nav-background);\n    z-index: 1001;\n    transition: 0.3s;\n    overflow: auto;\n  }\n  #mobile-nav::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n  }\n  .mobile-nav-on #mobile-nav {\n    left: 0;\n  }\n}\n#mobile-nav .sidebar-wrap {\n  background: var(--color-mobile-nav-background);\n}\n.article-entry pre,\n.article-entry .highlight {\n  background: var(--highlight-background);\n  padding: 0 20px 15px;\n  border-radius: 10px;\n  color: var(--highlight-foreground);\n  line-height: 25.2px;\n}\n.article-entry .highlight .gutter pre,\n.article-entry .gist .gist-file .gist-data .line-numbers {\n  color: #666;\n  font-size: 0.85em;\n}\n.article-entry .mermaid {\n  background: transparent;\n}\n.article-entry figure {\n  display: block;\n  margin: 1.2em 0;\n  transition: 0.3s;\n  box-shadow: var(--shadow-card);\n}\n.article-entry figure:hover {\n  box-shadow: var(--shadow-card-hover);\n}\n.article-entry figure ::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n  background-color: transparent;\n}\n.article-entry figure ::-webkit-scrollbar-track {\n  border-radius: 10px;\n  background-color: transparent;\n}\n.article-entry figure ::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  background-color: var(--highlight-scrollbar);\n}\n.article-entry pre,\n.article-entry code,\n.article-entry kbd {\n  font-family: 'Menlo','Monaco','Consolas','monospace';\n  font-size: 95%;\n  transition: 0.3s;\n  word-break: break-word;\n}\n.article-entry code,\n.article-entry kbd {\n  background: var(--color-code-background);\n  padding: 1px 5px;\n  border-radius: 5px;\n  color: var(--color-link);\n}\n.article-entry pre {\n  border-radius: 0;\n}\n.article-entry pre code {\n  background: none;\n  text-shadow: none;\n  color: var(--highlight-foreground);\n  padding: 0;\n}\n.article-entry .highlight {\n  overflow: hidden;\n  interpolate-size: allow-keywords;\n}\n.article-entry .highlight.code-closed pre {\n  height: 0;\n  opacity: 0;\n  overflow: hidden;\n}\n.article-entry .highlight pre {\n  border: none;\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n.article-entry .highlight table {\n  margin: 0;\n  table-layout: fixed;\n}\n.article-entry .highlight td {\n  border: none;\n  padding: 0;\n}\n.article-entry .highlight figcaption {\n  font-size: 0.85em;\n  color: var(--highlight-comment);\n  line-height: 1em;\n  margin-bottom: 1em;\n}\n.article-entry .highlight figcaption:before,\n.article-entry .highlight figcaption:after {\n  content: \"\";\n  display: table;\n}\n.article-entry .highlight figcaption:after {\n  clear: both;\n}\n.article-entry .highlight figcaption a {\n  float: right;\n}\n.article-entry .highlight .gutter {\n  width: 30px;\n  vertical-align: top;\n}\n.article-entry .highlight .gutter pre {\n  text-align: right;\n  padding-right: 20px;\n}\n.article-entry .highlight .line {\n  height: 25.2px;\n}\n.article-entry .highlight .line.marked {\n  background: var(--highlight-selection);\n}\n.article-entry .highlight .line .deletion {\n  background: rgba(255,94,94,0.502);\n}\n.article-entry .highlight .line .addition {\n  background: rgba(94,255,102,0.478);\n}\n.article-entry .gist {\n  border-style: solid;\n  border-color: var(--color-border);\n  border-width: 1px 0;\n  background: var(--highlight-background);\n  padding: 15px 20px 15px 0;\n}\n.article-entry .gist .gist-file {\n  border: none;\n  font-family: 'Menlo','Monaco','Consolas','monospace';\n  margin: 0;\n}\n.article-entry .gist .gist-file .gist-data {\n  background: none;\n  border: none;\n}\n.article-entry .gist .gist-file .gist-data .line-numbers {\n  background: none;\n  border: none;\n  padding: 0 20px 0 0;\n}\n.article-entry .gist .gist-file .gist-data .line-data {\n  padding: 0 !important;\n}\n.article-entry .gist .gist-file .highlight {\n  margin: 0;\n  padding: 0;\n  border: none;\n}\n.article-entry .gist .gist-file .gist-meta {\n  background: var(--highlight-background);\n  color: var(--highlight-comment);\n  font: 0.85em  'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n  text-shadow: 0 0;\n  padding: 0;\n  margin-top: 1em;\n  margin-left: 20px;\n}\n.article-entry .gist .gist-file .gist-meta a {\n  color: var(--color-link);\n  font-weight: normal;\n}\n.article-entry .gist .gist-file .gist-meta a:hover {\n  text-decoration: underline;\n}\npre .comment,\npre .title {\n  color: var(--highlight-comment);\n}\npre .variable,\npre .attribute,\npre .tag,\npre .regexp,\npre .ruby .constant,\npre .xml .tag .title,\npre .xml .pi,\npre .xml .doctype,\npre .html .doctype,\npre .css .id,\npre .css .class,\npre .css .pseudo {\n  color: var(--highlight-red);\n}\npre .number,\npre .preprocessor,\npre .built_in,\npre .literal,\npre .params,\npre .constant {\n  color: var(--highlight-orange);\n}\npre .class,\npre .ruby .class .title,\npre .css .rules .attribute,\npre .string,\npre .value,\npre .inheritance,\npre .header,\npre .ruby .symbol,\npre .xml .cdata {\n  color: var(--highlight-green);\n}\npre .css .hexcolor {\n  color: var(--highlight-aqua);\n}\npre .function,\npre .python .decorator,\npre .python .title,\npre .ruby .function .title,\npre .ruby .title .keyword,\npre .perl .sub,\npre .javascript .title,\npre .coffeescript .title {\n  color: var(--highlight-blue);\n}\npre .keyword,\npre .javascript .function {\n  color: var(--highlight-purple);\n}\n.code-area {\n  width: 100%;\n  overflow: auto;\n  transition: 0.3s;\n}\n.code-figcaption {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  height: 40px;\n  align-items: center;\n  flex-shrink: 0;\n  background: linear-gradient(to right, transparent 0%, var(--highlight-nav) 50%, transparent 100%);\n  margin-bottom: 10px;\n}\n.code-decoration {\n  width: 70px;\n}\n.code-decoration:after {\n  content: \" \";\n  position: absolute;\n  border-radius: 50%;\n  background: #ff5f56;\n  width: 12px;\n  height: 12px;\n  box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n.code-left-wrap,\n.code-right-wrap {\n  display: flex;\n}\n.code-copy {\n  margin: 5px;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: var(--cursor-pointer) !important;\n  color: #fff;\n  transition: 0.3s;\n}\n.code-copy:hover {\n  opacity: 0.7;\n}\n.code-lang {\n  margin: 5px;\n  line-height: 0;\n  font-weight: bold;\n  z-index: 1;\n  filter: invert(50%);\n  cursor: var(--cursor-pointer) !important;\n}\n.code-expand {\n  margin: 5px;\n  filter: invert(50%);\n  z-index: 1;\n  cursor: var(--cursor-pointer) !important;\n  transition: 0.3s;\n  transform: rotate(0deg);\n  color: #fff;\n}\n.code-expand:hover {\n  opacity: 0.7;\n}\n.code-closed .code-expand {\n  transform: rotate(-180deg) !important;\n  transition: 0.3s;\n}\n.friend-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n}\n.friend-item-wrap {\n  width: 48%;\n  height: 100px;\n  background: var(--color-wrap);\n  box-shadow: var(--shadow-card);\n  border-radius: 10px;\n  position: relative;\n  display: flex;\n  margin: 1%;\n  transition: 0.3s;\n}\n.friend-item-wrap:hover {\n  transform: scale(1.015);\n  box-shadow: var(--shadow-card-hover);\n}\n@media screen and (max-width: 767px) {\n  .friend-item-wrap {\n    width: 98%;\n  }\n}\n.friend-item-wrap a {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.friend-icon-wrap {\n  width: 100px;\n  height: 100%;\n  pointer-events: none;\n  flex-shrink: 0;\n}\n.friend-icon {\n  height: 0;\n  width: 100%;\n  padding-bottom: 100%;\n  position: relative;\n}\n.friend-icon img {\n  display: block;\n  opacity: 0;\n  transition: opacity 0.2s;\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  object-fit: cover;\n  border-radius: 50%;\n  width: 70%;\n  height: 70%;\n}\n.friend-icon img.lazyloaded {\n  opacity: 1;\n  animation: blur 0.8s forwards;\n}\n.friend-info-wrap {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 0 8px;\n  overflow: hidden;\n}\n.friend-info-wrap div {\n  margin: 10px 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.friend-name {\n  color: var(--red-2);\n  font-size: 18px;\n  font-weight: bold;\n  white-space: nowrap;\n}\n.friend-desc {\n  color: var(--grey-9);\n  font-size: 14px;\n  -webkit-line-clamp: 2;\n  line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n}\n.post-link-card-wrap {\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n}\n.post-link-card {\n  display: flex;\n  padding: 10px;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  transition: 0.3s;\n  box-shadow: var(--shadow-card);\n  width: 60%;\n}\n@media screen and (max-width: 767px) {\n  .post-link-card {\n    width: 95%;\n  }\n}\n.post-link-card:hover {\n  transform: scale(1.015);\n  box-shadow: var(--shadow-card-hover);\n}\n.post-link-card a {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.post-link-card-cover-wrap {\n  height: 66px;\n  width: 68px;\n  padding-right: 20px;\n  flex-shrink: 0;\n  pointer-events: none;\n}\n.post-link-card-cover-wrap img {\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  object-fit: cover;\n}\n.post-link-card-cover-wrap.auto {\n  background: var(--color-background);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  padding-right: 0;\n  margin-right: 20px;\n}\n.post-link-card-cover-wrap .icon-globe {\n  font-size: 20px;\n}\n@media screen and (max-width: 767px) {\n  .post-link-card-cover-wrap {\n    display: none !important;\n  }\n}\n.post-link-card-item-wrap {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n}\n.post-link-card-item-wrap div {\n  padding: 5px 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n.post-link-card-title {\n  font-size: 18px;\n  font-weight: 700;\n  color: var(--red-1);\n}\n.post-link-card-excerpt {\n  font-size: 14px;\n  color: var(--grey-9);\n}\n.post-link-card-excerpt .icon-link {\n  font-size: 12px;\n  margin-right: 5px;\n}\n#live2d-plugin {\n  right: 0 !important;\n  left: auto !important;\n}\n#live2d-tool {\n  right: auto !important;\n  left: -10px !important;\n}\n#live2d-toggle {\n  z-index: 1;\n}\n#live2d-plugin {\n  z-index: 98 !important;\n}\n.sidebar-top {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  width: 50px;\n  height: 50px;\n  background-color: var(--color-wrap);\n  border-radius: 50%;\n  font-family: \"iconfont\";\n  box-shadow: var(--shadow-card-hover);\n  z-index: 999;\n}\n.sidebar-top .sidebar-top-taichi {\n  width: 50px;\n  height: 50px;\n  transition: 0.3s;\n  border-radius: 50%;\n}\n.sidebar-top .sidebar-top-taichi.rotate {\n  animation: rotate-all 3s linear infinite;\n}\n.sidebar-top .arrow-up {\n  transition: 0.3s;\n  opacity: 0;\n}\n.sidebar-top .arrow-up:before {\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  color: var(--red-1);\n  font-size: 20px;\n  top: 0;\n  text-align: center;\n  line-height: 50px;\n}\n.sidebar-top:hover .sidebar-top-taichi {\n  opacity: 0;\n}\n.sidebar-top:hover .arrow-up {\n  opacity: 1;\n}\n@supports (-webkit-mask: var(--top-icon) no-repeat center/100%) {\n  .sidebar-top-taichi {\n    background-color: var(--red-1);\n    -webkit-mask: var(--top-icon) no-repeat center/100%;\n  }\n}\n@supports (mask: var(--top-icon) no-repeat center/100%) {\n  .sidebar-top-taichi {\n    background-color: var(--red-1);\n    mask: var(--top-icon) no-repeat center/100%;\n  }\n}\n@supports not ((mask: var(--top-icon) no-repeat center/100%) and (-webkit-mask: var(--top-icon) no-repeat center/100%)) {\n  .sidebar-top-taichi {\n    background: var(--top-icon) no-repeat center/100%;\n  }\n}\n.sponsor-wrapper {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin: 5px 0;\n  margin-top: 10px;\n}\n.sponsor-title {\n  font-size: 18px;\n  letter-spacing: 2px;\n  color: var(--color-link);\n  opacity: 0.8;\n  text-decoration: none;\n  transition: opacity 0.2s;\n  display: block;\n  padding: 10px 0;\n  font-weight: 700;\n  user-select: none;\n}\n.sponsor-icon {\n  width: 30px;\n  margin: 0 10px;\n  opacity: 0.8;\n}\n.sponsor-icon.rotate {\n  animation: rotate-all 3s linear infinite;\n}\n@supports (-webkit-mask: var(--sponsor-icon) no-repeat center/80%) {\n  .sponsor-icon {\n    background-color: var(--red-1);\n    -webkit-mask: var(--sponsor-icon) no-repeat center/80%;\n  }\n}\n@supports (mask: var(--sponsor-icon) no-repeat center/80%) {\n  .sponsor-icon {\n    background-color: var(--red-1);\n    mask: var(--sponsor-icon) no-repeat center/80%;\n  }\n}\n@supports not ((mask: var(--sponsor-icon) no-repeat center/80%) and (-webkit-mask: var(--sponsor-icon) no-repeat center/80%)) {\n  .sponsor-icon {\n    background: var(--sponsor-icon) no-repeat center/80%;\n  }\n}\n.sponsor-button-wrapper {\n  margin: 8px 50px;\n  display: flex;\n  position: relative;\n  width: fit-content;\n  justify-content: center;\n  border: 10px var(--color-red-3-shadow) double;\n  transition: border 0.5s;\n  cursor: var(--cursor-pointer) !important;\n}\n.sponsor-button-wrapper:hover {\n  border: 10px var(--color-h2-after) double;\n}\n.sponsor-button-wrapper:hover + .sponsor-tip {\n  opacity: 0.8;\n}\n.sponsor-button-wrapper.active {\n  border: 10px var(--color-h2-after) double;\n}\n.sponsor-tip {\n  transition: opacity 0.2s;\n  color: var(--color-link);\n  opacity: 0;\n  font-size: 14px;\n  font-weight: 700;\n  letter-spacing: 1px;\n}\n.sponsor-tip.active {\n  opacity: 0.8;\n}\n.sponsor-qr {\n  gap: 5px;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n  display: none;\n  margin-top: 5px;\n}\n.sponsor-qr.active {\n  display: flex;\n}\n.sponsor-qr-image-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.sponsor-qr-name {\n  font-size: 14px;\n  opacity: 0.9;\n  color: var(--color-default);\n  margin-top: 8px;\n}\n.popup {\n  visibility: hidden;\n  position: fixed;\n  top: 10%;\n  left: 50%;\n  width: 700px;\n  max-height: 80%;\n  margin-left: -350px;\n  background: var(--color-wrap);\n  color: var(--grey-9);\n  z-index: 9999;\n  border-radius: 10px;\n  opacity: 0;\n  transform: scale(0.5);\n  transition: 0.3s;\n  box-shadow: 0 0 10px var(--color-meta-shadow);\n}\n.popup.show {\n  visibility: visible;\n  opacity: 1;\n  transform: scale(1);\n}\n@media screen and (max-width: 767px) {\n  .popup {\n    top: 0;\n    left: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 0;\n    max-height: 100%;\n  }\n}\n.reimu-popup {\n  overflow: hidden;\n  padding: 0;\n}\n.popup-btn-close {\n  color: var(--red-1);\n  font: 20px bold;\n  cursor: var(--cursor-pointer) !important;\n  padding-left: 15px;\n  transition: 0.3s;\n}\n.popup-btn-close:hover {\n  opacity: 0.8;\n}\n.reimu-search {\n  display: flex;\n  align-items: center;\n  padding: 8px 15px;\n  max-height: 50px;\n  border-bottom: 1px solid #ccc;\n}\n.reimu-search-input-icon {\n  display: inline-block;\n  width: 20px;\n  font-size: 18px;\n  vertical-align: middle;\n  margin-right: 5px;\n}\n.reimu-search-input {\n  flex: 1;\n}\n.reimu-search-input input {\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n  color: var(--grey-9);\n  font-size: 16px;\n  vertical-align: middle;\n  font-family: 'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif';\n}\n.reimu-search-input input[type=search]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n}\n.reimu-powered {\n  float: right;\n  cursor: var(--cursor-default) !important;\n}\n.reimu-powered img {\n  display: inline-block;\n  height: 18px;\n  vertical-align: middle;\n}\n.reimu-results {\n  position: relative;\n  overflow: auto;\n  padding: 15px 30px;\n  box-sizing: border-box;\n  max-height: calc(100% - 50px);\n}\n@media screen and (min-width: 768px) {\n  .reimu-results {\n    min-height: 300px;\n  }\n}\n.reimu-results hr {\n  margin: 10px 0;\n}\n.reimu-results em {\n  font-weight: bold;\n  margin: 0;\n  padding: 0 2px;\n  color: var(--red-1);\n}\n#reimu-hits {\n  margin: 10px 0 0 10px;\n}\n#reimu-hits mark {\n  background: var(--red-1);\n  color: #fff;\n}\n.reimu-hit-item-link {\n  display: block;\n  text-decoration: none;\n  color: var(--red-2);\n  padding: 12px 0 12px 25px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.reimu-hit-item-link:before {\n  content: \"\";\n  width: 6px;\n  height: 12px;\n  background: var(--color-h2-after);\n  display: inline-block;\n  vertical-align: middle;\n  margin: -2px 11px 0 -25px;\n  box-shadow: var(--shadow-red-6-shadow);\n  opacity: 0.5;\n  transition: 0.2s;\n}\n.reimu-hit-item-link:hover:before {\n  height: 6px;\n  border-radius: 50%;\n  opacity: 1;\n}\n.reimu-pagination {\n  margin: 10px auto;\n  border-radius: 10px;\n  text-align: center;\n  color: var(--grey-9);\n  overflow: hidden;\n}\n.reimu-pagination a {\n  padding: 10px 15px;\n  color: var(--grey-9);\n  text-decoration: none;\n  transition: 0.2s;\n}\n.reimu-pagination a:hover {\n  background: var(--red-2);\n  box-shadow: var(--shadow-red-6-shadow);\n  color: #fff;\n}\n.reimu-pagination .pagination-item {\n  display: inline-block;\n}\n.reimu-pagination .page-number {\n  display: inline-block;\n  border-radius: 10px;\n  margin: 5px;\n}\n.reimu-pagination .current .page-number {\n  color: #fff;\n  background: var(--red-1);\n  font-weight: bold;\n  box-shadow: var(--shadow-red-6-shadow);\n}\n.reimu-pagination .disabled-item {\n  display: none;\n}\n.reimu-bg {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  opacity: 0.5;\n}\n#reimu-hits-empty {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n#sidebar {\n  display: none;\n}\n.sidebar-left #sidebar,\n.sidebar-right #sidebar {\n  display: block;\n}\n@media screen and (max-width: 959px) {\n  .sidebar-left #sidebar,\n  .sidebar-right #sidebar {\n    display: none;\n  }\n}\n@media screen and (min-width: 960px) {\n  .sidebar-left #sidebar,\n  .sidebar-right #sidebar {\n    width: 23%;\n    margin: 0 1%;\n    height: inherit;\n  }\n}\n[data-theme=\"dark\"] .sidebar-wrap {\n  box-shadow: var(--shadow-card);\n}\n[data-theme=\"dark\"] #mobile-nav .sidebar-wrap {\n  box-shadow: 0 0 0 0;\n}\n.sidebar-wrapper {\n  transition: 0.3s;\n}\n.sidebar-wrapper .aos-animate {\n  transition-property: initial !important;\n}\n.sidebar-wrapper .aos-animate:hover {\n  box-shadow: var(--shadow-card-hover);\n}\n.sidebar-wrapper:hover {\n  transform: scale(1.015);\n}\n.sidebar-wrapper.wrap-sticky {\n  position: sticky;\n  top: 5px;\n}\n.sidebar-wrap {\n  width: 100%;\n  border-radius: 10px;\n  background: var(--color-wrap);\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  transition: 0.3s;\n  interpolate-size: allow-keywords;\n}\n.sidebar-wrap .hidden {\n  display: none;\n}\n.sidebar-author {\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  align-items: center;\n}\n.sidebar-author img {\n  display: block;\n  min-width: 100px;\n  min-height: 100px;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  transition: opacity 0.3s;\n  opacity: 0;\n  object-fit: cover;\n  margin: 20px;\n  box-shadow: 0 0 15px 5px var(--color-red-6-shadow);\n  will-change: transform;\n  transition: 0.3s;\n}\n.sidebar-author img:hover {\n  transform: scale(1.05);\n}\n.sidebar-author img.lazyloaded {\n  opacity: 1;\n  animation: blur 0.8s forwards;\n}\n.sidebar-author .sidebar-author-name {\n  font-weight: bold;\n  font-size: 20px;\n  color: var(--red-2);\n  margin: 10px;\n}\n.sidebar-author .sidebar-description {\n  color: var(--grey-7);\n  margin: 0 20px;\n}\n.sidebar-state-article,\n.sidebar-state-category,\n.sidebar-state-tag {\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  align-items: center;\n  padding: 0 20px;\n}\n.sidebar-state-article div,\n.sidebar-state-category div,\n.sidebar-state-tag div {\n  margin: 5px 0;\n}\n.sidebar-state {\n  display: flex;\n  justify-content: center;\n  padding: 25px 0;\n  color: var(--red-0);\n  opacity: 0.8;\n  transition: opacity 0.5s, color 0.5s;\n}\n.sidebar-state:hover {\n  opacity: 1;\n}\n.sidebar-state-article {\n  border-right: 1px solid var(--red-1);\n}\n.sidebar-state-tag {\n  border-left: 1px solid var(--red-1);\n}\n.sidebar-state-number {\n  font-weight: bold;\n  font-size: 20px;\n}\n.sidebar-social {\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  width: 70%;\n  flex-wrap: wrap;\n}\n.sidebar-social div a {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.sidebar-social-icon {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 25px;\n  font: 20px \"iconfont\";\n  transition: transform 0.2s;\n  will-change: transform;\n}\n.sidebar-social-icon:hover {\n  transform: scale(1.2);\n}\n.icon-email {\n  color: var(--red-2);\n}\n.icon-github {\n  color: #191717;\n}\n[data-theme=\"dark\"] .icon-github {\n  color: #bc88ff;\n}\n.icon-bilibili {\n  color: #00a1d6;\n}\n.sidebar-menu-icon,\n.sidebar-menu-link {\n  color: var(--color-link);\n  opacity: 0.8;\n  text-decoration: none;\n  transition: opacity 0.2s, color 0.2s;\n  display: block;\n  padding: 10px 15px;\n  font-weight: 700;\n}\n.sidebar-menu {\n  margin: 20px 0;\n  width: 100%;\n}\n.sidebar-menu-link-wrap {\n  display: flex;\n  position: relative;\n  width: 70%;\n  max-width: 200px;\n  margin: 8px auto;\n  justify-content: center;\n  border: 10px var(--color-red-3-shadow) double;\n  transition: border 0.5s, background 0.5s, color 0.5s;\n}\n.sidebar-menu-link-wrap:hover {\n  border: 10px var(--color-h2-after) double;\n}\n.sidebar-menu-link-wrap:hover .sidebar-menu-icon:before {\n  transform: rotate(90deg) scale(1.1);\n}\n.sidebar-menu-link-wrap:hover .sidebar-menu-icon {\n  transform: scale(1.1);\n}\n.sidebar-menu-link-wrap:hover .sidebar-menu-icon.rotate {\n  transform: rotate(90deg) scale(1.1);\n}\n.sidebar-menu-icon {\n  font-size: 24px;\n  font-weight: 400;\n  transition: transform 0.3s, background 0.5s, color 0.5s;\n  will-change: transform;\n  pointer-events: none;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n}\n.sidebar-menu-icon:before {\n  font-size: 24px;\n  font-weight: 400;\n  transform: rotate(90deg);\n  transition: transform 0.3s;\n  will-change: transform;\n}\n.sidebar-menu-icon.rotate {\n  transform: rotate(90deg);\n}\n.sidebar-menu-link-dummy {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.sidebar-menu-link {\n  pointer-events: none;\n}\n.link-active {\n  background: var(--red-0);\n  border: 10px var(--color-wrap) double;\n  box-shadow: var(--shadow-red-6-shadow);\n  opacity: 0.8;\n}\n.link-active:hover {\n  opacity: 1;\n}\n.link-active .sidebar-menu-link {\n  color: #fff;\n  opacity: 1;\n}\n.link-active .sidebar-menu-icon {\n  opacity: 1;\n  color: #fff;\n}\n.sidebar-toc {\n  width: 100%;\n  padding: 10px 20px;\n  box-sizing: border-box;\n}\n.sidebar-toc-wrapper {\n  color: var(--color-link);\n  max-height: calc(100vh - 150px);\n  overflow: auto;\n}\n.sidebar-toc-wrapper::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n.sidebar-toc-wrapper a,\n.sidebar-toc-wrapper span {\n  color: var(--color-link);\n  text-decoration: none;\n  opacity: 0.8;\n  transition: 0.3s;\n}\n.sidebar-toc-wrapper a:hover,\n.sidebar-toc-wrapper span:hover {\n  color: var(--red-0);\n}\n.sidebar-toc-wrapper ol {\n  margin-left: 15px;\n  list-style: none;\n}\n.sidebar-toc-wrapper li {\n  margin: 7px 0;\n  padding: 2px 0;\n}\n.sidebar-toc-wrapper li:before {\n  content: \"\";\n  width: 5px;\n  height: 10px;\n  background: var(--color-h2-after);\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 11px;\n  box-shadow: var(--shadow-red-6-shadow);\n  opacity: 0.5;\n  transition: 0.3s;\n}\n.sidebar-toc-wrapper li:hover:before {\n  width: 5px;\n  height: 5px;\n  border-radius: 50%;\n  opacity: 1;\n}\n.sidebar-toc-wrapper .toc-level-1 {\n  list-style: none;\n}\n.sidebar-toc-wrapper .toc-level-1:before {\n  display: none;\n}\n.sidebar-toc-wrapper .toc-level-1 >a {\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n.sidebar-toc-wrapper .toc-child {\n  transform: scaleY(0);\n  height: 0;\n  overflow: hidden;\n  transition: 0.3s;\n  transform-origin: top;\n}\n.sidebar-toc-wrapper .toc-child >.toc-item:last-child {\n  margin-bottom: 0;\n}\n.sidebar-toc-wrapper .active>.toc-child,\n.sidebar-toc-wrapper .current>.toc-child {\n  height: auto;\n  transform: scaleY(1);\n}\n.sidebar-toc-wrapper .active>a,\n.sidebar-toc-wrapper .current>a,\n.sidebar-toc-wrapper .active>a>span,\n.sidebar-toc-wrapper .current>a>span {\n  color: var(--red-0);\n  opacity: 1;\n}\n.toc-title {\n  letter-spacing: 2px;\n  color: var(--grey-9);\n  line-height: 1em;\n  font-weight: bold;\n  padding: 10px 0;\n}\n.toc-item {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.sidebar-btn-wrapper .sidebar-toc-btn,\n.sidebar-btn-wrapper .sidebar-common-btn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  background: var(--red-3);\n  color: #fff;\n  font-weight: bold;\n  box-shadow: var(--shadow-red-6-shadow);\n  border-radius: 10px;\n  margin: 20px;\n  transition: 0.3s;\n  will-change: transform;\n}\n.sidebar-btn-wrapper .sidebar-toc-btn:hover,\n.sidebar-btn-wrapper .sidebar-common-btn:hover {\n  transform: scale(1.05);\n}\n[data-theme=\"dark\"] .sidebar-btn-wrapper .sidebar-toc-btn,\n[data-theme=\"dark\"] .sidebar-btn-wrapper .sidebar-common-btn {\n  filter: brightness(0.8);\n}\n.sidebar-btn-wrapper {\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  bottom: 10px;\n  left: 0;\n  right: 0;\n}\n.sidebar-btn-wrapper .current {\n  background: var(--red-1);\n}\n.sidebar-common-sidebar {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  overflow-y: auto;\n  max-height: calc(100vh - 120px);\n}\n.sidebar-common-sidebar::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n.sidebar-toc-sidebar {\n  width: 100%;\n}\n.aplayer {\n  margin: 0 0 40px !important;\n  border-radius: 10px !important;\n  background: var(--color-wrap) !important;\n  transition: all 0.3s;\n  font-family: 'Mulish','Noto Serif SC', '-apple-system','PingFang SC','Microsoft YaHei','sans-serif' !important;\n}\n.aplayer button:hover path,\n.aplayer .aplayer-icon:hover path {\n  fill: var(--color-link) !important;\n}\n.aplayer .aplayer-miniswitcher {\n  background: var(--red-5-5) !important;\n}\n.aplayer.aplayer-fixed {\n  margin: 0 !important;\n}\n.aplayer.aplayer-fixed .aplayer-body {\n  background: var(--color-wrap) !important;\n  transition: all 0.3s;\n}\n.aplayer.aplayer-fixed .aplayer-info {\n  transition: all 0.3s;\n  border-top: 1px solid var(--color-h2-border) !important;\n}\n.aplayer.aplayer-fixed .aplayer-list {\n  border: 1px solid var(--color-h2-border) !important;\n  transition: all 0.3s;\n}\n.aplayer.aplayer-withlist .aplayer-info {\n  transition: all 0.3s;\n  border-bottom: 1px solid var(--color-h2-border) !important;\n}\n.aplayer-title,\n.aplayer-list-title,\n.aplayer-music {\n  color: var(--color-link) !important;\n}\n.aplayer .aplayer-list ol li {\n  transition: all 0.3s;\n  border-top: 1px solid var(--color-h2-border) !important;\n}\n.aplayer-lrc::before {\n  background: none !important;\n}\n.aplayer-lrc::after {\n  background: none !important;\n}\n.aplayer .aplayer-list ol li.aplayer-list-light {\n  background: var(--color-hover-shadow) !important;\n}\n.aplayer .aplayer-list ol li:hover {\n  background: var(--color-hover-shadow) !important;\n}\n.aplayer .aplayer-lrc .aplayer-lrc-contents,\n.aplayer .aplayer-info .aplayer-music {\n  cursor: var(--cursor-default) !important;\n}\n.aplayer .aplayer-pic,\nbody .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap,\n.aplayer .aplayer-list-cur,\n.aplayer .aplayer-list-index,\n.aplayer .aplayer-list-author,\n.aplayer .aplayer-list ol li,\nbody .aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap,\n.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb,\n.aplayer .aplayer-icon {\n  cursor: var(--cursor-pointer) !important;\n}\n.share-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  flex-wrap: wrap;\n}\n.share-icon {\n  margin: 8px;\n  color: var(--color-link) !important;\n  position: relative;\n  transition: all 0.2s;\n}\n.share-icon:before {\n  display: block;\n  opacity: 0.8;\n  font-size: 24px;\n  transition: all 0.2s;\n  will-change: transform;\n}\n.share-icon:hover:before {\n  opacity: 1;\n  transform: scale(1.2);\n}\n#share-weixin {\n  display: none;\n  position: absolute;\n  top: -440px;\n  left: -138px;\n  background: #fff;\n  user-select: none;\n  width: 300px;\n  height: 420px;\n  overflow: hidden;\n  border-radius: 10px;\n  z-index: 50;\n  box-shadow: var(--shadow-card);\n}\n#share-weixin img {\n  filter: none !important;\n}\n#share-weixin.active {\n  display: block;\n}\n.share-weixin-dom {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: #fff;\n  height: 100%;\n}\n.share-weixin-canvas {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n}\n.share-weixin-canvas img {\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n}\n#share-weixin-banner {\n  width: 100%;\n  height: 120px;\n  object-fit: cover;\n}\n#share-weixin-title {\n  padding: 10px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  color: var(--color-link);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n#share-weixin-desc {\n  margin: 0 16px 10px;\n  font-size: 14px;\n  color: var(--color-default);\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 5;\n  line-clamp: 5;\n  overflow: hidden;\n  word-break: break-word;\n  line-height: 2;\n  position: relative;\n}\n#share-weixin-desc:after {\n  content: \"\";\n  position: absolute;\n  background: linear-gradient(rgba(255,255,255,0), #fff);\n  height: 30px;\n  width: 100%;\n  left: 0;\n  bottom: 5px;\n}\n#share-weixin-qr {\n  width: 80px;\n  height: 80px;\n}\n#share-weixin-author {\n  color: var(--color-default);\n  font-size: 14px;\n  margin: 12px 0;\n}\n#share-weixin-theme {\n  color: var(--color-default);\n  font-size: 12px;\n}\n.share-weixin-qrcode {\n  display: flex;\n  justify-content: space-between;\n  margin: 0 16px 16px;\n}\n.share-weixin-info {\n  display: flex;\n  flex-direction: column;\n  align-self: flex-end;\n}\n:root {\n  --color-info-bg: #ecf5fe;\n  --color-info-text: #06c;\n  --color-info-shadow: #f5faff;\n  --color-warning-bg: #fff5e0;\n  --color-warning-text: #ad6405;\n  --color-warning-shadow: #fffcf5;\n  --color-danger-bg: #fff0f0;\n  --color-danger-text: #c5202b;\n  --color-danger-shadow: #fff5f5;\n  --color-tip-bg: #edfdf2;\n  --color-tip-text: #048b4c;\n  --color-tip-shadow: #f5fff8;\n}\n[data-theme=\"dark\"]:root {\n  --color-info-bg: #2d4053;\n  --color-info-text: #75b2f0;\n  --color-info-shadow: #1d2935;\n  --color-warning-bg: #53462d;\n  --color-warning-text: #f0c775;\n  --color-warning-shadow: #352d1d;\n  --color-danger-bg: #532d2d;\n  --color-danger-text: #f07575;\n  --color-danger-shadow: #351d1d;\n  --color-tip-bg: #2d5338;\n  --color-tip-text: #75f09a;\n  --color-tip-shadow: #1d3524;\n}\n.custom-block {\n  margin: 1.8em 0;\n  border-radius: 10px;\n  transition: 0.3s;\n  padding: 1px 10px;\n}\n.custom-block.info {\n  background: var(--color-info-bg);\n  color: var(--color-info-text);\n  border-left: 6px var(--color-info-text) solid;\n  box-shadow: 0 0 5px 2px var(--color-info-shadow);\n}\n.custom-block.info .custom-block-title:before {\n  font-weight: normal;\n  font-family: \"iconfont\";\n  content: \"\\e647\";\n  margin-right: 0.5em;\n}\n.custom-block.warning {\n  background: var(--color-warning-bg);\n  color: var(--color-warning-text);\n  box-shadow: 0 0 5px 2px var(--color-warning-shadow);\n  border-left: 6px var(--color-warning-text) solid;\n}\n.custom-block.warning .custom-block-title:before {\n  font-weight: normal;\n  font-family: \"iconfont\";\n  content: \"\\e646\";\n  margin-right: 0.5em;\n}\n.custom-block.danger {\n  background: var(--color-danger-bg);\n  color: var(--color-danger-text);\n  box-shadow: 0 0 5px 2px var(--color-danger-shadow);\n  border-left: 6px var(--color-danger-text) solid;\n}\n.custom-block.danger .custom-block-title:before {\n  font-weight: normal;\n  font-family: \"iconfont\";\n  content: \"\\e645\";\n  margin-right: 0.5em;\n}\n.custom-block.tip {\n  background: var(--color-tip-bg);\n  color: var(--color-tip-text);\n  box-shadow: 0 0 5px 2px var(--color-tip-shadow);\n  border-left: 6px var(--color-tip-text) solid;\n}\n.custom-block.tip .custom-block-title:before {\n  font-weight: normal;\n  font-family: \"iconfont\";\n  content: \"\\e643\";\n  margin-right: 0.5em;\n}\n.custom-block p {\n  margin: 0.8em 0;\n}\n.custom-block-title {\n  margin: 0.8em 0 !important;\n  font-size: 1.1em;\n  font-weight: bold;\n}\n.left {\n  float: left;\n}\n.right {\n  float: right;\n}\n[data-theme=\"dark\"] ::-webkit-scrollbar,\n[data-theme=\"dark\"] ::-webkit-scrollbar-track {\n  background-color: #616161;\n}\n::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n  background-color: #f5f5f5;\n}\n::-webkit-scrollbar-track {\n  border-radius: 10px;\n  background-color: #f5f5f5;\n}\n::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  background-color: var(--red-3);\n}\n.pace {\n  pointer-events: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n.pace-inactive {\n  display: none;\n}\n.pace .pace-progress {\n  position: fixed;\n  z-index: 2000;\n  top: 0;\n  right: 100%;\n  width: 100%;\n  height: 2px;\n  background: var(--red-1);\n}\n"},{"_content":".roll .roll-button {\n  text-align: center;\n  font-size: 30px;\n  user-select: none;\n  width: 40px;\n  margin: 10px auto;\n  transition: transform 0.2s ease;\n  cursor: var(--cursor-pointer);\n}\n\n.roll .roll-button:hover {\n  transform: scale(1.1);\n}\n\n.roll-tags {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  position: relative;\n}\n\n.roll-tags span {\n  position: absolute;\n  color: var(--red-1);\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: var(--red-5);\n  transition: filter 0.3s ease, opacity 0.3s ease;\n}\n\n.roll-tags span.blur {\n  filter: blur(2px);\n  opacity: 0.7;\n}\n\n.roll-tags span.removing {\n  animation: tag-removing 0.1s ease-in-out;\n}\n\n@keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}","source":"css/tag-roulette.styl","raw":".roll .roll-button {\n  text-align: center;\n  font-size: 30px;\n  user-select: none;\n  width: 40px;\n  margin: 10px auto;\n  transition: transform 0.2s ease;\n  cursor: var(--cursor-pointer);\n}\n\n.roll .roll-button:hover {\n  transform: scale(1.1);\n}\n\n.roll-tags {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  position: relative;\n}\n\n.roll-tags span {\n  position: absolute;\n  color: var(--red-1);\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: var(--red-5);\n  transition: filter 0.3s ease, opacity 0.3s ease;\n}\n\n.roll-tags span.blur {\n  filter: blur(2px);\n  opacity: 0.7;\n}\n\n.roll-tags span.removing {\n  animation: tag-removing 0.1s ease-in-out;\n}\n\n@keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}","date":"2025-07-15T08:57:03.814Z","updated":"2025-07-15T08:57:03.814Z","path":"css/tag-roulette.css","layout":"false","title":"","comments":1,"_id":"cmd71t80t000g3cw65xa1fgc0","content":".roll .roll-button {\n  text-align: center;\n  font-size: 30px;\n  user-select: none;\n  width: 40px;\n  margin: 10px auto;\n  transition: transform 0.2s ease;\n  cursor: var(--cursor-pointer);\n}\n.roll .roll-button:hover {\n  transform: scale(1.1);\n}\n.roll-tags {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  position: relative;\n}\n.roll-tags span {\n  position: absolute;\n  color: var(--red-1);\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: var(--red-5);\n  transition: filter 0.3s ease, opacity 0.3s ease;\n}\n.roll-tags span.blur {\n  filter: blur(2px);\n  opacity: 0.7;\n}\n.roll-tags span.removing {\n  animation: tag-removing 0.1s ease-in-out;\n}\n@-moz-keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}\n@-webkit-keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}\n@-o-keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}\n@keyframes tag-removing {\n  0% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(6px);\n  }\n}\n"},{"title":"友情链接","comments":1,"_content":"\n## 本站信息\n- 站名： 冯笑一的小窝\n- 站长： 冯笑一\n- 地址： https://www.f123.club/\n- 备用地址：https://myxiaoyi.github.io/\n\n## 申请方法\n- 添加本站后，在本页留言，格式如下\n\n~~~yml\n```yml\n- name: #您的名字\n  url: #您的网址\n  desc: #简短描述\n  image: #一张图片\n```\n~~~\n\n## 小伙伴们\n{% friendsLink friend/_data.yml %}\n","source":"friend/index.md","raw":"---\ntitle: 友情链接\ncomments: true\n---\n\n## 本站信息\n- 站名： 冯笑一的小窝\n- 站长： 冯笑一\n- 地址： https://www.f123.club/\n- 备用地址：https://myxiaoyi.github.io/\n\n## 申请方法\n- 添加本站后，在本页留言，格式如下\n\n~~~yml\n```yml\n- name: #您的名字\n  url: #您的网址\n  desc: #简短描述\n  image: #一张图片\n```\n~~~\n\n## 小伙伴们\n{% friendsLink friend/_data.yml %}\n","date":"2025-07-16T06:27:10.107Z","updated":"2025-07-16T06:27:10.107Z","path":"friend/index.html","layout":"page","_id":"cmd71t80u000l3cw66ab1b620","content":"<h2 id=\"本站信息\"><a class=\"markdownIt-Anchor\" href=\"#本站信息\"></a> 本站信息</h2>\n<ul>\n<li>站名： 冯笑一的小窝</li>\n<li>站长： 冯笑一</li>\n<li>地址： <a href=\"https://www.f123.club/\">https://www.f123.club/</a></li>\n<li>备用地址：<a href=\"https://myxiaoyi.github.io/\">https://myxiaoyi.github.io/</a></li>\n</ul>\n<h2 id=\"申请方法\"><a class=\"markdownIt-Anchor\" href=\"#申请方法\"></a> 申请方法</h2>\n<ul>\n<li>添加本站后，在本页留言，格式如下</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"comment\">#您的名字</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#您的网址</span></span><br><span class=\"line\">  <span class=\"attr\">desc:</span> <span class=\"comment\">#简短描述</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"comment\">#一张图片</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"小伙伴们\"><a class=\"markdownIt-Anchor\" href=\"#小伙伴们\"></a> 小伙伴们</h2>\n<div class=\"friend-wrap\" data-aos=\"zoom-in\"><div class=\"friend-item-wrap\">\n    <a href=\"https://d-sketon.github.io/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n    <div class=\"friend-icon-wrap\">\n      <div class=\"friend-icon\">\n          <img data-src=\"https://d-sketon.github.io/avatar/avatar.webp\" data-sizes=\"auto\" alt=\"D-Sketon\" class=\"lazyload\">\n      </div>\n    </div>\n    <div class=\"friend-info-wrap\">\n      <div class=\"friend-name\">\n          D-Sketon \n      </div>\n      <div class=\"friend-desc\">\n        一个车万人\n      </div>\n    </div>\n  </div></div>\n","excerpt":"","more":"<h2 id=\"本站信息\"><a class=\"markdownIt-Anchor\" href=\"#本站信息\"></a> 本站信息</h2>\n<ul>\n<li>站名： 冯笑一的小窝</li>\n<li>站长： 冯笑一</li>\n<li>地址： <a href=\"https://www.f123.club/\">https://www.f123.club/</a></li>\n<li>备用地址：<a href=\"https://myxiaoyi.github.io/\">https://myxiaoyi.github.io/</a></li>\n</ul>\n<h2 id=\"申请方法\"><a class=\"markdownIt-Anchor\" href=\"#申请方法\"></a> 申请方法</h2>\n<ul>\n<li>添加本站后，在本页留言，格式如下</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"comment\">#您的名字</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#您的网址</span></span><br><span class=\"line\">  <span class=\"attr\">desc:</span> <span class=\"comment\">#简短描述</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"comment\">#一张图片</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"小伙伴们\"><a class=\"markdownIt-Anchor\" href=\"#小伙伴们\"></a> 小伙伴们</h2>\n<div class=\"friend-wrap\" data-aos=\"zoom-in\"><div class=\"friend-item-wrap\">\n    <a href=\"https://d-sketon.github.io/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n    <div class=\"friend-icon-wrap\">\n      <div class=\"friend-icon\">\n          <img data-src=\"https://d-sketon.github.io/avatar/avatar.webp\" data-sizes=\"auto\" alt=\"D-Sketon\" class=\"lazyload\">\n      </div>\n    </div>\n    <div class=\"friend-info-wrap\">\n      <div class=\"friend-name\">\n          D-Sketon \n      </div>\n      <div class=\"friend-desc\">\n        一个车万人\n      </div>\n    </div>\n  </div></div>\n"}],"Post":[{"title":"WPF学习之旅","mermaid":true,"date":"2025-07-13T16:00:00.000Z","cover":"rgba(167, 161, 248, 0.47)","comments":1,"_content":"> <font style=\"color:rgb(51, 51, 51);\">零基础入门C#、WPF、数据库，从C#的语法学起，不断深入学习OOP思想（面向对象编程）以及C#高级知识，以实战的方式快速理解封装、继承、多态、抽象、接口、属性、委托、事件、泛型、特性、反射、多线程的概念并掌握其用法，然后，以由浅入深的方式，从整体到细节的渐进学习路径，理论结合实战，学习数据库+WPF框架，包含WPF概述、控件集合、数据绑定、模板样式、资源字典、命令系统、依赖属性、路由事件、动画行为、2D绘图、3D变换等。一条龙专题套餐帮您学透.Net桌面软件开发，成为资深的C#+WPF开发工程师。</font>\n>\n\n```plain\n┌───────────────────────────────────────────────────────────────────── 学习路径 ─────────────────────────────────────────────────────────────────────┐\n│                                                                                                                                                  │\n│  ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐                                         │\n│  │  零基础阶段   │───>│ 入门初级阶段    │───>│   中级阶段     │───>│   高级阶段    │───>│  架构师阶段    │                                         │\n│  └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘                                         │\n│          │                    │                    │                    │                    │                                                │\n│          ▼                    ▼                    ▼                    ▼                    ▼                                                │\n│  ┌──────────────────┐  ┌──────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────┐  │\n│  │ C#语法基础       │  │ OOP核心概念          │  │ C#高级特性                   │  │ WPF高级技术                  │  │ 系统架构设计             │  │\n│  │ - 变量/数据类型  │  │ - 类与对象           │  │ - 接口/抽象类                │  │ - 依赖属性                   │  │ - MVVM进阶               │  │\n│  │ - 流程控制语句    │  │ - 封装/继承/多态     │  │ - 委托/事件                  │  │ - 路由事件                   │  │ - 依赖注入               │  │\n│  │ - 数组与字符串    │  │ WPF入门             │  │ - 泛型编程                   │  │ - 动画与行为                 │  │ 性能优化                 │  │\n│  │ - 方法定义与调用  │  │ - XAML基础语法       │  │ WPF核心技术                  │  │ - 2D/3D图形                  │  │ - 内存管理               │  │\n│  │                  │  │ - 常用控件使用       │  │ - 数据绑定                   │  │ 并发编程                     │  │ - 渲染优化               │  │\n│  │                  │  │ 数据库基础           │  │ - 模板与样式                 │  │ - 多线程/异步                │  │ 跨平台方案               │  │\n│  │                  │  │ - SQL增删改查        │  │ - 命令系统                   │  │ - Task并行库                 │  │ - .NET MAUI              │  │\n│  │                  │  │ - ADO.NET连接        │  │ - 资源字典                   │  │ 反射与特性                   │  │ 项目实战                 │  │\n│  │                  │  │                     │  │ EF Core                      │  │ 设计模式                     │  │ - 企业级应用开发         │  │\n│  │                  │  │                     │  │ - ORM映射                    │  │                             │  │                          │  │\n│  └──────────────────┘  └──────────────────────┘  └──────────────────────────────┘  └──────────────────────────────┘  └──────────────────────────┘  │\n│                                                                                                                                                  │\n└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\n```\n\n| **阶段** | **核心内容** | **技术要点** | **实战项目** |\n| --- | --- | --- | --- |\n| 第一阶段   零基础 | C#语法基础 | - 数据类型/变量/运算符   - 流程控制(if/for/while)   - 数组与集合   - 异常处理 | 控制台计算器   学生成绩管理系统 |\n| 第二阶段   入门初级 | OOP+WPF基础+数据库 | - 类/对象/三大特性   - XAML布局原理   - 基础控件使用   - SQLite/ADO.NET | 通讯录管理系统   简易图书管理器 |\n| 第三阶段   中级 | C#高级+WPF核心 | - 接口/委托/事件   - 数据绑定/MVVM   - 样式/模板/触发器   - EF Core操作 | 电商商品管理系统   员工考勤系统 |\n| 第四阶段   高级 | WPF深度+系统编程 | - 依赖属性系统   - 路由事件机制   - 动画/3D变换   - 多线程/异步 | 实时数据监控仪表盘   多媒体播放器 |\n| 第五阶段   架构师 | 架构设计+企业级开发 | - MVVM高级应用   - IoC容器(Prism)   - 性能调优策略   - 安全机制设计 | ERP系统模块   智能工厂控制台 |\n\n\n### 一、WPF前端代码范例（XAML）\n```xml\n<!-- 基础窗口结构 -->\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        Title=\"窗体标题\" \n        Width=\"250\" Height=\"100\">\n    <!-- 声明式UI元素 -->\n    <Button Name=\"button\">按钮文字</Button>\n</Window>\n\n```\n\n**核心特征**：\n\n1. 声明式编程：通过XML语法描述UI结构\n2. 元素树组织：采用父容器-子元素的层级结构\n3. 命名空间机制：`xmlns`引用WPF核心程序集\n\n---\n\n### 二、WPF本质解析\n| 维度 | 说明 |\n| --- | --- |\n| **技术定位** | 基于.NET的Windows桌面UI框架 |\n| **核心构成** | 托管类库+操作系统级组件的融合架构 |\n| **设计目标** | 统一2D/3D/文档/媒体开发模型 |\n\n\n---\n\n### 三、WPF分层架构体系\n```mermaid\ngraph LR\n    OS[操作系统层] --> Direct3D[Direct3D]\n    OS --> User32[User32]\n    \n    Native[本地层] --> milcore[milcore.dll]\n    Native --> WindowCodecs[WindowCodecs.dll]\n    \n    Managed[.NET托管层] --> PresentationFramework\n    Managed --> PresentationCore\n    Managed --> WindowsBase\n```\n#### 1. 操作系统级组件\n+ **Direct3D**：硬件加速的3D渲染引擎\n+ **User32**：窗口管理基础服务\n\n#### 2. 本地非托管层\n+ **milcore.dll**：\n    - 实现媒体集成层（MIL）\n    - 封装DirectX接口\n    - 负责2D/3D渲染管道\n+ **WindowCodecs.dll**：\n    - 图像处理引擎\n    - 支持位图操作/格式转换\n\n#### 3. .NET托管层\n| 程序集 | 核心类型 | 功能定位 |\n| --- | --- | --- |\n| **WindowsBase** | `DispatcherObject`   `DependencyObject` | 线程调度/依赖属性系统 |\n| **PresentationCore** | `Visual`   `UIElement` | 视觉树管理   路由事件系统 |\n| **PresentationFramework** | `FrameworkElement`   `Window`   `Control` | 控件库   布局系统   数据绑定引擎 |\n\n\n**类型继承链**：\n\n```plain\nDispatcherObject → DependencyObject → Visual → UIElement → FrameworkElement → Control\n```\n\n---\n\n### 四、WPF核心能力矩阵\n| 能力维度 | 关键技术 | 应用价值 |\n| --- | --- | --- |\n| **界面构建** | XAML+控件库 | 声明式UI开发   快速界面原型 |\n| **视觉呈现** | 矢量图形   分辨率无关渲染 | 高清显示支持   动态缩放不失真 |\n| **交互系统** | 路由事件   命令绑定 | 复杂事件处理   解耦业务逻辑 |\n| **数据驱动** | 数据绑定   MVVM模式 | 前后端分离   可测试性提升 |\n| **样式系统** | 模板/样式/触发器 | 定制化外观   视觉状态管理 |\n| **性能优化** | GPU硬件加速   异步渲染 | 流畅动画体验   低CPU占用 |\n\n\n---\n\n### 五、WPF革命性创新\n1. **矢量图形引擎**\n\n```xml\n<Path Data=\"M 10,100 C 100,0 200,200 300,100\" \n      Stroke=\"Blue\" StrokeThickness=\"3\"/>\n```\n\n    - 基于数学方程而非像素点\n    - 示例：`<Path>`元素实现无损缩放\n2. **精确坐标系统**\n    - 双精度浮点坐标（double类型）\n    - 亚像素级定位精度\n3. **数据驱动范式**\n\n```csharp\n// ViewModel\npublic class UserViewModel : INotifyPropertyChanged\n{\n    private string _name;\n    public string Name\n    {\n        get => _name;\n        set { _name = value; OnPropertyChanged(); }\n    }\n}\n```\n\n```xml\n<!-- View绑定 -->\n<TextBlock Text=\"{Binding Name}\"/>\n```\n\n4. **硬件加速渲染**\n    - 通过DirectX访问GPU\n    - 复杂动画60fps流畅渲染\n\n---\n\n### 六、WPF适用场景\n1. **企业级桌面应用**\n    - ERP/CRM系统\n    - 数据可视化看板\n2. **富媒体应用**\n    - 交互式电子手册\n    - 工业控制界面\n3. **高精度显示需求**\n    - 医疗影像系统\n    - CAD辅助设计\n\n> **技术定位**：WPF是构建现代Windows桌面应用的终极解决方案，尤其适合需要复杂UI、数据可视化、高性能渲染的场景。其架构设计平衡了开发效率与执行性能，通过MVVM模式实现了前后端彻底解耦，为大型应用开发提供了可持续维护的工程基础。\n>\n\n以下是对WPF学习路径的系统化总结，特别针对C#基础与WPF核心技术的衔接要点：\n\n### 七、WPF学习前提：C#核心技术栈\n```mermaid\ngraph LR\n    A[C#基础] --> A1[OOP四大支柱]\n    A --> A2[类型系统]\n    A --> A3[集合与泛型]\n    \n    B[C#高级] --> B1[委托与事件]\n    B --> B2[反射与特性]\n    B --> B3[依赖属性原理]\n    \n    C[前端基础] --> C1[XAML语义结构]\n    C --> C2[数据绑定概念]\n    \n    A1 --> D[WPF深入理解]\n    B1 --> D\n    B2 --> D\n    C1 --> D\n```\n```mermaid\ngraph LR\n    A[Qt经验] --> B[概念迁移]\n    B --> C[WPF核心突破]\n    C --> D[硬件集成专项]\n    \n    subgraph B[概念迁移]\n        B1[QWidget → Control模板]\n        B2[Signals → 路由事件]\n        B3[QML → XAML+Blend]\n    end\n    \n    subgraph C[WPF核心突破]\n        C1[依赖属性系统]\n        C2[MVVM模式]\n        C3[硬件加速渲染]\n    end\n    \n    subgraph D[硬件集成]\n        D1[串口通信]\n        D2[GPIO控制]\n        D3[工业协议集成]\n    end\n```\n### 八、必须掌握的C#关键技术\n#### 1. OOP核心思想\n```csharp\n// 多态性在WPF中的应用示例\npublic abstract class Shape\n{\n    public abstract void Draw();\n}\n\npublic class Circle : Shape\n{\n    public override void Draw() \n    { /* WPF绘制圆形逻辑 */ }\n}\n\n// 在XAML中通过DataTemplate实现多态\n<DataTemplate DataType=\"{x:Type local:Circle}\">\n    <Ellipse Fill=\"Red\" Width=\"50\" Height=\"50\"/>\n</DataTemplate>\n\n```\n\n#### 2. 特性(Attribute)系统\n```csharp\n// WPF依赖属性注册中的特性应用\n[DependencyProperty.Register(\n    \"Width\", \n    typeof(int), \n    typeof(OwnerClass), \n    new FrameworkPropertyMetadata(0)\n)]\npublic int Width { /* 属性包装器 */ }\n```\n\n#### 3. 委托与事件\n```csharp\n// WPF路由事件系统的底层实现\npublic delegate void RoutedEventHandler(object sender, RoutedEventArgs e);\n\n// 自定义路由事件注册\npublic static readonly RoutedEvent TapEvent = \n    EventManager.RegisterRoutedEvent(\n        \"Tap\", \n        RoutingStrategy.Bubble, \n        typeof(RoutedEventHandler), \n        typeof(CustomControl));\n```\n\n#### 4. 反射机制\n```csharp\n// WPF依赖属性注册的反射原理\nPropertyInfo prop = typeof(OwnerClass).GetProperty(\"Width\");\nType ownerType = prop.DeclaringType;\nDependencyProperty.Register(\n    prop.Name, \n    prop.PropertyType, \n    ownerType,  // 通过反射获取类型\n    new PropertyMetadata(0));\n```\n\n### 九、WPF特有概念解析\n#### 1. 依赖属性 vs CLR属性\n| 特性 | 依赖属性 | CLR属性 |\n| --- | --- | --- |\n| **存储机制** | 全局属性存储 | 对象实例存储 |\n| **默认值** | 可设置默认值 | 需显式初始化 |\n| **变更通知** | 内置通知机制 | 需手动实现INPC |\n| **值继承** | 支持元素树继承 | 不支持 |\n| **动画支持** | 原生支持 | 需额外实现 |\n\n\n#### 2. 路由事件工作模型\n\n```csharp\nsequenceDiagram\n    participant Child as 子控件\n    participant Parent as 父容器\n    participant Root as 根元素\n    \n    Child->>Parent: 冒泡阶段(Bubbling)\n    Parent->>Root: 继续冒泡\n    Root-->>Parent: 隧道阶段(Tunneling)\n    Parent-->>Child: 继续隧道\n    Note over Child: 直接事件处理(Direct)\n``` \n\n### 十. 学习技巧\n1. **调试技巧**：\n\n```csharp\n// 查看绑定错误\nPresentationTraceSources.DataBindingSource.Switch.Level = SourceLevels.All;\n\n// 输出窗口显示绑定详情\nSystem.Diagnostics.PresentationTraceSources.DataBindingSource.Listeners.Add(\n    new ConsoleTraceListener());\n```\n\n2. **理解视觉树**：\n\n```csharp\n// 遍历视觉树\npublic static IEnumerable<T> FindVisualChildren<T>(DependencyObject depObj) \n    where T : DependencyObject\n{\n    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(depObj); i++)\n    {\n        var child = VisualTreeHelper.GetChild(depObj, i);\n        if (child is T typedChild) yield return typedChild;\n        foreach (var childOfChild in FindVisualChildren<T>(child)) \n            yield return childOfChild;\n    }\n}\n```\n\n3. **MVVM模式实践**：\n\n```csharp\n// 基础ViewModel实现\npublic class ViewModelBase : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    \n    protected virtual void OnPropertyChanged([CallerMemberName] string name = null)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));\n    }\n}\n```\n\n#### 4、学习路线图\n#### 第一阶段：基础入门（2-3周）  \n  ├─ XAML语法精要  \n  ├─ 常用布局控件（Grid, StackPanel）  \n  ├─ 数据绑定基础（Binding Path）  \n  └─ 样式与资源基础  \n  \n第二阶段：核心技术（4-6周）  \n  ├─ 高级数据绑定（Converter, MultiBinding）  \n  ├─ 命令系统（ICommand, RelayCommand）  \n  ├─ 模板系统（ControlTemplate, DataTemplate）  \n  └─ 用户控件开发  \n  \n第三阶段：高级精通（8-12周）  \n  ├─ 依赖属性系统（自定义DP）  \n  ├─ 路由事件机制（冒泡/隧道）  \n  ├─ 动画与行为（Behaviors）  \n  ├─ 3D图形与多媒体  \n  └─ MVVM框架整合（Prism等）\n> #### **学习箴言**：WPF学习需遵循\"先会用，再懂理\"的实践路径。建议采用：\n> #### **小步快跑**：每学一个概念立即创建微型Demo验证\n> #### **逆向工程**：反编译优秀开源项目（如MaterialDesignInXAML）\n> #### **知识迁移**：将WinForm经验与WPF新特性对比学习\n> #### **工具赋能**：善用LiveXAML、Snoop等开发辅助工具\n\n#### 以下是为嵌入式开发工程师量身定制的WPF学习路径，结合您的Qt开发经验进行针对性优化：\n### 十一、Qt与WPF核心概念映射表\n| Qt概念 | WPF对应概念 | 差异点 | 学习建议 |\n| --- | --- | --- | --- |\n| QWidget | UIElement | WPF更强调组合而非继承 | 重点学习控件模板 |\n| Signals/Slots | 路由事件/绑定/命令 | WPF提供多种交互机制 | 掌握事件路由策略 |\n| QML | XAML | 语法相似但数据绑定更强 | 对比学习声明式语法 |\n| Model/View | MVVM | MVVM是更严格的分离模式 | 深入理解INotifyPropertyChanged |\n| Q_PROPERTY | 依赖属性 | 依赖属性有值继承机制 | 研究属性变更回调 |\n| QLayout | Panel派生类 | WPF布局系统更灵活 | 掌握Grid和DockPanel |\n| QGraphicsView | Visual层 | WPF有更完善的视觉树 | 学习视觉树遍历方法 |\n\n\n### 十二、重点领域深度适配\n#### 1. 硬件交互层实现\n```csharp\n// 串口通信封装（对比Qt的QSerialPort）\npublic class SerialService : IDisposable\n{\n    private SerialPort _port;\n    \n    public SerialService(string portName)\n    {\n        _port = new SerialPort(portName, 9600, Parity.None, 8, StopBits.One);\n        _port.DataReceived += OnDataReceived;\n    }\n    \n    private void OnDataReceived(object sender, SerialDataReceivedEventArgs e)\n    {\n        byte[] data = new byte[_port.BytesToRead];\n        _port.Read(data, 0, data.Length);\n        \n        // 通过事件或绑定更新UI\n        DataReceived?.Invoke(this, data);\n    }\n    \n    public event EventHandler<byte[]> DataReceived;\n}\n```\n\n#### 2. 实时数据可视化\n```xml\n<!-- 工业仪表盘实现（对比Qt的QChart） -->\n<Canvas>\n    <Path Data=\"M 100,100 A 50,50 0 1 1 200,100\"\n          Stroke=\"Blue\" StrokeThickness=\"3\"/>\n    \n    <!-- 实时指针 -->\n    <Line X1=\"150\" Y1=\"150\" X2=\"{Binding Angle, Converter={StaticResource AngleConverter}}\"\n          Stroke=\"Red\" StrokeThickness=\"2\"/>\n    \n    <!-- 数据绑定 -->\n    <TextBlock Text=\"{Binding Temperature, StringFormat='{}{0}°C'}\"\n               Canvas.Top=\"200\" Canvas.Left=\"130\"/>\n</Canvas>\n\n```\n\n### 十三、嵌入式场景优化学习模块\n#### 1. 低延迟渲染技术\n```csharp\n// 利用CompositionTarget.Rendering实现60fps渲染\nCompositionTarget.Rendering += (s, e) =>\n{\n    if (_sensorDataAvailable)\n    {\n        waveForm.InvalidateVisual(); // 自定义波形控件重绘\n    }\n};\n\n// 对比Qt的QTimer+update()\n```\n\n#### 2. 硬件资源管理\n| 资源类型 | Qt方案 | WPF方案 | 注意事项 |\n| --- | --- | --- | --- |\n| 串口 | QSerialPort | System.IO.Ports | 需处理UI线程调度 |\n| USB | libusb | HidLibrary | 驱动兼容性测试 |\n| 网络协议 | QTcpSocket | System.Net.Sockets | 异步操作避免UI阻塞 |\n| 传感器数据 | QSensor | 自定义ISensor接口 | 数据滤波处理 |\n\n\n### 十三、避坑指南（相对Qt学习者）\n1. **线程管理差异**：\n\n```csharp\n// 错误方式（直接跨线程更新UI）\nvoid OnDataReceived(byte[] data)\n{\n    txtValue.Text = data.ToString(); // 引发异常\n}\n\n// 正确方式\nvoid OnDataReceived(byte[] data)\n{\n    Dispatcher.Invoke(() => txtValue.Text = data.ToString());\n}\n```\n\n2. **内存管理对比**：\n\n| 特性 | Qt | WPF |\n| --- | --- | --- |\n| 对象生命周期 | 父子对象树 | GC垃圾回收 |\n| 资源释放 | deleteLater() | IDisposable模式 |\n| 事件处理 | 需手动disconnect | 弱事件模式支持 |\n\n\n3. **渲染性能优化**：\n\n```xml\n<!-- 启用硬件加速 -->\n<Window ...\n        AllowsTransparency=\"False\"\n        TextOptions.TextFormattingMode=\"Display\"\n        RenderOptions.BitmapScalingMode=\"NearestNeighbor\">\n```\n\n### 十四、实战项目演进路线\n```plain\n阶段1：设备监控面板（2周）\n  ├─ 串口数据采集\n  ├─ 实时曲线绘制（Canvas）\n  ├─ 基础MVVM实现\n\n阶段2：工业控制台（3周）\n  ├─ Modbus/TCP协议集成\n  ├─ 3D设备模型展示（HelixToolkit）\n  ├─ 动画状态指示器\n\n阶段3：智能网关系统（4周）\n  ├─ 多线程数据采集\n  ├─ WCF远程控制接口\n  ├─ 数据持久化（SQLite）\n  ├─ 响应式布局设计\n```\n\n### 十五、硬件开发专属工具链\n1. **调试工具**：\n    - Snoop：实时检查WPF视觉树\n    - WPF Performance Suite：渲染性能分析\n2. **硬件集成库**：\n    - LibUsbDotNet：USB设备访问\n    - NModbus：工业协议实现\n    - OPC-UA库：工业自动化标准\n3. **3D渲染框架**：\n\n```xml\n<helix:HelixViewport3D>\n    <helix:SunLight/>\n    <helix:MeshGeometryVisual3D MeshGeometry=\"{Binding SensorModel}\"/>\n</helix:HelixViewport3D>\n\n```\n\n\n\n> \n>\n\n\n\n","source":"_posts/Csharp学习之旅.md","raw":"---\ntitle: WPF学习之旅\nmermaid: true\ndate: 2025-07-14\ntags: [嵌入式, C#]\ncover: rgba(167, 161, 248, 0.47)\ncomments: true\ncategories: [嵌入式]\n---\n> <font style=\"color:rgb(51, 51, 51);\">零基础入门C#、WPF、数据库，从C#的语法学起，不断深入学习OOP思想（面向对象编程）以及C#高级知识，以实战的方式快速理解封装、继承、多态、抽象、接口、属性、委托、事件、泛型、特性、反射、多线程的概念并掌握其用法，然后，以由浅入深的方式，从整体到细节的渐进学习路径，理论结合实战，学习数据库+WPF框架，包含WPF概述、控件集合、数据绑定、模板样式、资源字典、命令系统、依赖属性、路由事件、动画行为、2D绘图、3D变换等。一条龙专题套餐帮您学透.Net桌面软件开发，成为资深的C#+WPF开发工程师。</font>\n>\n\n```plain\n┌───────────────────────────────────────────────────────────────────── 学习路径 ─────────────────────────────────────────────────────────────────────┐\n│                                                                                                                                                  │\n│  ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐                                         │\n│  │  零基础阶段   │───>│ 入门初级阶段    │───>│   中级阶段     │───>│   高级阶段    │───>│  架构师阶段    │                                         │\n│  └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘                                         │\n│          │                    │                    │                    │                    │                                                │\n│          ▼                    ▼                    ▼                    ▼                    ▼                                                │\n│  ┌──────────────────┐  ┌──────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────┐  │\n│  │ C#语法基础       │  │ OOP核心概念          │  │ C#高级特性                   │  │ WPF高级技术                  │  │ 系统架构设计             │  │\n│  │ - 变量/数据类型  │  │ - 类与对象           │  │ - 接口/抽象类                │  │ - 依赖属性                   │  │ - MVVM进阶               │  │\n│  │ - 流程控制语句    │  │ - 封装/继承/多态     │  │ - 委托/事件                  │  │ - 路由事件                   │  │ - 依赖注入               │  │\n│  │ - 数组与字符串    │  │ WPF入门             │  │ - 泛型编程                   │  │ - 动画与行为                 │  │ 性能优化                 │  │\n│  │ - 方法定义与调用  │  │ - XAML基础语法       │  │ WPF核心技术                  │  │ - 2D/3D图形                  │  │ - 内存管理               │  │\n│  │                  │  │ - 常用控件使用       │  │ - 数据绑定                   │  │ 并发编程                     │  │ - 渲染优化               │  │\n│  │                  │  │ 数据库基础           │  │ - 模板与样式                 │  │ - 多线程/异步                │  │ 跨平台方案               │  │\n│  │                  │  │ - SQL增删改查        │  │ - 命令系统                   │  │ - Task并行库                 │  │ - .NET MAUI              │  │\n│  │                  │  │ - ADO.NET连接        │  │ - 资源字典                   │  │ 反射与特性                   │  │ 项目实战                 │  │\n│  │                  │  │                     │  │ EF Core                      │  │ 设计模式                     │  │ - 企业级应用开发         │  │\n│  │                  │  │                     │  │ - ORM映射                    │  │                             │  │                          │  │\n│  └──────────────────┘  └──────────────────────┘  └──────────────────────────────┘  └──────────────────────────────┘  └──────────────────────────┘  │\n│                                                                                                                                                  │\n└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘\n```\n\n| **阶段** | **核心内容** | **技术要点** | **实战项目** |\n| --- | --- | --- | --- |\n| 第一阶段   零基础 | C#语法基础 | - 数据类型/变量/运算符   - 流程控制(if/for/while)   - 数组与集合   - 异常处理 | 控制台计算器   学生成绩管理系统 |\n| 第二阶段   入门初级 | OOP+WPF基础+数据库 | - 类/对象/三大特性   - XAML布局原理   - 基础控件使用   - SQLite/ADO.NET | 通讯录管理系统   简易图书管理器 |\n| 第三阶段   中级 | C#高级+WPF核心 | - 接口/委托/事件   - 数据绑定/MVVM   - 样式/模板/触发器   - EF Core操作 | 电商商品管理系统   员工考勤系统 |\n| 第四阶段   高级 | WPF深度+系统编程 | - 依赖属性系统   - 路由事件机制   - 动画/3D变换   - 多线程/异步 | 实时数据监控仪表盘   多媒体播放器 |\n| 第五阶段   架构师 | 架构设计+企业级开发 | - MVVM高级应用   - IoC容器(Prism)   - 性能调优策略   - 安全机制设计 | ERP系统模块   智能工厂控制台 |\n\n\n### 一、WPF前端代码范例（XAML）\n```xml\n<!-- 基础窗口结构 -->\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        Title=\"窗体标题\" \n        Width=\"250\" Height=\"100\">\n    <!-- 声明式UI元素 -->\n    <Button Name=\"button\">按钮文字</Button>\n</Window>\n\n```\n\n**核心特征**：\n\n1. 声明式编程：通过XML语法描述UI结构\n2. 元素树组织：采用父容器-子元素的层级结构\n3. 命名空间机制：`xmlns`引用WPF核心程序集\n\n---\n\n### 二、WPF本质解析\n| 维度 | 说明 |\n| --- | --- |\n| **技术定位** | 基于.NET的Windows桌面UI框架 |\n| **核心构成** | 托管类库+操作系统级组件的融合架构 |\n| **设计目标** | 统一2D/3D/文档/媒体开发模型 |\n\n\n---\n\n### 三、WPF分层架构体系\n```mermaid\ngraph LR\n    OS[操作系统层] --> Direct3D[Direct3D]\n    OS --> User32[User32]\n    \n    Native[本地层] --> milcore[milcore.dll]\n    Native --> WindowCodecs[WindowCodecs.dll]\n    \n    Managed[.NET托管层] --> PresentationFramework\n    Managed --> PresentationCore\n    Managed --> WindowsBase\n```\n#### 1. 操作系统级组件\n+ **Direct3D**：硬件加速的3D渲染引擎\n+ **User32**：窗口管理基础服务\n\n#### 2. 本地非托管层\n+ **milcore.dll**：\n    - 实现媒体集成层（MIL）\n    - 封装DirectX接口\n    - 负责2D/3D渲染管道\n+ **WindowCodecs.dll**：\n    - 图像处理引擎\n    - 支持位图操作/格式转换\n\n#### 3. .NET托管层\n| 程序集 | 核心类型 | 功能定位 |\n| --- | --- | --- |\n| **WindowsBase** | `DispatcherObject`   `DependencyObject` | 线程调度/依赖属性系统 |\n| **PresentationCore** | `Visual`   `UIElement` | 视觉树管理   路由事件系统 |\n| **PresentationFramework** | `FrameworkElement`   `Window`   `Control` | 控件库   布局系统   数据绑定引擎 |\n\n\n**类型继承链**：\n\n```plain\nDispatcherObject → DependencyObject → Visual → UIElement → FrameworkElement → Control\n```\n\n---\n\n### 四、WPF核心能力矩阵\n| 能力维度 | 关键技术 | 应用价值 |\n| --- | --- | --- |\n| **界面构建** | XAML+控件库 | 声明式UI开发   快速界面原型 |\n| **视觉呈现** | 矢量图形   分辨率无关渲染 | 高清显示支持   动态缩放不失真 |\n| **交互系统** | 路由事件   命令绑定 | 复杂事件处理   解耦业务逻辑 |\n| **数据驱动** | 数据绑定   MVVM模式 | 前后端分离   可测试性提升 |\n| **样式系统** | 模板/样式/触发器 | 定制化外观   视觉状态管理 |\n| **性能优化** | GPU硬件加速   异步渲染 | 流畅动画体验   低CPU占用 |\n\n\n---\n\n### 五、WPF革命性创新\n1. **矢量图形引擎**\n\n```xml\n<Path Data=\"M 10,100 C 100,0 200,200 300,100\" \n      Stroke=\"Blue\" StrokeThickness=\"3\"/>\n```\n\n    - 基于数学方程而非像素点\n    - 示例：`<Path>`元素实现无损缩放\n2. **精确坐标系统**\n    - 双精度浮点坐标（double类型）\n    - 亚像素级定位精度\n3. **数据驱动范式**\n\n```csharp\n// ViewModel\npublic class UserViewModel : INotifyPropertyChanged\n{\n    private string _name;\n    public string Name\n    {\n        get => _name;\n        set { _name = value; OnPropertyChanged(); }\n    }\n}\n```\n\n```xml\n<!-- View绑定 -->\n<TextBlock Text=\"{Binding Name}\"/>\n```\n\n4. **硬件加速渲染**\n    - 通过DirectX访问GPU\n    - 复杂动画60fps流畅渲染\n\n---\n\n### 六、WPF适用场景\n1. **企业级桌面应用**\n    - ERP/CRM系统\n    - 数据可视化看板\n2. **富媒体应用**\n    - 交互式电子手册\n    - 工业控制界面\n3. **高精度显示需求**\n    - 医疗影像系统\n    - CAD辅助设计\n\n> **技术定位**：WPF是构建现代Windows桌面应用的终极解决方案，尤其适合需要复杂UI、数据可视化、高性能渲染的场景。其架构设计平衡了开发效率与执行性能，通过MVVM模式实现了前后端彻底解耦，为大型应用开发提供了可持续维护的工程基础。\n>\n\n以下是对WPF学习路径的系统化总结，特别针对C#基础与WPF核心技术的衔接要点：\n\n### 七、WPF学习前提：C#核心技术栈\n```mermaid\ngraph LR\n    A[C#基础] --> A1[OOP四大支柱]\n    A --> A2[类型系统]\n    A --> A3[集合与泛型]\n    \n    B[C#高级] --> B1[委托与事件]\n    B --> B2[反射与特性]\n    B --> B3[依赖属性原理]\n    \n    C[前端基础] --> C1[XAML语义结构]\n    C --> C2[数据绑定概念]\n    \n    A1 --> D[WPF深入理解]\n    B1 --> D\n    B2 --> D\n    C1 --> D\n```\n```mermaid\ngraph LR\n    A[Qt经验] --> B[概念迁移]\n    B --> C[WPF核心突破]\n    C --> D[硬件集成专项]\n    \n    subgraph B[概念迁移]\n        B1[QWidget → Control模板]\n        B2[Signals → 路由事件]\n        B3[QML → XAML+Blend]\n    end\n    \n    subgraph C[WPF核心突破]\n        C1[依赖属性系统]\n        C2[MVVM模式]\n        C3[硬件加速渲染]\n    end\n    \n    subgraph D[硬件集成]\n        D1[串口通信]\n        D2[GPIO控制]\n        D3[工业协议集成]\n    end\n```\n### 八、必须掌握的C#关键技术\n#### 1. OOP核心思想\n```csharp\n// 多态性在WPF中的应用示例\npublic abstract class Shape\n{\n    public abstract void Draw();\n}\n\npublic class Circle : Shape\n{\n    public override void Draw() \n    { /* WPF绘制圆形逻辑 */ }\n}\n\n// 在XAML中通过DataTemplate实现多态\n<DataTemplate DataType=\"{x:Type local:Circle}\">\n    <Ellipse Fill=\"Red\" Width=\"50\" Height=\"50\"/>\n</DataTemplate>\n\n```\n\n#### 2. 特性(Attribute)系统\n```csharp\n// WPF依赖属性注册中的特性应用\n[DependencyProperty.Register(\n    \"Width\", \n    typeof(int), \n    typeof(OwnerClass), \n    new FrameworkPropertyMetadata(0)\n)]\npublic int Width { /* 属性包装器 */ }\n```\n\n#### 3. 委托与事件\n```csharp\n// WPF路由事件系统的底层实现\npublic delegate void RoutedEventHandler(object sender, RoutedEventArgs e);\n\n// 自定义路由事件注册\npublic static readonly RoutedEvent TapEvent = \n    EventManager.RegisterRoutedEvent(\n        \"Tap\", \n        RoutingStrategy.Bubble, \n        typeof(RoutedEventHandler), \n        typeof(CustomControl));\n```\n\n#### 4. 反射机制\n```csharp\n// WPF依赖属性注册的反射原理\nPropertyInfo prop = typeof(OwnerClass).GetProperty(\"Width\");\nType ownerType = prop.DeclaringType;\nDependencyProperty.Register(\n    prop.Name, \n    prop.PropertyType, \n    ownerType,  // 通过反射获取类型\n    new PropertyMetadata(0));\n```\n\n### 九、WPF特有概念解析\n#### 1. 依赖属性 vs CLR属性\n| 特性 | 依赖属性 | CLR属性 |\n| --- | --- | --- |\n| **存储机制** | 全局属性存储 | 对象实例存储 |\n| **默认值** | 可设置默认值 | 需显式初始化 |\n| **变更通知** | 内置通知机制 | 需手动实现INPC |\n| **值继承** | 支持元素树继承 | 不支持 |\n| **动画支持** | 原生支持 | 需额外实现 |\n\n\n#### 2. 路由事件工作模型\n\n```csharp\nsequenceDiagram\n    participant Child as 子控件\n    participant Parent as 父容器\n    participant Root as 根元素\n    \n    Child->>Parent: 冒泡阶段(Bubbling)\n    Parent->>Root: 继续冒泡\n    Root-->>Parent: 隧道阶段(Tunneling)\n    Parent-->>Child: 继续隧道\n    Note over Child: 直接事件处理(Direct)\n``` \n\n### 十. 学习技巧\n1. **调试技巧**：\n\n```csharp\n// 查看绑定错误\nPresentationTraceSources.DataBindingSource.Switch.Level = SourceLevels.All;\n\n// 输出窗口显示绑定详情\nSystem.Diagnostics.PresentationTraceSources.DataBindingSource.Listeners.Add(\n    new ConsoleTraceListener());\n```\n\n2. **理解视觉树**：\n\n```csharp\n// 遍历视觉树\npublic static IEnumerable<T> FindVisualChildren<T>(DependencyObject depObj) \n    where T : DependencyObject\n{\n    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(depObj); i++)\n    {\n        var child = VisualTreeHelper.GetChild(depObj, i);\n        if (child is T typedChild) yield return typedChild;\n        foreach (var childOfChild in FindVisualChildren<T>(child)) \n            yield return childOfChild;\n    }\n}\n```\n\n3. **MVVM模式实践**：\n\n```csharp\n// 基础ViewModel实现\npublic class ViewModelBase : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    \n    protected virtual void OnPropertyChanged([CallerMemberName] string name = null)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));\n    }\n}\n```\n\n#### 4、学习路线图\n#### 第一阶段：基础入门（2-3周）  \n  ├─ XAML语法精要  \n  ├─ 常用布局控件（Grid, StackPanel）  \n  ├─ 数据绑定基础（Binding Path）  \n  └─ 样式与资源基础  \n  \n第二阶段：核心技术（4-6周）  \n  ├─ 高级数据绑定（Converter, MultiBinding）  \n  ├─ 命令系统（ICommand, RelayCommand）  \n  ├─ 模板系统（ControlTemplate, DataTemplate）  \n  └─ 用户控件开发  \n  \n第三阶段：高级精通（8-12周）  \n  ├─ 依赖属性系统（自定义DP）  \n  ├─ 路由事件机制（冒泡/隧道）  \n  ├─ 动画与行为（Behaviors）  \n  ├─ 3D图形与多媒体  \n  └─ MVVM框架整合（Prism等）\n> #### **学习箴言**：WPF学习需遵循\"先会用，再懂理\"的实践路径。建议采用：\n> #### **小步快跑**：每学一个概念立即创建微型Demo验证\n> #### **逆向工程**：反编译优秀开源项目（如MaterialDesignInXAML）\n> #### **知识迁移**：将WinForm经验与WPF新特性对比学习\n> #### **工具赋能**：善用LiveXAML、Snoop等开发辅助工具\n\n#### 以下是为嵌入式开发工程师量身定制的WPF学习路径，结合您的Qt开发经验进行针对性优化：\n### 十一、Qt与WPF核心概念映射表\n| Qt概念 | WPF对应概念 | 差异点 | 学习建议 |\n| --- | --- | --- | --- |\n| QWidget | UIElement | WPF更强调组合而非继承 | 重点学习控件模板 |\n| Signals/Slots | 路由事件/绑定/命令 | WPF提供多种交互机制 | 掌握事件路由策略 |\n| QML | XAML | 语法相似但数据绑定更强 | 对比学习声明式语法 |\n| Model/View | MVVM | MVVM是更严格的分离模式 | 深入理解INotifyPropertyChanged |\n| Q_PROPERTY | 依赖属性 | 依赖属性有值继承机制 | 研究属性变更回调 |\n| QLayout | Panel派生类 | WPF布局系统更灵活 | 掌握Grid和DockPanel |\n| QGraphicsView | Visual层 | WPF有更完善的视觉树 | 学习视觉树遍历方法 |\n\n\n### 十二、重点领域深度适配\n#### 1. 硬件交互层实现\n```csharp\n// 串口通信封装（对比Qt的QSerialPort）\npublic class SerialService : IDisposable\n{\n    private SerialPort _port;\n    \n    public SerialService(string portName)\n    {\n        _port = new SerialPort(portName, 9600, Parity.None, 8, StopBits.One);\n        _port.DataReceived += OnDataReceived;\n    }\n    \n    private void OnDataReceived(object sender, SerialDataReceivedEventArgs e)\n    {\n        byte[] data = new byte[_port.BytesToRead];\n        _port.Read(data, 0, data.Length);\n        \n        // 通过事件或绑定更新UI\n        DataReceived?.Invoke(this, data);\n    }\n    \n    public event EventHandler<byte[]> DataReceived;\n}\n```\n\n#### 2. 实时数据可视化\n```xml\n<!-- 工业仪表盘实现（对比Qt的QChart） -->\n<Canvas>\n    <Path Data=\"M 100,100 A 50,50 0 1 1 200,100\"\n          Stroke=\"Blue\" StrokeThickness=\"3\"/>\n    \n    <!-- 实时指针 -->\n    <Line X1=\"150\" Y1=\"150\" X2=\"{Binding Angle, Converter={StaticResource AngleConverter}}\"\n          Stroke=\"Red\" StrokeThickness=\"2\"/>\n    \n    <!-- 数据绑定 -->\n    <TextBlock Text=\"{Binding Temperature, StringFormat='{}{0}°C'}\"\n               Canvas.Top=\"200\" Canvas.Left=\"130\"/>\n</Canvas>\n\n```\n\n### 十三、嵌入式场景优化学习模块\n#### 1. 低延迟渲染技术\n```csharp\n// 利用CompositionTarget.Rendering实现60fps渲染\nCompositionTarget.Rendering += (s, e) =>\n{\n    if (_sensorDataAvailable)\n    {\n        waveForm.InvalidateVisual(); // 自定义波形控件重绘\n    }\n};\n\n// 对比Qt的QTimer+update()\n```\n\n#### 2. 硬件资源管理\n| 资源类型 | Qt方案 | WPF方案 | 注意事项 |\n| --- | --- | --- | --- |\n| 串口 | QSerialPort | System.IO.Ports | 需处理UI线程调度 |\n| USB | libusb | HidLibrary | 驱动兼容性测试 |\n| 网络协议 | QTcpSocket | System.Net.Sockets | 异步操作避免UI阻塞 |\n| 传感器数据 | QSensor | 自定义ISensor接口 | 数据滤波处理 |\n\n\n### 十三、避坑指南（相对Qt学习者）\n1. **线程管理差异**：\n\n```csharp\n// 错误方式（直接跨线程更新UI）\nvoid OnDataReceived(byte[] data)\n{\n    txtValue.Text = data.ToString(); // 引发异常\n}\n\n// 正确方式\nvoid OnDataReceived(byte[] data)\n{\n    Dispatcher.Invoke(() => txtValue.Text = data.ToString());\n}\n```\n\n2. **内存管理对比**：\n\n| 特性 | Qt | WPF |\n| --- | --- | --- |\n| 对象生命周期 | 父子对象树 | GC垃圾回收 |\n| 资源释放 | deleteLater() | IDisposable模式 |\n| 事件处理 | 需手动disconnect | 弱事件模式支持 |\n\n\n3. **渲染性能优化**：\n\n```xml\n<!-- 启用硬件加速 -->\n<Window ...\n        AllowsTransparency=\"False\"\n        TextOptions.TextFormattingMode=\"Display\"\n        RenderOptions.BitmapScalingMode=\"NearestNeighbor\">\n```\n\n### 十四、实战项目演进路线\n```plain\n阶段1：设备监控面板（2周）\n  ├─ 串口数据采集\n  ├─ 实时曲线绘制（Canvas）\n  ├─ 基础MVVM实现\n\n阶段2：工业控制台（3周）\n  ├─ Modbus/TCP协议集成\n  ├─ 3D设备模型展示（HelixToolkit）\n  ├─ 动画状态指示器\n\n阶段3：智能网关系统（4周）\n  ├─ 多线程数据采集\n  ├─ WCF远程控制接口\n  ├─ 数据持久化（SQLite）\n  ├─ 响应式布局设计\n```\n\n### 十五、硬件开发专属工具链\n1. **调试工具**：\n    - Snoop：实时检查WPF视觉树\n    - WPF Performance Suite：渲染性能分析\n2. **硬件集成库**：\n    - LibUsbDotNet：USB设备访问\n    - NModbus：工业协议实现\n    - OPC-UA库：工业自动化标准\n3. **3D渲染框架**：\n\n```xml\n<helix:HelixViewport3D>\n    <helix:SunLight/>\n    <helix:MeshGeometryVisual3D MeshGeometry=\"{Binding SensorModel}\"/>\n</helix:HelixViewport3D>\n\n```\n\n\n\n> \n>\n\n\n\n","slug":"Csharp学习之旅","published":1,"updated":"2025-07-16T06:59:04.030Z","layout":"post","photos":[],"_id":"cmd71t80j00013cw6e98a8iiy","content":"<blockquote>\n<p><font style=\"color:rgb(51, 51, 51);\">零基础入门C#、WPF、数据库，从C#的语法学起，不断深入学习OOP思想（面向对象编程）以及C#高级知识，以实战的方式快速理解封装、继承、多态、抽象、接口、属性、委托、事件、泛型、特性、反射、多线程的概念并掌握其用法，然后，以由浅入深的方式，从整体到细节的渐进学习路径，理论结合实战，学习数据库+WPF框架，包含WPF概述、控件集合、数据绑定、模板样式、资源字典、命令系统、依赖属性、路由事件、动画行为、2D绘图、3D变换等。一条龙专题套餐帮您学透.Net桌面软件开发，成为资深的C#+WPF开发工程师。</font></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌───────────────────────────────────────────────────────────────────── 学习路径 ─────────────────────────────────────────────────────────────────────┐</span><br><span class=\"line\">│                                                                                                                                                  │</span><br><span class=\"line\">│  ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐                                         │</span><br><span class=\"line\">│  │  零基础阶段   │───&gt;│ 入门初级阶段    │───&gt;│   中级阶段     │───&gt;│   高级阶段    │───&gt;│  架构师阶段    │                                         │</span><br><span class=\"line\">│  └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘                                         │</span><br><span class=\"line\">│          │                    │                    │                    │                    │                                                │</span><br><span class=\"line\">│          ▼                    ▼                    ▼                    ▼                    ▼                                                │</span><br><span class=\"line\">│  ┌──────────────────┐  ┌──────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────┐  │</span><br><span class=\"line\">│  │ C#语法基础       │  │ OOP核心概念          │  │ C#高级特性                   │  │ WPF高级技术                  │  │ 系统架构设计             │  │</span><br><span class=\"line\">│  │ - 变量/数据类型  │  │ - 类与对象           │  │ - 接口/抽象类                │  │ - 依赖属性                   │  │ - MVVM进阶               │  │</span><br><span class=\"line\">│  │ - 流程控制语句    │  │ - 封装/继承/多态     │  │ - 委托/事件                  │  │ - 路由事件                   │  │ - 依赖注入               │  │</span><br><span class=\"line\">│  │ - 数组与字符串    │  │ WPF入门             │  │ - 泛型编程                   │  │ - 动画与行为                 │  │ 性能优化                 │  │</span><br><span class=\"line\">│  │ - 方法定义与调用  │  │ - XAML基础语法       │  │ WPF核心技术                  │  │ - 2D/3D图形                  │  │ - 内存管理               │  │</span><br><span class=\"line\">│  │                  │  │ - 常用控件使用       │  │ - 数据绑定                   │  │ 并发编程                     │  │ - 渲染优化               │  │</span><br><span class=\"line\">│  │                  │  │ 数据库基础           │  │ - 模板与样式                 │  │ - 多线程/异步                │  │ 跨平台方案               │  │</span><br><span class=\"line\">│  │                  │  │ - SQL增删改查        │  │ - 命令系统                   │  │ - Task并行库                 │  │ - .NET MAUI              │  │</span><br><span class=\"line\">│  │                  │  │ - ADO.NET连接        │  │ - 资源字典                   │  │ 反射与特性                   │  │ 项目实战                 │  │</span><br><span class=\"line\">│  │                  │  │                     │  │ EF Core                      │  │ 设计模式                     │  │ - 企业级应用开发         │  │</span><br><span class=\"line\">│  │                  │  │                     │  │ - ORM映射                    │  │                             │  │                          │  │</span><br><span class=\"line\">│  └──────────────────┘  └──────────────────────┘  └──────────────────────────────┘  └──────────────────────────────┘  └──────────────────────────┘  │</span><br><span class=\"line\">│                                                                                                                                                  │</span><br><span class=\"line\">└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><strong>阶段</strong></th>\n<th><strong>核心内容</strong></th>\n<th><strong>技术要点</strong></th>\n<th><strong>实战项目</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一阶段   零基础</td>\n<td>C#语法基础</td>\n<td>- 数据类型/变量/运算符   - 流程控制(if/for/while)   - 数组与集合   - 异常处理</td>\n<td>控制台计算器   学生成绩管理系统</td>\n</tr>\n<tr>\n<td>第二阶段   入门初级</td>\n<td>OOP+WPF基础+数据库</td>\n<td>- 类/对象/三大特性   - XAML布局原理   - 基础控件使用   - SQLite/ADO.NET</td>\n<td>通讯录管理系统   简易图书管理器</td>\n</tr>\n<tr>\n<td>第三阶段   中级</td>\n<td>C#高级+WPF核心</td>\n<td>- 接口/委托/事件   - 数据绑定/MVVM   - 样式/模板/触发器   - EF Core操作</td>\n<td>电商商品管理系统   员工考勤系统</td>\n</tr>\n<tr>\n<td>第四阶段   高级</td>\n<td>WPF深度+系统编程</td>\n<td>- 依赖属性系统   - 路由事件机制   - 动画/3D变换   - 多线程/异步</td>\n<td>实时数据监控仪表盘   多媒体播放器</td>\n</tr>\n<tr>\n<td>第五阶段   架构师</td>\n<td>架构设计+企业级开发</td>\n<td>- MVVM高级应用   - IoC容器(Prism)   - 性能调优策略   - 安全机制设计</td>\n<td>ERP系统模块   智能工厂控制台</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"一-wpf前端代码范例xaml\"><a class=\"markdownIt-Anchor\" href=\"#一-wpf前端代码范例xaml\"></a> 一、WPF前端代码范例（XAML）</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 基础窗口结构 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">&quot;窗体标题&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Width</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 声明式UI元素 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Name</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>按钮文字<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>核心特征</strong>：</p>\n<ol>\n<li>声明式编程：通过XML语法描述UI结构</li>\n<li>元素树组织：采用父容器-子元素的层级结构</li>\n<li>命名空间机制：<code>xmlns</code>引用WPF核心程序集</li>\n</ol>\n<hr />\n<h3 id=\"二-wpf本质解析\"><a class=\"markdownIt-Anchor\" href=\"#二-wpf本质解析\"></a> 二、WPF本质解析</h3>\n<table>\n<thead>\n<tr>\n<th>维度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>技术定位</strong></td>\n<td>基于.NET的Windows桌面UI框架</td>\n</tr>\n<tr>\n<td><strong>核心构成</strong></td>\n<td>托管类库+操作系统级组件的融合架构</td>\n</tr>\n<tr>\n<td><strong>设计目标</strong></td>\n<td>统一2D/3D/文档/媒体开发模型</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"三-wpf分层架构体系\"><a class=\"markdownIt-Anchor\" href=\"#三-wpf分层架构体系\"></a> 三、WPF分层架构体系</h3>\n<pre class=\"mermaid\">graph LR\n    OS[操作系统层] --> Direct3D[Direct3D]\n    OS --> User32[User32]\n    \n    Native[本地层] --> milcore[milcore.dll]\n    Native --> WindowCodecs[WindowCodecs.dll]\n    \n    Managed[.NET托管层] --> PresentationFramework\n    Managed --> PresentationCore\n    Managed --> WindowsBase</pre>\n<h4 id=\"1-操作系统级组件\"><a class=\"markdownIt-Anchor\" href=\"#1-操作系统级组件\"></a> 1. 操作系统级组件</h4>\n<ul>\n<li><strong>Direct3D</strong>：硬件加速的3D渲染引擎</li>\n<li><strong>User32</strong>：窗口管理基础服务</li>\n</ul>\n<h4 id=\"2-本地非托管层\"><a class=\"markdownIt-Anchor\" href=\"#2-本地非托管层\"></a> 2. 本地非托管层</h4>\n<ul>\n<li><strong>milcore.dll</strong>：\n<ul>\n<li>实现媒体集成层（MIL）</li>\n<li>封装DirectX接口</li>\n<li>负责2D/3D渲染管道</li>\n</ul>\n</li>\n<li><strong>WindowCodecs.dll</strong>：\n<ul>\n<li>图像处理引擎</li>\n<li>支持位图操作/格式转换</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-net托管层\"><a class=\"markdownIt-Anchor\" href=\"#3-net托管层\"></a> 3. .NET托管层</h4>\n<table>\n<thead>\n<tr>\n<th>程序集</th>\n<th>核心类型</th>\n<th>功能定位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>WindowsBase</strong></td>\n<td><code>DispatcherObject</code>   <code>DependencyObject</code></td>\n<td>线程调度/依赖属性系统</td>\n</tr>\n<tr>\n<td><strong>PresentationCore</strong></td>\n<td><code>Visual</code>   <code>UIElement</code></td>\n<td>视觉树管理   路由事件系统</td>\n</tr>\n<tr>\n<td><strong>PresentationFramework</strong></td>\n<td><code>FrameworkElement</code>   <code>Window</code>   <code>Control</code></td>\n<td>控件库   布局系统   数据绑定引擎</td>\n</tr>\n</tbody>\n</table>\n<p><strong>类型继承链</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DispatcherObject → DependencyObject → Visual → UIElement → FrameworkElement → Control</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"四-wpf核心能力矩阵\"><a class=\"markdownIt-Anchor\" href=\"#四-wpf核心能力矩阵\"></a> 四、WPF核心能力矩阵</h3>\n<table>\n<thead>\n<tr>\n<th>能力维度</th>\n<th>关键技术</th>\n<th>应用价值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>界面构建</strong></td>\n<td>XAML+控件库</td>\n<td>声明式UI开发   快速界面原型</td>\n</tr>\n<tr>\n<td><strong>视觉呈现</strong></td>\n<td>矢量图形   分辨率无关渲染</td>\n<td>高清显示支持   动态缩放不失真</td>\n</tr>\n<tr>\n<td><strong>交互系统</strong></td>\n<td>路由事件   命令绑定</td>\n<td>复杂事件处理   解耦业务逻辑</td>\n</tr>\n<tr>\n<td><strong>数据驱动</strong></td>\n<td>数据绑定   MVVM模式</td>\n<td>前后端分离   可测试性提升</td>\n</tr>\n<tr>\n<td><strong>样式系统</strong></td>\n<td>模板/样式/触发器</td>\n<td>定制化外观   视觉状态管理</td>\n</tr>\n<tr>\n<td><strong>性能优化</strong></td>\n<td>GPU硬件加速   异步渲染</td>\n<td>流畅动画体验   低CPU占用</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"五-wpf革命性创新\"><a class=\"markdownIt-Anchor\" href=\"#五-wpf革命性创新\"></a> 五、WPF革命性创新</h3>\n<ol>\n<li><strong>矢量图形引擎</strong></li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Path</span> <span class=\"attr\">Data</span>=<span class=\"string\">&quot;M 10,100 C 100,0 200,200 300,100&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<pre><code>- 基于数学方程而非像素点\n- 示例：`&lt;Path&gt;`元素实现无损缩放\n</code></pre>\n<ol start=\"2\">\n<li><strong>精确坐标系统</strong>\n<ul>\n<li>双精度浮点坐标（double类型）</li>\n<li>亚像素级定位精度</li>\n</ul>\n</li>\n<li><strong>数据驱动范式</strong></li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ViewModel</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserViewModel</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> _name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> =&gt; _name;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; _name = <span class=\"keyword\">value</span>; OnPropertyChanged(); &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- View绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li><strong>硬件加速渲染</strong>\n<ul>\n<li>通过DirectX访问GPU</li>\n<li>复杂动画60fps流畅渲染</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"六-wpf适用场景\"><a class=\"markdownIt-Anchor\" href=\"#六-wpf适用场景\"></a> 六、WPF适用场景</h3>\n<ol>\n<li><strong>企业级桌面应用</strong>\n<ul>\n<li>ERP/CRM系统</li>\n<li>数据可视化看板</li>\n</ul>\n</li>\n<li><strong>富媒体应用</strong>\n<ul>\n<li>交互式电子手册</li>\n<li>工业控制界面</li>\n</ul>\n</li>\n<li><strong>高精度显示需求</strong>\n<ul>\n<li>医疗影像系统</li>\n<li>CAD辅助设计</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>技术定位</strong>：WPF是构建现代Windows桌面应用的终极解决方案，尤其适合需要复杂UI、数据可视化、高性能渲染的场景。其架构设计平衡了开发效率与执行性能，通过MVVM模式实现了前后端彻底解耦，为大型应用开发提供了可持续维护的工程基础。</p>\n</blockquote>\n<p>以下是对WPF学习路径的系统化总结，特别针对C#基础与WPF核心技术的衔接要点：</p>\n<h3 id=\"七-wpf学习前提c核心技术栈\"><a class=\"markdownIt-Anchor\" href=\"#七-wpf学习前提c核心技术栈\"></a> 七、WPF学习前提：C#核心技术栈</h3>\n<pre class=\"mermaid\">graph LR\n    A[C#基础] --> A1[OOP四大支柱]\n    A --> A2[类型系统]\n    A --> A3[集合与泛型]\n    \n    B[C#高级] --> B1[委托与事件]\n    B --> B2[反射与特性]\n    B --> B3[依赖属性原理]\n    \n    C[前端基础] --> C1[XAML语义结构]\n    C --> C2[数据绑定概念]\n    \n    A1 --> D[WPF深入理解]\n    B1 --> D\n    B2 --> D\n    C1 --> D</pre>\n<pre class=\"mermaid\">graph LR\n    A[Qt经验] --> B[概念迁移]\n    B --> C[WPF核心突破]\n    C --> D[硬件集成专项]\n    \n    subgraph B[概念迁移]\n        B1[QWidget → Control模板]\n        B2[Signals → 路由事件]\n        B3[QML → XAML+Blend]\n    end\n    \n    subgraph C[WPF核心突破]\n        C1[依赖属性系统]\n        C2[MVVM模式]\n        C3[硬件加速渲染]\n    end\n    \n    subgraph D[硬件集成]\n        D1[串口通信]\n        D2[GPIO控制]\n        D3[工业协议集成]\n    end</pre>\n<h3 id=\"八-必须掌握的c关键技术\"><a class=\"markdownIt-Anchor\" href=\"#八-必须掌握的c关键技术\"></a> 八、必须掌握的C#关键技术</h3>\n<h4 id=\"1-oop核心思想\"><a class=\"markdownIt-Anchor\" href=\"#1-oop核心思想\"></a> 1. OOP核心思想</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 多态性在WPF中的应用示例</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Shape</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Draw</span>()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Circle</span> : <span class=\"title\">Shape</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Draw</span>()</span> </span><br><span class=\"line\">    &#123; <span class=\"comment\">/* WPF绘制圆形逻辑 */</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在XAML中通过DataTemplate实现多态</span></span><br><span class=\"line\">&lt;DataTemplate DataType=<span class=\"string\">&quot;&#123;x:Type local:Circle&#125;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;Ellipse Fill=<span class=\"string\">&quot;Red&quot;</span> Width=<span class=\"string\">&quot;50&quot;</span> Height=<span class=\"string\">&quot;50&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/DataTemplate&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-特性attribute系统\"><a class=\"markdownIt-Anchor\" href=\"#2-特性attribute系统\"></a> 2. 特性(Attribute)系统</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF依赖属性注册中的特性应用</span></span><br><span class=\"line\">[<span class=\"meta\">DependencyProperty.Register(</span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;Width&quot;</span>, </span></span><br><span class=\"line\"><span class=\"meta\">    typeof(int), </span></span><br><span class=\"line\"><span class=\"meta\">    typeof(OwnerClass), </span></span><br><span class=\"line\"><span class=\"meta\">    new FrameworkPropertyMetadata(0)</span></span><br><span class=\"line\"><span class=\"meta\">)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Width &#123; <span class=\"comment\">/* 属性包装器 */</span> &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-委托与事件\"><a class=\"markdownIt-Anchor\" href=\"#3-委托与事件\"></a> 3. 委托与事件</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF路由事件系统的底层实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">RoutedEventHandler</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义路由事件注册</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> RoutedEvent TapEvent = </span><br><span class=\"line\">    EventManager.RegisterRoutedEvent(</span><br><span class=\"line\">        <span class=\"string\">&quot;Tap&quot;</span>, </span><br><span class=\"line\">        RoutingStrategy.Bubble, </span><br><span class=\"line\">        <span class=\"keyword\">typeof</span>(RoutedEventHandler), </span><br><span class=\"line\">        <span class=\"keyword\">typeof</span>(CustomControl));</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-反射机制\"><a class=\"markdownIt-Anchor\" href=\"#4-反射机制\"></a> 4. 反射机制</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF依赖属性注册的反射原理</span></span><br><span class=\"line\">PropertyInfo prop = <span class=\"keyword\">typeof</span>(OwnerClass).GetProperty(<span class=\"string\">&quot;Width&quot;</span>);</span><br><span class=\"line\">Type ownerType = prop.DeclaringType;</span><br><span class=\"line\">DependencyProperty.Register(</span><br><span class=\"line\">    prop.Name, </span><br><span class=\"line\">    prop.PropertyType, </span><br><span class=\"line\">    ownerType,  <span class=\"comment\">// 通过反射获取类型</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"九-wpf特有概念解析\"><a class=\"markdownIt-Anchor\" href=\"#九-wpf特有概念解析\"></a> 九、WPF特有概念解析</h3>\n<h4 id=\"1-依赖属性-vs-clr属性\"><a class=\"markdownIt-Anchor\" href=\"#1-依赖属性-vs-clr属性\"></a> 1. 依赖属性 vs CLR属性</h4>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>依赖属性</th>\n<th>CLR属性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>存储机制</strong></td>\n<td>全局属性存储</td>\n<td>对象实例存储</td>\n</tr>\n<tr>\n<td><strong>默认值</strong></td>\n<td>可设置默认值</td>\n<td>需显式初始化</td>\n</tr>\n<tr>\n<td><strong>变更通知</strong></td>\n<td>内置通知机制</td>\n<td>需手动实现INPC</td>\n</tr>\n<tr>\n<td><strong>值继承</strong></td>\n<td>支持元素树继承</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td><strong>动画支持</strong></td>\n<td>原生支持</td>\n<td>需额外实现</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-路由事件工作模型\"><a class=\"markdownIt-Anchor\" href=\"#2-路由事件工作模型\"></a> 2. 路由事件工作模型</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">    participant Child <span class=\"keyword\">as</span> 子控件</span><br><span class=\"line\">    participant Parent <span class=\"keyword\">as</span> 父容器</span><br><span class=\"line\">    participant Root <span class=\"keyword\">as</span> 根元素</span><br><span class=\"line\">    </span><br><span class=\"line\">    Child-&gt;&gt;Parent: 冒泡阶段(Bubbling)</span><br><span class=\"line\">    Parent-&gt;&gt;Root: 继续冒泡</span><br><span class=\"line\">    Root--&gt;&gt;Parent: 隧道阶段(Tunneling)</span><br><span class=\"line\">    Parent--&gt;&gt;Child: 继续隧道</span><br><span class=\"line\">    Note over Child: 直接事件处理(Direct)</span><br></pre></td></tr></table></figure>\n<h3 id=\"十-学习技巧\"><a class=\"markdownIt-Anchor\" href=\"#十-学习技巧\"></a> 十. 学习技巧</h3>\n<ol>\n<li><strong>调试技巧</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查看绑定错误</span></span><br><span class=\"line\">PresentationTraceSources.DataBindingSource.Switch.Level = SourceLevels.All;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出窗口显示绑定详情</span></span><br><span class=\"line\">System.Diagnostics.PresentationTraceSources.DataBindingSource.Listeners.Add(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ConsoleTraceListener());</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>理解视觉树</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 遍历视觉树</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">FindVisualChildren</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">DependencyObject depObj</span>) </span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"keyword\">where</span> T : DependencyObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; VisualTreeHelper.GetChildrenCount(depObj); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> child = VisualTreeHelper.GetChild(depObj, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (child <span class=\"keyword\">is</span> T typedChild) <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> typedChild;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"function\"><span class=\"keyword\">var</span> childOfChild <span class=\"keyword\">in</span> <span class=\"title\">FindVisualChildren</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">child</span>)) </span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> childOfChild</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>MVVM模式实践</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础ViewModel实现</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ViewModelBase</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName] <span class=\"built_in\">string</span> name = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        PropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(name));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-学习路线图\"><a class=\"markdownIt-Anchor\" href=\"#4-学习路线图\"></a> 4、学习路线图</h4>\n<h4 id=\"第一阶段基础入门2-3周\"><a class=\"markdownIt-Anchor\" href=\"#第一阶段基础入门2-3周\"></a> 第一阶段：基础入门（2-3周）</h4>\n<p>├─ XAML语法精要<br />\n├─ 常用布局控件（Grid, StackPanel）<br />\n├─ 数据绑定基础（Binding Path）<br />\n└─ 样式与资源基础</p>\n<p>第二阶段：核心技术（4-6周）<br />\n├─ 高级数据绑定（Converter, MultiBinding）<br />\n├─ 命令系统（ICommand, RelayCommand）<br />\n├─ 模板系统（ControlTemplate, DataTemplate）<br />\n└─ 用户控件开发</p>\n<p>第三阶段：高级精通（8-12周）<br />\n├─ 依赖属性系统（自定义DP）<br />\n├─ 路由事件机制（冒泡/隧道）<br />\n├─ 动画与行为（Behaviors）<br />\n├─ 3D图形与多媒体<br />\n└─ MVVM框架整合（Prism等）</p>\n<blockquote>\n<h4 id=\"学习箴言wpf学习需遵循先会用再懂理的实践路径-建议采用\"><a class=\"markdownIt-Anchor\" href=\"#学习箴言wpf学习需遵循先会用再懂理的实践路径-建议采用\"></a> <strong>学习箴言</strong>：WPF学习需遵循&quot;先会用，再懂理&quot;的实践路径。建议采用：</h4>\n<h4 id=\"小步快跑每学一个概念立即创建微型demo验证\"><a class=\"markdownIt-Anchor\" href=\"#小步快跑每学一个概念立即创建微型demo验证\"></a> <strong>小步快跑</strong>：每学一个概念立即创建微型Demo验证</h4>\n<h4 id=\"逆向工程反编译优秀开源项目如materialdesigninxaml\"><a class=\"markdownIt-Anchor\" href=\"#逆向工程反编译优秀开源项目如materialdesigninxaml\"></a> <strong>逆向工程</strong>：反编译优秀开源项目（如MaterialDesignInXAML）</h4>\n<h4 id=\"知识迁移将winform经验与wpf新特性对比学习\"><a class=\"markdownIt-Anchor\" href=\"#知识迁移将winform经验与wpf新特性对比学习\"></a> <strong>知识迁移</strong>：将WinForm经验与WPF新特性对比学习</h4>\n<h4 id=\"工具赋能善用livexaml-snoop等开发辅助工具\"><a class=\"markdownIt-Anchor\" href=\"#工具赋能善用livexaml-snoop等开发辅助工具\"></a> <strong>工具赋能</strong>：善用LiveXAML、Snoop等开发辅助工具</h4>\n</blockquote>\n<h4 id=\"以下是为嵌入式开发工程师量身定制的wpf学习路径结合您的qt开发经验进行针对性优化\"><a class=\"markdownIt-Anchor\" href=\"#以下是为嵌入式开发工程师量身定制的wpf学习路径结合您的qt开发经验进行针对性优化\"></a> 以下是为嵌入式开发工程师量身定制的WPF学习路径，结合您的Qt开发经验进行针对性优化：</h4>\n<h3 id=\"十一-qt与wpf核心概念映射表\"><a class=\"markdownIt-Anchor\" href=\"#十一-qt与wpf核心概念映射表\"></a> 十一、Qt与WPF核心概念映射表</h3>\n<table>\n<thead>\n<tr>\n<th>Qt概念</th>\n<th>WPF对应概念</th>\n<th>差异点</th>\n<th>学习建议</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>QWidget</td>\n<td>UIElement</td>\n<td>WPF更强调组合而非继承</td>\n<td>重点学习控件模板</td>\n</tr>\n<tr>\n<td>Signals/Slots</td>\n<td>路由事件/绑定/命令</td>\n<td>WPF提供多种交互机制</td>\n<td>掌握事件路由策略</td>\n</tr>\n<tr>\n<td>QML</td>\n<td>XAML</td>\n<td>语法相似但数据绑定更强</td>\n<td>对比学习声明式语法</td>\n</tr>\n<tr>\n<td>Model/View</td>\n<td>MVVM</td>\n<td>MVVM是更严格的分离模式</td>\n<td>深入理解INotifyPropertyChanged</td>\n</tr>\n<tr>\n<td>Q_PROPERTY</td>\n<td>依赖属性</td>\n<td>依赖属性有值继承机制</td>\n<td>研究属性变更回调</td>\n</tr>\n<tr>\n<td>QLayout</td>\n<td>Panel派生类</td>\n<td>WPF布局系统更灵活</td>\n<td>掌握Grid和DockPanel</td>\n</tr>\n<tr>\n<td>QGraphicsView</td>\n<td>Visual层</td>\n<td>WPF有更完善的视觉树</td>\n<td>学习视觉树遍历方法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十二-重点领域深度适配\"><a class=\"markdownIt-Anchor\" href=\"#十二-重点领域深度适配\"></a> 十二、重点领域深度适配</h3>\n<h4 id=\"1-硬件交互层实现\"><a class=\"markdownIt-Anchor\" href=\"#1-硬件交互层实现\"></a> 1. 硬件交互层实现</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 串口通信封装（对比Qt的QSerialPort）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SerialService</span> : <span class=\"title\">IDisposable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SerialPort _port;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SerialService</span>(<span class=\"params\"><span class=\"built_in\">string</span> portName</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _port = <span class=\"keyword\">new</span> SerialPort(portName, <span class=\"number\">9600</span>, Parity.None, <span class=\"number\">8</span>, StopBits.One);</span><br><span class=\"line\">        _port.DataReceived += OnDataReceived;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"built_in\">byte</span>[_port.BytesToRead];</span><br><span class=\"line\">        _port.Read(data, <span class=\"number\">0</span>, data.Length);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 通过事件或绑定更新UI</span></span><br><span class=\"line\">        DataReceived?.Invoke(<span class=\"keyword\">this</span>, data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> EventHandler&lt;<span class=\"built_in\">byte</span>[]&gt; DataReceived;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-实时数据可视化\"><a class=\"markdownIt-Anchor\" href=\"#2-实时数据可视化\"></a> 2. 实时数据可视化</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 工业仪表盘实现（对比Qt的QChart） --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Path</span> <span class=\"attr\">Data</span>=<span class=\"string\">&quot;M 100,100 A 50,50 0 1 1 200,100&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;3&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实时指针 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Line</span> <span class=\"attr\">X1</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">Y1</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">X2</span>=<span class=\"string\">&quot;&#123;Binding Angle, Converter=&#123;StaticResource AngleConverter&#125;&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Red&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据绑定 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Temperature, StringFormat=&#x27;&#123;&#125;&#123;0&#125;°C&#x27;&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">Canvas.Top</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">Canvas.Left</span>=<span class=\"string\">&quot;130&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Canvas</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"十三-嵌入式场景优化学习模块\"><a class=\"markdownIt-Anchor\" href=\"#十三-嵌入式场景优化学习模块\"></a> 十三、嵌入式场景优化学习模块</h3>\n<h4 id=\"1-低延迟渲染技术\"><a class=\"markdownIt-Anchor\" href=\"#1-低延迟渲染技术\"></a> 1. 低延迟渲染技术</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 利用CompositionTarget.Rendering实现60fps渲染</span></span><br><span class=\"line\">CompositionTarget.Rendering += (s, e) =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_sensorDataAvailable)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        waveForm.InvalidateVisual(); <span class=\"comment\">// 自定义波形控件重绘</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对比Qt的QTimer+update()</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-硬件资源管理\"><a class=\"markdownIt-Anchor\" href=\"#2-硬件资源管理\"></a> 2. 硬件资源管理</h4>\n<table>\n<thead>\n<tr>\n<th>资源类型</th>\n<th>Qt方案</th>\n<th>WPF方案</th>\n<th>注意事项</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>串口</td>\n<td>QSerialPort</td>\n<td>System.IO.Ports</td>\n<td>需处理UI线程调度</td>\n</tr>\n<tr>\n<td>USB</td>\n<td>libusb</td>\n<td>HidLibrary</td>\n<td>驱动兼容性测试</td>\n</tr>\n<tr>\n<td>网络协议</td>\n<td>QTcpSocket</td>\n<td>System.Net.Sockets</td>\n<td>异步操作避免UI阻塞</td>\n</tr>\n<tr>\n<td>传感器数据</td>\n<td>QSensor</td>\n<td>自定义ISensor接口</td>\n<td>数据滤波处理</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十三-避坑指南相对qt学习者\"><a class=\"markdownIt-Anchor\" href=\"#十三-避坑指南相对qt学习者\"></a> 十三、避坑指南（相对Qt学习者）</h3>\n<ol>\n<li><strong>线程管理差异</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误方式（直接跨线程更新UI）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">byte</span>[] data</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    txtValue.Text = data.ToString(); <span class=\"comment\">// 引发异常</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确方式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">byte</span>[] data</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Dispatcher.Invoke(() =&gt; txtValue.Text = data.ToString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>内存管理对比</strong>：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Qt</th>\n<th>WPF</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>对象生命周期</td>\n<td>父子对象树</td>\n<td>GC垃圾回收</td>\n</tr>\n<tr>\n<td>资源释放</td>\n<td>deleteLater()</td>\n<td>IDisposable模式</td>\n</tr>\n<tr>\n<td>事件处理</td>\n<td>需手动disconnect</td>\n<td>弱事件模式支持</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li><strong>渲染性能优化</strong>：</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 启用硬件加速 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">AllowsTransparency</span>=<span class=\"string\">&quot;False&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">TextOptions.TextFormattingMode</span>=<span class=\"string\">&quot;Display&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">RenderOptions.BitmapScalingMode</span>=<span class=\"string\">&quot;NearestNeighbor&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"十四-实战项目演进路线\"><a class=\"markdownIt-Anchor\" href=\"#十四-实战项目演进路线\"></a> 十四、实战项目演进路线</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">阶段1：设备监控面板（2周）</span><br><span class=\"line\">  ├─ 串口数据采集</span><br><span class=\"line\">  ├─ 实时曲线绘制（Canvas）</span><br><span class=\"line\">  ├─ 基础MVVM实现</span><br><span class=\"line\"></span><br><span class=\"line\">阶段2：工业控制台（3周）</span><br><span class=\"line\">  ├─ Modbus/TCP协议集成</span><br><span class=\"line\">  ├─ 3D设备模型展示（HelixToolkit）</span><br><span class=\"line\">  ├─ 动画状态指示器</span><br><span class=\"line\"></span><br><span class=\"line\">阶段3：智能网关系统（4周）</span><br><span class=\"line\">  ├─ 多线程数据采集</span><br><span class=\"line\">  ├─ WCF远程控制接口</span><br><span class=\"line\">  ├─ 数据持久化（SQLite）</span><br><span class=\"line\">  ├─ 响应式布局设计</span><br></pre></td></tr></table></figure>\n<h3 id=\"十五-硬件开发专属工具链\"><a class=\"markdownIt-Anchor\" href=\"#十五-硬件开发专属工具链\"></a> 十五、硬件开发专属工具链</h3>\n<ol>\n<li><strong>调试工具</strong>：\n<ul>\n<li>Snoop：实时检查WPF视觉树</li>\n<li>WPF Performance Suite：渲染性能分析</li>\n</ul>\n</li>\n<li><strong>硬件集成库</strong>：\n<ul>\n<li>LibUsbDotNet：USB设备访问</li>\n<li>NModbus：工业协议实现</li>\n<li>OPC-UA库：工业自动化标准</li>\n</ul>\n</li>\n<li><strong>3D渲染框架</strong>：</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">helix:HelixViewport3D</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">helix:SunLight</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">helix:MeshGeometryVisual3D</span> <span class=\"attr\">MeshGeometry</span>=<span class=\"string\">&quot;&#123;Binding SensorModel&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">helix:HelixViewport3D</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote></blockquote>\n","excerpt":"","more":"<blockquote>\n<p><font style=\"color:rgb(51, 51, 51);\">零基础入门C#、WPF、数据库，从C#的语法学起，不断深入学习OOP思想（面向对象编程）以及C#高级知识，以实战的方式快速理解封装、继承、多态、抽象、接口、属性、委托、事件、泛型、特性、反射、多线程的概念并掌握其用法，然后，以由浅入深的方式，从整体到细节的渐进学习路径，理论结合实战，学习数据库+WPF框架，包含WPF概述、控件集合、数据绑定、模板样式、资源字典、命令系统、依赖属性、路由事件、动画行为、2D绘图、3D变换等。一条龙专题套餐帮您学透.Net桌面软件开发，成为资深的C#+WPF开发工程师。</font></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌───────────────────────────────────────────────────────────────────── 学习路径 ─────────────────────────────────────────────────────────────────────┐</span><br><span class=\"line\">│                                                                                                                                                  │</span><br><span class=\"line\">│  ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐    ┌───────────────┐                                         │</span><br><span class=\"line\">│  │  零基础阶段   │───&gt;│ 入门初级阶段    │───&gt;│   中级阶段     │───&gt;│   高级阶段    │───&gt;│  架构师阶段    │                                         │</span><br><span class=\"line\">│  └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘    └───────┬───────┘                                         │</span><br><span class=\"line\">│          │                    │                    │                    │                    │                                                │</span><br><span class=\"line\">│          ▼                    ▼                    ▼                    ▼                    ▼                                                │</span><br><span class=\"line\">│  ┌──────────────────┐  ┌──────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────────┐  ┌──────────────────────────┐  │</span><br><span class=\"line\">│  │ C#语法基础       │  │ OOP核心概念          │  │ C#高级特性                   │  │ WPF高级技术                  │  │ 系统架构设计             │  │</span><br><span class=\"line\">│  │ - 变量/数据类型  │  │ - 类与对象           │  │ - 接口/抽象类                │  │ - 依赖属性                   │  │ - MVVM进阶               │  │</span><br><span class=\"line\">│  │ - 流程控制语句    │  │ - 封装/继承/多态     │  │ - 委托/事件                  │  │ - 路由事件                   │  │ - 依赖注入               │  │</span><br><span class=\"line\">│  │ - 数组与字符串    │  │ WPF入门             │  │ - 泛型编程                   │  │ - 动画与行为                 │  │ 性能优化                 │  │</span><br><span class=\"line\">│  │ - 方法定义与调用  │  │ - XAML基础语法       │  │ WPF核心技术                  │  │ - 2D/3D图形                  │  │ - 内存管理               │  │</span><br><span class=\"line\">│  │                  │  │ - 常用控件使用       │  │ - 数据绑定                   │  │ 并发编程                     │  │ - 渲染优化               │  │</span><br><span class=\"line\">│  │                  │  │ 数据库基础           │  │ - 模板与样式                 │  │ - 多线程/异步                │  │ 跨平台方案               │  │</span><br><span class=\"line\">│  │                  │  │ - SQL增删改查        │  │ - 命令系统                   │  │ - Task并行库                 │  │ - .NET MAUI              │  │</span><br><span class=\"line\">│  │                  │  │ - ADO.NET连接        │  │ - 资源字典                   │  │ 反射与特性                   │  │ 项目实战                 │  │</span><br><span class=\"line\">│  │                  │  │                     │  │ EF Core                      │  │ 设计模式                     │  │ - 企业级应用开发         │  │</span><br><span class=\"line\">│  │                  │  │                     │  │ - ORM映射                    │  │                             │  │                          │  │</span><br><span class=\"line\">│  └──────────────────┘  └──────────────────────┘  └──────────────────────────────┘  └──────────────────────────────┘  └──────────────────────────┘  │</span><br><span class=\"line\">│                                                                                                                                                  │</span><br><span class=\"line\">└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><strong>阶段</strong></th>\n<th><strong>核心内容</strong></th>\n<th><strong>技术要点</strong></th>\n<th><strong>实战项目</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>第一阶段   零基础</td>\n<td>C#语法基础</td>\n<td>- 数据类型/变量/运算符   - 流程控制(if/for/while)   - 数组与集合   - 异常处理</td>\n<td>控制台计算器   学生成绩管理系统</td>\n</tr>\n<tr>\n<td>第二阶段   入门初级</td>\n<td>OOP+WPF基础+数据库</td>\n<td>- 类/对象/三大特性   - XAML布局原理   - 基础控件使用   - SQLite/ADO.NET</td>\n<td>通讯录管理系统   简易图书管理器</td>\n</tr>\n<tr>\n<td>第三阶段   中级</td>\n<td>C#高级+WPF核心</td>\n<td>- 接口/委托/事件   - 数据绑定/MVVM   - 样式/模板/触发器   - EF Core操作</td>\n<td>电商商品管理系统   员工考勤系统</td>\n</tr>\n<tr>\n<td>第四阶段   高级</td>\n<td>WPF深度+系统编程</td>\n<td>- 依赖属性系统   - 路由事件机制   - 动画/3D变换   - 多线程/异步</td>\n<td>实时数据监控仪表盘   多媒体播放器</td>\n</tr>\n<tr>\n<td>第五阶段   架构师</td>\n<td>架构设计+企业级开发</td>\n<td>- MVVM高级应用   - IoC容器(Prism)   - 性能调优策略   - 安全机制设计</td>\n<td>ERP系统模块   智能工厂控制台</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"一-wpf前端代码范例xaml\"><a class=\"markdownIt-Anchor\" href=\"#一-wpf前端代码范例xaml\"></a> 一、WPF前端代码范例（XAML）</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 基础窗口结构 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">&quot;窗体标题&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Width</span>=<span class=\"string\">&quot;250&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 声明式UI元素 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Name</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>按钮文字<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>核心特征</strong>：</p>\n<ol>\n<li>声明式编程：通过XML语法描述UI结构</li>\n<li>元素树组织：采用父容器-子元素的层级结构</li>\n<li>命名空间机制：<code>xmlns</code>引用WPF核心程序集</li>\n</ol>\n<hr />\n<h3 id=\"二-wpf本质解析\"><a class=\"markdownIt-Anchor\" href=\"#二-wpf本质解析\"></a> 二、WPF本质解析</h3>\n<table>\n<thead>\n<tr>\n<th>维度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>技术定位</strong></td>\n<td>基于.NET的Windows桌面UI框架</td>\n</tr>\n<tr>\n<td><strong>核心构成</strong></td>\n<td>托管类库+操作系统级组件的融合架构</td>\n</tr>\n<tr>\n<td><strong>设计目标</strong></td>\n<td>统一2D/3D/文档/媒体开发模型</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"三-wpf分层架构体系\"><a class=\"markdownIt-Anchor\" href=\"#三-wpf分层架构体系\"></a> 三、WPF分层架构体系</h3>\n<pre class=\"mermaid\">graph LR\n    OS[操作系统层] --> Direct3D[Direct3D]\n    OS --> User32[User32]\n    \n    Native[本地层] --> milcore[milcore.dll]\n    Native --> WindowCodecs[WindowCodecs.dll]\n    \n    Managed[.NET托管层] --> PresentationFramework\n    Managed --> PresentationCore\n    Managed --> WindowsBase</pre>\n<h4 id=\"1-操作系统级组件\"><a class=\"markdownIt-Anchor\" href=\"#1-操作系统级组件\"></a> 1. 操作系统级组件</h4>\n<ul>\n<li><strong>Direct3D</strong>：硬件加速的3D渲染引擎</li>\n<li><strong>User32</strong>：窗口管理基础服务</li>\n</ul>\n<h4 id=\"2-本地非托管层\"><a class=\"markdownIt-Anchor\" href=\"#2-本地非托管层\"></a> 2. 本地非托管层</h4>\n<ul>\n<li><strong>milcore.dll</strong>：\n<ul>\n<li>实现媒体集成层（MIL）</li>\n<li>封装DirectX接口</li>\n<li>负责2D/3D渲染管道</li>\n</ul>\n</li>\n<li><strong>WindowCodecs.dll</strong>：\n<ul>\n<li>图像处理引擎</li>\n<li>支持位图操作/格式转换</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-net托管层\"><a class=\"markdownIt-Anchor\" href=\"#3-net托管层\"></a> 3. .NET托管层</h4>\n<table>\n<thead>\n<tr>\n<th>程序集</th>\n<th>核心类型</th>\n<th>功能定位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>WindowsBase</strong></td>\n<td><code>DispatcherObject</code>   <code>DependencyObject</code></td>\n<td>线程调度/依赖属性系统</td>\n</tr>\n<tr>\n<td><strong>PresentationCore</strong></td>\n<td><code>Visual</code>   <code>UIElement</code></td>\n<td>视觉树管理   路由事件系统</td>\n</tr>\n<tr>\n<td><strong>PresentationFramework</strong></td>\n<td><code>FrameworkElement</code>   <code>Window</code>   <code>Control</code></td>\n<td>控件库   布局系统   数据绑定引擎</td>\n</tr>\n</tbody>\n</table>\n<p><strong>类型继承链</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DispatcherObject → DependencyObject → Visual → UIElement → FrameworkElement → Control</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"四-wpf核心能力矩阵\"><a class=\"markdownIt-Anchor\" href=\"#四-wpf核心能力矩阵\"></a> 四、WPF核心能力矩阵</h3>\n<table>\n<thead>\n<tr>\n<th>能力维度</th>\n<th>关键技术</th>\n<th>应用价值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>界面构建</strong></td>\n<td>XAML+控件库</td>\n<td>声明式UI开发   快速界面原型</td>\n</tr>\n<tr>\n<td><strong>视觉呈现</strong></td>\n<td>矢量图形   分辨率无关渲染</td>\n<td>高清显示支持   动态缩放不失真</td>\n</tr>\n<tr>\n<td><strong>交互系统</strong></td>\n<td>路由事件   命令绑定</td>\n<td>复杂事件处理   解耦业务逻辑</td>\n</tr>\n<tr>\n<td><strong>数据驱动</strong></td>\n<td>数据绑定   MVVM模式</td>\n<td>前后端分离   可测试性提升</td>\n</tr>\n<tr>\n<td><strong>样式系统</strong></td>\n<td>模板/样式/触发器</td>\n<td>定制化外观   视觉状态管理</td>\n</tr>\n<tr>\n<td><strong>性能优化</strong></td>\n<td>GPU硬件加速   异步渲染</td>\n<td>流畅动画体验   低CPU占用</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"五-wpf革命性创新\"><a class=\"markdownIt-Anchor\" href=\"#五-wpf革命性创新\"></a> 五、WPF革命性创新</h3>\n<ol>\n<li><strong>矢量图形引擎</strong></li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Path</span> <span class=\"attr\">Data</span>=<span class=\"string\">&quot;M 10,100 C 100,0 200,200 300,100&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<pre><code>- 基于数学方程而非像素点\n- 示例：`&lt;Path&gt;`元素实现无损缩放\n</code></pre>\n<ol start=\"2\">\n<li><strong>精确坐标系统</strong>\n<ul>\n<li>双精度浮点坐标（double类型）</li>\n<li>亚像素级定位精度</li>\n</ul>\n</li>\n<li><strong>数据驱动范式</strong></li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ViewModel</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserViewModel</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> _name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> =&gt; _name;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; _name = <span class=\"keyword\">value</span>; OnPropertyChanged(); &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- View绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li><strong>硬件加速渲染</strong>\n<ul>\n<li>通过DirectX访问GPU</li>\n<li>复杂动画60fps流畅渲染</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"六-wpf适用场景\"><a class=\"markdownIt-Anchor\" href=\"#六-wpf适用场景\"></a> 六、WPF适用场景</h3>\n<ol>\n<li><strong>企业级桌面应用</strong>\n<ul>\n<li>ERP/CRM系统</li>\n<li>数据可视化看板</li>\n</ul>\n</li>\n<li><strong>富媒体应用</strong>\n<ul>\n<li>交互式电子手册</li>\n<li>工业控制界面</li>\n</ul>\n</li>\n<li><strong>高精度显示需求</strong>\n<ul>\n<li>医疗影像系统</li>\n<li>CAD辅助设计</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>技术定位</strong>：WPF是构建现代Windows桌面应用的终极解决方案，尤其适合需要复杂UI、数据可视化、高性能渲染的场景。其架构设计平衡了开发效率与执行性能，通过MVVM模式实现了前后端彻底解耦，为大型应用开发提供了可持续维护的工程基础。</p>\n</blockquote>\n<p>以下是对WPF学习路径的系统化总结，特别针对C#基础与WPF核心技术的衔接要点：</p>\n<h3 id=\"七-wpf学习前提c核心技术栈\"><a class=\"markdownIt-Anchor\" href=\"#七-wpf学习前提c核心技术栈\"></a> 七、WPF学习前提：C#核心技术栈</h3>\n<pre class=\"mermaid\">graph LR\n    A[C#基础] --> A1[OOP四大支柱]\n    A --> A2[类型系统]\n    A --> A3[集合与泛型]\n    \n    B[C#高级] --> B1[委托与事件]\n    B --> B2[反射与特性]\n    B --> B3[依赖属性原理]\n    \n    C[前端基础] --> C1[XAML语义结构]\n    C --> C2[数据绑定概念]\n    \n    A1 --> D[WPF深入理解]\n    B1 --> D\n    B2 --> D\n    C1 --> D</pre>\n<pre class=\"mermaid\">graph LR\n    A[Qt经验] --> B[概念迁移]\n    B --> C[WPF核心突破]\n    C --> D[硬件集成专项]\n    \n    subgraph B[概念迁移]\n        B1[QWidget → Control模板]\n        B2[Signals → 路由事件]\n        B3[QML → XAML+Blend]\n    end\n    \n    subgraph C[WPF核心突破]\n        C1[依赖属性系统]\n        C2[MVVM模式]\n        C3[硬件加速渲染]\n    end\n    \n    subgraph D[硬件集成]\n        D1[串口通信]\n        D2[GPIO控制]\n        D3[工业协议集成]\n    end</pre>\n<h3 id=\"八-必须掌握的c关键技术\"><a class=\"markdownIt-Anchor\" href=\"#八-必须掌握的c关键技术\"></a> 八、必须掌握的C#关键技术</h3>\n<h4 id=\"1-oop核心思想\"><a class=\"markdownIt-Anchor\" href=\"#1-oop核心思想\"></a> 1. OOP核心思想</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 多态性在WPF中的应用示例</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Shape</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">Draw</span>()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Circle</span> : <span class=\"title\">Shape</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Draw</span>()</span> </span><br><span class=\"line\">    &#123; <span class=\"comment\">/* WPF绘制圆形逻辑 */</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在XAML中通过DataTemplate实现多态</span></span><br><span class=\"line\">&lt;DataTemplate DataType=<span class=\"string\">&quot;&#123;x:Type local:Circle&#125;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;Ellipse Fill=<span class=\"string\">&quot;Red&quot;</span> Width=<span class=\"string\">&quot;50&quot;</span> Height=<span class=\"string\">&quot;50&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/DataTemplate&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-特性attribute系统\"><a class=\"markdownIt-Anchor\" href=\"#2-特性attribute系统\"></a> 2. 特性(Attribute)系统</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF依赖属性注册中的特性应用</span></span><br><span class=\"line\">[<span class=\"meta\">DependencyProperty.Register(</span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;Width&quot;</span>, </span></span><br><span class=\"line\"><span class=\"meta\">    typeof(int), </span></span><br><span class=\"line\"><span class=\"meta\">    typeof(OwnerClass), </span></span><br><span class=\"line\"><span class=\"meta\">    new FrameworkPropertyMetadata(0)</span></span><br><span class=\"line\"><span class=\"meta\">)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Width &#123; <span class=\"comment\">/* 属性包装器 */</span> &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-委托与事件\"><a class=\"markdownIt-Anchor\" href=\"#3-委托与事件\"></a> 3. 委托与事件</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF路由事件系统的底层实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">RoutedEventHandler</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, RoutedEventArgs e</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义路由事件注册</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> RoutedEvent TapEvent = </span><br><span class=\"line\">    EventManager.RegisterRoutedEvent(</span><br><span class=\"line\">        <span class=\"string\">&quot;Tap&quot;</span>, </span><br><span class=\"line\">        RoutingStrategy.Bubble, </span><br><span class=\"line\">        <span class=\"keyword\">typeof</span>(RoutedEventHandler), </span><br><span class=\"line\">        <span class=\"keyword\">typeof</span>(CustomControl));</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-反射机制\"><a class=\"markdownIt-Anchor\" href=\"#4-反射机制\"></a> 4. 反射机制</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// WPF依赖属性注册的反射原理</span></span><br><span class=\"line\">PropertyInfo prop = <span class=\"keyword\">typeof</span>(OwnerClass).GetProperty(<span class=\"string\">&quot;Width&quot;</span>);</span><br><span class=\"line\">Type ownerType = prop.DeclaringType;</span><br><span class=\"line\">DependencyProperty.Register(</span><br><span class=\"line\">    prop.Name, </span><br><span class=\"line\">    prop.PropertyType, </span><br><span class=\"line\">    ownerType,  <span class=\"comment\">// 通过反射获取类型</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"九-wpf特有概念解析\"><a class=\"markdownIt-Anchor\" href=\"#九-wpf特有概念解析\"></a> 九、WPF特有概念解析</h3>\n<h4 id=\"1-依赖属性-vs-clr属性\"><a class=\"markdownIt-Anchor\" href=\"#1-依赖属性-vs-clr属性\"></a> 1. 依赖属性 vs CLR属性</h4>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>依赖属性</th>\n<th>CLR属性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>存储机制</strong></td>\n<td>全局属性存储</td>\n<td>对象实例存储</td>\n</tr>\n<tr>\n<td><strong>默认值</strong></td>\n<td>可设置默认值</td>\n<td>需显式初始化</td>\n</tr>\n<tr>\n<td><strong>变更通知</strong></td>\n<td>内置通知机制</td>\n<td>需手动实现INPC</td>\n</tr>\n<tr>\n<td><strong>值继承</strong></td>\n<td>支持元素树继承</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td><strong>动画支持</strong></td>\n<td>原生支持</td>\n<td>需额外实现</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-路由事件工作模型\"><a class=\"markdownIt-Anchor\" href=\"#2-路由事件工作模型\"></a> 2. 路由事件工作模型</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">    participant Child <span class=\"keyword\">as</span> 子控件</span><br><span class=\"line\">    participant Parent <span class=\"keyword\">as</span> 父容器</span><br><span class=\"line\">    participant Root <span class=\"keyword\">as</span> 根元素</span><br><span class=\"line\">    </span><br><span class=\"line\">    Child-&gt;&gt;Parent: 冒泡阶段(Bubbling)</span><br><span class=\"line\">    Parent-&gt;&gt;Root: 继续冒泡</span><br><span class=\"line\">    Root--&gt;&gt;Parent: 隧道阶段(Tunneling)</span><br><span class=\"line\">    Parent--&gt;&gt;Child: 继续隧道</span><br><span class=\"line\">    Note over Child: 直接事件处理(Direct)</span><br></pre></td></tr></table></figure>\n<h3 id=\"十-学习技巧\"><a class=\"markdownIt-Anchor\" href=\"#十-学习技巧\"></a> 十. 学习技巧</h3>\n<ol>\n<li><strong>调试技巧</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查看绑定错误</span></span><br><span class=\"line\">PresentationTraceSources.DataBindingSource.Switch.Level = SourceLevels.All;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出窗口显示绑定详情</span></span><br><span class=\"line\">System.Diagnostics.PresentationTraceSources.DataBindingSource.Listeners.Add(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ConsoleTraceListener());</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>理解视觉树</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 遍历视觉树</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">IEnumerable</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">FindVisualChildren</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">DependencyObject depObj</span>) </span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"keyword\">where</span> T : DependencyObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; VisualTreeHelper.GetChildrenCount(depObj); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> child = VisualTreeHelper.GetChild(depObj, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (child <span class=\"keyword\">is</span> T typedChild) <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> typedChild;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"function\"><span class=\"keyword\">var</span> childOfChild <span class=\"keyword\">in</span> <span class=\"title\">FindVisualChildren</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">child</span>)) </span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> childOfChild</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>MVVM模式实践</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础ViewModel实现</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ViewModelBase</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName] <span class=\"built_in\">string</span> name = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        PropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(name));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-学习路线图\"><a class=\"markdownIt-Anchor\" href=\"#4-学习路线图\"></a> 4、学习路线图</h4>\n<h4 id=\"第一阶段基础入门2-3周\"><a class=\"markdownIt-Anchor\" href=\"#第一阶段基础入门2-3周\"></a> 第一阶段：基础入门（2-3周）</h4>\n<p>├─ XAML语法精要<br />\n├─ 常用布局控件（Grid, StackPanel）<br />\n├─ 数据绑定基础（Binding Path）<br />\n└─ 样式与资源基础</p>\n<p>第二阶段：核心技术（4-6周）<br />\n├─ 高级数据绑定（Converter, MultiBinding）<br />\n├─ 命令系统（ICommand, RelayCommand）<br />\n├─ 模板系统（ControlTemplate, DataTemplate）<br />\n└─ 用户控件开发</p>\n<p>第三阶段：高级精通（8-12周）<br />\n├─ 依赖属性系统（自定义DP）<br />\n├─ 路由事件机制（冒泡/隧道）<br />\n├─ 动画与行为（Behaviors）<br />\n├─ 3D图形与多媒体<br />\n└─ MVVM框架整合（Prism等）</p>\n<blockquote>\n<h4 id=\"学习箴言wpf学习需遵循先会用再懂理的实践路径-建议采用\"><a class=\"markdownIt-Anchor\" href=\"#学习箴言wpf学习需遵循先会用再懂理的实践路径-建议采用\"></a> <strong>学习箴言</strong>：WPF学习需遵循&quot;先会用，再懂理&quot;的实践路径。建议采用：</h4>\n<h4 id=\"小步快跑每学一个概念立即创建微型demo验证\"><a class=\"markdownIt-Anchor\" href=\"#小步快跑每学一个概念立即创建微型demo验证\"></a> <strong>小步快跑</strong>：每学一个概念立即创建微型Demo验证</h4>\n<h4 id=\"逆向工程反编译优秀开源项目如materialdesigninxaml\"><a class=\"markdownIt-Anchor\" href=\"#逆向工程反编译优秀开源项目如materialdesigninxaml\"></a> <strong>逆向工程</strong>：反编译优秀开源项目（如MaterialDesignInXAML）</h4>\n<h4 id=\"知识迁移将winform经验与wpf新特性对比学习\"><a class=\"markdownIt-Anchor\" href=\"#知识迁移将winform经验与wpf新特性对比学习\"></a> <strong>知识迁移</strong>：将WinForm经验与WPF新特性对比学习</h4>\n<h4 id=\"工具赋能善用livexaml-snoop等开发辅助工具\"><a class=\"markdownIt-Anchor\" href=\"#工具赋能善用livexaml-snoop等开发辅助工具\"></a> <strong>工具赋能</strong>：善用LiveXAML、Snoop等开发辅助工具</h4>\n</blockquote>\n<h4 id=\"以下是为嵌入式开发工程师量身定制的wpf学习路径结合您的qt开发经验进行针对性优化\"><a class=\"markdownIt-Anchor\" href=\"#以下是为嵌入式开发工程师量身定制的wpf学习路径结合您的qt开发经验进行针对性优化\"></a> 以下是为嵌入式开发工程师量身定制的WPF学习路径，结合您的Qt开发经验进行针对性优化：</h4>\n<h3 id=\"十一-qt与wpf核心概念映射表\"><a class=\"markdownIt-Anchor\" href=\"#十一-qt与wpf核心概念映射表\"></a> 十一、Qt与WPF核心概念映射表</h3>\n<table>\n<thead>\n<tr>\n<th>Qt概念</th>\n<th>WPF对应概念</th>\n<th>差异点</th>\n<th>学习建议</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>QWidget</td>\n<td>UIElement</td>\n<td>WPF更强调组合而非继承</td>\n<td>重点学习控件模板</td>\n</tr>\n<tr>\n<td>Signals/Slots</td>\n<td>路由事件/绑定/命令</td>\n<td>WPF提供多种交互机制</td>\n<td>掌握事件路由策略</td>\n</tr>\n<tr>\n<td>QML</td>\n<td>XAML</td>\n<td>语法相似但数据绑定更强</td>\n<td>对比学习声明式语法</td>\n</tr>\n<tr>\n<td>Model/View</td>\n<td>MVVM</td>\n<td>MVVM是更严格的分离模式</td>\n<td>深入理解INotifyPropertyChanged</td>\n</tr>\n<tr>\n<td>Q_PROPERTY</td>\n<td>依赖属性</td>\n<td>依赖属性有值继承机制</td>\n<td>研究属性变更回调</td>\n</tr>\n<tr>\n<td>QLayout</td>\n<td>Panel派生类</td>\n<td>WPF布局系统更灵活</td>\n<td>掌握Grid和DockPanel</td>\n</tr>\n<tr>\n<td>QGraphicsView</td>\n<td>Visual层</td>\n<td>WPF有更完善的视觉树</td>\n<td>学习视觉树遍历方法</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十二-重点领域深度适配\"><a class=\"markdownIt-Anchor\" href=\"#十二-重点领域深度适配\"></a> 十二、重点领域深度适配</h3>\n<h4 id=\"1-硬件交互层实现\"><a class=\"markdownIt-Anchor\" href=\"#1-硬件交互层实现\"></a> 1. 硬件交互层实现</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 串口通信封装（对比Qt的QSerialPort）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SerialService</span> : <span class=\"title\">IDisposable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SerialPort _port;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SerialService</span>(<span class=\"params\"><span class=\"built_in\">string</span> portName</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _port = <span class=\"keyword\">new</span> SerialPort(portName, <span class=\"number\">9600</span>, Parity.None, <span class=\"number\">8</span>, StopBits.One);</span><br><span class=\"line\">        _port.DataReceived += OnDataReceived;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"built_in\">byte</span>[_port.BytesToRead];</span><br><span class=\"line\">        _port.Read(data, <span class=\"number\">0</span>, data.Length);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 通过事件或绑定更新UI</span></span><br><span class=\"line\">        DataReceived?.Invoke(<span class=\"keyword\">this</span>, data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> EventHandler&lt;<span class=\"built_in\">byte</span>[]&gt; DataReceived;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-实时数据可视化\"><a class=\"markdownIt-Anchor\" href=\"#2-实时数据可视化\"></a> 2. 实时数据可视化</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 工业仪表盘实现（对比Qt的QChart） --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Path</span> <span class=\"attr\">Data</span>=<span class=\"string\">&quot;M 100,100 A 50,50 0 1 1 200,100&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;3&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实时指针 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Line</span> <span class=\"attr\">X1</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">Y1</span>=<span class=\"string\">&quot;150&quot;</span> <span class=\"attr\">X2</span>=<span class=\"string\">&quot;&#123;Binding Angle, Converter=&#123;StaticResource AngleConverter&#125;&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">Stroke</span>=<span class=\"string\">&quot;Red&quot;</span> <span class=\"attr\">StrokeThickness</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据绑定 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Temperature, StringFormat=&#x27;&#123;&#125;&#123;0&#125;°C&#x27;&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">Canvas.Top</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">Canvas.Left</span>=<span class=\"string\">&quot;130&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Canvas</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"十三-嵌入式场景优化学习模块\"><a class=\"markdownIt-Anchor\" href=\"#十三-嵌入式场景优化学习模块\"></a> 十三、嵌入式场景优化学习模块</h3>\n<h4 id=\"1-低延迟渲染技术\"><a class=\"markdownIt-Anchor\" href=\"#1-低延迟渲染技术\"></a> 1. 低延迟渲染技术</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 利用CompositionTarget.Rendering实现60fps渲染</span></span><br><span class=\"line\">CompositionTarget.Rendering += (s, e) =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_sensorDataAvailable)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        waveForm.InvalidateVisual(); <span class=\"comment\">// 自定义波形控件重绘</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对比Qt的QTimer+update()</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-硬件资源管理\"><a class=\"markdownIt-Anchor\" href=\"#2-硬件资源管理\"></a> 2. 硬件资源管理</h4>\n<table>\n<thead>\n<tr>\n<th>资源类型</th>\n<th>Qt方案</th>\n<th>WPF方案</th>\n<th>注意事项</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>串口</td>\n<td>QSerialPort</td>\n<td>System.IO.Ports</td>\n<td>需处理UI线程调度</td>\n</tr>\n<tr>\n<td>USB</td>\n<td>libusb</td>\n<td>HidLibrary</td>\n<td>驱动兼容性测试</td>\n</tr>\n<tr>\n<td>网络协议</td>\n<td>QTcpSocket</td>\n<td>System.Net.Sockets</td>\n<td>异步操作避免UI阻塞</td>\n</tr>\n<tr>\n<td>传感器数据</td>\n<td>QSensor</td>\n<td>自定义ISensor接口</td>\n<td>数据滤波处理</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十三-避坑指南相对qt学习者\"><a class=\"markdownIt-Anchor\" href=\"#十三-避坑指南相对qt学习者\"></a> 十三、避坑指南（相对Qt学习者）</h3>\n<ol>\n<li><strong>线程管理差异</strong>：</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误方式（直接跨线程更新UI）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">byte</span>[] data</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    txtValue.Text = data.ToString(); <span class=\"comment\">// 引发异常</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确方式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">OnDataReceived</span>(<span class=\"params\"><span class=\"built_in\">byte</span>[] data</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Dispatcher.Invoke(() =&gt; txtValue.Text = data.ToString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>内存管理对比</strong>：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Qt</th>\n<th>WPF</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>对象生命周期</td>\n<td>父子对象树</td>\n<td>GC垃圾回收</td>\n</tr>\n<tr>\n<td>资源释放</td>\n<td>deleteLater()</td>\n<td>IDisposable模式</td>\n</tr>\n<tr>\n<td>事件处理</td>\n<td>需手动disconnect</td>\n<td>弱事件模式支持</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li><strong>渲染性能优化</strong>：</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 启用硬件加速 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">AllowsTransparency</span>=<span class=\"string\">&quot;False&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">TextOptions.TextFormattingMode</span>=<span class=\"string\">&quot;Display&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">RenderOptions.BitmapScalingMode</span>=<span class=\"string\">&quot;NearestNeighbor&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"十四-实战项目演进路线\"><a class=\"markdownIt-Anchor\" href=\"#十四-实战项目演进路线\"></a> 十四、实战项目演进路线</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">阶段1：设备监控面板（2周）</span><br><span class=\"line\">  ├─ 串口数据采集</span><br><span class=\"line\">  ├─ 实时曲线绘制（Canvas）</span><br><span class=\"line\">  ├─ 基础MVVM实现</span><br><span class=\"line\"></span><br><span class=\"line\">阶段2：工业控制台（3周）</span><br><span class=\"line\">  ├─ Modbus/TCP协议集成</span><br><span class=\"line\">  ├─ 3D设备模型展示（HelixToolkit）</span><br><span class=\"line\">  ├─ 动画状态指示器</span><br><span class=\"line\"></span><br><span class=\"line\">阶段3：智能网关系统（4周）</span><br><span class=\"line\">  ├─ 多线程数据采集</span><br><span class=\"line\">  ├─ WCF远程控制接口</span><br><span class=\"line\">  ├─ 数据持久化（SQLite）</span><br><span class=\"line\">  ├─ 响应式布局设计</span><br></pre></td></tr></table></figure>\n<h3 id=\"十五-硬件开发专属工具链\"><a class=\"markdownIt-Anchor\" href=\"#十五-硬件开发专属工具链\"></a> 十五、硬件开发专属工具链</h3>\n<ol>\n<li><strong>调试工具</strong>：\n<ul>\n<li>Snoop：实时检查WPF视觉树</li>\n<li>WPF Performance Suite：渲染性能分析</li>\n</ul>\n</li>\n<li><strong>硬件集成库</strong>：\n<ul>\n<li>LibUsbDotNet：USB设备访问</li>\n<li>NModbus：工业协议实现</li>\n<li>OPC-UA库：工业自动化标准</li>\n</ul>\n</li>\n<li><strong>3D渲染框架</strong>：</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">helix:HelixViewport3D</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">helix:SunLight</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">helix:MeshGeometryVisual3D</span> <span class=\"attr\">MeshGeometry</span>=<span class=\"string\">&quot;&#123;Binding SensorModel&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">helix:HelixViewport3D</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote></blockquote>\n"},{"title":"C语言函数指针作为结构体成员实现成员操作","mermaid":true,"date":"2022-11-15T16:00:00.000Z","comments":1,"_content":"# C语言函数指针与结构体函数指针在嵌入式中的应用\n\n## 一、起因\n\n在嵌入式操作系统开发时，发现非常多的功能实现是基于结构体函数指针实现的。函数指针在嵌入式中的应用非常广泛，常常把函数指针作为结构体的成员、作为函数的参数等。为了填补C语言的基础知识，特此记录学习过程。\n\n在C语言程序中，数据结构和算法是两个基本元素。C语言的基本数据类型、结构体、数组和联合体是数据结构的代表；C语言中的函数则是算法的代表。只有将数据结构和算法有机结合才能构成具有一定功能的程序。\n\n## 二、C语言函数指针基础\n\n### 1. 函数指针定义\n\n函数指针的定义形式为：\n```c\nreturnType (*pointerName)(param list);\n```\n\n- `returnType` 为函数返回值类型\n- `pointerName` 为指针名称\n- `param list` 为函数参数列表\n\n注意：`()`的优先级高于`*`，第一个括号不能省略。\n\n### 2. 基本示例\n\n```c\n#include <stdio.h>\n\n// 返回两个数中较大的一个\nint max(int a, int b) {\n    return a > b ? a : b;\n}\n\nint main() {\n    int x, y, maxval;\n    // 定义函数指针\n    int (*pmax)(int, int) = max;  // 也可以写作int (*pmax)(int a, int b)\n    \n    printf(\"Input two numbers:\");\n    scanf(\"%d %d\", &x, &y);\n    maxval = (*pmax)(x, y);\n    printf(\"Max value: %d\\n\", maxval);\n    \n    return 0;\n}\n```\n\n### 3. 函数指针定义示例\n\n```c\nint add2(int x, int y) {\n    return x + y;\n}\n\nint main() {\n    int (*func)(int, int);\n    func = &add2;  // 指针赋值,或者func=add2; add2与&add2意义相同\n    printf(\"func(3,4)=%d\\n\", func(3, 4));\n    \n    return 0;\n}\n```\n\n### 4. 使用typedef定义函数指针类型\n\n```c\ntypedef int (*FUN)(int, int);\nFUN func = &add2;\nfunc();\n```\n\n## 三、结构体中定义函数指针\n\n### 1. 结构体指针变量的定义形式\n\n#### 形式1：先定义结构体类型，再定义变量\n```c\nstruct 结构体标识符 {\n    成员变量列表;\n};\nstruct 结构体标识符 *指针变量名;\n```\n\n#### 形式2：在定义类型的同时定义变量\n```c\nstruct 结构体标识符 {\n    成员变量列表;\n} *指针变量名;\n```\n\n#### 形式3：直接定义变量\n```c\nstruct {\n    成员变量列表;\n} *指针变量名;\n```\n\n### 2. 结构体中指向函数的指针示例\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct student {\n    int id;\n    char name[50];\n    void (*initial)();\n    void (*process)(int id, char *name);\n    void (*destroy)();\n} stu;\n\nvoid initial() {\n    printf(\"initialization...\\n\");\n}\n\nvoid process(int id, char *name) {\n    printf(\"process...\\n%d\\t%s\\n\", id, name);\n}\n\nvoid destroy() {\n    printf(\"destroy...\\n\");\n}\n\nint main() {\n    stu *stu1;\n    stu1 = (stu *)malloc(sizeof(stu));\n    \n    stu1->id = 1000;\n    strcpy(stu1->name, \"C++\");\n    stu1->initial = initial;\n    stu1->process = process;\n    stu1->destroy = destroy;\n    \n    printf(\"%d\\t%s\\n\", stu1->id, stu1->name);\n    stu1->initial();\n    stu1->process(stu1->id, stu1->name);\n    stu1->destroy();\n    \n    free(stu1);\n    return 0;\n}\n```\n\n### 3. 回调函数示例\n\n```c\n#include <stdio.h>\n\ntypedef struct {\n    int a;\n    void (*pshow)(int);\n} TMP;\n\nvoid func(TMP *tmp) {\n    if(tmp->a > 10) { // 如果a>10,则执行回调函数\n        (tmp->pshow)(tmp->a);\n    }\n}\n\nvoid show(int a) {\n    printf(\"a的值是%d\\n\", a);\n}\n\nvoid main() {\n    TMP test;\n    test.a = 11;\n    test.pshow = show;\n    func(&test);\n}\n```\n\n## 四、函数指针的两个主要用途\n\n### 1. 将函数作为参数传递给函数\n\n```c\n#include <stdio.h>\n\n// Calculate用于计算积分\ndouble Calculate(double(*func)(double x), double a, double b) {\n    double dx = 0.0001; // 细分的区间长度\n    double sum = 0;\n    \n    for(double xi = a+dx; xi <= b; xi += dx) {\n        double area = func(xi) * dx;\n        sum += area;\n    }\n    return sum;\n}\n\ndouble func_1(double x) {\n    return x * x;\n}\n\ndouble func_2(double x) {\n    return x * x * x;\n}\n\nvoid main() {\n    printf(\"%lf\\n\", Calculate(func_1, 0, 1));\n    printf(\"%lf\\n\", Calculate(func_2, 0, 1));\n}\n```\n\n### 2. 引用不在代码段中的函数\n\n在嵌入式系统中，常用于调用固化在ROM中的系统函数。例如编写bootload的跳转函数\n```c\n#define INFLASH_ADDR_BOOTLOAD   ((uint32_t)0x08000000)  // bootload的起始地址\n\n/* 初始化堆栈指针 */\nvoid MSR_MSP(uint32_t addr) \n{\n  __ASM(\"msr msp, r0\");  // set Main Stack value 将主堆栈地址保存到MSP寄存器(R13)中\n  __ASM(\"bx lr\");        // 跳转到lr中存放的地址处。bx是强制跳转指令 lr是连接寄存器，是STM32单片机的R14\n}\n\ntypedef void (*IapFun)(void); // 声明一个函数指针，用于跳转到绝对地址执行程序\nIapFun JumpToBootload; \n\n/*!\n *  功  能: 跳转到应用程序 \n *  param1: 用户代码起始地址\n *  retval: 无返回值\n */\nvoid IapLoadBootload(void)\n{\n\n    if( ((*(uint32_t*)INFLASH_ADDR_BOOTLOAD) & 0x2FFE0000) == 0x20000000 )// 检查栈顶地址是否合法\n    { \n    BoardDisableIrq();   // 禁止中断\n        JumpToBootload = (IapFun)*(uint32_t*)(INFLASH_ADDR_BOOTLOAD+4);  // 用户代码区第二个字为程序开始地址(新程序复位地址)\t\t\n        MSR_MSP(*(uint32_t*)INFLASH_ADDR_BOOTLOAD);\t\t                // 初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)\n                                        \n    JumpToBootload();\t                                    // 设置PC指针为bootload复位中断函数的地址，往下执行\n    }\n}\n```\n\n## 五、嵌入式系统中结构体函数指针的应用\n\n### 1. 函数指针作为结构体成员\n\n![](/images/posts/C语言函数指针作为结构体成员实现成员操作/1.png)\n\n### 2. 函数指针作为函数的参数\n\n![](/images/posts/C语言函数指针作为结构体成员实现成员操作/2.png)\n\n## 六、使用结构体指针编写回调函数示例\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\n/****************************************\n * 函数指针结构体\n ***************************************/\ntypedef struct _OP {\n    float (*p_add)(float, float); \n    float (*p_sub)(float, float); \n    float (*p_mul)(float, float); \n    float (*p_div)(float, float); \n} OP; \n\n/****************************************\n * 加减乘除函数\n ***************************************/\nfloat ADD(float a, float b) {\n    return a + b;\n}\n\nfloat SUB(float a, float b) {\n    return a - b;\n}\n\nfloat MUL(float a, float b) {\n    return a * b;\n}\n\nfloat DIV(float a, float b) {\n    return a / b;\n}\n\n/****************************************\n * 初始化函数指针\n ***************************************/\nvoid init_op(OP *op) {\n    op->p_add = ADD;\n    op->p_sub = SUB;\n    op->p_mul = &MUL;\n    op->p_div = &DIV;\n}\n\n/****************************************\n * 库函数\n ***************************************/\nfloat add_sub_mul_div(float a, float b, float (*op_func)(float, float)) {\n    return (*op_func)(a, b);\n}\n\nint main(int argc, char *argv[]) {\n    OP *op = (OP *)malloc(sizeof(OP)); \n    init_op(op);\n    \n    /* 直接使用函数指针调用函数 */ \n    printf(\"ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n\", \n           (op->p_add)(1.3, 2.2), \n           (*op->p_sub)(1.3, 2.2), \n           (op->p_mul)(1.3, 2.2), \n           (*op->p_div)(1.3, 2.2));\n     \n    /* 调用回调函数 */ \n    printf(\"ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n\", \n           add_sub_mul_div(1.3, 2.2, ADD), \n           add_sub_mul_div(1.3, 2.2, SUB), \n           add_sub_mul_div(1.3, 2.2, MUL), \n           add_sub_mul_div(1.3, 2.2, DIV));\n\n    return 0; \n}\n```\n\n{% tagRoulette \"早餐,能量开启,营养均衡,元气满满,唤醒味蕾\" \"🍳\" %}","source":"_posts/C语言函数指针作为结构体成员实现成员操作.md","raw":"---\ntitle: C语言函数指针作为结构体成员实现成员操作\nmermaid: true\ndate: 2022-11-16\ntags: [嵌入式, C语言, 技术]\ncomments: true\ncategories: [嵌入式]\n---\n# C语言函数指针与结构体函数指针在嵌入式中的应用\n\n## 一、起因\n\n在嵌入式操作系统开发时，发现非常多的功能实现是基于结构体函数指针实现的。函数指针在嵌入式中的应用非常广泛，常常把函数指针作为结构体的成员、作为函数的参数等。为了填补C语言的基础知识，特此记录学习过程。\n\n在C语言程序中，数据结构和算法是两个基本元素。C语言的基本数据类型、结构体、数组和联合体是数据结构的代表；C语言中的函数则是算法的代表。只有将数据结构和算法有机结合才能构成具有一定功能的程序。\n\n## 二、C语言函数指针基础\n\n### 1. 函数指针定义\n\n函数指针的定义形式为：\n```c\nreturnType (*pointerName)(param list);\n```\n\n- `returnType` 为函数返回值类型\n- `pointerName` 为指针名称\n- `param list` 为函数参数列表\n\n注意：`()`的优先级高于`*`，第一个括号不能省略。\n\n### 2. 基本示例\n\n```c\n#include <stdio.h>\n\n// 返回两个数中较大的一个\nint max(int a, int b) {\n    return a > b ? a : b;\n}\n\nint main() {\n    int x, y, maxval;\n    // 定义函数指针\n    int (*pmax)(int, int) = max;  // 也可以写作int (*pmax)(int a, int b)\n    \n    printf(\"Input two numbers:\");\n    scanf(\"%d %d\", &x, &y);\n    maxval = (*pmax)(x, y);\n    printf(\"Max value: %d\\n\", maxval);\n    \n    return 0;\n}\n```\n\n### 3. 函数指针定义示例\n\n```c\nint add2(int x, int y) {\n    return x + y;\n}\n\nint main() {\n    int (*func)(int, int);\n    func = &add2;  // 指针赋值,或者func=add2; add2与&add2意义相同\n    printf(\"func(3,4)=%d\\n\", func(3, 4));\n    \n    return 0;\n}\n```\n\n### 4. 使用typedef定义函数指针类型\n\n```c\ntypedef int (*FUN)(int, int);\nFUN func = &add2;\nfunc();\n```\n\n## 三、结构体中定义函数指针\n\n### 1. 结构体指针变量的定义形式\n\n#### 形式1：先定义结构体类型，再定义变量\n```c\nstruct 结构体标识符 {\n    成员变量列表;\n};\nstruct 结构体标识符 *指针变量名;\n```\n\n#### 形式2：在定义类型的同时定义变量\n```c\nstruct 结构体标识符 {\n    成员变量列表;\n} *指针变量名;\n```\n\n#### 形式3：直接定义变量\n```c\nstruct {\n    成员变量列表;\n} *指针变量名;\n```\n\n### 2. 结构体中指向函数的指针示例\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct student {\n    int id;\n    char name[50];\n    void (*initial)();\n    void (*process)(int id, char *name);\n    void (*destroy)();\n} stu;\n\nvoid initial() {\n    printf(\"initialization...\\n\");\n}\n\nvoid process(int id, char *name) {\n    printf(\"process...\\n%d\\t%s\\n\", id, name);\n}\n\nvoid destroy() {\n    printf(\"destroy...\\n\");\n}\n\nint main() {\n    stu *stu1;\n    stu1 = (stu *)malloc(sizeof(stu));\n    \n    stu1->id = 1000;\n    strcpy(stu1->name, \"C++\");\n    stu1->initial = initial;\n    stu1->process = process;\n    stu1->destroy = destroy;\n    \n    printf(\"%d\\t%s\\n\", stu1->id, stu1->name);\n    stu1->initial();\n    stu1->process(stu1->id, stu1->name);\n    stu1->destroy();\n    \n    free(stu1);\n    return 0;\n}\n```\n\n### 3. 回调函数示例\n\n```c\n#include <stdio.h>\n\ntypedef struct {\n    int a;\n    void (*pshow)(int);\n} TMP;\n\nvoid func(TMP *tmp) {\n    if(tmp->a > 10) { // 如果a>10,则执行回调函数\n        (tmp->pshow)(tmp->a);\n    }\n}\n\nvoid show(int a) {\n    printf(\"a的值是%d\\n\", a);\n}\n\nvoid main() {\n    TMP test;\n    test.a = 11;\n    test.pshow = show;\n    func(&test);\n}\n```\n\n## 四、函数指针的两个主要用途\n\n### 1. 将函数作为参数传递给函数\n\n```c\n#include <stdio.h>\n\n// Calculate用于计算积分\ndouble Calculate(double(*func)(double x), double a, double b) {\n    double dx = 0.0001; // 细分的区间长度\n    double sum = 0;\n    \n    for(double xi = a+dx; xi <= b; xi += dx) {\n        double area = func(xi) * dx;\n        sum += area;\n    }\n    return sum;\n}\n\ndouble func_1(double x) {\n    return x * x;\n}\n\ndouble func_2(double x) {\n    return x * x * x;\n}\n\nvoid main() {\n    printf(\"%lf\\n\", Calculate(func_1, 0, 1));\n    printf(\"%lf\\n\", Calculate(func_2, 0, 1));\n}\n```\n\n### 2. 引用不在代码段中的函数\n\n在嵌入式系统中，常用于调用固化在ROM中的系统函数。例如编写bootload的跳转函数\n```c\n#define INFLASH_ADDR_BOOTLOAD   ((uint32_t)0x08000000)  // bootload的起始地址\n\n/* 初始化堆栈指针 */\nvoid MSR_MSP(uint32_t addr) \n{\n  __ASM(\"msr msp, r0\");  // set Main Stack value 将主堆栈地址保存到MSP寄存器(R13)中\n  __ASM(\"bx lr\");        // 跳转到lr中存放的地址处。bx是强制跳转指令 lr是连接寄存器，是STM32单片机的R14\n}\n\ntypedef void (*IapFun)(void); // 声明一个函数指针，用于跳转到绝对地址执行程序\nIapFun JumpToBootload; \n\n/*!\n *  功  能: 跳转到应用程序 \n *  param1: 用户代码起始地址\n *  retval: 无返回值\n */\nvoid IapLoadBootload(void)\n{\n\n    if( ((*(uint32_t*)INFLASH_ADDR_BOOTLOAD) & 0x2FFE0000) == 0x20000000 )// 检查栈顶地址是否合法\n    { \n    BoardDisableIrq();   // 禁止中断\n        JumpToBootload = (IapFun)*(uint32_t*)(INFLASH_ADDR_BOOTLOAD+4);  // 用户代码区第二个字为程序开始地址(新程序复位地址)\t\t\n        MSR_MSP(*(uint32_t*)INFLASH_ADDR_BOOTLOAD);\t\t                // 初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)\n                                        \n    JumpToBootload();\t                                    // 设置PC指针为bootload复位中断函数的地址，往下执行\n    }\n}\n```\n\n## 五、嵌入式系统中结构体函数指针的应用\n\n### 1. 函数指针作为结构体成员\n\n![](/images/posts/C语言函数指针作为结构体成员实现成员操作/1.png)\n\n### 2. 函数指针作为函数的参数\n\n![](/images/posts/C语言函数指针作为结构体成员实现成员操作/2.png)\n\n## 六、使用结构体指针编写回调函数示例\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\n/****************************************\n * 函数指针结构体\n ***************************************/\ntypedef struct _OP {\n    float (*p_add)(float, float); \n    float (*p_sub)(float, float); \n    float (*p_mul)(float, float); \n    float (*p_div)(float, float); \n} OP; \n\n/****************************************\n * 加减乘除函数\n ***************************************/\nfloat ADD(float a, float b) {\n    return a + b;\n}\n\nfloat SUB(float a, float b) {\n    return a - b;\n}\n\nfloat MUL(float a, float b) {\n    return a * b;\n}\n\nfloat DIV(float a, float b) {\n    return a / b;\n}\n\n/****************************************\n * 初始化函数指针\n ***************************************/\nvoid init_op(OP *op) {\n    op->p_add = ADD;\n    op->p_sub = SUB;\n    op->p_mul = &MUL;\n    op->p_div = &DIV;\n}\n\n/****************************************\n * 库函数\n ***************************************/\nfloat add_sub_mul_div(float a, float b, float (*op_func)(float, float)) {\n    return (*op_func)(a, b);\n}\n\nint main(int argc, char *argv[]) {\n    OP *op = (OP *)malloc(sizeof(OP)); \n    init_op(op);\n    \n    /* 直接使用函数指针调用函数 */ \n    printf(\"ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n\", \n           (op->p_add)(1.3, 2.2), \n           (*op->p_sub)(1.3, 2.2), \n           (op->p_mul)(1.3, 2.2), \n           (*op->p_div)(1.3, 2.2));\n     \n    /* 调用回调函数 */ \n    printf(\"ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n\", \n           add_sub_mul_div(1.3, 2.2, ADD), \n           add_sub_mul_div(1.3, 2.2, SUB), \n           add_sub_mul_div(1.3, 2.2, MUL), \n           add_sub_mul_div(1.3, 2.2, DIV));\n\n    return 0; \n}\n```\n\n{% tagRoulette \"早餐,能量开启,营养均衡,元气满满,唤醒味蕾\" \"🍳\" %}","slug":"C语言函数指针作为结构体成员实现成员操作","published":1,"updated":"2025-07-16T08:23:52.050Z","layout":"post","photos":[],"_id":"cmd71t80m00033cw6go59gc7k","content":"<h1 id=\"c语言函数指针与结构体函数指针在嵌入式中的应用\"><a class=\"markdownIt-Anchor\" href=\"#c语言函数指针与结构体函数指针在嵌入式中的应用\"></a> C语言函数指针与结构体函数指针在嵌入式中的应用</h1>\n<h2 id=\"一-起因\"><a class=\"markdownIt-Anchor\" href=\"#一-起因\"></a> 一、起因</h2>\n<p>在嵌入式操作系统开发时，发现非常多的功能实现是基于结构体函数指针实现的。函数指针在嵌入式中的应用非常广泛，常常把函数指针作为结构体的成员、作为函数的参数等。为了填补C语言的基础知识，特此记录学习过程。</p>\n<p>在C语言程序中，数据结构和算法是两个基本元素。C语言的基本数据类型、结构体、数组和联合体是数据结构的代表；C语言中的函数则是算法的代表。只有将数据结构和算法有机结合才能构成具有一定功能的程序。</p>\n<h2 id=\"二-c语言函数指针基础\"><a class=\"markdownIt-Anchor\" href=\"#二-c语言函数指针基础\"></a> 二、C语言函数指针基础</h2>\n<h3 id=\"1-函数指针定义\"><a class=\"markdownIt-Anchor\" href=\"#1-函数指针定义\"></a> 1. 函数指针定义</h3>\n<p>函数指针的定义形式为：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">returnType (*pointerName)(param <span class=\"built_in\">list</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>returnType</code> 为函数返回值类型</li>\n<li><code>pointerName</code> 为指针名称</li>\n<li><code>param list</code> 为函数参数列表</li>\n</ul>\n<p>注意：<code>()</code>的优先级高于<code>*</code>，第一个括号不能省略。</p>\n<h3 id=\"2-基本示例\"><a class=\"markdownIt-Anchor\" href=\"#2-基本示例\"></a> 2. 基本示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回两个数中较大的一个</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">max</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b ? a : b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x, y, maxval;</span><br><span class=\"line\">    <span class=\"comment\">// 定义函数指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> (*pmax)(<span class=\"type\">int</span>, <span class=\"type\">int</span>) = max;  <span class=\"comment\">// 也可以写作int (*pmax)(int a, int b)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Input two numbers:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class=\"line\">    maxval = (*pmax)(x, y);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Max value: %d\\n&quot;</span>, maxval);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-函数指针定义示例\"><a class=\"markdownIt-Anchor\" href=\"#3-函数指针定义示例\"></a> 3. 函数指针定义示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add2</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> (*func)(<span class=\"type\">int</span>, <span class=\"type\">int</span>);</span><br><span class=\"line\">    func = &amp;add2;  <span class=\"comment\">// 指针赋值,或者func=add2; add2与&amp;add2意义相同</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;func(3,4)=%d\\n&quot;</span>, func(<span class=\"number\">3</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-使用typedef定义函数指针类型\"><a class=\"markdownIt-Anchor\" href=\"#4-使用typedef定义函数指针类型\"></a> 4. 使用typedef定义函数指针类型</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">int</span> <span class=\"params\">(*FUN)</span><span class=\"params\">(<span class=\"type\">int</span>, <span class=\"type\">int</span>)</span>;</span><br><span class=\"line\">FUN func = &amp;add2;</span><br><span class=\"line\">func();</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-结构体中定义函数指针\"><a class=\"markdownIt-Anchor\" href=\"#三-结构体中定义函数指针\"></a> 三、结构体中定义函数指针</h2>\n<h3 id=\"1-结构体指针变量的定义形式\"><a class=\"markdownIt-Anchor\" href=\"#1-结构体指针变量的定义形式\"></a> 1. 结构体指针变量的定义形式</h3>\n<h4 id=\"形式1先定义结构体类型再定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式1先定义结构体类型再定义变量\"></a> 形式1：先定义结构体类型，再定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 *指针变量名;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"形式2在定义类型的同时定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式2在定义类型的同时定义变量\"></a> 形式2：在定义类型的同时定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125; *指针变量名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"形式3直接定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式3直接定义变量\"></a> 形式3：直接定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125; *指针变量名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-结构体中指向函数的指针示例\"><a class=\"markdownIt-Anchor\" href=\"#2-结构体中指向函数的指针示例\"></a> 2. 结构体中指向函数的指针示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"type\">char</span> name[<span class=\"number\">50</span>];</span><br><span class=\"line\">    <span class=\"type\">void</span> (*initial)();</span><br><span class=\"line\">    <span class=\"type\">void</span> (*process)(<span class=\"type\">int</span> id, <span class=\"type\">char</span> *name);</span><br><span class=\"line\">    <span class=\"type\">void</span> (*destroy)();</span><br><span class=\"line\">&#125; stu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">initial</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;initialization...\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">process</span><span class=\"params\">(<span class=\"type\">int</span> id, <span class=\"type\">char</span> *name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;process...\\n%d\\t%s\\n&quot;</span>, id, name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;destroy...\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    stu *stu1;</span><br><span class=\"line\">    stu1 = (stu *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(stu));</span><br><span class=\"line\">    </span><br><span class=\"line\">    stu1-&gt;id = <span class=\"number\">1000</span>;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(stu1-&gt;name, <span class=\"string\">&quot;C++&quot;</span>);</span><br><span class=\"line\">    stu1-&gt;initial = initial;</span><br><span class=\"line\">    stu1-&gt;process = process;</span><br><span class=\"line\">    stu1-&gt;destroy = destroy;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t%s\\n&quot;</span>, stu1-&gt;id, stu1-&gt;name);</span><br><span class=\"line\">    stu1-&gt;initial();</span><br><span class=\"line\">    stu1-&gt;process(stu1-&gt;id, stu1-&gt;name);</span><br><span class=\"line\">    stu1-&gt;destroy();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">free</span>(stu1);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-回调函数示例\"><a class=\"markdownIt-Anchor\" href=\"#3-回调函数示例\"></a> 3. 回调函数示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a;</span><br><span class=\"line\">    <span class=\"type\">void</span> (*pshow)(<span class=\"type\">int</span>);</span><br><span class=\"line\">&#125; TMP;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">func</span><span class=\"params\">(TMP *tmp)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tmp-&gt;a &gt; <span class=\"number\">10</span>) &#123; <span class=\"comment\">// 如果a&gt;10,则执行回调函数</span></span><br><span class=\"line\">        (tmp-&gt;pshow)(tmp-&gt;a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">show</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a的值是%d\\n&quot;</span>, a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    TMP test;</span><br><span class=\"line\">    test.a = <span class=\"number\">11</span>;</span><br><span class=\"line\">    test.pshow = show;</span><br><span class=\"line\">    func(&amp;test);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四-函数指针的两个主要用途\"><a class=\"markdownIt-Anchor\" href=\"#四-函数指针的两个主要用途\"></a> 四、函数指针的两个主要用途</h2>\n<h3 id=\"1-将函数作为参数传递给函数\"><a class=\"markdownIt-Anchor\" href=\"#1-将函数作为参数传递给函数\"></a> 1. 将函数作为参数传递给函数</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Calculate用于计算积分</span></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">Calculate</span><span class=\"params\">(<span class=\"type\">double</span>(*func)(<span class=\"type\">double</span> x), <span class=\"type\">double</span> a, <span class=\"type\">double</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> dx = <span class=\"number\">0.0001</span>; <span class=\"comment\">// 细分的区间长度</span></span><br><span class=\"line\">    <span class=\"type\">double</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">double</span> xi = a+dx; xi &lt;= b; xi += dx) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> area = func(xi) * dx;</span><br><span class=\"line\">        sum += area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">func_1</span><span class=\"params\">(<span class=\"type\">double</span> x)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">func_2</span><span class=\"params\">(<span class=\"type\">double</span> x)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>, Calculate(func_1, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>, Calculate(func_2, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-引用不在代码段中的函数\"><a class=\"markdownIt-Anchor\" href=\"#2-引用不在代码段中的函数\"></a> 2. 引用不在代码段中的函数</h3>\n<p>在嵌入式系统中，常用于调用固化在ROM中的系统函数。例如编写bootload的跳转函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> INFLASH_ADDR_BOOTLOAD   ((uint32_t)0x08000000)  <span class=\"comment\">// bootload的起始地址</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 初始化堆栈指针 */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">MSR_MSP</span><span class=\"params\">(<span class=\"type\">uint32_t</span> addr)</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __ASM(<span class=\"string\">&quot;msr msp, r0&quot;</span>);  <span class=\"comment\">// set Main Stack value 将主堆栈地址保存到MSP寄存器(R13)中</span></span><br><span class=\"line\">  __ASM(<span class=\"string\">&quot;bx lr&quot;</span>);        <span class=\"comment\">// 跳转到lr中存放的地址处。bx是强制跳转指令 lr是连接寄存器，是STM32单片机的R14</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">void</span> <span class=\"params\">(*IapFun)</span><span class=\"params\">(<span class=\"type\">void</span>)</span>; <span class=\"comment\">// 声明一个函数指针，用于跳转到绝对地址执行程序</span></span><br><span class=\"line\">IapFun JumpToBootload; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> *  功  能: 跳转到应用程序 </span></span><br><span class=\"line\"><span class=\"comment\"> *  param1: 用户代码起始地址</span></span><br><span class=\"line\"><span class=\"comment\"> *  retval: 无返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">IapLoadBootload</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( ((*(<span class=\"type\">uint32_t</span>*)INFLASH_ADDR_BOOTLOAD) &amp; <span class=\"number\">0x2FFE0000</span>) == <span class=\"number\">0x20000000</span> )<span class=\"comment\">// 检查栈顶地址是否合法</span></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">    BoardDisableIrq();   <span class=\"comment\">// 禁止中断</span></span><br><span class=\"line\">        JumpToBootload = (IapFun)*(<span class=\"type\">uint32_t</span>*)(INFLASH_ADDR_BOOTLOAD+<span class=\"number\">4</span>);  <span class=\"comment\">// 用户代码区第二个字为程序开始地址(新程序复位地址)\t\t</span></span><br><span class=\"line\">        MSR_MSP(*(<span class=\"type\">uint32_t</span>*)INFLASH_ADDR_BOOTLOAD);\t\t                <span class=\"comment\">// 初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)</span></span><br><span class=\"line\">                                        </span><br><span class=\"line\">    JumpToBootload();\t                                    <span class=\"comment\">// 设置PC指针为bootload复位中断函数的地址，往下执行</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-嵌入式系统中结构体函数指针的应用\"><a class=\"markdownIt-Anchor\" href=\"#五-嵌入式系统中结构体函数指针的应用\"></a> 五、嵌入式系统中结构体函数指针的应用</h2>\n<h3 id=\"1-函数指针作为结构体成员\"><a class=\"markdownIt-Anchor\" href=\"#1-函数指针作为结构体成员\"></a> 1. 函数指针作为结构体成员</h3>\n<p><img src=\"/images/posts/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/1.png\" alt=\"\" /></p>\n<h3 id=\"2-函数指针作为函数的参数\"><a class=\"markdownIt-Anchor\" href=\"#2-函数指针作为函数的参数\"></a> 2. 函数指针作为函数的参数</h3>\n<p><img src=\"/images/posts/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/2.png\" alt=\"\" /></p>\n<h2 id=\"六-使用结构体指针编写回调函数示例\"><a class=\"markdownIt-Anchor\" href=\"#六-使用结构体指针编写回调函数示例\"></a> 六、使用结构体指针编写回调函数示例</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数指针结构体</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">OP</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_add)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_sub)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_mul)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_div)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">&#125; OP; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 加减乘除函数</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">ADD</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">SUB</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">MUL</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">DIV</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a / b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 初始化函数指针</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">init_op</span><span class=\"params\">(OP *op)</span> &#123;</span><br><span class=\"line\">    op-&gt;p_add = ADD;</span><br><span class=\"line\">    op-&gt;p_sub = SUB;</span><br><span class=\"line\">    op-&gt;p_mul = &amp;MUL;</span><br><span class=\"line\">    op-&gt;p_div = &amp;DIV;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 库函数</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">add_sub_mul_div</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b, <span class=\"type\">float</span> (*op_func)(<span class=\"type\">float</span>, <span class=\"type\">float</span>))</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (*op_func)(a, b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> &#123;</span><br><span class=\"line\">    OP *op = (OP *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(OP)); </span><br><span class=\"line\">    init_op(op);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/* 直接使用函数指针调用函数 */</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n&quot;</span>, </span><br><span class=\"line\">           (op-&gt;p_add)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (*op-&gt;p_sub)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (op-&gt;p_mul)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (*op-&gt;p_div)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>));</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"comment\">/* 调用回调函数 */</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n&quot;</span>, </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, ADD), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, SUB), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, MUL), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, DIV));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🍳</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"早餐,能量开启,营养均衡,元气满满,唤醒味蕾\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  ","excerpt":"","more":"<h1 id=\"c语言函数指针与结构体函数指针在嵌入式中的应用\"><a class=\"markdownIt-Anchor\" href=\"#c语言函数指针与结构体函数指针在嵌入式中的应用\"></a> C语言函数指针与结构体函数指针在嵌入式中的应用</h1>\n<h2 id=\"一-起因\"><a class=\"markdownIt-Anchor\" href=\"#一-起因\"></a> 一、起因</h2>\n<p>在嵌入式操作系统开发时，发现非常多的功能实现是基于结构体函数指针实现的。函数指针在嵌入式中的应用非常广泛，常常把函数指针作为结构体的成员、作为函数的参数等。为了填补C语言的基础知识，特此记录学习过程。</p>\n<p>在C语言程序中，数据结构和算法是两个基本元素。C语言的基本数据类型、结构体、数组和联合体是数据结构的代表；C语言中的函数则是算法的代表。只有将数据结构和算法有机结合才能构成具有一定功能的程序。</p>\n<h2 id=\"二-c语言函数指针基础\"><a class=\"markdownIt-Anchor\" href=\"#二-c语言函数指针基础\"></a> 二、C语言函数指针基础</h2>\n<h3 id=\"1-函数指针定义\"><a class=\"markdownIt-Anchor\" href=\"#1-函数指针定义\"></a> 1. 函数指针定义</h3>\n<p>函数指针的定义形式为：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">returnType (*pointerName)(param <span class=\"built_in\">list</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>returnType</code> 为函数返回值类型</li>\n<li><code>pointerName</code> 为指针名称</li>\n<li><code>param list</code> 为函数参数列表</li>\n</ul>\n<p>注意：<code>()</code>的优先级高于<code>*</code>，第一个括号不能省略。</p>\n<h3 id=\"2-基本示例\"><a class=\"markdownIt-Anchor\" href=\"#2-基本示例\"></a> 2. 基本示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回两个数中较大的一个</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">max</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b ? a : b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x, y, maxval;</span><br><span class=\"line\">    <span class=\"comment\">// 定义函数指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> (*pmax)(<span class=\"type\">int</span>, <span class=\"type\">int</span>) = max;  <span class=\"comment\">// 也可以写作int (*pmax)(int a, int b)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Input two numbers:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class=\"line\">    maxval = (*pmax)(x, y);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Max value: %d\\n&quot;</span>, maxval);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-函数指针定义示例\"><a class=\"markdownIt-Anchor\" href=\"#3-函数指针定义示例\"></a> 3. 函数指针定义示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add2</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> (*func)(<span class=\"type\">int</span>, <span class=\"type\">int</span>);</span><br><span class=\"line\">    func = &amp;add2;  <span class=\"comment\">// 指针赋值,或者func=add2; add2与&amp;add2意义相同</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;func(3,4)=%d\\n&quot;</span>, func(<span class=\"number\">3</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-使用typedef定义函数指针类型\"><a class=\"markdownIt-Anchor\" href=\"#4-使用typedef定义函数指针类型\"></a> 4. 使用typedef定义函数指针类型</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">int</span> <span class=\"params\">(*FUN)</span><span class=\"params\">(<span class=\"type\">int</span>, <span class=\"type\">int</span>)</span>;</span><br><span class=\"line\">FUN func = &amp;add2;</span><br><span class=\"line\">func();</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-结构体中定义函数指针\"><a class=\"markdownIt-Anchor\" href=\"#三-结构体中定义函数指针\"></a> 三、结构体中定义函数指针</h2>\n<h3 id=\"1-结构体指针变量的定义形式\"><a class=\"markdownIt-Anchor\" href=\"#1-结构体指针变量的定义形式\"></a> 1. 结构体指针变量的定义形式</h3>\n<h4 id=\"形式1先定义结构体类型再定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式1先定义结构体类型再定义变量\"></a> 形式1：先定义结构体类型，再定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 *指针变量名;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"形式2在定义类型的同时定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式2在定义类型的同时定义变量\"></a> 形式2：在定义类型的同时定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体标识符 &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125; *指针变量名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"形式3直接定义变量\"><a class=\"markdownIt-Anchor\" href=\"#形式3直接定义变量\"></a> 形式3：直接定义变量</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    成员变量列表;</span><br><span class=\"line\">&#125; *指针变量名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-结构体中指向函数的指针示例\"><a class=\"markdownIt-Anchor\" href=\"#2-结构体中指向函数的指针示例\"></a> 2. 结构体中指向函数的指针示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"type\">char</span> name[<span class=\"number\">50</span>];</span><br><span class=\"line\">    <span class=\"type\">void</span> (*initial)();</span><br><span class=\"line\">    <span class=\"type\">void</span> (*process)(<span class=\"type\">int</span> id, <span class=\"type\">char</span> *name);</span><br><span class=\"line\">    <span class=\"type\">void</span> (*destroy)();</span><br><span class=\"line\">&#125; stu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">initial</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;initialization...\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">process</span><span class=\"params\">(<span class=\"type\">int</span> id, <span class=\"type\">char</span> *name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;process...\\n%d\\t%s\\n&quot;</span>, id, name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;destroy...\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    stu *stu1;</span><br><span class=\"line\">    stu1 = (stu *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(stu));</span><br><span class=\"line\">    </span><br><span class=\"line\">    stu1-&gt;id = <span class=\"number\">1000</span>;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(stu1-&gt;name, <span class=\"string\">&quot;C++&quot;</span>);</span><br><span class=\"line\">    stu1-&gt;initial = initial;</span><br><span class=\"line\">    stu1-&gt;process = process;</span><br><span class=\"line\">    stu1-&gt;destroy = destroy;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t%s\\n&quot;</span>, stu1-&gt;id, stu1-&gt;name);</span><br><span class=\"line\">    stu1-&gt;initial();</span><br><span class=\"line\">    stu1-&gt;process(stu1-&gt;id, stu1-&gt;name);</span><br><span class=\"line\">    stu1-&gt;destroy();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">free</span>(stu1);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-回调函数示例\"><a class=\"markdownIt-Anchor\" href=\"#3-回调函数示例\"></a> 3. 回调函数示例</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a;</span><br><span class=\"line\">    <span class=\"type\">void</span> (*pshow)(<span class=\"type\">int</span>);</span><br><span class=\"line\">&#125; TMP;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">func</span><span class=\"params\">(TMP *tmp)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tmp-&gt;a &gt; <span class=\"number\">10</span>) &#123; <span class=\"comment\">// 如果a&gt;10,则执行回调函数</span></span><br><span class=\"line\">        (tmp-&gt;pshow)(tmp-&gt;a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">show</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a的值是%d\\n&quot;</span>, a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    TMP test;</span><br><span class=\"line\">    test.a = <span class=\"number\">11</span>;</span><br><span class=\"line\">    test.pshow = show;</span><br><span class=\"line\">    func(&amp;test);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四-函数指针的两个主要用途\"><a class=\"markdownIt-Anchor\" href=\"#四-函数指针的两个主要用途\"></a> 四、函数指针的两个主要用途</h2>\n<h3 id=\"1-将函数作为参数传递给函数\"><a class=\"markdownIt-Anchor\" href=\"#1-将函数作为参数传递给函数\"></a> 1. 将函数作为参数传递给函数</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Calculate用于计算积分</span></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">Calculate</span><span class=\"params\">(<span class=\"type\">double</span>(*func)(<span class=\"type\">double</span> x), <span class=\"type\">double</span> a, <span class=\"type\">double</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> dx = <span class=\"number\">0.0001</span>; <span class=\"comment\">// 细分的区间长度</span></span><br><span class=\"line\">    <span class=\"type\">double</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">double</span> xi = a+dx; xi &lt;= b; xi += dx) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> area = func(xi) * dx;</span><br><span class=\"line\">        sum += area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">func_1</span><span class=\"params\">(<span class=\"type\">double</span> x)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">func_2</span><span class=\"params\">(<span class=\"type\">double</span> x)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>, Calculate(func_1, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>, Calculate(func_2, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-引用不在代码段中的函数\"><a class=\"markdownIt-Anchor\" href=\"#2-引用不在代码段中的函数\"></a> 2. 引用不在代码段中的函数</h3>\n<p>在嵌入式系统中，常用于调用固化在ROM中的系统函数。例如编写bootload的跳转函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> INFLASH_ADDR_BOOTLOAD   ((uint32_t)0x08000000)  <span class=\"comment\">// bootload的起始地址</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 初始化堆栈指针 */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">MSR_MSP</span><span class=\"params\">(<span class=\"type\">uint32_t</span> addr)</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __ASM(<span class=\"string\">&quot;msr msp, r0&quot;</span>);  <span class=\"comment\">// set Main Stack value 将主堆栈地址保存到MSP寄存器(R13)中</span></span><br><span class=\"line\">  __ASM(<span class=\"string\">&quot;bx lr&quot;</span>);        <span class=\"comment\">// 跳转到lr中存放的地址处。bx是强制跳转指令 lr是连接寄存器，是STM32单片机的R14</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">void</span> <span class=\"params\">(*IapFun)</span><span class=\"params\">(<span class=\"type\">void</span>)</span>; <span class=\"comment\">// 声明一个函数指针，用于跳转到绝对地址执行程序</span></span><br><span class=\"line\">IapFun JumpToBootload; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> *  功  能: 跳转到应用程序 </span></span><br><span class=\"line\"><span class=\"comment\"> *  param1: 用户代码起始地址</span></span><br><span class=\"line\"><span class=\"comment\"> *  retval: 无返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">IapLoadBootload</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( ((*(<span class=\"type\">uint32_t</span>*)INFLASH_ADDR_BOOTLOAD) &amp; <span class=\"number\">0x2FFE0000</span>) == <span class=\"number\">0x20000000</span> )<span class=\"comment\">// 检查栈顶地址是否合法</span></span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">    BoardDisableIrq();   <span class=\"comment\">// 禁止中断</span></span><br><span class=\"line\">        JumpToBootload = (IapFun)*(<span class=\"type\">uint32_t</span>*)(INFLASH_ADDR_BOOTLOAD+<span class=\"number\">4</span>);  <span class=\"comment\">// 用户代码区第二个字为程序开始地址(新程序复位地址)\t\t</span></span><br><span class=\"line\">        MSR_MSP(*(<span class=\"type\">uint32_t</span>*)INFLASH_ADDR_BOOTLOAD);\t\t                <span class=\"comment\">// 初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)</span></span><br><span class=\"line\">                                        </span><br><span class=\"line\">    JumpToBootload();\t                                    <span class=\"comment\">// 设置PC指针为bootload复位中断函数的地址，往下执行</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-嵌入式系统中结构体函数指针的应用\"><a class=\"markdownIt-Anchor\" href=\"#五-嵌入式系统中结构体函数指针的应用\"></a> 五、嵌入式系统中结构体函数指针的应用</h2>\n<h3 id=\"1-函数指针作为结构体成员\"><a class=\"markdownIt-Anchor\" href=\"#1-函数指针作为结构体成员\"></a> 1. 函数指针作为结构体成员</h3>\n<p><img src=\"/images/posts/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/1.png\" alt=\"\" /></p>\n<h3 id=\"2-函数指针作为函数的参数\"><a class=\"markdownIt-Anchor\" href=\"#2-函数指针作为函数的参数\"></a> 2. 函数指针作为函数的参数</h3>\n<p><img src=\"/images/posts/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/2.png\" alt=\"\" /></p>\n<h2 id=\"六-使用结构体指针编写回调函数示例\"><a class=\"markdownIt-Anchor\" href=\"#六-使用结构体指针编写回调函数示例\"></a> 六、使用结构体指针编写回调函数示例</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数指针结构体</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">OP</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_add)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_sub)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_mul)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_div)(<span class=\"type\">float</span>, <span class=\"type\">float</span>); </span><br><span class=\"line\">&#125; OP; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 加减乘除函数</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">ADD</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">SUB</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">MUL</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">DIV</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a / b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 初始化函数指针</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">init_op</span><span class=\"params\">(OP *op)</span> &#123;</span><br><span class=\"line\">    op-&gt;p_add = ADD;</span><br><span class=\"line\">    op-&gt;p_sub = SUB;</span><br><span class=\"line\">    op-&gt;p_mul = &amp;MUL;</span><br><span class=\"line\">    op-&gt;p_div = &amp;DIV;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/****************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * 库函数</span></span><br><span class=\"line\"><span class=\"comment\"> ***************************************/</span></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">add_sub_mul_div</span><span class=\"params\">(<span class=\"type\">float</span> a, <span class=\"type\">float</span> b, <span class=\"type\">float</span> (*op_func)(<span class=\"type\">float</span>, <span class=\"type\">float</span>))</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (*op_func)(a, b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> &#123;</span><br><span class=\"line\">    OP *op = (OP *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(OP)); </span><br><span class=\"line\">    init_op(op);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/* 直接使用函数指针调用函数 */</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n&quot;</span>, </span><br><span class=\"line\">           (op-&gt;p_add)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (*op-&gt;p_sub)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (op-&gt;p_mul)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>), </span><br><span class=\"line\">           (*op-&gt;p_div)(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>));</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"comment\">/* 调用回调函数 */</span> </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ADD = %f, SUB = %f, MUL = %f, DIV = %f\\n&quot;</span>, </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, ADD), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, SUB), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, MUL), </span><br><span class=\"line\">           add_sub_mul_div(<span class=\"number\">1.3</span>, <span class=\"number\">2.2</span>, DIV));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🍳</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"早餐,能量开启,营养均衡,元气满满,唤醒味蕾\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  "},{"title":"ESP32-IDF新建工程和创建分区","mermaid":true,"date":"2025-06-05T16:00:00.000Z","comments":1,"_content":"\nesp32文件路径：D:/Espressif/frameworks/esp-idf-v5.4.1/components/**\n\n创建工程：<font style=\"color:rgb(77, 77, 77);\">查看->命令面板，在里面搜索create project from extersion template</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/1.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤2) 选择要创建工程的路径</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/2.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤3）选择工程的类型</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/3.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤4）在main.c的app_main函数我们添加一个打印</font><font style=\"color:rgb(78, 161, 219) !important;\">printf</font><font style=\"color:rgb(77, 77, 77);\">  \n</font><font style=\"color:rgb(77, 77, 77);\"> </font>![](/images/posts/ESP32-IDF新建工程和创建分区/4.png)\n\n后面就是选择芯片，选择烧入方式，编译下载。\n\n### <font style=\"color:rgb(79, 79, 79);\">创建分区文件</font>\n<font style=\"color:rgb(77, 77, 77);\">命令面板 搜索partition table,出来以下画面，我们打开分区编辑器UI</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/5.png)\n\nSDK编辑器设置好对于的文件和flash大小![](/images/posts/ESP32-IDF新建工程和创建分区/6.png)\n\n# <font style=\"color:rgb(34, 34, 38);\">logging库</font>\n```c\n#include \"esp_log.h\"\nstatic const char* TAG = \"Wireless Link\";\nvoid esp32_logging_lib_show()\n{\n    ESP_LOGE(TAG, \"I am error log\");\n    ESP_LOGW(TAG, \"I am warning log\");\n    ESP_LOGI(TAG, \"I am info log\");\n    ESP_LOGD(TAG, \"I am debug log\");\n    ESP_LOGV(TAG, \"I am verbose log\");\n}\n```\n\n#### `**<font style=\"color:rgb(79, 79, 79);\">xTaskCreate</font>**`**<font style=\"color:rgb(79, 79, 79);\"> 函数原型</font>**\n`<font style=\"color:rgb(77, 77, 77);\">xTaskCreate</font>`<font style=\"color:rgb(77, 77, 77);\"> 是 </font><font style=\"color:rgb(78, 161, 219) !important;\">FreeRTOS</font><font style=\"color:rgb(77, 77, 77);\"> 中用于创建任务的函数。</font>\n\n```c\nBaseType_t xTaskCreate(\n    TaskFunction_t pvTaskCode,       // 任务函数指针\n    const char * const pcName,       // 任务名称（字符串）\n    configSTACK_DEPTH_TYPE usStackDepth, // 任务堆栈大小（以字为单位）\n    void *pvParameters,             // 传递给任务函数的参数\n    UBaseType_t uxPriority,         // 任务优先级\n    TaskHandle_t *pxCreatedTask      // 任务句柄（用于引用任务）\n);\n\nxTaskCreate(uart_select_task, \"uart_select_task\", 4 * 1024, NULL, 5, NULL);\n```\n\n### <font style=\"color:rgb(79, 79, 79);\"></font><font style=\"color:rgb(79, 79, 79);\">json基础</font>\n<font style=\"color:rgb(77, 77, 77);\">JSON（</font><font style=\"color:rgb(78, 161, 219) !important;\">JavaScript</font><font style=\"color:rgb(77, 77, 77);\"> Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，但独立于语言，广泛用于Web应用中的数据交换。</font><font style=\"color:rgb(51, 51, 51);\">  \n</font><font style=\"color:rgb(51, 51, 51);\">json编程</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/7.png)\n\n<font style=\"color:rgb(51, 51, 51);\">{\"FUNC\":\"HW\",\"OPERATE\":\"LED_ON\",\"PARAM1\":null,\"PARAM2\":null,\"PARAM3\":null,\"PARAM4\":null,\"PARAM5\":null,\"PARAM6\":null}</font>\n\n<font style=\"color:rgb(77, 77, 77);\">在ESP IDF中已经集成了json的库，就是</font><font style=\"color:rgb(78, 161, 219) !important;\">cJson</font><font style=\"color:rgb(77, 77, 77);\">，只需要引用这个头文件即可以使用其中的API</font>\n\n```c\n#include \"cJSON.h\"\n    /* 解析上位机的json格式 */\n    cJSON* parse_json = cJSON_Parse((const char *)shell_string);\n \n    if(!parse_json)\n    {\n        ESP_LOGE(TAG, \"Not specific json format:%s\\n\",shell_string);\n        goto exit;\n    }\n \n    uint8_t* func_value = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"FUNC\"))->valuestring;\n    uint8_t* operate_value = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"OPERATE\"))->valuestring;\n    uint8_t* para1 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM1\"))->valuestring;\n    uint8_t* para2 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM2\"))->valuestring;\n    uint8_t* para3 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM3\"))->valuestring;\n    uint8_t* para4 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM4\"))->valuestring;\n    uint8_t* para5 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM5\"))->valuestring;\n    uint8_t* para6 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM6\"))->valuestring;\n    ESP_UNUSED(para1);\n    ESP_UNUSED(para2);\n    ESP_UNUSED(para3);\n    ESP_UNUSED(para4);\n    ESP_UNUSED(para5);\n    ESP_UNUSED(para6);\n    if(!func_value || !operate_value)\n    {\n        ESP_LOGE(TAG, \"Not specific json format:%s\\n\",shell_string);\n        goto exit;\n    }\n \n    if(strcmp((const char *)func_value,\"HW\") == 0)\n    {\n        if(strcmp((const char *)operate_value,\"LED_ON\") == 0)\n        {\n            ESP_LOGD(TAG, \"UART PARSE DEBUG:operate LED_ON\\n\");\n            LED_ON;\n            goto exit;\n        }\n \n        if(strcmp((const char *)operate_value,\"LED_OFF\") == 0)\n        {\n            ESP_LOGD(TAG, \"UART PARSE DEBUG:operate LED_OFF\\n\");\n            LED_OFF;\n            goto exit;\n        }\n \n    }\n```\n\n","source":"_posts/ESP32-IDF新建工程和创建分区.md","raw":"---\ntitle: ESP32-IDF新建工程和创建分区\nmermaid: true\ndate: 2025-06-06\ntags: [嵌入式, C语言, 笔记, 单片机]\ncomments: true\ncategories: [嵌入式]\n---\n\nesp32文件路径：D:/Espressif/frameworks/esp-idf-v5.4.1/components/**\n\n创建工程：<font style=\"color:rgb(77, 77, 77);\">查看->命令面板，在里面搜索create project from extersion template</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/1.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤2) 选择要创建工程的路径</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/2.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤3）选择工程的类型</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/3.png)\n\n<font style=\"color:rgb(77, 77, 77);\">步骤4）在main.c的app_main函数我们添加一个打印</font><font style=\"color:rgb(78, 161, 219) !important;\">printf</font><font style=\"color:rgb(77, 77, 77);\">  \n</font><font style=\"color:rgb(77, 77, 77);\"> </font>![](/images/posts/ESP32-IDF新建工程和创建分区/4.png)\n\n后面就是选择芯片，选择烧入方式，编译下载。\n\n### <font style=\"color:rgb(79, 79, 79);\">创建分区文件</font>\n<font style=\"color:rgb(77, 77, 77);\">命令面板 搜索partition table,出来以下画面，我们打开分区编辑器UI</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/5.png)\n\nSDK编辑器设置好对于的文件和flash大小![](/images/posts/ESP32-IDF新建工程和创建分区/6.png)\n\n# <font style=\"color:rgb(34, 34, 38);\">logging库</font>\n```c\n#include \"esp_log.h\"\nstatic const char* TAG = \"Wireless Link\";\nvoid esp32_logging_lib_show()\n{\n    ESP_LOGE(TAG, \"I am error log\");\n    ESP_LOGW(TAG, \"I am warning log\");\n    ESP_LOGI(TAG, \"I am info log\");\n    ESP_LOGD(TAG, \"I am debug log\");\n    ESP_LOGV(TAG, \"I am verbose log\");\n}\n```\n\n#### `**<font style=\"color:rgb(79, 79, 79);\">xTaskCreate</font>**`**<font style=\"color:rgb(79, 79, 79);\"> 函数原型</font>**\n`<font style=\"color:rgb(77, 77, 77);\">xTaskCreate</font>`<font style=\"color:rgb(77, 77, 77);\"> 是 </font><font style=\"color:rgb(78, 161, 219) !important;\">FreeRTOS</font><font style=\"color:rgb(77, 77, 77);\"> 中用于创建任务的函数。</font>\n\n```c\nBaseType_t xTaskCreate(\n    TaskFunction_t pvTaskCode,       // 任务函数指针\n    const char * const pcName,       // 任务名称（字符串）\n    configSTACK_DEPTH_TYPE usStackDepth, // 任务堆栈大小（以字为单位）\n    void *pvParameters,             // 传递给任务函数的参数\n    UBaseType_t uxPriority,         // 任务优先级\n    TaskHandle_t *pxCreatedTask      // 任务句柄（用于引用任务）\n);\n\nxTaskCreate(uart_select_task, \"uart_select_task\", 4 * 1024, NULL, 5, NULL);\n```\n\n### <font style=\"color:rgb(79, 79, 79);\"></font><font style=\"color:rgb(79, 79, 79);\">json基础</font>\n<font style=\"color:rgb(77, 77, 77);\">JSON（</font><font style=\"color:rgb(78, 161, 219) !important;\">JavaScript</font><font style=\"color:rgb(77, 77, 77);\"> Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，但独立于语言，广泛用于Web应用中的数据交换。</font><font style=\"color:rgb(51, 51, 51);\">  \n</font><font style=\"color:rgb(51, 51, 51);\">json编程</font>\n\n![](/images/posts/ESP32-IDF新建工程和创建分区/7.png)\n\n<font style=\"color:rgb(51, 51, 51);\">{\"FUNC\":\"HW\",\"OPERATE\":\"LED_ON\",\"PARAM1\":null,\"PARAM2\":null,\"PARAM3\":null,\"PARAM4\":null,\"PARAM5\":null,\"PARAM6\":null}</font>\n\n<font style=\"color:rgb(77, 77, 77);\">在ESP IDF中已经集成了json的库，就是</font><font style=\"color:rgb(78, 161, 219) !important;\">cJson</font><font style=\"color:rgb(77, 77, 77);\">，只需要引用这个头文件即可以使用其中的API</font>\n\n```c\n#include \"cJSON.h\"\n    /* 解析上位机的json格式 */\n    cJSON* parse_json = cJSON_Parse((const char *)shell_string);\n \n    if(!parse_json)\n    {\n        ESP_LOGE(TAG, \"Not specific json format:%s\\n\",shell_string);\n        goto exit;\n    }\n \n    uint8_t* func_value = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"FUNC\"))->valuestring;\n    uint8_t* operate_value = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"OPERATE\"))->valuestring;\n    uint8_t* para1 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM1\"))->valuestring;\n    uint8_t* para2 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM2\"))->valuestring;\n    uint8_t* para3 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM3\"))->valuestring;\n    uint8_t* para4 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM4\"))->valuestring;\n    uint8_t* para5 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM5\"))->valuestring;\n    uint8_t* para6 = (uint8_t*)((cJSON *)cJSON_GetObjectItem(parse_json,\"PARAM6\"))->valuestring;\n    ESP_UNUSED(para1);\n    ESP_UNUSED(para2);\n    ESP_UNUSED(para3);\n    ESP_UNUSED(para4);\n    ESP_UNUSED(para5);\n    ESP_UNUSED(para6);\n    if(!func_value || !operate_value)\n    {\n        ESP_LOGE(TAG, \"Not specific json format:%s\\n\",shell_string);\n        goto exit;\n    }\n \n    if(strcmp((const char *)func_value,\"HW\") == 0)\n    {\n        if(strcmp((const char *)operate_value,\"LED_ON\") == 0)\n        {\n            ESP_LOGD(TAG, \"UART PARSE DEBUG:operate LED_ON\\n\");\n            LED_ON;\n            goto exit;\n        }\n \n        if(strcmp((const char *)operate_value,\"LED_OFF\") == 0)\n        {\n            ESP_LOGD(TAG, \"UART PARSE DEBUG:operate LED_OFF\\n\");\n            LED_OFF;\n            goto exit;\n        }\n \n    }\n```\n\n","slug":"ESP32-IDF新建工程和创建分区","published":1,"updated":"2025-07-16T07:26:21.906Z","layout":"post","photos":[],"_id":"cmd71t80p00073cw63h5n1mqf","content":"<p>esp32文件路径：D:/Espressif/frameworks/esp-idf-v5.4.1/components/**</p>\n<p>创建工程：<font style=\"color:rgb(77, 77, 77);\">查看-&gt;命令面板，在里面搜索create project from extersion template</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/1.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤2) 选择要创建工程的路径</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/2.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤3）选择工程的类型</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/3.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤4）在main.c的app_main函数我们添加一个打印</font><font style=\"color:rgb(78, 161, 219) !important;\">printf</font><font style=\"color:rgb(77, 77, 77);\"><br />\n</font><font style=\"color:rgb(77, 77, 77);\"> </font><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/4.png\" alt=\"\" /></p>\n<p>后面就是选择芯片，选择烧入方式，编译下载。</p>\n<h3 id=\"font-stylecolorrgb79-79-79创建分区文件font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79创建分区文件font\"></a> <font style=\"color:rgb(79, 79, 79);\">创建分区文件</font></h3>\n<p><font style=\"color:rgb(77, 77, 77);\">命令面板 搜索partition table,出来以下画面，我们打开分区编辑器UI</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/5.png\" alt=\"\" /></p>\n<p>SDK编辑器设置好对于的文件和flash大小<img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/6.png\" alt=\"\" /></p>\n<h1 id=\"font-stylecolorrgb34-34-38logging库font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb34-34-38logging库font\"></a> <font style=\"color:rgb(34, 34, 38);\">logging库</font></h1>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp_log.h&quot;</span></span></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">char</span>* TAG = <span class=\"string\">&quot;Wireless Link&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">esp32_logging_lib_show</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ESP_LOGE(TAG, <span class=\"string\">&quot;I am error log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGW(TAG, <span class=\"string\">&quot;I am warning log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGI(TAG, <span class=\"string\">&quot;I am info log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGD(TAG, <span class=\"string\">&quot;I am debug log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGV(TAG, <span class=\"string\">&quot;I am verbose log&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb79-79-79xtaskcreatefontfont-stylecolorrgb79-79-79-函数原型font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79xtaskcreatefontfont-stylecolorrgb79-79-79-函数原型font\"></a> <code>**&lt;font style=&quot;color:rgb(79, 79, 79);&quot;&gt;xTaskCreate&lt;/font&gt;**</code><strong><font style=\"color:rgb(79, 79, 79);\"> 函数原型</font></strong></h4>\n<p><code>&lt;font style=&quot;color:rgb(77, 77, 77);&quot;&gt;xTaskCreate&lt;/font&gt;</code><font style=\"color:rgb(77, 77, 77);\"> 是 </font><font style=\"color:rgb(78, 161, 219) !important;\">FreeRTOS</font><font style=\"color:rgb(77, 77, 77);\"> 中用于创建任务的函数。</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BaseType_t <span class=\"title function_\">xTaskCreate</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    TaskFunction_t pvTaskCode,       <span class=\"comment\">// 任务函数指针</span></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"type\">const</span> <span class=\"type\">char</span> * <span class=\"type\">const</span> pcName,       <span class=\"comment\">// 任务名称（字符串）</span></span></span><br><span class=\"line\"><span class=\"params\">    configSTACK_DEPTH_TYPE usStackDepth, <span class=\"comment\">// 任务堆栈大小（以字为单位）</span></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"type\">void</span> *pvParameters,             <span class=\"comment\">// 传递给任务函数的参数</span></span></span><br><span class=\"line\"><span class=\"params\">    UBaseType_t uxPriority,         <span class=\"comment\">// 任务优先级</span></span></span><br><span class=\"line\"><span class=\"params\">    TaskHandle_t *pxCreatedTask      <span class=\"comment\">// 任务句柄（用于引用任务）</span></span></span><br><span class=\"line\"><span class=\"params\">)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">xTaskCreate(uart_select_task, <span class=\"string\">&quot;uart_select_task&quot;</span>, <span class=\"number\">4</span> * <span class=\"number\">1024</span>, <span class=\"literal\">NULL</span>, <span class=\"number\">5</span>, <span class=\"literal\">NULL</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgb79-79-79fontfont-stylecolorrgb79-79-79json基础font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79fontfont-stylecolorrgb79-79-79json基础font\"></a> <font style=\"color:rgb(79, 79, 79);\"></font><font style=\"color:rgb(79, 79, 79);\">json基础</font></h3>\n<p><font style=\"color:rgb(77, 77, 77);\">JSON（</font><font style=\"color:rgb(78, 161, 219) !important;\">JavaScript</font><font style=\"color:rgb(77, 77, 77);\"> Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，但独立于语言，广泛用于Web应用中的数据交换。</font><font style=\"color:rgb(51, 51, 51);\"><br />\n</font><font style=\"color:rgb(51, 51, 51);\">json编程</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/7.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">{“FUNC”:“HW”,“OPERATE”:“LED_ON”,“PARAM1”:null,“PARAM2”:null,“PARAM3”:null,“PARAM4”:null,“PARAM5”:null,“PARAM6”:null}</font></p>\n<p><font style=\"color:rgb(77, 77, 77);\">在ESP IDF中已经集成了json的库，就是</font><font style=\"color:rgb(78, 161, 219) !important;\">cJson</font><font style=\"color:rgb(77, 77, 77);\">，只需要引用这个头文件即可以使用其中的API</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cJSON.h&quot;</span></span></span><br><span class=\"line\">    <span class=\"comment\">/* 解析上位机的json格式 */</span></span><br><span class=\"line\">    cJSON* parse_json = cJSON_Parse((<span class=\"type\">const</span> <span class=\"type\">char</span> *)shell_string);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!parse_json)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ESP_LOGE(TAG, <span class=\"string\">&quot;Not specific json format:%s\\n&quot;</span>,shell_string);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* func_value = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;FUNC&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* operate_value = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;OPERATE&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para1 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM1&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para2 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM2&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para3 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM3&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para4 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM4&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para5 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM5&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para6 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM6&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    ESP_UNUSED(para1);</span><br><span class=\"line\">    ESP_UNUSED(para2);</span><br><span class=\"line\">    ESP_UNUSED(para3);</span><br><span class=\"line\">    ESP_UNUSED(para4);</span><br><span class=\"line\">    ESP_UNUSED(para5);</span><br><span class=\"line\">    ESP_UNUSED(para6);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!func_value || !operate_value)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ESP_LOGE(TAG, <span class=\"string\">&quot;Not specific json format:%s\\n&quot;</span>,shell_string);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)func_value,<span class=\"string\">&quot;HW&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)operate_value,<span class=\"string\">&quot;LED_ON&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ESP_LOGD(TAG, <span class=\"string\">&quot;UART PARSE DEBUG:operate LED_ON\\n&quot;</span>);</span><br><span class=\"line\">            LED_ON;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)operate_value,<span class=\"string\">&quot;LED_OFF&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ESP_LOGD(TAG, <span class=\"string\">&quot;UART PARSE DEBUG:operate LED_OFF\\n&quot;</span>);</span><br><span class=\"line\">            LED_OFF;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>esp32文件路径：D:/Espressif/frameworks/esp-idf-v5.4.1/components/**</p>\n<p>创建工程：<font style=\"color:rgb(77, 77, 77);\">查看-&gt;命令面板，在里面搜索create project from extersion template</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/1.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤2) 选择要创建工程的路径</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/2.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤3）选择工程的类型</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/3.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(77, 77, 77);\">步骤4）在main.c的app_main函数我们添加一个打印</font><font style=\"color:rgb(78, 161, 219) !important;\">printf</font><font style=\"color:rgb(77, 77, 77);\"><br />\n</font><font style=\"color:rgb(77, 77, 77);\"> </font><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/4.png\" alt=\"\" /></p>\n<p>后面就是选择芯片，选择烧入方式，编译下载。</p>\n<h3 id=\"font-stylecolorrgb79-79-79创建分区文件font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79创建分区文件font\"></a> <font style=\"color:rgb(79, 79, 79);\">创建分区文件</font></h3>\n<p><font style=\"color:rgb(77, 77, 77);\">命令面板 搜索partition table,出来以下画面，我们打开分区编辑器UI</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/5.png\" alt=\"\" /></p>\n<p>SDK编辑器设置好对于的文件和flash大小<img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/6.png\" alt=\"\" /></p>\n<h1 id=\"font-stylecolorrgb34-34-38logging库font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb34-34-38logging库font\"></a> <font style=\"color:rgb(34, 34, 38);\">logging库</font></h1>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp_log.h&quot;</span></span></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">char</span>* TAG = <span class=\"string\">&quot;Wireless Link&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">esp32_logging_lib_show</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ESP_LOGE(TAG, <span class=\"string\">&quot;I am error log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGW(TAG, <span class=\"string\">&quot;I am warning log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGI(TAG, <span class=\"string\">&quot;I am info log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGD(TAG, <span class=\"string\">&quot;I am debug log&quot;</span>);</span><br><span class=\"line\">    ESP_LOGV(TAG, <span class=\"string\">&quot;I am verbose log&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb79-79-79xtaskcreatefontfont-stylecolorrgb79-79-79-函数原型font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79xtaskcreatefontfont-stylecolorrgb79-79-79-函数原型font\"></a> <code>**&lt;font style=&quot;color:rgb(79, 79, 79);&quot;&gt;xTaskCreate&lt;/font&gt;**</code><strong><font style=\"color:rgb(79, 79, 79);\"> 函数原型</font></strong></h4>\n<p><code>&lt;font style=&quot;color:rgb(77, 77, 77);&quot;&gt;xTaskCreate&lt;/font&gt;</code><font style=\"color:rgb(77, 77, 77);\"> 是 </font><font style=\"color:rgb(78, 161, 219) !important;\">FreeRTOS</font><font style=\"color:rgb(77, 77, 77);\"> 中用于创建任务的函数。</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BaseType_t <span class=\"title function_\">xTaskCreate</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    TaskFunction_t pvTaskCode,       <span class=\"comment\">// 任务函数指针</span></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"type\">const</span> <span class=\"type\">char</span> * <span class=\"type\">const</span> pcName,       <span class=\"comment\">// 任务名称（字符串）</span></span></span><br><span class=\"line\"><span class=\"params\">    configSTACK_DEPTH_TYPE usStackDepth, <span class=\"comment\">// 任务堆栈大小（以字为单位）</span></span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"type\">void</span> *pvParameters,             <span class=\"comment\">// 传递给任务函数的参数</span></span></span><br><span class=\"line\"><span class=\"params\">    UBaseType_t uxPriority,         <span class=\"comment\">// 任务优先级</span></span></span><br><span class=\"line\"><span class=\"params\">    TaskHandle_t *pxCreatedTask      <span class=\"comment\">// 任务句柄（用于引用任务）</span></span></span><br><span class=\"line\"><span class=\"params\">)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">xTaskCreate(uart_select_task, <span class=\"string\">&quot;uart_select_task&quot;</span>, <span class=\"number\">4</span> * <span class=\"number\">1024</span>, <span class=\"literal\">NULL</span>, <span class=\"number\">5</span>, <span class=\"literal\">NULL</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgb79-79-79fontfont-stylecolorrgb79-79-79json基础font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb79-79-79fontfont-stylecolorrgb79-79-79json基础font\"></a> <font style=\"color:rgb(79, 79, 79);\"></font><font style=\"color:rgb(79, 79, 79);\">json基础</font></h3>\n<p><font style=\"color:rgb(77, 77, 77);\">JSON（</font><font style=\"color:rgb(78, 161, 219) !important;\">JavaScript</font><font style=\"color:rgb(77, 77, 77);\"> Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，但独立于语言，广泛用于Web应用中的数据交换。</font><font style=\"color:rgb(51, 51, 51);\"><br />\n</font><font style=\"color:rgb(51, 51, 51);\">json编程</font></p>\n<p><img src=\"/images/posts/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/7.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">{“FUNC”:“HW”,“OPERATE”:“LED_ON”,“PARAM1”:null,“PARAM2”:null,“PARAM3”:null,“PARAM4”:null,“PARAM5”:null,“PARAM6”:null}</font></p>\n<p><font style=\"color:rgb(77, 77, 77);\">在ESP IDF中已经集成了json的库，就是</font><font style=\"color:rgb(78, 161, 219) !important;\">cJson</font><font style=\"color:rgb(77, 77, 77);\">，只需要引用这个头文件即可以使用其中的API</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cJSON.h&quot;</span></span></span><br><span class=\"line\">    <span class=\"comment\">/* 解析上位机的json格式 */</span></span><br><span class=\"line\">    cJSON* parse_json = cJSON_Parse((<span class=\"type\">const</span> <span class=\"type\">char</span> *)shell_string);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!parse_json)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ESP_LOGE(TAG, <span class=\"string\">&quot;Not specific json format:%s\\n&quot;</span>,shell_string);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* func_value = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;FUNC&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* operate_value = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;OPERATE&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para1 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM1&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para2 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM2&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para3 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM3&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para4 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM4&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para5 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM5&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span>* para6 = (<span class=\"type\">uint8_t</span>*)((cJSON *)cJSON_GetObjectItem(parse_json,<span class=\"string\">&quot;PARAM6&quot;</span>))-&gt;valuestring;</span><br><span class=\"line\">    ESP_UNUSED(para1);</span><br><span class=\"line\">    ESP_UNUSED(para2);</span><br><span class=\"line\">    ESP_UNUSED(para3);</span><br><span class=\"line\">    ESP_UNUSED(para4);</span><br><span class=\"line\">    ESP_UNUSED(para5);</span><br><span class=\"line\">    ESP_UNUSED(para6);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!func_value || !operate_value)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ESP_LOGE(TAG, <span class=\"string\">&quot;Not specific json format:%s\\n&quot;</span>,shell_string);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)func_value,<span class=\"string\">&quot;HW&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)operate_value,<span class=\"string\">&quot;LED_ON&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ESP_LOGD(TAG, <span class=\"string\">&quot;UART PARSE DEBUG:operate LED_ON\\n&quot;</span>);</span><br><span class=\"line\">            LED_ON;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)operate_value,<span class=\"string\">&quot;LED_OFF&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ESP_LOGD(TAG, <span class=\"string\">&quot;UART PARSE DEBUG:operate LED_OFF\\n&quot;</span>);</span><br><span class=\"line\">            LED_OFF;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> <span class=\"built_in\">exit</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"LIN总线OTA升级协议定义","mermaid":true,"date":"2025-07-13T16:00:00.000Z","cover":"rgba(237, 138, 220, 0.47)","comments":1,"_content":"\n## 一、LIN ID枚举定义\n### 1. 基本ID枚举\n```c\ntypedef enum\n{\n    gID_OtapCmd_c = 0x31,\n    gID_OtapGetStatus_c,\n    gID_OtapData_c\n} lin_id_t;\n```\n\n### 2. ID功能说明\n+ **gID_OtapCmd_c (0x31)**：LIN主节点指示从节点开始/结束固件传输的命令ID\n+ **gID_OtapGetStatus_c**：LIN主节点获取从节点实时状态的状态查询ID\n+ **gID_OtapData_c**：LIN主节点向从节点传输实际固件数据的数据传输ID\n\n\n\n## 二、命令与状态枚举定义\n### 1. gID_OtapCmd_c命令枚举\n```c\ntypedef enum\n{\n    LIN_OTA_CMD_NONE = 0x00,  // 无命令\n    LIN_OTA_CMD_START,        // 开始传输命令\n    LIN_OTA_CMD_END,          // 结束传输命令\n    LIN_OTA_CMD_CONTINUE      // 继续传输命令\n} lin_ota_cmd_c;\n```\n\n### 2. gID_OtapGetStatus_c状态枚举\n```c\ntypedef enum\n{\n    LIN_OTA_STATUS_IDLE = 0x00,   // 空闲状态\n    LIN_OTA_STATUS_READY,         // 准备就绪状态\n    LIN_OTA_STATUS_RUNNING,       // 传输进行中状态\n    LIN_OTA_STATUS_FINISH,        // 传输完成状态\n    LIN_OTA_STATUS_ABORT          // 传输中止状态\n} lin_ota_status_t;\n```\n\n\n\n## 三、数据帧格式定义\n### 1. 各ID数据帧结构对比\n| ID类型 | 数据帧长度 | 数据帧详细定义 |\n| --- | --- | --- |\n| gID_OtapCmd_c | 8字节 | 传输状态码 + 扇区号(1B) + 固件版本号(2B) + 保留字段(4B) |\n| gID_OtapGetStatus_c | 8字节 | 传输状态码 + 扇区号(1B) + 扇区CRC校验码(2B) + 保留字段(4B) |\n| gID_OtapData_c | 8字节 | 全部为固件数据(实际传输时可通过多帧拼接实现更大数据量传输) |\n\n\n### 2. 字段详细说明\n+ **传输状态码**：使用`lin_ota_cmd_c`枚举值(仅gID_OtapCmd_c)或`lin_ota_status_t`枚举值(仅gID_OtapGetStatus_c)\n+ **扇区号**：指定数据存储的目标扇区(0-255)\n+ **固件版本号**：2字节大端序版本号(如0x0100表示1.00版本)\n+ **扇区CRC校验码**：2字节大端序CRC校验值，用于验证扇区数据完整性\n+ **保留字段**：保留未来扩展使用，当前应置为0\n\n\n\n## 四、OTA升级流程详解\n### 1. 初始化与开始传输阶段\n1. LIN主节点通过`gID_OtapCmd_c`发送开始传输命令：\n    - 状态码：`LIN_OTA_CMD_START`\n    - 扇区号：0\n    - 固件版本号：0x0100(大端序)\n    - 保留字段：0x00000000\n2. LIN从节点收到命令后进入等待状态，准备接收数据\n3. LIN主节点通过`gID_OtapGetStatus_c`查询状态：\n    - 期望从节点返回：`LIN_OTA_STATUS_READY`状态码\n\n\n\n### 2. 数据传输阶段(以扇区1为例)\n4. LIN主节点通过`gID_OtapData_c`发送1K字节固件数据\n5. LIN从节点存储数据并计算扇区CRC校验码\n6. LIN主节点再次查询状态：\n    - 期望从节点返回：`LIN_OTA_STATUS_FINISH`状态码\n    - 校验码：扇区1的CRC校验码(大端序)\n7. LIN主节点发送继续传输命令到扇区1：\n    - 状态码：`LIN_OTA_CMD_CONTINUE`\n    - 扇区号：1\n    - 固件版本号：0x0100\n    - 保留字段：0x00000000\n8. 重复步骤4-6直到当前扇区数据传输完成\n9. 主节点查询状态应收到：`LIN_OTA_STATUS_FINISH`状态码\n\n\n\n### 3. 传输结束阶段\n10. 所有扇区数据传输完成后，主节点发送结束命令：\n    - 状态码：`LIN_OTA_CMD_END`\n    - 扇区号：0\n    - 固件版本号：0x0100\n    - 保留字段：0x00000000\n11. LIN从节点收到结束命令后完成固件升级流程\n\n## 五、图表说明\n\n```mermaid\nsequenceDiagram\n    participant UI as 用户界面\n    participant Updater as OTA升级器\n    participant LIN as LIN设备\n    \n    UI->>Updater: startUpgrade(固件数据, 版本号)\n    activate Updater\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n    \n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        \n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        \n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n    \n    Updater->>LIN: 发送结束命令\n    deactivate Updater\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备\n```\n\n### OTA 固件升级流程说明：\n1. **初始化升级**  \n```mermaid\nsequenceDiagram\n    UI->>Updater: startUpgrade(固件数据, 版本号)\n```\n    - 用户界面调用 OTA 升级器，传入固件数据和版本号\n2. **LIN 设备准备**  \n```mermaid\nsequenceDiagram\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n```\n    - 打开 LIN 设备连接  \n    - 发送升级开始命令\n3. **扇区数据写入**  \n4. \n```mermaid\nsequenceDiagram\n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n```\n    - 循环处理每个扇区（共 128 帧/扇区）  \n    - 每帧发送 8 字节数据  \n    - 查询并确认扇区写入状态\n1. **升级完成**  \n```mermaid\nsequenceDiagram\n    Updater->>LIN: 发送结束命令\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备\n```\n    - 发送升级结束命令  \n    - 通知用户界面升级完成  \n    - 关闭 LIN 设备连接\n\n## 六、协议关键点说明\n1. **数据分片机制**：由于LIN帧数据域仅8字节，1K数据需通过128帧`gID_OtapData_c`传输\n2. **CRC校验机制**：从节点需对每个扇区数据计算CRC并通过`gID_OtapGetStatus_c`返回\n3. **版本一致性**：所有命令帧需包含相同的固件版本号以确保版本一致性\n4. **错误处理**：当收到`LIN_OTA_STATUS_ABORT`状态码时，主节点应重新发起传输流程\n\n### 关键参数说明：\n| 步骤 | 数据量 | 说明 |\n| --- | --- | --- |\n| 单帧数据 | 8 字节 | LIN 总线标准数据帧大小 |\n| 单扇区传输 | 128 帧 | 共 1KB (128×8=1024 字节) |\n| 状态确认 | 每扇区结束后 | 确保数据完整写入 |\n\n\n> **注意事项**：  \n>\n> 1. 每个扇区写入后必须等待状态确认  \n> 2. LIN 设备需实现\"准备就绪\"和\"完成状态\"协议  \n> 3. 异常处理需包含：超时重传、校验失败回滚等机制\n>\n\n{% externalLinkCard \"\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n{% heatMapCard %}\n\n{% tagRoulette \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\" \"🕹️\" %}","source":"_posts/LIN总线OTA升级协议定义.md","raw":"---\ntitle: LIN总线OTA升级协议定义\nmermaid: true\ndate: 2025-07-14\ntags: [嵌入式, C语言]\ncover: rgba(237, 138, 220, 0.47)\ncomments: true\ncategories: [嵌入式]\n---\n\n## 一、LIN ID枚举定义\n### 1. 基本ID枚举\n```c\ntypedef enum\n{\n    gID_OtapCmd_c = 0x31,\n    gID_OtapGetStatus_c,\n    gID_OtapData_c\n} lin_id_t;\n```\n\n### 2. ID功能说明\n+ **gID_OtapCmd_c (0x31)**：LIN主节点指示从节点开始/结束固件传输的命令ID\n+ **gID_OtapGetStatus_c**：LIN主节点获取从节点实时状态的状态查询ID\n+ **gID_OtapData_c**：LIN主节点向从节点传输实际固件数据的数据传输ID\n\n\n\n## 二、命令与状态枚举定义\n### 1. gID_OtapCmd_c命令枚举\n```c\ntypedef enum\n{\n    LIN_OTA_CMD_NONE = 0x00,  // 无命令\n    LIN_OTA_CMD_START,        // 开始传输命令\n    LIN_OTA_CMD_END,          // 结束传输命令\n    LIN_OTA_CMD_CONTINUE      // 继续传输命令\n} lin_ota_cmd_c;\n```\n\n### 2. gID_OtapGetStatus_c状态枚举\n```c\ntypedef enum\n{\n    LIN_OTA_STATUS_IDLE = 0x00,   // 空闲状态\n    LIN_OTA_STATUS_READY,         // 准备就绪状态\n    LIN_OTA_STATUS_RUNNING,       // 传输进行中状态\n    LIN_OTA_STATUS_FINISH,        // 传输完成状态\n    LIN_OTA_STATUS_ABORT          // 传输中止状态\n} lin_ota_status_t;\n```\n\n\n\n## 三、数据帧格式定义\n### 1. 各ID数据帧结构对比\n| ID类型 | 数据帧长度 | 数据帧详细定义 |\n| --- | --- | --- |\n| gID_OtapCmd_c | 8字节 | 传输状态码 + 扇区号(1B) + 固件版本号(2B) + 保留字段(4B) |\n| gID_OtapGetStatus_c | 8字节 | 传输状态码 + 扇区号(1B) + 扇区CRC校验码(2B) + 保留字段(4B) |\n| gID_OtapData_c | 8字节 | 全部为固件数据(实际传输时可通过多帧拼接实现更大数据量传输) |\n\n\n### 2. 字段详细说明\n+ **传输状态码**：使用`lin_ota_cmd_c`枚举值(仅gID_OtapCmd_c)或`lin_ota_status_t`枚举值(仅gID_OtapGetStatus_c)\n+ **扇区号**：指定数据存储的目标扇区(0-255)\n+ **固件版本号**：2字节大端序版本号(如0x0100表示1.00版本)\n+ **扇区CRC校验码**：2字节大端序CRC校验值，用于验证扇区数据完整性\n+ **保留字段**：保留未来扩展使用，当前应置为0\n\n\n\n## 四、OTA升级流程详解\n### 1. 初始化与开始传输阶段\n1. LIN主节点通过`gID_OtapCmd_c`发送开始传输命令：\n    - 状态码：`LIN_OTA_CMD_START`\n    - 扇区号：0\n    - 固件版本号：0x0100(大端序)\n    - 保留字段：0x00000000\n2. LIN从节点收到命令后进入等待状态，准备接收数据\n3. LIN主节点通过`gID_OtapGetStatus_c`查询状态：\n    - 期望从节点返回：`LIN_OTA_STATUS_READY`状态码\n\n\n\n### 2. 数据传输阶段(以扇区1为例)\n4. LIN主节点通过`gID_OtapData_c`发送1K字节固件数据\n5. LIN从节点存储数据并计算扇区CRC校验码\n6. LIN主节点再次查询状态：\n    - 期望从节点返回：`LIN_OTA_STATUS_FINISH`状态码\n    - 校验码：扇区1的CRC校验码(大端序)\n7. LIN主节点发送继续传输命令到扇区1：\n    - 状态码：`LIN_OTA_CMD_CONTINUE`\n    - 扇区号：1\n    - 固件版本号：0x0100\n    - 保留字段：0x00000000\n8. 重复步骤4-6直到当前扇区数据传输完成\n9. 主节点查询状态应收到：`LIN_OTA_STATUS_FINISH`状态码\n\n\n\n### 3. 传输结束阶段\n10. 所有扇区数据传输完成后，主节点发送结束命令：\n    - 状态码：`LIN_OTA_CMD_END`\n    - 扇区号：0\n    - 固件版本号：0x0100\n    - 保留字段：0x00000000\n11. LIN从节点收到结束命令后完成固件升级流程\n\n## 五、图表说明\n\n```mermaid\nsequenceDiagram\n    participant UI as 用户界面\n    participant Updater as OTA升级器\n    participant LIN as LIN设备\n    \n    UI->>Updater: startUpgrade(固件数据, 版本号)\n    activate Updater\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n    \n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        \n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        \n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n    \n    Updater->>LIN: 发送结束命令\n    deactivate Updater\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备\n```\n\n### OTA 固件升级流程说明：\n1. **初始化升级**  \n```mermaid\nsequenceDiagram\n    UI->>Updater: startUpgrade(固件数据, 版本号)\n```\n    - 用户界面调用 OTA 升级器，传入固件数据和版本号\n2. **LIN 设备准备**  \n```mermaid\nsequenceDiagram\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n```\n    - 打开 LIN 设备连接  \n    - 发送升级开始命令\n3. **扇区数据写入**  \n4. \n```mermaid\nsequenceDiagram\n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n```\n    - 循环处理每个扇区（共 128 帧/扇区）  \n    - 每帧发送 8 字节数据  \n    - 查询并确认扇区写入状态\n1. **升级完成**  \n```mermaid\nsequenceDiagram\n    Updater->>LIN: 发送结束命令\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备\n```\n    - 发送升级结束命令  \n    - 通知用户界面升级完成  \n    - 关闭 LIN 设备连接\n\n## 六、协议关键点说明\n1. **数据分片机制**：由于LIN帧数据域仅8字节，1K数据需通过128帧`gID_OtapData_c`传输\n2. **CRC校验机制**：从节点需对每个扇区数据计算CRC并通过`gID_OtapGetStatus_c`返回\n3. **版本一致性**：所有命令帧需包含相同的固件版本号以确保版本一致性\n4. **错误处理**：当收到`LIN_OTA_STATUS_ABORT`状态码时，主节点应重新发起传输流程\n\n### 关键参数说明：\n| 步骤 | 数据量 | 说明 |\n| --- | --- | --- |\n| 单帧数据 | 8 字节 | LIN 总线标准数据帧大小 |\n| 单扇区传输 | 128 帧 | 共 1KB (128×8=1024 字节) |\n| 状态确认 | 每扇区结束后 | 确保数据完整写入 |\n\n\n> **注意事项**：  \n>\n> 1. 每个扇区写入后必须等待状态确认  \n> 2. LIN 设备需实现\"准备就绪\"和\"完成状态\"协议  \n> 3. 异常处理需包含：超时重传、校验失败回滚等机制\n>\n\n{% externalLinkCard \"\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n{% heatMapCard %}\n\n{% tagRoulette \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\" \"🕹️\" %}","slug":"LIN总线OTA升级协议定义","published":1,"updated":"2025-07-16T06:37:44.053Z","layout":"post","photos":[],"_id":"cmd71t80q00093cw633rj683i","content":"<h2 id=\"一-lin-id枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#一-lin-id枚举定义\"></a> 一、LIN ID枚举定义</h2>\n<h3 id=\"1-基本id枚举\"><a class=\"markdownIt-Anchor\" href=\"#1-基本id枚举\"></a> 1. 基本ID枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    gID_OtapCmd_c = <span class=\"number\">0x31</span>,</span><br><span class=\"line\">    gID_OtapGetStatus_c,</span><br><span class=\"line\">    gID_OtapData_c</span><br><span class=\"line\">&#125; <span class=\"type\">lin_id_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-id功能说明\"><a class=\"markdownIt-Anchor\" href=\"#2-id功能说明\"></a> 2. ID功能说明</h3>\n<ul>\n<li><strong>gID_OtapCmd_c (0x31)</strong>：LIN主节点指示从节点开始/结束固件传输的命令ID</li>\n<li><strong>gID_OtapGetStatus_c</strong>：LIN主节点获取从节点实时状态的状态查询ID</li>\n<li><strong>gID_OtapData_c</strong>：LIN主节点向从节点传输实际固件数据的数据传输ID</li>\n</ul>\n<h2 id=\"二-命令与状态枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#二-命令与状态枚举定义\"></a> 二、命令与状态枚举定义</h2>\n<h3 id=\"1-gid_otapcmd_c命令枚举\"><a class=\"markdownIt-Anchor\" href=\"#1-gid_otapcmd_c命令枚举\"></a> 1. gID_OtapCmd_c命令枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_CMD_NONE = <span class=\"number\">0x00</span>,  <span class=\"comment\">// 无命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_START,        <span class=\"comment\">// 开始传输命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_END,          <span class=\"comment\">// 结束传输命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_CONTINUE      <span class=\"comment\">// 继续传输命令</span></span><br><span class=\"line\">&#125; lin_ota_cmd_c;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-gid_otapgetstatus_c状态枚举\"><a class=\"markdownIt-Anchor\" href=\"#2-gid_otapgetstatus_c状态枚举\"></a> 2. gID_OtapGetStatus_c状态枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_STATUS_IDLE = <span class=\"number\">0x00</span>,   <span class=\"comment\">// 空闲状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_READY,         <span class=\"comment\">// 准备就绪状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_RUNNING,       <span class=\"comment\">// 传输进行中状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_FINISH,        <span class=\"comment\">// 传输完成状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_ABORT          <span class=\"comment\">// 传输中止状态</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_ota_status_t</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-数据帧格式定义\"><a class=\"markdownIt-Anchor\" href=\"#三-数据帧格式定义\"></a> 三、数据帧格式定义</h2>\n<h3 id=\"1-各id数据帧结构对比\"><a class=\"markdownIt-Anchor\" href=\"#1-各id数据帧结构对比\"></a> 1. 各ID数据帧结构对比</h3>\n<table>\n<thead>\n<tr>\n<th>ID类型</th>\n<th>数据帧长度</th>\n<th>数据帧详细定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gID_OtapCmd_c</td>\n<td>8字节</td>\n<td>传输状态码 + 扇区号(1B) + 固件版本号(2B) + 保留字段(4B)</td>\n</tr>\n<tr>\n<td>gID_OtapGetStatus_c</td>\n<td>8字节</td>\n<td>传输状态码 + 扇区号(1B) + 扇区CRC校验码(2B) + 保留字段(4B)</td>\n</tr>\n<tr>\n<td>gID_OtapData_c</td>\n<td>8字节</td>\n<td>全部为固件数据(实际传输时可通过多帧拼接实现更大数据量传输)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-字段详细说明\"><a class=\"markdownIt-Anchor\" href=\"#2-字段详细说明\"></a> 2. 字段详细说明</h3>\n<ul>\n<li><strong>传输状态码</strong>：使用<code>lin_ota_cmd_c</code>枚举值(仅gID_OtapCmd_c)或<code>lin_ota_status_t</code>枚举值(仅gID_OtapGetStatus_c)</li>\n<li><strong>扇区号</strong>：指定数据存储的目标扇区(0-255)</li>\n<li><strong>固件版本号</strong>：2字节大端序版本号(如0x0100表示1.00版本)</li>\n<li><strong>扇区CRC校验码</strong>：2字节大端序CRC校验值，用于验证扇区数据完整性</li>\n<li><strong>保留字段</strong>：保留未来扩展使用，当前应置为0</li>\n</ul>\n<h2 id=\"四-ota升级流程详解\"><a class=\"markdownIt-Anchor\" href=\"#四-ota升级流程详解\"></a> 四、OTA升级流程详解</h2>\n<h3 id=\"1-初始化与开始传输阶段\"><a class=\"markdownIt-Anchor\" href=\"#1-初始化与开始传输阶段\"></a> 1. 初始化与开始传输阶段</h3>\n<ol>\n<li>LIN主节点通过<code>gID_OtapCmd_c</code>发送开始传输命令：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_START</code></li>\n<li>扇区号：0</li>\n<li>固件版本号：0x0100(大端序)</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>LIN从节点收到命令后进入等待状态，准备接收数据</li>\n<li>LIN主节点通过<code>gID_OtapGetStatus_c</code>查询状态：\n<ul>\n<li>期望从节点返回：<code>LIN_OTA_STATUS_READY</code>状态码</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2-数据传输阶段以扇区1为例\"><a class=\"markdownIt-Anchor\" href=\"#2-数据传输阶段以扇区1为例\"></a> 2. 数据传输阶段(以扇区1为例)</h3>\n<ol start=\"4\">\n<li>LIN主节点通过<code>gID_OtapData_c</code>发送1K字节固件数据</li>\n<li>LIN从节点存储数据并计算扇区CRC校验码</li>\n<li>LIN主节点再次查询状态：\n<ul>\n<li>期望从节点返回：<code>LIN_OTA_STATUS_FINISH</code>状态码</li>\n<li>校验码：扇区1的CRC校验码(大端序)</li>\n</ul>\n</li>\n<li>LIN主节点发送继续传输命令到扇区1：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_CONTINUE</code></li>\n<li>扇区号：1</li>\n<li>固件版本号：0x0100</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>重复步骤4-6直到当前扇区数据传输完成</li>\n<li>主节点查询状态应收到：<code>LIN_OTA_STATUS_FINISH</code>状态码</li>\n</ol>\n<h3 id=\"3-传输结束阶段\"><a class=\"markdownIt-Anchor\" href=\"#3-传输结束阶段\"></a> 3. 传输结束阶段</h3>\n<ol start=\"10\">\n<li>所有扇区数据传输完成后，主节点发送结束命令：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_END</code></li>\n<li>扇区号：0</li>\n<li>固件版本号：0x0100</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>LIN从节点收到结束命令后完成固件升级流程</li>\n</ol>\n<h2 id=\"五-图表说明\"><a class=\"markdownIt-Anchor\" href=\"#五-图表说明\"></a> 五、图表说明</h2>\n<pre class=\"mermaid\">sequenceDiagram\n    participant UI as 用户界面\n    participant Updater as OTA升级器\n    participant LIN as LIN设备\n    \n    UI->>Updater: startUpgrade(固件数据, 版本号)\n    activate Updater\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n    \n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        \n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        \n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n    \n    Updater->>LIN: 发送结束命令\n    deactivate Updater\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备</pre>\n<h3 id=\"ota-固件升级流程说明\"><a class=\"markdownIt-Anchor\" href=\"#ota-固件升级流程说明\"></a> OTA 固件升级流程说明：</h3>\n<ol>\n<li><strong>初始化升级</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    UI->>Updater: startUpgrade(固件数据, 版本号)</pre>\n<pre><code>- 用户界面调用 OTA 升级器，传入固件数据和版本号\n</code></pre>\n<ol start=\"2\">\n<li><strong>LIN 设备准备</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态</pre>\n<pre><code>- 打开 LIN 设备连接  \n- 发送升级开始命令\n</code></pre>\n<ol start=\"3\">\n<li><strong>扇区数据写入</strong></li>\n<li></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end</pre>\n<pre><code>- 循环处理每个扇区（共 128 帧/扇区）  \n- 每帧发送 8 字节数据  \n- 查询并确认扇区写入状态\n</code></pre>\n<ol>\n<li><strong>升级完成</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Updater->>LIN: 发送结束命令\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备</pre>\n<pre><code>- 发送升级结束命令  \n- 通知用户界面升级完成  \n- 关闭 LIN 设备连接\n</code></pre>\n<h2 id=\"六-协议关键点说明\"><a class=\"markdownIt-Anchor\" href=\"#六-协议关键点说明\"></a> 六、协议关键点说明</h2>\n<ol>\n<li><strong>数据分片机制</strong>：由于LIN帧数据域仅8字节，1K数据需通过128帧<code>gID_OtapData_c</code>传输</li>\n<li><strong>CRC校验机制</strong>：从节点需对每个扇区数据计算CRC并通过<code>gID_OtapGetStatus_c</code>返回</li>\n<li><strong>版本一致性</strong>：所有命令帧需包含相同的固件版本号以确保版本一致性</li>\n<li><strong>错误处理</strong>：当收到<code>LIN_OTA_STATUS_ABORT</code>状态码时，主节点应重新发起传输流程</li>\n</ol>\n<h3 id=\"关键参数说明\"><a class=\"markdownIt-Anchor\" href=\"#关键参数说明\"></a> 关键参数说明：</h3>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>数据量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单帧数据</td>\n<td>8 字节</td>\n<td>LIN 总线标准数据帧大小</td>\n</tr>\n<tr>\n<td>单扇区传输</td>\n<td>128 帧</td>\n<td>共 1KB (128×8=1024 字节)</td>\n</tr>\n<tr>\n<td>状态确认</td>\n<td>每扇区结束后</td>\n<td>确保数据完整写入</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注意事项</strong>：</p>\n<ol>\n<li>每个扇区写入后必须等待状态确认</li>\n<li>LIN 设备需实现&quot;准备就绪&quot;和&quot;完成状态&quot;协议</li>\n<li>异常处理需包含：超时重传、校验失败回滚等机制</li>\n</ol>\n</blockquote>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" title=\"https://www.f123.club/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      \n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">https://www.f123.club/</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🕹️</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  ","excerpt":"","more":"<h2 id=\"一-lin-id枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#一-lin-id枚举定义\"></a> 一、LIN ID枚举定义</h2>\n<h3 id=\"1-基本id枚举\"><a class=\"markdownIt-Anchor\" href=\"#1-基本id枚举\"></a> 1. 基本ID枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    gID_OtapCmd_c = <span class=\"number\">0x31</span>,</span><br><span class=\"line\">    gID_OtapGetStatus_c,</span><br><span class=\"line\">    gID_OtapData_c</span><br><span class=\"line\">&#125; <span class=\"type\">lin_id_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-id功能说明\"><a class=\"markdownIt-Anchor\" href=\"#2-id功能说明\"></a> 2. ID功能说明</h3>\n<ul>\n<li><strong>gID_OtapCmd_c (0x31)</strong>：LIN主节点指示从节点开始/结束固件传输的命令ID</li>\n<li><strong>gID_OtapGetStatus_c</strong>：LIN主节点获取从节点实时状态的状态查询ID</li>\n<li><strong>gID_OtapData_c</strong>：LIN主节点向从节点传输实际固件数据的数据传输ID</li>\n</ul>\n<h2 id=\"二-命令与状态枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#二-命令与状态枚举定义\"></a> 二、命令与状态枚举定义</h2>\n<h3 id=\"1-gid_otapcmd_c命令枚举\"><a class=\"markdownIt-Anchor\" href=\"#1-gid_otapcmd_c命令枚举\"></a> 1. gID_OtapCmd_c命令枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_CMD_NONE = <span class=\"number\">0x00</span>,  <span class=\"comment\">// 无命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_START,        <span class=\"comment\">// 开始传输命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_END,          <span class=\"comment\">// 结束传输命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_CONTINUE      <span class=\"comment\">// 继续传输命令</span></span><br><span class=\"line\">&#125; lin_ota_cmd_c;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-gid_otapgetstatus_c状态枚举\"><a class=\"markdownIt-Anchor\" href=\"#2-gid_otapgetstatus_c状态枚举\"></a> 2. gID_OtapGetStatus_c状态枚举</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_STATUS_IDLE = <span class=\"number\">0x00</span>,   <span class=\"comment\">// 空闲状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_READY,         <span class=\"comment\">// 准备就绪状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_RUNNING,       <span class=\"comment\">// 传输进行中状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_FINISH,        <span class=\"comment\">// 传输完成状态</span></span><br><span class=\"line\">    LIN_OTA_STATUS_ABORT          <span class=\"comment\">// 传输中止状态</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_ota_status_t</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-数据帧格式定义\"><a class=\"markdownIt-Anchor\" href=\"#三-数据帧格式定义\"></a> 三、数据帧格式定义</h2>\n<h3 id=\"1-各id数据帧结构对比\"><a class=\"markdownIt-Anchor\" href=\"#1-各id数据帧结构对比\"></a> 1. 各ID数据帧结构对比</h3>\n<table>\n<thead>\n<tr>\n<th>ID类型</th>\n<th>数据帧长度</th>\n<th>数据帧详细定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gID_OtapCmd_c</td>\n<td>8字节</td>\n<td>传输状态码 + 扇区号(1B) + 固件版本号(2B) + 保留字段(4B)</td>\n</tr>\n<tr>\n<td>gID_OtapGetStatus_c</td>\n<td>8字节</td>\n<td>传输状态码 + 扇区号(1B) + 扇区CRC校验码(2B) + 保留字段(4B)</td>\n</tr>\n<tr>\n<td>gID_OtapData_c</td>\n<td>8字节</td>\n<td>全部为固件数据(实际传输时可通过多帧拼接实现更大数据量传输)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-字段详细说明\"><a class=\"markdownIt-Anchor\" href=\"#2-字段详细说明\"></a> 2. 字段详细说明</h3>\n<ul>\n<li><strong>传输状态码</strong>：使用<code>lin_ota_cmd_c</code>枚举值(仅gID_OtapCmd_c)或<code>lin_ota_status_t</code>枚举值(仅gID_OtapGetStatus_c)</li>\n<li><strong>扇区号</strong>：指定数据存储的目标扇区(0-255)</li>\n<li><strong>固件版本号</strong>：2字节大端序版本号(如0x0100表示1.00版本)</li>\n<li><strong>扇区CRC校验码</strong>：2字节大端序CRC校验值，用于验证扇区数据完整性</li>\n<li><strong>保留字段</strong>：保留未来扩展使用，当前应置为0</li>\n</ul>\n<h2 id=\"四-ota升级流程详解\"><a class=\"markdownIt-Anchor\" href=\"#四-ota升级流程详解\"></a> 四、OTA升级流程详解</h2>\n<h3 id=\"1-初始化与开始传输阶段\"><a class=\"markdownIt-Anchor\" href=\"#1-初始化与开始传输阶段\"></a> 1. 初始化与开始传输阶段</h3>\n<ol>\n<li>LIN主节点通过<code>gID_OtapCmd_c</code>发送开始传输命令：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_START</code></li>\n<li>扇区号：0</li>\n<li>固件版本号：0x0100(大端序)</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>LIN从节点收到命令后进入等待状态，准备接收数据</li>\n<li>LIN主节点通过<code>gID_OtapGetStatus_c</code>查询状态：\n<ul>\n<li>期望从节点返回：<code>LIN_OTA_STATUS_READY</code>状态码</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2-数据传输阶段以扇区1为例\"><a class=\"markdownIt-Anchor\" href=\"#2-数据传输阶段以扇区1为例\"></a> 2. 数据传输阶段(以扇区1为例)</h3>\n<ol start=\"4\">\n<li>LIN主节点通过<code>gID_OtapData_c</code>发送1K字节固件数据</li>\n<li>LIN从节点存储数据并计算扇区CRC校验码</li>\n<li>LIN主节点再次查询状态：\n<ul>\n<li>期望从节点返回：<code>LIN_OTA_STATUS_FINISH</code>状态码</li>\n<li>校验码：扇区1的CRC校验码(大端序)</li>\n</ul>\n</li>\n<li>LIN主节点发送继续传输命令到扇区1：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_CONTINUE</code></li>\n<li>扇区号：1</li>\n<li>固件版本号：0x0100</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>重复步骤4-6直到当前扇区数据传输完成</li>\n<li>主节点查询状态应收到：<code>LIN_OTA_STATUS_FINISH</code>状态码</li>\n</ol>\n<h3 id=\"3-传输结束阶段\"><a class=\"markdownIt-Anchor\" href=\"#3-传输结束阶段\"></a> 3. 传输结束阶段</h3>\n<ol start=\"10\">\n<li>所有扇区数据传输完成后，主节点发送结束命令：\n<ul>\n<li>状态码：<code>LIN_OTA_CMD_END</code></li>\n<li>扇区号：0</li>\n<li>固件版本号：0x0100</li>\n<li>保留字段：0x00000000</li>\n</ul>\n</li>\n<li>LIN从节点收到结束命令后完成固件升级流程</li>\n</ol>\n<h2 id=\"五-图表说明\"><a class=\"markdownIt-Anchor\" href=\"#五-图表说明\"></a> 五、图表说明</h2>\n<pre class=\"mermaid\">sequenceDiagram\n    participant UI as 用户界面\n    participant Updater as OTA升级器\n    participant LIN as LIN设备\n    \n    UI->>Updater: startUpgrade(固件数据, 版本号)\n    activate Updater\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态\n    \n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        \n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        \n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end\n    \n    Updater->>LIN: 发送结束命令\n    deactivate Updater\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备</pre>\n<h3 id=\"ota-固件升级流程说明\"><a class=\"markdownIt-Anchor\" href=\"#ota-固件升级流程说明\"></a> OTA 固件升级流程说明：</h3>\n<ol>\n<li><strong>初始化升级</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    UI->>Updater: startUpgrade(固件数据, 版本号)</pre>\n<pre><code>- 用户界面调用 OTA 升级器，传入固件数据和版本号\n</code></pre>\n<ol start=\"2\">\n<li><strong>LIN 设备准备</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Updater->>LIN: 打开设备\n    Updater->>LIN: 发送开始命令\n    LIN-->>Updater: 准备就绪状态</pre>\n<pre><code>- 打开 LIN 设备连接  \n- 发送升级开始命令\n</code></pre>\n<ol start=\"3\">\n<li><strong>扇区数据写入</strong></li>\n<li></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    loop 每个扇区\n        Updater->>LIN: 发送继续命令(扇区号)\n        loop 128次\n            Updater->>LIN: 发送数据帧(8字节)\n        end\n        Updater->>LIN: 查询扇区状态\n        LIN-->>Updater: 返回完成状态\n    end</pre>\n<pre><code>- 循环处理每个扇区（共 128 帧/扇区）  \n- 每帧发送 8 字节数据  \n- 查询并确认扇区写入状态\n</code></pre>\n<ol>\n<li><strong>升级完成</strong></li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Updater->>LIN: 发送结束命令\n    Updater->>UI: 发送完成信号\n    UI->>LIN: 关闭设备</pre>\n<pre><code>- 发送升级结束命令  \n- 通知用户界面升级完成  \n- 关闭 LIN 设备连接\n</code></pre>\n<h2 id=\"六-协议关键点说明\"><a class=\"markdownIt-Anchor\" href=\"#六-协议关键点说明\"></a> 六、协议关键点说明</h2>\n<ol>\n<li><strong>数据分片机制</strong>：由于LIN帧数据域仅8字节，1K数据需通过128帧<code>gID_OtapData_c</code>传输</li>\n<li><strong>CRC校验机制</strong>：从节点需对每个扇区数据计算CRC并通过<code>gID_OtapGetStatus_c</code>返回</li>\n<li><strong>版本一致性</strong>：所有命令帧需包含相同的固件版本号以确保版本一致性</li>\n<li><strong>错误处理</strong>：当收到<code>LIN_OTA_STATUS_ABORT</code>状态码时，主节点应重新发起传输流程</li>\n</ol>\n<h3 id=\"关键参数说明\"><a class=\"markdownIt-Anchor\" href=\"#关键参数说明\"></a> 关键参数说明：</h3>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>数据量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单帧数据</td>\n<td>8 字节</td>\n<td>LIN 总线标准数据帧大小</td>\n</tr>\n<tr>\n<td>单扇区传输</td>\n<td>128 帧</td>\n<td>共 1KB (128×8=1024 字节)</td>\n</tr>\n<tr>\n<td>状态确认</td>\n<td>每扇区结束后</td>\n<td>确保数据完整写入</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注意事项</strong>：</p>\n<ol>\n<li>每个扇区写入后必须等待状态确认</li>\n<li>LIN 设备需实现&quot;准备就绪&quot;和&quot;完成状态&quot;协议</li>\n<li>异常处理需包含：超时重传、校验失败回滚等机制</li>\n</ol>\n</blockquote>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" title=\"https://www.f123.club/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      \n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">https://www.f123.club/</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🕹️</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  "},{"title":"QML Fluid Element 动态元素","mermaid":true,"date":"2024-03-21T16:00:00.000Z","comments":1,"_content":"\n**<font style=\"color:rgb(51, 51, 51);\">这章的源代码能够在</font>**[assetts folder](http://qmlbook.org/assets)**<font style=\"color:rgb(51, 51, 51);\">找到。</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">这一章介绍如何控制属性值的变化，通过动画的方式在一段时间内来改变属性值。这项技术是建立一个现代化的平滑界面的基础，通过使用状态和过渡来扩展你的用户界面。每一种状态定义了属性的改变，与动画联系起来的状态改变称作过渡。</font>\n\n# <font style=\"color:rgb(51, 51, 51);\">动画（Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">动画被用于属性的改变。一个动画定义了属性值改变的曲线，将一个属性值变化从一个值过渡到另一个值。动画是由一连串的目标属性活动定义的，平缓的曲线算法能够引发一个定义时间内属性的持续变化。所有在QtQuick中的动画都由同一个计时器来控制，因此它们始终都保持同步，这也提高了动画的性能和显示效果。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">注意</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\">动画控制了属性的改变，也就是值的插入。这是一个基本的概念，QML是基于元素，属性与脚本的。每一个元素都提供了许多的属性，每一个属性都在等待使用动画。在这本书中你将会看到这是一个壮阔的场景，你会发现你自己在看一些动画时欣赏它们的美丽并且肯定自己的创造性想法。然后请记住：动画控制了属性的改变，每个元素都有大量的属性供你任意使用。</font>**\n\n```python\n// animation.qml\n\nimport QtQuick 2.5\n\nImage {\n    id: root\n    source: \"assets/background.png\"\n\n    property int padding: 40\n    property int duration: 4000\n    property bool running: false\n\n    Image {\n        id: box\n        x: root.padding;\n        y: (root.height-height)/2\n        source: \"assets/box_green.png\"\n\n        NumberAnimation on x {\n            to: root.width - box.width - root.padding\n            duration: root.duration\n            running: root.running\n        }\n        RotationAnimation on rotation {\n            to: 360\n            duration: root.duration\n            running: root.running\n        }\n    }\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: root.running = true\n    }\n\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">上面的示例显示了应用于 and 属性的简单动画。每个动画的持续时间为 4000 毫秒 （msec），并永远循环。x 上的动画将 x 坐标从对象逐渐移动到 240px。旋转动画从当前角度运行到 360 度。这两个动画并行运行，并在加载 UI 后鼠标点击后立即启动。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">现在你可以通过to属性和duration属性来实现动画效果。或者你可以在opacity或者scale上添加动画作为例子，集成这两个参数，你可以实现火箭逐渐消失在太空中，试试吧!</font>\n\n```python\n            PropertyAnimation on opacity {\n                to: 0\n                duration: root.duration\n                running: root.running\n            }\n```\n\n### <font style=\"color:rgb(51, 51, 51);\">动画元素（Animation Elements）</font>\n<font style=\"color:rgb(51, 51, 51);\">有几种类型的动画，每一种都在特定情况下都有最佳的效果，下面列出了一些常用的动画：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PropertyAnimation（属性动画）- 使用属性值改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">NumberAnimation（数字动画）- 使用数字改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ColorAnimation（颜色动画）- 使用颜色改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">RotationAnimation（旋转动画）- 使用旋转改变播放的动画</font>\n\n<font style=\"color:rgb(51, 51, 51);\">除了上面这些基本和通常使用的动画元素，QtQuick还提供了一切特殊场景下使用的动画：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PauseAnimation（停止动画）- 运行暂停一个动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SequentialAnimation（顺序动画）- 允许动画有序播放</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ParallelAnimation（并行动画）- 允许动画同时播放</font>\n+ <font style=\"color:rgb(51, 51, 51);\">AnchorAnimation（锚定动画）- 使用锚定改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ParentAnimation（父元素动画）- 使用父对象改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SmotthedAnimation（平滑动画）- 跟踪一个平滑值播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SpringAnimation（弹簧动画）- 跟踪一个弹簧变换的值播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">PathAnimation（路径动画）- 跟踪一个元素对象的路径的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">Vector3dAnimation（3D容器动画）- 使用QVector3d值改变播放的动画</font>\n\n<font style=\"color:rgb(51, 51, 51);\">我们将在后面学习怎样创建一连串的动画。当使用更加复杂的动画时，我们可能需要在播放一个动画时中改变一个属性或者运行一个脚本。对于这个问题，QtQuick提供了一个动作元素：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PropertyAction（属性动作）- 在播放动画时改变属性</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ScriptAction（脚本动作）- 在播放动画时运行脚本</font>\n\n<font style=\"color:rgb(51, 51, 51);\">在这一章中我们将会使用一些小的例子来讨论大多数类型的动画。</font>\n\n### <font style=\"color:rgb(51, 51, 51);\">应用动画（Applying Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">动画可以通过以下几种方式来应用：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">属性动画 - 在元素完整加载后自动运行</font>\n+ <font style=\"color:rgb(51, 51, 51);\">属性动作 - 当属性值改变时自动运行</font>\n+ <font style=\"color:rgb(51, 51, 51);\">独立运行动画 - 使用start()函数明确指定运行或者running属性被设置为true（比如通过属性绑定）</font>\n\n<font style=\"color:rgb(51, 51, 51);\">后面我们会谈论如何在状态变换时播放动画。</font>\n\n```plain\nItem {\n    id: root\n    width: container.childrenRect.width\n    height: container.childrenRect.height\n    property alias text: label.text\n    property alias source: image.source\n    signal clicked\n\n    Column {\n        id: container\n        Image {\n            id: image\n        }\n        Text {\n            id: label\n            width: image.width\n            horizontalAlignment: Text.AlignHCenter\n            wrapMode: Text.WordWrap\n            color: \"#ececec\"\n        }\n    }\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: root.clicked()\n    }\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">为了给图片下面的元素定位，我们使用了Column（列）定位器，并且使用基于列的子矩形（childRect）属性来计算它的宽度和高度（width and height）。我们导出了文本（text）和图形源（source）属性，一个点击信号（clicked signal）。我们使用文本元素的wrapMode属性来设置文本与图像一样宽并且可以自动换行。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">对象升序。</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">这三个对象都位于相同的 y 位置 （）。他们需要全部前往.他们每个人都使用不同的方法，具有不同的副作用和功能。</font><font style=\"color:rgb(199, 37, 78);\">y=200y=40</font>\n\n```python\n ClickableImageV2 {\n        id: greenBox\n        x: 40; y: root.height-height\n        source: \"assets/box_green.png\"\n        text: \"animation on property\"\n        NumberAnimation on y {\n            to: 40; duration: 4000\n        }\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第一个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">第一个火箭使用了Animation on 属性变化的策略来完成。动画会在加载完成后立即播放。点击火箭可以重置它回到开始的位置。在动画播放时重置第一个火箭不会有任何影响。在动画开始前的几分之一秒设置一个新的y轴坐标让人感觉挺不安全的，应当避免这样的属性值竞争的变化。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n```python\n    ClickableImageV2 {\n        id: blueBox\n        x: (root.width-width)/2; y: root.height-height\n        source: \"assets/box_blue.png\"\n        text: \"behavior on property\"\n        Behavior on y {\n            NumberAnimation { duration: 4000 }\n        }\n\n        onClicked: y = 40\n        // random y on each click\n//        onClicked: y = 40+Math.random()*(205-40)\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第二个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\"></font><font style=\"color:rgb(51, 51, 51);\">第二个火箭使用了behavior on 属性行为策略的动画。这个行为告诉属性值每时每刻都在变化，通过动画的方式来改变这个值。可以使用行为元素的enabled : false来设置行为失效。当你点击这个火箭时它将会开始运行（y轴坐标逐渐移至40）。然后其它的点击对于位置的改变没有任何的影响。你可以试着使用一个随机值（例如 40+(Math.random()*(205-40)）来设置y轴坐标。你可以发现动画始终会将移动到新位置的时间匹配在4秒内完成。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n```python\n ClickableImageV2 {\n        id: redBox\n        x: root.width-width-40; y: root.height-height\n        source: \"assets/box_red.png\"\n        onClicked: anim.start()\n//        onClicked: anim.restart()\n\n        text: \"standalone animation\"\n\n        NumberAnimation {\n            id: anim\n            target: redBox\n            properties: \"y\"\n            to: 40\n            duration: 4000\n        }\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第三个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">第三个火箭使用standalone animation独立动画策略。这个动画由一个私有的元素定义并且可以写在文档的任何地方。点击火箭调用动画函数start()来启动动画。每一个动画都有start()，stop()，resume()，restart()函数。这个动画自身可以比其他类型的动画更早的获取到更多的相关信息。我们只需要定义目标和目标元素的属性需要怎样改变的一个动画。我们定义一个to属性的值，在这个例子中我们也定义了一个from属性的值允许动画可以重复运行。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">另一个启动/停止一个动画的方法是绑定一个动画的running属性。当需要用户输入控制属性时这种方法非常有用：</font>**\n\n```python\n NumberAnimation {\n        ...\n        // animation runs when mouse is pressed\n        running: area.pressed\n    }\n    MouseArea {\n        id: area\n    }\n```\n\n## <font style=\"color:rgb(51, 51, 51);\">缓冲曲线（Easing Curves）</font>\n<font style=\"color:rgb(51, 51, 51);\">属性值的改变能够通过一个动画来控制，缓冲曲线属性影响了一个属性值改变的插值算法。我们现在已经定义的动画都使用了一种线性的插值算法，因为一个动画的默认缓冲类型是Easing.Linear。在一个小场景下的x轴与y轴坐标改变可以得到最好的视觉效果。一个线性插值算法将会在动画开始时使用from的值到动画结束时使用的to值绘制一条直线，所以缓冲类型定义了曲线的变化情况。精心为一个移动的对象挑选一个合适的缓冲类型将会使界面更加自然，例如一个页面的滑出，最初使用缓慢的速度滑出，然后在最后滑出时使用高速滑出，类似翻书一样的效果。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709691245443-36428021-3abc-43aa-b0dc-6641f71a156c.png)\n\n**<font style=\"color:rgb(51, 51, 51);\">注意：不要过度的使用动画。用户界面动画的设计应该尽量小心，动画是让界面更加生动而不是充满整个界面。眼睛对于移动的东西非常敏感，很容易干扰用户的使用。</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\"></font>**\n\n<font style=\"color:rgb(51, 51, 51);\">在下面的例子中我们将会使用不同的缓冲曲线，每一种缓冲曲线都都使用了一个可点击图片来展示，点击将会在动画中设置一个新的缓冲类型并且使用这种曲线重新启动动画。</font>\n\n```python\n// EasingCurves.qml\n\nimport QtQuick 2.5\nimport QtQuick.Layouts 1.2\n\nRectangle {\n    id: root\n    width: childrenRect.width\n    height: childrenRect.height\n\n    color: '#4a4a4a'\n    gradient: Gradient {\n        GradientStop { position: 0.0; color: root.color }\n        GradientStop { position: 1.0; color: Qt.lighter(root.color, 1.2) }\n    }\n\n    ColumnLayout {\n\n        Grid {\n            spacing: 8\n            columns: 5\n            EasingType {\n                easingType: Easing.Linear\n                title: 'Linear'\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InExpo\n                title: \"InExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.OutExpo\n                title: \"OutExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutExpo\n                title: \"InOutExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutCubic\n                title: \"InOutCubic\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.SineCurve\n                title: \"SineCurve\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutCirc\n                title: \"InOutCirc\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutElastic\n                title: \"InOutElastic\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutBack\n                title: \"InOutBack\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutBounce\n                title: \"InOutBounce\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n        }\n        Item {\n            height: 80\n            Layout.fillWidth: true\n            Box {\n                id: box\n                property bool toggle\n                x: toggle?20:root.width-width-20\n                anchors.verticalCenter: parent.verticalCenter\n                gradient: Gradient {\n                    GradientStop { position: 0.0; color: \"#2ed5fa\" }\n                    GradientStop { position: 1.0; color: \"#2467ec\" }\n                }\n                Behavior on x {\n                    NumberAnimation {\n                        id: animation\n                        duration: 500\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n## <font style=\"color:rgb(51, 51, 51);\">动画分组（Grouped Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">通常使用的动画比一个属性的动画更加复杂。例如你想同时运行几个动画并把他们连接起来，或者在一个一个的运行，或者在两个动画之间执行一个脚本。动画分组提供了很好的帮助，作为命名建议可以叫做一组动画。有两种方法来分组：平行与连续。你可以使用SequentialAnimation（连续动画）和ParallelAnimation（平行动画）来实现它们，它们作为动画的容器来包含其它的动画元素。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693400013-21b78616-019c-43cc-a4bf-b678236c0aca.png)\n\n```python\n    BrightSquare {\n        id: root\n        width: 300\n        height: 200\n        property int duration: 3000\n        ClickableImageV3 {\n            id: rocket\n            x: 20; y: 120\n            source: \"images/rocket2.png\"\n            onClicked: anim.restart()\n        }\n        ParallelAnimation {\n            id: anim\n            NumberAnimation {\n                target: rocket\n                properties: \"y\"\n                to: 20\n                duration: root.duration\n                easing.type:Easing.OutExpo\n            }\n            NumberAnimation {\n                target: rocket\n                properties: \"x\"\n                to: 160\n                duration: root.duration\n            }\n        }\n    }\n\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">一个连续的动画将会一个一个的运行子动画。</font>\n\n```python\nimport QtQuick 2.0\nBrightSquare {\n    id: root\n    width: 300\n    height: 200\n    property int duration: 3000\n    ClickableImageV3 {\n        id: rocket\n        x: 20; y: 120\n        source: \"assets/rocket2.png\"\n        onClicked: anim.restart()\n    }\n    SequentialAnimation {\n        id: anim\n        NumberAnimation {\n            target: rocket\n            properties: \"y\"\n            to: 20\n            // 60% of time to travel up\n            duration: root.duration*0.6\n        }\n        NumberAnimation {\n            target: rocket\n            properties: \"x\"\n            to: 160\n            // 40% of time to travel sideways\n            duration: root.duration*0.4\n        }\n    }\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">分组动画也可以被嵌套，例如一个连续动画可以拥有两个平行动画作为子动画。我们来看看这个足球的例子。这个动画描述了一个从左向右扔一个球的行为：</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693973021-accb3bf7-e016-4374-b801-b4a3e1475320.png)\n\n<font style=\"color:rgb(51, 51, 51);\">要弄明白这个动画我们需要剖析这个目标的运动过程。我们需要记住这个动画是通过属性变化来实现的动画，下面是不同部分的转换：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">从左向右的x坐标转换（X1）。</font>\n+ <font style=\"color:rgb(51, 51, 51);\">从下往上的y坐标转换（Y1）然后跟着一个从上往下的Y坐标转换（Y2）。</font>\n+ <font style=\"color:rgb(51, 51, 51);\">整个动画过程中360度旋转。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">这个动画将会花掉3秒钟的时间。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">我们使用一个空的基本元素对象（Item）作为根元素，它的宽度为480，高度为300。</font>\n\n```python\nimport QtQuick 1.1\nItem {\n    id: root\n    width: 480\n    height: 300\n    property int duration: 3000\n    ...\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">我们定义动画的总持续时间作为参考，以便更好的同步各部分的动画。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">下一步我们需需要添加一个背景，在我们这个例子中有两个矩形框分别使用了绿色渐变和蓝色渐变填充。</font>\n\n```python\n Rectangle {\n        id: sky\n        width: parent.width\n        height: 200\n        gradient: Gradient {\n            GradientStop { position: 0.0; color: \"#0080FF\" }\n            GradientStop { position: 1.0; color: \"#66CCFF\" }\n        }\n    }\n    Rectangle {\n        id: ground\n        anchors.top: sky.bottom\n        anchors.bottom: root.bottom\n        width: parent.width\n        gradient: Gradient {\n            GradientStop { position: 0.0; color: \"#00FF00\" }\n            GradientStop { position: 1.0; color: \"#00803F\" }\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">上面部分的蓝色区域高度为200像素，下面部分的区域使用上面的蓝色区域的底作为锚定的顶，使用根元素的底作为底。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">让我们将足球加入到屏幕上，足球是一个图片，位于路径“images/soccer_ball.png”。首先我们需要将它放置在左下角接近边界处。</font>\n\n```python\n Image {\n        id: ball\n        x: 20; y: 240\n        source: \"assets/soccer_ball.png\"\n        MouseArea {\n            anchors.fill: parent\n            onClicked: {\n                ball.x = 20; ball.y = 240\n                anim.restart()\n            }\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">图片与鼠标区域连接，点击球将会重置球的状态，并且动画重新开始。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">首先使用一个连续的动画来播放两次的y轴变换和一次x轴。</font>\n\n```python\nParallelAnimation{\n               id: anim\n               SequentialAnimation {\n\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 20\n                           duration: root.duration * 0.6\n                           easing.type:Easing.OutQuad\n                       }\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 240\n                           duration: root.duration * 0.4\n                           easing.type:Easing.InCubic\n                       }\n                   }\n               NumberAnimation { // X1 animation\n                          target: ball\n                          properties: \"x\"\n                          to: 400\n                          duration: root.duration\n                      }\n           }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">在动画总时间的40%的时间里完成上升部分，在动画总时间的60%的时间里完成下降部分，一个动画完成后播放下一个动画。目前还没有使用任何缓冲曲线。缓冲曲线将在后面使用easing curves来添加，现在我们只关心如何使用动画来完成过渡。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">现在我们需要添加x轴坐标转换。x轴坐标转换需要与y轴坐标转换同时进行，所以我们需要将y轴坐标转换的连续动画和x轴坐标转换一起压缩进一个平行动画中。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">最后我们想要旋转这个球，我们需要向平行动画中添加一个新的动画，我们选择RotationAnimation来实现旋转。</font>\n\n```python\n ParallelAnimation {\n        id: anim\n        SequentialAnimation {\n            // ... our Y1, Y2 animation\n        }\n        NumberAnimation { // X1 animation\n            // X1 animation\n        }\n        RotationAnimation {\n            target: ball\n            properties: \"rotation\"\n            to: 720\n            duration: root.duration\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">我们已经完成了整个动画链表，然后我们需要给动画提供一个正确的缓冲曲线来描述一个移动的球。对于Y1动画我们使用Easing.OutQuad缓冲曲线，它看起来更像是一个圆周运动。Y2使用了Easing.InCubic缓冲曲线，因为在最后球会发生反弹。（试试使用Easing.InBounce，你会发现反弹将会立刻开始。）。X1和ROT1动画都使用线性曲线。</font>\n\n```python\n   Item {\n        id: root\n        width: 480\n        height: 300\n        property int duration: 3000\n        Rectangle {\n               id: sky\n               width: parent.width\n               height: 200\n               gradient: Gradient {\n                   GradientStop { position: 0.0; color: \"#0080FF\" }\n                   GradientStop { position: 1.0; color: \"#66CCFF\" }\n               }\n           }\n           Rectangle {\n               id: ground\n               anchors.top: sky.bottom\n               anchors.bottom: root.bottom\n               width: parent.width\n               gradient: Gradient {\n                   GradientStop { position: 0.0; color: \"#00FF00\" }\n                   GradientStop { position: 1.0; color: \"#00803F\" }\n               }\n           }\n           Image {\n                  id: ball\n                  x: 20; y: 240\n                  source: \"images/soccer_ball.png\"\n                  MouseArea {\n                      anchors.fill: parent\n                      onClicked: {\n                          ball.x = 20; ball.y = 240 ;ball.rotation = 0\n                          anim.restart()\n                      }\n                  }\n              }\n           ParallelAnimation{\n               id: anim\n               SequentialAnimation {\n\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 20\n                           duration: root.duration * 0.6\n                           easing.type:Easing.OutQuad\n                       }\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 240\n                           duration: root.duration * 0.4\n                           easing.type:Easing.InCubic\n                       }\n                   }\n               NumberAnimation { // X1 animation\n                          target: ball\n                          properties: \"x\"\n                          to: 400\n                          duration: root.duration\n                      }\n               RotationAnimation {\n                           target: ball\n                           properties: \"rotation\"\n                           to: 720\n                           duration: root.duration\n                       }\n           }\n    }\n\n```\n\n# <font style=\"color:rgb(51, 51, 51);\">状态与过渡（States and Transitions）</font>\n<font style=\"color:rgb(51, 51, 51);\">通常我们将用户界面描述为一种状态。一个状态定义了一组属性的改变，并且会在一定的条件下被触发。另外在这些状态转化的过程中可以有一个过渡，定义了这些属性的动画或者一些附加的动作。当进入一个新的状态时，动作也可以被执行。</font>\n\n## <font style=\"color:rgb(51, 51, 51);\">状态（States）</font>\n<font style=\"color:rgb(51, 51, 51);\">在QML中，使用State元素来定义状态，需要与基础元素对象（Item）的states序列属性连接。状态通过它的状态名来鉴别，由组成它的一系列简单的属性来改变元素。默认的状态在初始化元素属性时定义，并命名为“”（一个空的字符串）。</font>\n\n```python\n    Item {\n        id: root\n        states: [\n            State {\n                name: \"go\"\n                PropertyChanges { ... }\n            },\n            State {\n                name: \"stop\"\n                PropertyChanges { ... }\n            }\n        ]\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">状态的改变由分配一个元素新的状态属性名来完成。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">注意</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\">另一种切换属性的方法是使用状态元素的when属性。when属性能够被设置为一个表达式的结果，当结果为true时，状态被使用</font>**<font style=\"color:rgb(51, 51, 51);\">。</font>\n\n```python\n Item {\n        id: root\n        states: [\n            ...\n        ]\n        Button {\n            id: goButton\n            ...\n            onClicked: root.state = \"go\"\n        }\n    }\n```\n\n![]()\n\n<font style=\"color:rgb(51, 51, 51);\">例如一个交通信号灯有两个信号灯。上面的一个信号灯使用红色，下面的信号灯使用绿色。在这个例子中，两个信号灯不会同时发光。让我们看看状态图。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709696409604-e3c522b7-fdc2-4fed-ac67-bb03633c0dcb.png)\n\n<font style=\"color:rgb(51, 51, 51);\">当系统启动时，它会自动切换到停止模式作为默认状态。停止状态改变了light1为红色并且light2为黑色（关闭）。一个外部的事件能够触发现在的状态变换为“go”状态。在go状态下，我们改变颜色属性，light1变为黑色（关闭），light2变为绿色。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">为了实现这个方案，我们给这两个灯绘制一个用户界面的草图，为了简单起见，我们使用两个包含园边的矩形框，设置园半径为宽度的一半（宽度与高度相同）。</font>\n\n```python\nRectangle {\n        id: light1\n        x: 25; y: 15\n        width: 100; height: width\n        radius: width/2\n        color: \"black\"\n    }\n    Rectangle {\n        id: light2\n        x: 25; y: 135\n        width: 100; height: width\n        radius: width/2\n        color: \"black\"\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">就像在状态图中定义的一样，我们有一个“go”状态和一个“stop”状态，它们将会分别将交通灯改变为红色和绿色。我们设置state属性到stop来确保初始化状态为stop状态。</font>\n\n```python\n    Item {\n        id: root1\n        width: 640\n        height: 480\n        //color: \"black\"\n        states: [\n            State {\n                name: \"stop\"\n                PropertyChanges {\n                    target: light1\n                    color: \"red\"\n                }\n                PropertyChanges {\n                    target: light2\n                    color: \"black\"\n                }\n            },\n            State {\n                name: \"go\"\n                PropertyChanges {\n                    target: light1\n                    color: \"black\"\n                }\n                PropertyChanges {\n                    target: light2\n                    color: \"green\"\n                }\n            }\n        ]\n        state: \"stop\"\n        Rectangle {\n            id: light1\n            x: 25\n            y: 15\n            width: 100\n            height: width\n            radius: width / 2\n            color: \"black\"\n        }\n        Rectangle {\n            id: light2\n            x: 25\n            y: 135\n            width: 100\n            height: width\n            radius: width / 2\n            color: \"black\"\n        }\n        Text {\n            x: 45\n            y: 255\n            color: \"white\"\n            text: \"红绿灯\"\n            font.pixelSize: 20\n        }\n\n        MouseArea {\n            anchors.fill: parent\n            onClicked: parent.state = (parent.state == \"stop\" ? \"go\" : \"stop\")\n        }\n    }\n```\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697650715-1ede14db-ef63-4508-aac0-dea1c1b4bb97.png)\n\n## <font style=\"color:rgb(51, 51, 51);\">过渡（Transitions）</font>\n<font style=\"color:rgb(51, 51, 51);\">一系列的过渡能够被加入任何元素，一个过渡由状态的改变触发执行。你可以使用属性的from:和to:来定义状态改变的指定过渡。这两个属性就像一个过滤器，当过滤器为true时，过渡生效。你也可以使用“</font>_<font style=\"color:rgb(51, 51, 51);\">”来表示任何状态。例如from:”</font>_<font style=\"color:rgb(51, 51, 51);\">“; to:”*”表示从任一状态到另一个任一状态的默认值，这意味着过渡用于每个状态的切换。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">在这个例子中，我们期望从状态“go”到“stop”转换时实现一个颜色改变的动画。对于从“stop”到“go”状态的改变，我们期望保持颜色的直接改变，不使用过渡。我们使用from和to来限制过渡只在从“go”到“stop”时生效。在过渡中我们给每个灯添加两个颜色的动画，这个动画将按照状态的描述来改变属性。</font>\n\n```python\n transitions: [\n                Transition {\n                    from: \"stop\"; to: \"go\"\n                    ColorAnimation { target: light1; properties: \"color\"; duration: 500 }\n                    ColorAnimation { target: light2; properties: \"color\"; duration: 500 }\n                },\n                Transition {\n                    from: \"go\"; to: \"stop\"\n                    ColorAnimation { target: light1; properties: \"color\"; duration: 500 }\n                    ColorAnimation { target: light2; properties: \"color\"; duration: 500 }\n                }\n            ]\n```\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697640118-f659870b-4c97-43a0-8357-65fb884e4a31.png)\n\n<font style=\"color:rgb(51, 51, 51);\">接下来，你可以修改下这个例子，例如缩小未点亮的等来突出点亮的等。为此，你需要在状态中添加一个属性用来缩放，并且操作一个动画来播放缩放属性的过渡。另一个选择是可以添加一个“attention”状态，灯会出现黄色闪烁，为此你需要添加为这个过渡添加一个一秒连续的动画来显示黄色（使用“to”属性来实现，一秒后变为黑色）。也许你也可以改变缓冲曲线来使这个例子更加生动。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n","source":"_posts/QML_Fluid_Element动态元素.md","raw":"---\ntitle: QML Fluid Element 动态元素\nmermaid: true\ndate: 2024-03-22\ntags: [嵌入式, C++, 笔记,Qt, QML]\ncomments: true\ncategories: [嵌入式]\n---\n\n**<font style=\"color:rgb(51, 51, 51);\">这章的源代码能够在</font>**[assetts folder](http://qmlbook.org/assets)**<font style=\"color:rgb(51, 51, 51);\">找到。</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">这一章介绍如何控制属性值的变化，通过动画的方式在一段时间内来改变属性值。这项技术是建立一个现代化的平滑界面的基础，通过使用状态和过渡来扩展你的用户界面。每一种状态定义了属性的改变，与动画联系起来的状态改变称作过渡。</font>\n\n# <font style=\"color:rgb(51, 51, 51);\">动画（Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">动画被用于属性的改变。一个动画定义了属性值改变的曲线，将一个属性值变化从一个值过渡到另一个值。动画是由一连串的目标属性活动定义的，平缓的曲线算法能够引发一个定义时间内属性的持续变化。所有在QtQuick中的动画都由同一个计时器来控制，因此它们始终都保持同步，这也提高了动画的性能和显示效果。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">注意</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\">动画控制了属性的改变，也就是值的插入。这是一个基本的概念，QML是基于元素，属性与脚本的。每一个元素都提供了许多的属性，每一个属性都在等待使用动画。在这本书中你将会看到这是一个壮阔的场景，你会发现你自己在看一些动画时欣赏它们的美丽并且肯定自己的创造性想法。然后请记住：动画控制了属性的改变，每个元素都有大量的属性供你任意使用。</font>**\n\n```python\n// animation.qml\n\nimport QtQuick 2.5\n\nImage {\n    id: root\n    source: \"assets/background.png\"\n\n    property int padding: 40\n    property int duration: 4000\n    property bool running: false\n\n    Image {\n        id: box\n        x: root.padding;\n        y: (root.height-height)/2\n        source: \"assets/box_green.png\"\n\n        NumberAnimation on x {\n            to: root.width - box.width - root.padding\n            duration: root.duration\n            running: root.running\n        }\n        RotationAnimation on rotation {\n            to: 360\n            duration: root.duration\n            running: root.running\n        }\n    }\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: root.running = true\n    }\n\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">上面的示例显示了应用于 and 属性的简单动画。每个动画的持续时间为 4000 毫秒 （msec），并永远循环。x 上的动画将 x 坐标从对象逐渐移动到 240px。旋转动画从当前角度运行到 360 度。这两个动画并行运行，并在加载 UI 后鼠标点击后立即启动。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">现在你可以通过to属性和duration属性来实现动画效果。或者你可以在opacity或者scale上添加动画作为例子，集成这两个参数，你可以实现火箭逐渐消失在太空中，试试吧!</font>\n\n```python\n            PropertyAnimation on opacity {\n                to: 0\n                duration: root.duration\n                running: root.running\n            }\n```\n\n### <font style=\"color:rgb(51, 51, 51);\">动画元素（Animation Elements）</font>\n<font style=\"color:rgb(51, 51, 51);\">有几种类型的动画，每一种都在特定情况下都有最佳的效果，下面列出了一些常用的动画：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PropertyAnimation（属性动画）- 使用属性值改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">NumberAnimation（数字动画）- 使用数字改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ColorAnimation（颜色动画）- 使用颜色改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">RotationAnimation（旋转动画）- 使用旋转改变播放的动画</font>\n\n<font style=\"color:rgb(51, 51, 51);\">除了上面这些基本和通常使用的动画元素，QtQuick还提供了一切特殊场景下使用的动画：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PauseAnimation（停止动画）- 运行暂停一个动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SequentialAnimation（顺序动画）- 允许动画有序播放</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ParallelAnimation（并行动画）- 允许动画同时播放</font>\n+ <font style=\"color:rgb(51, 51, 51);\">AnchorAnimation（锚定动画）- 使用锚定改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ParentAnimation（父元素动画）- 使用父对象改变播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SmotthedAnimation（平滑动画）- 跟踪一个平滑值播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">SpringAnimation（弹簧动画）- 跟踪一个弹簧变换的值播放的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">PathAnimation（路径动画）- 跟踪一个元素对象的路径的动画</font>\n+ <font style=\"color:rgb(51, 51, 51);\">Vector3dAnimation（3D容器动画）- 使用QVector3d值改变播放的动画</font>\n\n<font style=\"color:rgb(51, 51, 51);\">我们将在后面学习怎样创建一连串的动画。当使用更加复杂的动画时，我们可能需要在播放一个动画时中改变一个属性或者运行一个脚本。对于这个问题，QtQuick提供了一个动作元素：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">PropertyAction（属性动作）- 在播放动画时改变属性</font>\n+ <font style=\"color:rgb(51, 51, 51);\">ScriptAction（脚本动作）- 在播放动画时运行脚本</font>\n\n<font style=\"color:rgb(51, 51, 51);\">在这一章中我们将会使用一些小的例子来讨论大多数类型的动画。</font>\n\n### <font style=\"color:rgb(51, 51, 51);\">应用动画（Applying Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">动画可以通过以下几种方式来应用：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">属性动画 - 在元素完整加载后自动运行</font>\n+ <font style=\"color:rgb(51, 51, 51);\">属性动作 - 当属性值改变时自动运行</font>\n+ <font style=\"color:rgb(51, 51, 51);\">独立运行动画 - 使用start()函数明确指定运行或者running属性被设置为true（比如通过属性绑定）</font>\n\n<font style=\"color:rgb(51, 51, 51);\">后面我们会谈论如何在状态变换时播放动画。</font>\n\n```plain\nItem {\n    id: root\n    width: container.childrenRect.width\n    height: container.childrenRect.height\n    property alias text: label.text\n    property alias source: image.source\n    signal clicked\n\n    Column {\n        id: container\n        Image {\n            id: image\n        }\n        Text {\n            id: label\n            width: image.width\n            horizontalAlignment: Text.AlignHCenter\n            wrapMode: Text.WordWrap\n            color: \"#ececec\"\n        }\n    }\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: root.clicked()\n    }\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">为了给图片下面的元素定位，我们使用了Column（列）定位器，并且使用基于列的子矩形（childRect）属性来计算它的宽度和高度（width and height）。我们导出了文本（text）和图形源（source）属性，一个点击信号（clicked signal）。我们使用文本元素的wrapMode属性来设置文本与图像一样宽并且可以自动换行。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">对象升序。</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">这三个对象都位于相同的 y 位置 （）。他们需要全部前往.他们每个人都使用不同的方法，具有不同的副作用和功能。</font><font style=\"color:rgb(199, 37, 78);\">y=200y=40</font>\n\n```python\n ClickableImageV2 {\n        id: greenBox\n        x: 40; y: root.height-height\n        source: \"assets/box_green.png\"\n        text: \"animation on property\"\n        NumberAnimation on y {\n            to: 40; duration: 4000\n        }\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第一个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">第一个火箭使用了Animation on 属性变化的策略来完成。动画会在加载完成后立即播放。点击火箭可以重置它回到开始的位置。在动画播放时重置第一个火箭不会有任何影响。在动画开始前的几分之一秒设置一个新的y轴坐标让人感觉挺不安全的，应当避免这样的属性值竞争的变化。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n```python\n    ClickableImageV2 {\n        id: blueBox\n        x: (root.width-width)/2; y: root.height-height\n        source: \"assets/box_blue.png\"\n        text: \"behavior on property\"\n        Behavior on y {\n            NumberAnimation { duration: 4000 }\n        }\n\n        onClicked: y = 40\n        // random y on each click\n//        onClicked: y = 40+Math.random()*(205-40)\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第二个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\"></font><font style=\"color:rgb(51, 51, 51);\">第二个火箭使用了behavior on 属性行为策略的动画。这个行为告诉属性值每时每刻都在变化，通过动画的方式来改变这个值。可以使用行为元素的enabled : false来设置行为失效。当你点击这个火箭时它将会开始运行（y轴坐标逐渐移至40）。然后其它的点击对于位置的改变没有任何的影响。你可以试着使用一个随机值（例如 40+(Math.random()*(205-40)）来设置y轴坐标。你可以发现动画始终会将移动到新位置的时间匹配在4秒内完成。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n```python\n ClickableImageV2 {\n        id: redBox\n        x: root.width-width-40; y: root.height-height\n        source: \"assets/box_red.png\"\n        onClicked: anim.start()\n//        onClicked: anim.restart()\n\n        text: \"standalone animation\"\n\n        NumberAnimation {\n            id: anim\n            target: redBox\n            properties: \"y\"\n            to: 40\n            duration: 4000\n        }\n    }\n```\n\n**<font style=\"color:rgb(51, 51, 51);\">第三个对象</font>**\n\n<font style=\"color:rgb(51, 51, 51);\">第三个火箭使用standalone animation独立动画策略。这个动画由一个私有的元素定义并且可以写在文档的任何地方。点击火箭调用动画函数start()来启动动画。每一个动画都有start()，stop()，resume()，restart()函数。这个动画自身可以比其他类型的动画更早的获取到更多的相关信息。我们只需要定义目标和目标元素的属性需要怎样改变的一个动画。我们定义一个to属性的值，在这个例子中我们也定义了一个from属性的值允许动画可以重复运行。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">另一个启动/停止一个动画的方法是绑定一个动画的running属性。当需要用户输入控制属性时这种方法非常有用：</font>**\n\n```python\n NumberAnimation {\n        ...\n        // animation runs when mouse is pressed\n        running: area.pressed\n    }\n    MouseArea {\n        id: area\n    }\n```\n\n## <font style=\"color:rgb(51, 51, 51);\">缓冲曲线（Easing Curves）</font>\n<font style=\"color:rgb(51, 51, 51);\">属性值的改变能够通过一个动画来控制，缓冲曲线属性影响了一个属性值改变的插值算法。我们现在已经定义的动画都使用了一种线性的插值算法，因为一个动画的默认缓冲类型是Easing.Linear。在一个小场景下的x轴与y轴坐标改变可以得到最好的视觉效果。一个线性插值算法将会在动画开始时使用from的值到动画结束时使用的to值绘制一条直线，所以缓冲类型定义了曲线的变化情况。精心为一个移动的对象挑选一个合适的缓冲类型将会使界面更加自然，例如一个页面的滑出，最初使用缓慢的速度滑出，然后在最后滑出时使用高速滑出，类似翻书一样的效果。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709691245443-36428021-3abc-43aa-b0dc-6641f71a156c.png)\n\n**<font style=\"color:rgb(51, 51, 51);\">注意：不要过度的使用动画。用户界面动画的设计应该尽量小心，动画是让界面更加生动而不是充满整个界面。眼睛对于移动的东西非常敏感，很容易干扰用户的使用。</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\"></font>**\n\n<font style=\"color:rgb(51, 51, 51);\">在下面的例子中我们将会使用不同的缓冲曲线，每一种缓冲曲线都都使用了一个可点击图片来展示，点击将会在动画中设置一个新的缓冲类型并且使用这种曲线重新启动动画。</font>\n\n```python\n// EasingCurves.qml\n\nimport QtQuick 2.5\nimport QtQuick.Layouts 1.2\n\nRectangle {\n    id: root\n    width: childrenRect.width\n    height: childrenRect.height\n\n    color: '#4a4a4a'\n    gradient: Gradient {\n        GradientStop { position: 0.0; color: root.color }\n        GradientStop { position: 1.0; color: Qt.lighter(root.color, 1.2) }\n    }\n\n    ColumnLayout {\n\n        Grid {\n            spacing: 8\n            columns: 5\n            EasingType {\n                easingType: Easing.Linear\n                title: 'Linear'\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InExpo\n                title: \"InExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.OutExpo\n                title: \"OutExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutExpo\n                title: \"InOutExpo\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutCubic\n                title: \"InOutCubic\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.SineCurve\n                title: \"SineCurve\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutCirc\n                title: \"InOutCirc\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutElastic\n                title: \"InOutElastic\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutBack\n                title: \"InOutBack\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n            EasingType {\n                easingType: Easing.InOutBounce\n                title: \"InOutBounce\"\n                onClicked: {\n                    animation.easing.type = easingType\n                    box.toggle = !box.toggle\n                }\n            }\n        }\n        Item {\n            height: 80\n            Layout.fillWidth: true\n            Box {\n                id: box\n                property bool toggle\n                x: toggle?20:root.width-width-20\n                anchors.verticalCenter: parent.verticalCenter\n                gradient: Gradient {\n                    GradientStop { position: 0.0; color: \"#2ed5fa\" }\n                    GradientStop { position: 1.0; color: \"#2467ec\" }\n                }\n                Behavior on x {\n                    NumberAnimation {\n                        id: animation\n                        duration: 500\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n## <font style=\"color:rgb(51, 51, 51);\">动画分组（Grouped Animations）</font>\n<font style=\"color:rgb(51, 51, 51);\">通常使用的动画比一个属性的动画更加复杂。例如你想同时运行几个动画并把他们连接起来，或者在一个一个的运行，或者在两个动画之间执行一个脚本。动画分组提供了很好的帮助，作为命名建议可以叫做一组动画。有两种方法来分组：平行与连续。你可以使用SequentialAnimation（连续动画）和ParallelAnimation（平行动画）来实现它们，它们作为动画的容器来包含其它的动画元素。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693400013-21b78616-019c-43cc-a4bf-b678236c0aca.png)\n\n```python\n    BrightSquare {\n        id: root\n        width: 300\n        height: 200\n        property int duration: 3000\n        ClickableImageV3 {\n            id: rocket\n            x: 20; y: 120\n            source: \"images/rocket2.png\"\n            onClicked: anim.restart()\n        }\n        ParallelAnimation {\n            id: anim\n            NumberAnimation {\n                target: rocket\n                properties: \"y\"\n                to: 20\n                duration: root.duration\n                easing.type:Easing.OutExpo\n            }\n            NumberAnimation {\n                target: rocket\n                properties: \"x\"\n                to: 160\n                duration: root.duration\n            }\n        }\n    }\n\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">一个连续的动画将会一个一个的运行子动画。</font>\n\n```python\nimport QtQuick 2.0\nBrightSquare {\n    id: root\n    width: 300\n    height: 200\n    property int duration: 3000\n    ClickableImageV3 {\n        id: rocket\n        x: 20; y: 120\n        source: \"assets/rocket2.png\"\n        onClicked: anim.restart()\n    }\n    SequentialAnimation {\n        id: anim\n        NumberAnimation {\n            target: rocket\n            properties: \"y\"\n            to: 20\n            // 60% of time to travel up\n            duration: root.duration*0.6\n        }\n        NumberAnimation {\n            target: rocket\n            properties: \"x\"\n            to: 160\n            // 40% of time to travel sideways\n            duration: root.duration*0.4\n        }\n    }\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">分组动画也可以被嵌套，例如一个连续动画可以拥有两个平行动画作为子动画。我们来看看这个足球的例子。这个动画描述了一个从左向右扔一个球的行为：</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693973021-accb3bf7-e016-4374-b801-b4a3e1475320.png)\n\n<font style=\"color:rgb(51, 51, 51);\">要弄明白这个动画我们需要剖析这个目标的运动过程。我们需要记住这个动画是通过属性变化来实现的动画，下面是不同部分的转换：</font>\n\n+ <font style=\"color:rgb(51, 51, 51);\">从左向右的x坐标转换（X1）。</font>\n+ <font style=\"color:rgb(51, 51, 51);\">从下往上的y坐标转换（Y1）然后跟着一个从上往下的Y坐标转换（Y2）。</font>\n+ <font style=\"color:rgb(51, 51, 51);\">整个动画过程中360度旋转。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">这个动画将会花掉3秒钟的时间。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">我们使用一个空的基本元素对象（Item）作为根元素，它的宽度为480，高度为300。</font>\n\n```python\nimport QtQuick 1.1\nItem {\n    id: root\n    width: 480\n    height: 300\n    property int duration: 3000\n    ...\n}\n```\n\n<font style=\"color:rgb(51, 51, 51);\">我们定义动画的总持续时间作为参考，以便更好的同步各部分的动画。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">下一步我们需需要添加一个背景，在我们这个例子中有两个矩形框分别使用了绿色渐变和蓝色渐变填充。</font>\n\n```python\n Rectangle {\n        id: sky\n        width: parent.width\n        height: 200\n        gradient: Gradient {\n            GradientStop { position: 0.0; color: \"#0080FF\" }\n            GradientStop { position: 1.0; color: \"#66CCFF\" }\n        }\n    }\n    Rectangle {\n        id: ground\n        anchors.top: sky.bottom\n        anchors.bottom: root.bottom\n        width: parent.width\n        gradient: Gradient {\n            GradientStop { position: 0.0; color: \"#00FF00\" }\n            GradientStop { position: 1.0; color: \"#00803F\" }\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">上面部分的蓝色区域高度为200像素，下面部分的区域使用上面的蓝色区域的底作为锚定的顶，使用根元素的底作为底。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">让我们将足球加入到屏幕上，足球是一个图片，位于路径“images/soccer_ball.png”。首先我们需要将它放置在左下角接近边界处。</font>\n\n```python\n Image {\n        id: ball\n        x: 20; y: 240\n        source: \"assets/soccer_ball.png\"\n        MouseArea {\n            anchors.fill: parent\n            onClicked: {\n                ball.x = 20; ball.y = 240\n                anim.restart()\n            }\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">图片与鼠标区域连接，点击球将会重置球的状态，并且动画重新开始。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">首先使用一个连续的动画来播放两次的y轴变换和一次x轴。</font>\n\n```python\nParallelAnimation{\n               id: anim\n               SequentialAnimation {\n\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 20\n                           duration: root.duration * 0.6\n                           easing.type:Easing.OutQuad\n                       }\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 240\n                           duration: root.duration * 0.4\n                           easing.type:Easing.InCubic\n                       }\n                   }\n               NumberAnimation { // X1 animation\n                          target: ball\n                          properties: \"x\"\n                          to: 400\n                          duration: root.duration\n                      }\n           }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">在动画总时间的40%的时间里完成上升部分，在动画总时间的60%的时间里完成下降部分，一个动画完成后播放下一个动画。目前还没有使用任何缓冲曲线。缓冲曲线将在后面使用easing curves来添加，现在我们只关心如何使用动画来完成过渡。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">现在我们需要添加x轴坐标转换。x轴坐标转换需要与y轴坐标转换同时进行，所以我们需要将y轴坐标转换的连续动画和x轴坐标转换一起压缩进一个平行动画中。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">最后我们想要旋转这个球，我们需要向平行动画中添加一个新的动画，我们选择RotationAnimation来实现旋转。</font>\n\n```python\n ParallelAnimation {\n        id: anim\n        SequentialAnimation {\n            // ... our Y1, Y2 animation\n        }\n        NumberAnimation { // X1 animation\n            // X1 animation\n        }\n        RotationAnimation {\n            target: ball\n            properties: \"rotation\"\n            to: 720\n            duration: root.duration\n        }\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">我们已经完成了整个动画链表，然后我们需要给动画提供一个正确的缓冲曲线来描述一个移动的球。对于Y1动画我们使用Easing.OutQuad缓冲曲线，它看起来更像是一个圆周运动。Y2使用了Easing.InCubic缓冲曲线，因为在最后球会发生反弹。（试试使用Easing.InBounce，你会发现反弹将会立刻开始。）。X1和ROT1动画都使用线性曲线。</font>\n\n```python\n   Item {\n        id: root\n        width: 480\n        height: 300\n        property int duration: 3000\n        Rectangle {\n               id: sky\n               width: parent.width\n               height: 200\n               gradient: Gradient {\n                   GradientStop { position: 0.0; color: \"#0080FF\" }\n                   GradientStop { position: 1.0; color: \"#66CCFF\" }\n               }\n           }\n           Rectangle {\n               id: ground\n               anchors.top: sky.bottom\n               anchors.bottom: root.bottom\n               width: parent.width\n               gradient: Gradient {\n                   GradientStop { position: 0.0; color: \"#00FF00\" }\n                   GradientStop { position: 1.0; color: \"#00803F\" }\n               }\n           }\n           Image {\n                  id: ball\n                  x: 20; y: 240\n                  source: \"images/soccer_ball.png\"\n                  MouseArea {\n                      anchors.fill: parent\n                      onClicked: {\n                          ball.x = 20; ball.y = 240 ;ball.rotation = 0\n                          anim.restart()\n                      }\n                  }\n              }\n           ParallelAnimation{\n               id: anim\n               SequentialAnimation {\n\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 20\n                           duration: root.duration * 0.6\n                           easing.type:Easing.OutQuad\n                       }\n                       NumberAnimation {\n                           target: ball\n                           properties: \"y\"\n                           to: 240\n                           duration: root.duration * 0.4\n                           easing.type:Easing.InCubic\n                       }\n                   }\n               NumberAnimation { // X1 animation\n                          target: ball\n                          properties: \"x\"\n                          to: 400\n                          duration: root.duration\n                      }\n               RotationAnimation {\n                           target: ball\n                           properties: \"rotation\"\n                           to: 720\n                           duration: root.duration\n                       }\n           }\n    }\n\n```\n\n# <font style=\"color:rgb(51, 51, 51);\">状态与过渡（States and Transitions）</font>\n<font style=\"color:rgb(51, 51, 51);\">通常我们将用户界面描述为一种状态。一个状态定义了一组属性的改变，并且会在一定的条件下被触发。另外在这些状态转化的过程中可以有一个过渡，定义了这些属性的动画或者一些附加的动作。当进入一个新的状态时，动作也可以被执行。</font>\n\n## <font style=\"color:rgb(51, 51, 51);\">状态（States）</font>\n<font style=\"color:rgb(51, 51, 51);\">在QML中，使用State元素来定义状态，需要与基础元素对象（Item）的states序列属性连接。状态通过它的状态名来鉴别，由组成它的一系列简单的属性来改变元素。默认的状态在初始化元素属性时定义，并命名为“”（一个空的字符串）。</font>\n\n```python\n    Item {\n        id: root\n        states: [\n            State {\n                name: \"go\"\n                PropertyChanges { ... }\n            },\n            State {\n                name: \"stop\"\n                PropertyChanges { ... }\n            }\n        ]\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">状态的改变由分配一个元素新的状态属性名来完成。</font>\n\n**<font style=\"color:rgb(51, 51, 51);\">注意</font>**\n\n**<font style=\"color:rgb(51, 51, 51);\">另一种切换属性的方法是使用状态元素的when属性。when属性能够被设置为一个表达式的结果，当结果为true时，状态被使用</font>**<font style=\"color:rgb(51, 51, 51);\">。</font>\n\n```python\n Item {\n        id: root\n        states: [\n            ...\n        ]\n        Button {\n            id: goButton\n            ...\n            onClicked: root.state = \"go\"\n        }\n    }\n```\n\n![]()\n\n<font style=\"color:rgb(51, 51, 51);\">例如一个交通信号灯有两个信号灯。上面的一个信号灯使用红色，下面的信号灯使用绿色。在这个例子中，两个信号灯不会同时发光。让我们看看状态图。</font>\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709696409604-e3c522b7-fdc2-4fed-ac67-bb03633c0dcb.png)\n\n<font style=\"color:rgb(51, 51, 51);\">当系统启动时，它会自动切换到停止模式作为默认状态。停止状态改变了light1为红色并且light2为黑色（关闭）。一个外部的事件能够触发现在的状态变换为“go”状态。在go状态下，我们改变颜色属性，light1变为黑色（关闭），light2变为绿色。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">为了实现这个方案，我们给这两个灯绘制一个用户界面的草图，为了简单起见，我们使用两个包含园边的矩形框，设置园半径为宽度的一半（宽度与高度相同）。</font>\n\n```python\nRectangle {\n        id: light1\n        x: 25; y: 15\n        width: 100; height: width\n        radius: width/2\n        color: \"black\"\n    }\n    Rectangle {\n        id: light2\n        x: 25; y: 135\n        width: 100; height: width\n        radius: width/2\n        color: \"black\"\n    }\n```\n\n<font style=\"color:rgb(51, 51, 51);\">就像在状态图中定义的一样，我们有一个“go”状态和一个“stop”状态，它们将会分别将交通灯改变为红色和绿色。我们设置state属性到stop来确保初始化状态为stop状态。</font>\n\n```python\n    Item {\n        id: root1\n        width: 640\n        height: 480\n        //color: \"black\"\n        states: [\n            State {\n                name: \"stop\"\n                PropertyChanges {\n                    target: light1\n                    color: \"red\"\n                }\n                PropertyChanges {\n                    target: light2\n                    color: \"black\"\n                }\n            },\n            State {\n                name: \"go\"\n                PropertyChanges {\n                    target: light1\n                    color: \"black\"\n                }\n                PropertyChanges {\n                    target: light2\n                    color: \"green\"\n                }\n            }\n        ]\n        state: \"stop\"\n        Rectangle {\n            id: light1\n            x: 25\n            y: 15\n            width: 100\n            height: width\n            radius: width / 2\n            color: \"black\"\n        }\n        Rectangle {\n            id: light2\n            x: 25\n            y: 135\n            width: 100\n            height: width\n            radius: width / 2\n            color: \"black\"\n        }\n        Text {\n            x: 45\n            y: 255\n            color: \"white\"\n            text: \"红绿灯\"\n            font.pixelSize: 20\n        }\n\n        MouseArea {\n            anchors.fill: parent\n            onClicked: parent.state = (parent.state == \"stop\" ? \"go\" : \"stop\")\n        }\n    }\n```\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697650715-1ede14db-ef63-4508-aac0-dea1c1b4bb97.png)\n\n## <font style=\"color:rgb(51, 51, 51);\">过渡（Transitions）</font>\n<font style=\"color:rgb(51, 51, 51);\">一系列的过渡能够被加入任何元素，一个过渡由状态的改变触发执行。你可以使用属性的from:和to:来定义状态改变的指定过渡。这两个属性就像一个过滤器，当过滤器为true时，过渡生效。你也可以使用“</font>_<font style=\"color:rgb(51, 51, 51);\">”来表示任何状态。例如from:”</font>_<font style=\"color:rgb(51, 51, 51);\">“; to:”*”表示从任一状态到另一个任一状态的默认值，这意味着过渡用于每个状态的切换。</font>\n\n<font style=\"color:rgb(51, 51, 51);\">在这个例子中，我们期望从状态“go”到“stop”转换时实现一个颜色改变的动画。对于从“stop”到“go”状态的改变，我们期望保持颜色的直接改变，不使用过渡。我们使用from和to来限制过渡只在从“go”到“stop”时生效。在过渡中我们给每个灯添加两个颜色的动画，这个动画将按照状态的描述来改变属性。</font>\n\n```python\n transitions: [\n                Transition {\n                    from: \"stop\"; to: \"go\"\n                    ColorAnimation { target: light1; properties: \"color\"; duration: 500 }\n                    ColorAnimation { target: light2; properties: \"color\"; duration: 500 }\n                },\n                Transition {\n                    from: \"go\"; to: \"stop\"\n                    ColorAnimation { target: light1; properties: \"color\"; duration: 500 }\n                    ColorAnimation { target: light2; properties: \"color\"; duration: 500 }\n                }\n            ]\n```\n\n![](https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697640118-f659870b-4c97-43a0-8357-65fb884e4a31.png)\n\n<font style=\"color:rgb(51, 51, 51);\">接下来，你可以修改下这个例子，例如缩小未点亮的等来突出点亮的等。为此，你需要在状态中添加一个属性用来缩放，并且操作一个动画来播放缩放属性的过渡。另一个选择是可以添加一个“attention”状态，灯会出现黄色闪烁，为此你需要添加为这个过渡添加一个一秒连续的动画来显示黄色（使用“to”属性来实现，一秒后变为黑色）。也许你也可以改变缓冲曲线来使这个例子更加生动。</font>\n\n<font style=\"color:rgb(51, 51, 51);\"></font>\n\n","slug":"QML_Fluid_Element动态元素","published":1,"updated":"2025-07-16T08:01:18.199Z","layout":"post","photos":[],"_id":"cmd71t80r000b3cw6d8upc2zn","content":"<p><strong><font style=\"color:rgb(51, 51, 51);\">这章的源代码能够在</font></strong><a href=\"http://qmlbook.org/assets\">assetts folder</a><strong><font style=\"color:rgb(51, 51, 51);\">找到。</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">这一章介绍如何控制属性值的变化，通过动画的方式在一段时间内来改变属性值。这项技术是建立一个现代化的平滑界面的基础，通过使用状态和过渡来扩展你的用户界面。每一种状态定义了属性的改变，与动画联系起来的状态改变称作过渡。</font></p>\n<h1 id=\"font-stylecolorrgb51-51-51动画animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画（Animations）</font></h1>\n<p><font style=\"color:rgb(51, 51, 51);\">动画被用于属性的改变。一个动画定义了属性值改变的曲线，将一个属性值变化从一个值过渡到另一个值。动画是由一连串的目标属性活动定义的，平缓的曲线算法能够引发一个定义时间内属性的持续变化。所有在QtQuick中的动画都由同一个计时器来控制，因此它们始终都保持同步，这也提高了动画的性能和显示效果。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">动画控制了属性的改变，也就是值的插入。这是一个基本的概念，QML是基于元素，属性与脚本的。每一个元素都提供了许多的属性，每一个属性都在等待使用动画。在这本书中你将会看到这是一个壮阔的场景，你会发现你自己在看一些动画时欣赏它们的美丽并且肯定自己的创造性想法。然后请记住：动画控制了属性的改变，每个元素都有大量的属性供你任意使用。</font></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// animation.qml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.5</span></span><br><span class=\"line\"></span><br><span class=\"line\">Image &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    source: <span class=\"string\">&quot;assets/background.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> padding: <span class=\"number\">40</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">4000</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">bool</span> running: false</span><br><span class=\"line\"></span><br><span class=\"line\">    Image &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: box</span><br><span class=\"line\">        x: root.padding;</span><br><span class=\"line\">        y: (root.height-height)/<span class=\"number\">2</span></span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_green.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        NumberAnimation on x &#123;</span><br><span class=\"line\">            to: root.width - box.width - root.padding</span><br><span class=\"line\">            duration: root.duration</span><br><span class=\"line\">            running: root.running</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        RotationAnimation on rotation &#123;</span><br><span class=\"line\">            to: <span class=\"number\">360</span></span><br><span class=\"line\">            duration: root.duration</span><br><span class=\"line\">            running: root.running</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: root.running = true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">上面的示例显示了应用于 and 属性的简单动画。每个动画的持续时间为 4000 毫秒 （msec），并永远循环。x 上的动画将 x 坐标从对象逐渐移动到 240px。旋转动画从当前角度运行到 360 度。这两个动画并行运行，并在加载 UI 后鼠标点击后立即启动。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">现在你可以通过to属性和duration属性来实现动画效果。或者你可以在opacity或者scale上添加动画作为例子，集成这两个参数，你可以实现火箭逐渐消失在太空中，试试吧!</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PropertyAnimation on opacity &#123;</span><br><span class=\"line\">    to: <span class=\"number\">0</span></span><br><span class=\"line\">    duration: root.duration</span><br><span class=\"line\">    running: root.running</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgb51-51-51动画元素animation-elementsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画元素animation-elementsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画元素（Animation Elements）</font></h3>\n<p><font style=\"color:rgb(51, 51, 51);\">有几种类型的动画，每一种都在特定情况下都有最佳的效果，下面列出了一些常用的动画：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PropertyAnimation（属性动画）- 使用属性值改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">NumberAnimation（数字动画）- 使用数字改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ColorAnimation（颜色动画）- 使用颜色改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">RotationAnimation（旋转动画）- 使用旋转改变播放的动画</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">除了上面这些基本和通常使用的动画元素，QtQuick还提供了一切特殊场景下使用的动画：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PauseAnimation（停止动画）- 运行暂停一个动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SequentialAnimation（顺序动画）- 允许动画有序播放</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ParallelAnimation（并行动画）- 允许动画同时播放</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">AnchorAnimation（锚定动画）- 使用锚定改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ParentAnimation（父元素动画）- 使用父对象改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SmotthedAnimation（平滑动画）- 跟踪一个平滑值播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SpringAnimation（弹簧动画）- 跟踪一个弹簧变换的值播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">PathAnimation（路径动画）- 跟踪一个元素对象的路径的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">Vector3dAnimation（3D容器动画）- 使用QVector3d值改变播放的动画</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">我们将在后面学习怎样创建一连串的动画。当使用更加复杂的动画时，我们可能需要在播放一个动画时中改变一个属性或者运行一个脚本。对于这个问题，QtQuick提供了一个动作元素：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PropertyAction（属性动作）- 在播放动画时改变属性</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ScriptAction（脚本动作）- 在播放动画时运行脚本</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">在这一章中我们将会使用一些小的例子来讨论大多数类型的动画。</font></p>\n<h3 id=\"font-stylecolorrgb51-51-51应用动画applying-animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51应用动画applying-animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">应用动画（Applying Animations）</font></h3>\n<p><font style=\"color:rgb(51, 51, 51);\">动画可以通过以下几种方式来应用：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">属性动画 - 在元素完整加载后自动运行</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">属性动作 - 当属性值改变时自动运行</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">独立运行动画 - 使用start()函数明确指定运行或者running属性被设置为true（比如通过属性绑定）</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">后面我们会谈论如何在状态变换时播放动画。</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    id: root</span><br><span class=\"line\">    width: container.childrenRect.width</span><br><span class=\"line\">    height: container.childrenRect.height</span><br><span class=\"line\">    property alias text: label.text</span><br><span class=\"line\">    property alias source: image.source</span><br><span class=\"line\">    signal clicked</span><br><span class=\"line\"></span><br><span class=\"line\">    Column &#123;</span><br><span class=\"line\">        id: container</span><br><span class=\"line\">        Image &#123;</span><br><span class=\"line\">            id: image</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Text &#123;</span><br><span class=\"line\">            id: label</span><br><span class=\"line\">            width: image.width</span><br><span class=\"line\">            horizontalAlignment: Text.AlignHCenter</span><br><span class=\"line\">            wrapMode: Text.WordWrap</span><br><span class=\"line\">            color: &quot;#ececec&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: root.clicked()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">为了给图片下面的元素定位，我们使用了Column（列）定位器，并且使用基于列的子矩形（childRect）属性来计算它的宽度和高度（width and height）。我们导出了文本（text）和图形源（source）属性，一个点击信号（clicked signal）。我们使用文本元素的wrapMode属性来设置文本与图像一样宽并且可以自动换行。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">对象升序。</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">这三个对象都位于相同的 y 位置 （）。他们需要全部前往.他们每个人都使用不同的方法，具有不同的副作用和功能。</font><font style=\"color:rgb(199, 37, 78);\">y=200y=40</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ClickableImageV2 &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: greenBox</span><br><span class=\"line\">       x: <span class=\"number\">40</span>; y: root.height-height</span><br><span class=\"line\">       source: <span class=\"string\">&quot;assets/box_green.png&quot;</span></span><br><span class=\"line\">       text: <span class=\"string\">&quot;animation on property&quot;</span></span><br><span class=\"line\">       NumberAnimation on y &#123;</span><br><span class=\"line\">           to: <span class=\"number\">40</span>; duration: <span class=\"number\">4000</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第一个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">第一个火箭使用了Animation on 属性变化的策略来完成。动画会在加载完成后立即播放。点击火箭可以重置它回到开始的位置。在动画播放时重置第一个火箭不会有任何影响。在动画开始前的几分之一秒设置一个新的y轴坐标让人感觉挺不安全的，应当避免这样的属性值竞争的变化。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    ClickableImageV2 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: blueBox</span><br><span class=\"line\">        x: (root.width-width)/<span class=\"number\">2</span>; y: root.height-height</span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_blue.png&quot;</span></span><br><span class=\"line\">        text: <span class=\"string\">&quot;behavior on property&quot;</span></span><br><span class=\"line\">        Behavior on y &#123;</span><br><span class=\"line\">            NumberAnimation &#123; duration: <span class=\"number\">4000</span> &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        onClicked: y = <span class=\"number\">40</span></span><br><span class=\"line\">        // random y on each click</span><br><span class=\"line\">//        onClicked: y = <span class=\"number\">40</span>+Math.random()*(<span class=\"number\">205</span>-<span class=\"number\">40</span>)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第二个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font><font style=\"color:rgb(51, 51, 51);\">第二个火箭使用了behavior on 属性行为策略的动画。这个行为告诉属性值每时每刻都在变化，通过动画的方式来改变这个值。可以使用行为元素的enabled : false来设置行为失效。当你点击这个火箭时它将会开始运行（y轴坐标逐渐移至40）。然后其它的点击对于位置的改变没有任何的影响。你可以试着使用一个随机值（例如 40+(Math.random()*(205-40)）来设置y轴坐标。你可以发现动画始终会将移动到新位置的时间匹配在4秒内完成。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ClickableImageV2 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: redBox</span><br><span class=\"line\">        x: root.width-width-<span class=\"number\">40</span>; y: root.height-height</span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_red.png&quot;</span></span><br><span class=\"line\">        onClicked: anim.start()</span><br><span class=\"line\">//        onClicked: anim.restart()</span><br><span class=\"line\"></span><br><span class=\"line\">        text: <span class=\"string\">&quot;standalone animation&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            target: redBox</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">40</span></span><br><span class=\"line\">            duration: <span class=\"number\">4000</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第三个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">第三个火箭使用standalone animation独立动画策略。这个动画由一个私有的元素定义并且可以写在文档的任何地方。点击火箭调用动画函数start()来启动动画。每一个动画都有start()，stop()，resume()，restart()函数。这个动画自身可以比其他类型的动画更早的获取到更多的相关信息。我们只需要定义目标和目标元素的属性需要怎样改变的一个动画。我们定义一个to属性的值，在这个例子中我们也定义了一个from属性的值允许动画可以重复运行。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">另一个启动/停止一个动画的方法是绑定一个动画的running属性。当需要用户输入控制属性时这种方法非常有用：</font></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NumberAnimation &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       // animation runs when mouse <span class=\"keyword\">is</span> pressed</span><br><span class=\"line\">       running: area.pressed</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   MouseArea &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: area</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgb51-51-51缓冲曲线easing-curvesfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51缓冲曲线easing-curvesfont\"></a> <font style=\"color:rgb(51, 51, 51);\">缓冲曲线（Easing Curves）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">属性值的改变能够通过一个动画来控制，缓冲曲线属性影响了一个属性值改变的插值算法。我们现在已经定义的动画都使用了一种线性的插值算法，因为一个动画的默认缓冲类型是Easing.Linear。在一个小场景下的x轴与y轴坐标改变可以得到最好的视觉效果。一个线性插值算法将会在动画开始时使用from的值到动画结束时使用的to值绘制一条直线，所以缓冲类型定义了曲线的变化情况。精心为一个移动的对象挑选一个合适的缓冲类型将会使界面更加自然，例如一个页面的滑出，最初使用缓慢的速度滑出，然后在最后滑出时使用高速滑出，类似翻书一样的效果。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709691245443-36428021-3abc-43aa-b0dc-6641f71a156c.png\" alt=\"\" /></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意：不要过度的使用动画。用户界面动画的设计应该尽量小心，动画是让界面更加生动而不是充满整个界面。眼睛对于移动的东西非常敏感，很容易干扰用户的使用。</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\"></font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">在下面的例子中我们将会使用不同的缓冲曲线，每一种缓冲曲线都都使用了一个可点击图片来展示，点击将会在动画中设置一个新的缓冲类型并且使用这种曲线重新启动动画。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// EasingCurves.qml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.5</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick.Layouts <span class=\"number\">1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: childrenRect.width</span><br><span class=\"line\">    height: childrenRect.height</span><br><span class=\"line\"></span><br><span class=\"line\">    color: <span class=\"string\">&#x27;#4a4a4a&#x27;</span></span><br><span class=\"line\">    gradient: Gradient &#123;</span><br><span class=\"line\">        GradientStop &#123; position: <span class=\"number\">0.0</span>; color: root.color &#125;</span><br><span class=\"line\">        GradientStop &#123; position: <span class=\"number\">1.0</span>; color: Qt.lighter(root.color, <span class=\"number\">1.2</span>) &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ColumnLayout &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Grid &#123;</span><br><span class=\"line\">            spacing: <span class=\"number\">8</span></span><br><span class=\"line\">            columns: <span class=\"number\">5</span></span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.Linear</span><br><span class=\"line\">                title: <span class=\"string\">&#x27;Linear&#x27;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.OutExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;OutExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutCubic</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutCubic&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.SineCurve</span><br><span class=\"line\">                title: <span class=\"string\">&quot;SineCurve&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutCirc</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutCirc&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutElastic</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutElastic&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutBack</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutBack&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutBounce</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutBounce&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Item &#123;</span><br><span class=\"line\">            height: <span class=\"number\">80</span></span><br><span class=\"line\">            Layout.fillWidth: true</span><br><span class=\"line\">            Box &#123;</span><br><span class=\"line\">                <span class=\"built_in\">id</span>: box</span><br><span class=\"line\">                <span class=\"built_in\">property</span> <span class=\"built_in\">bool</span> toggle</span><br><span class=\"line\">                x: toggle?<span class=\"number\">20</span>:root.width-width-<span class=\"number\">20</span></span><br><span class=\"line\">                anchors.verticalCenter: parent.verticalCenter</span><br><span class=\"line\">                gradient: Gradient &#123;</span><br><span class=\"line\">                    GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#2ed5fa&quot;</span> &#125;</span><br><span class=\"line\">                    GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#2467ec&quot;</span> &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Behavior on x &#123;</span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">id</span>: animation</span><br><span class=\"line\">                        duration: <span class=\"number\">500</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgb51-51-51动画分组grouped-animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画分组grouped-animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画分组（Grouped Animations）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">通常使用的动画比一个属性的动画更加复杂。例如你想同时运行几个动画并把他们连接起来，或者在一个一个的运行，或者在两个动画之间执行一个脚本。动画分组提供了很好的帮助，作为命名建议可以叫做一组动画。有两种方法来分组：平行与连续。你可以使用SequentialAnimation（连续动画）和ParallelAnimation（平行动画）来实现它们，它们作为动画的容器来包含其它的动画元素。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693400013-21b78616-019c-43cc-a4bf-b678236c0aca.png\" alt=\"\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    BrightSquare &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">        width: <span class=\"number\">300</span></span><br><span class=\"line\">        height: <span class=\"number\">200</span></span><br><span class=\"line\">        <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">        ClickableImageV3 &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: rocket</span><br><span class=\"line\">            x: <span class=\"number\">20</span>; y: <span class=\"number\">120</span></span><br><span class=\"line\">            source: <span class=\"string\">&quot;images/rocket2.png&quot;</span></span><br><span class=\"line\">            onClicked: anim.restart()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ParallelAnimation &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            NumberAnimation &#123;</span><br><span class=\"line\">                target: rocket</span><br><span class=\"line\">                properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                to: <span class=\"number\">20</span></span><br><span class=\"line\">                duration: root.duration</span><br><span class=\"line\">                easing.<span class=\"built_in\">type</span>:Easing.OutExpo</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            NumberAnimation &#123;</span><br><span class=\"line\">                target: rocket</span><br><span class=\"line\">                properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                to: <span class=\"number\">160</span></span><br><span class=\"line\">                duration: root.duration</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">一个连续的动画将会一个一个的运行子动画。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.0</span></span><br><span class=\"line\">BrightSquare &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: <span class=\"number\">300</span></span><br><span class=\"line\">    height: <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">    ClickableImageV3 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: rocket</span><br><span class=\"line\">        x: <span class=\"number\">20</span>; y: <span class=\"number\">120</span></span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/rocket2.png&quot;</span></span><br><span class=\"line\">        onClicked: anim.restart()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SequentialAnimation &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            target: rocket</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">20</span></span><br><span class=\"line\">            // <span class=\"number\">60</span>% of time to travel up</span><br><span class=\"line\">            duration: root.duration*<span class=\"number\">0.6</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            target: rocket</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">160</span></span><br><span class=\"line\">            // <span class=\"number\">40</span>% of time to travel sideways</span><br><span class=\"line\">            duration: root.duration*<span class=\"number\">0.4</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">分组动画也可以被嵌套，例如一个连续动画可以拥有两个平行动画作为子动画。我们来看看这个足球的例子。这个动画描述了一个从左向右扔一个球的行为：</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693973021-accb3bf7-e016-4374-b801-b4a3e1475320.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">要弄明白这个动画我们需要剖析这个目标的运动过程。我们需要记住这个动画是通过属性变化来实现的动画，下面是不同部分的转换：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">从左向右的x坐标转换（X1）。</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">从下往上的y坐标转换（Y1）然后跟着一个从上往下的Y坐标转换（Y2）。</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">整个动画过程中360度旋转。</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">这个动画将会花掉3秒钟的时间。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">我们使用一个空的基本元素对象（Item）作为根元素，它的宽度为480，高度为300。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">1.1</span></span><br><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: <span class=\"number\">480</span></span><br><span class=\"line\">    height: <span class=\"number\">300</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">我们定义动画的总持续时间作为参考，以便更好的同步各部分的动画。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">下一步我们需需要添加一个背景，在我们这个例子中有两个矩形框分别使用了绿色渐变和蓝色渐变填充。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: sky</span><br><span class=\"line\">       width: parent.width</span><br><span class=\"line\">       height: <span class=\"number\">200</span></span><br><span class=\"line\">       gradient: Gradient &#123;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#0080FF&quot;</span> &#125;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#66CCFF&quot;</span> &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   Rectangle &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: ground</span><br><span class=\"line\">       anchors.top: sky.bottom</span><br><span class=\"line\">       anchors.bottom: root.bottom</span><br><span class=\"line\">       width: parent.width</span><br><span class=\"line\">       gradient: Gradient &#123;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#00FF00&quot;</span> &#125;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#00803F&quot;</span> &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">上面部分的蓝色区域高度为200像素，下面部分的区域使用上面的蓝色区域的底作为锚定的顶，使用根元素的底作为底。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">让我们将足球加入到屏幕上，足球是一个图片，位于路径“images/soccer_ball.png”。首先我们需要将它放置在左下角接近边界处。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Image &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: ball</span><br><span class=\"line\">       x: <span class=\"number\">20</span>; y: <span class=\"number\">240</span></span><br><span class=\"line\">       source: <span class=\"string\">&quot;assets/soccer_ball.png&quot;</span></span><br><span class=\"line\">       MouseArea &#123;</span><br><span class=\"line\">           anchors.fill: parent</span><br><span class=\"line\">           onClicked: &#123;</span><br><span class=\"line\">               ball.x = <span class=\"number\">20</span>; ball.y = <span class=\"number\">240</span></span><br><span class=\"line\">               anim.restart()</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">图片与鼠标区域连接，点击球将会重置球的状态，并且动画重新开始。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">首先使用一个连续的动画来播放两次的y轴变换和一次x轴。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ParallelAnimation&#123;</span><br><span class=\"line\">               <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">               SequentialAnimation &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                       NumberAnimation &#123;</span><br><span class=\"line\">                           target: ball</span><br><span class=\"line\">                           properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                           to: <span class=\"number\">20</span></span><br><span class=\"line\">                           duration: root.duration * <span class=\"number\">0.6</span></span><br><span class=\"line\">                           easing.<span class=\"built_in\">type</span>:Easing.OutQuad</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                       NumberAnimation &#123;</span><br><span class=\"line\">                           target: ball</span><br><span class=\"line\">                           properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                           to: <span class=\"number\">240</span></span><br><span class=\"line\">                           duration: root.duration * <span class=\"number\">0.4</span></span><br><span class=\"line\">                           easing.<span class=\"built_in\">type</span>:Easing.InCubic</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">                          target: ball</span><br><span class=\"line\">                          properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                          to: <span class=\"number\">400</span></span><br><span class=\"line\">                          duration: root.duration</span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">在动画总时间的40%的时间里完成上升部分，在动画总时间的60%的时间里完成下降部分，一个动画完成后播放下一个动画。目前还没有使用任何缓冲曲线。缓冲曲线将在后面使用easing curves来添加，现在我们只关心如何使用动画来完成过渡。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">现在我们需要添加x轴坐标转换。x轴坐标转换需要与y轴坐标转换同时进行，所以我们需要将y轴坐标转换的连续动画和x轴坐标转换一起压缩进一个平行动画中。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">最后我们想要旋转这个球，我们需要向平行动画中添加一个新的动画，我们选择RotationAnimation来实现旋转。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ParallelAnimation &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">       SequentialAnimation &#123;</span><br><span class=\"line\">           // ... our Y1, Y2 animation</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">           // X1 animation</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       RotationAnimation &#123;</span><br><span class=\"line\">           target: ball</span><br><span class=\"line\">           properties: <span class=\"string\">&quot;rotation&quot;</span></span><br><span class=\"line\">           to: <span class=\"number\">720</span></span><br><span class=\"line\">           duration: root.duration</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">我们已经完成了整个动画链表，然后我们需要给动画提供一个正确的缓冲曲线来描述一个移动的球。对于Y1动画我们使用Easing.OutQuad缓冲曲线，它看起来更像是一个圆周运动。Y2使用了Easing.InCubic缓冲曲线，因为在最后球会发生反弹。（试试使用Easing.InBounce，你会发现反弹将会立刻开始。）。X1和ROT1动画都使用线性曲线。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">     <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">     width: <span class=\"number\">480</span></span><br><span class=\"line\">     height: <span class=\"number\">300</span></span><br><span class=\"line\">     <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">     Rectangle &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: sky</span><br><span class=\"line\">            width: parent.width</span><br><span class=\"line\">            height: <span class=\"number\">200</span></span><br><span class=\"line\">            gradient: Gradient &#123;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#0080FF&quot;</span> &#125;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#66CCFF&quot;</span> &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Rectangle &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: ground</span><br><span class=\"line\">            anchors.top: sky.bottom</span><br><span class=\"line\">            anchors.bottom: root.bottom</span><br><span class=\"line\">            width: parent.width</span><br><span class=\"line\">            gradient: Gradient &#123;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#00FF00&quot;</span> &#125;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#00803F&quot;</span> &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Image &#123;</span><br><span class=\"line\">               <span class=\"built_in\">id</span>: ball</span><br><span class=\"line\">               x: <span class=\"number\">20</span>; y: <span class=\"number\">240</span></span><br><span class=\"line\">               source: <span class=\"string\">&quot;images/soccer_ball.png&quot;</span></span><br><span class=\"line\">               MouseArea &#123;</span><br><span class=\"line\">                   anchors.fill: parent</span><br><span class=\"line\">                   onClicked: &#123;</span><br><span class=\"line\">                       ball.x = <span class=\"number\">20</span>; ball.y = <span class=\"number\">240</span> ;ball.rotation = <span class=\"number\">0</span></span><br><span class=\"line\">                       anim.restart()</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">        ParallelAnimation&#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            SequentialAnimation &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">20</span></span><br><span class=\"line\">                        duration: root.duration * <span class=\"number\">0.6</span></span><br><span class=\"line\">                        easing.<span class=\"built_in\">type</span>:Easing.OutQuad</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">240</span></span><br><span class=\"line\">                        duration: root.duration * <span class=\"number\">0.4</span></span><br><span class=\"line\">                        easing.<span class=\"built_in\">type</span>:Easing.InCubic</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">                       target: ball</span><br><span class=\"line\">                       properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                       to: <span class=\"number\">400</span></span><br><span class=\"line\">                       duration: root.duration</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">            RotationAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;rotation&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">720</span></span><br><span class=\"line\">                        duration: root.duration</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"font-stylecolorrgb51-51-51状态与过渡states-and-transitionsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51状态与过渡states-and-transitionsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">状态与过渡（States and Transitions）</font></h1>\n<p><font style=\"color:rgb(51, 51, 51);\">通常我们将用户界面描述为一种状态。一个状态定义了一组属性的改变，并且会在一定的条件下被触发。另外在这些状态转化的过程中可以有一个过渡，定义了这些属性的动画或者一些附加的动作。当进入一个新的状态时，动作也可以被执行。</font></p>\n<h2 id=\"font-stylecolorrgb51-51-51状态statesfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51状态statesfont\"></a> <font style=\"color:rgb(51, 51, 51);\">状态（States）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">在QML中，使用State元素来定义状态，需要与基础元素对象（Item）的states序列属性连接。状态通过它的状态名来鉴别，由组成它的一系列简单的属性来改变元素。默认的状态在初始化元素属性时定义，并命名为“”（一个空的字符串）。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    states: [</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123; ... &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123; ... &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">状态的改变由分配一个元素新的状态属性名来完成。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">另一种切换属性的方法是使用状态元素的when属性。when属性能够被设置为一个表达式的结果，当结果为true时，状态被使用</font></strong><font style=\"color:rgb(51, 51, 51);\">。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">       states: [</span><br><span class=\"line\">           ...</span><br><span class=\"line\">       ]</span><br><span class=\"line\">       Button &#123;</span><br><span class=\"line\">           <span class=\"built_in\">id</span>: goButton</span><br><span class=\"line\">           ...</span><br><span class=\"line\">           onClicked: root.state = <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">例如一个交通信号灯有两个信号灯。上面的一个信号灯使用红色，下面的信号灯使用绿色。在这个例子中，两个信号灯不会同时发光。让我们看看状态图。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709696409604-e3c522b7-fdc2-4fed-ac67-bb03633c0dcb.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">当系统启动时，它会自动切换到停止模式作为默认状态。停止状态改变了light1为红色并且light2为黑色（关闭）。一个外部的事件能够触发现在的状态变换为“go”状态。在go状态下，我们改变颜色属性，light1变为黑色（关闭），light2变为绿色。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">为了实现这个方案，我们给这两个灯绘制一个用户界面的草图，为了简单起见，我们使用两个包含园边的矩形框，设置园半径为宽度的一半（宽度与高度相同）。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light1</span><br><span class=\"line\">        x: <span class=\"number\">25</span>; y: <span class=\"number\">15</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span>; height: width</span><br><span class=\"line\">        radius: width/<span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light2</span><br><span class=\"line\">        x: <span class=\"number\">25</span>; y: <span class=\"number\">135</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span>; height: width</span><br><span class=\"line\">        radius: width/<span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">就像在状态图中定义的一样，我们有一个“go”状态和一个“stop”状态，它们将会分别将交通灯改变为红色和绿色。我们设置state属性到stop来确保初始化状态为stop状态。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root1</span><br><span class=\"line\">    width: <span class=\"number\">640</span></span><br><span class=\"line\">    height: <span class=\"number\">480</span></span><br><span class=\"line\">    //color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    states: [</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light1</span><br><span class=\"line\">                color: <span class=\"string\">&quot;red&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light2</span><br><span class=\"line\">                color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light1</span><br><span class=\"line\">                color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light2</span><br><span class=\"line\">                color: <span class=\"string\">&quot;green&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    state: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light1</span><br><span class=\"line\">        x: <span class=\"number\">25</span></span><br><span class=\"line\">        y: <span class=\"number\">15</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span></span><br><span class=\"line\">        height: width</span><br><span class=\"line\">        radius: width / <span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light2</span><br><span class=\"line\">        x: <span class=\"number\">25</span></span><br><span class=\"line\">        y: <span class=\"number\">135</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span></span><br><span class=\"line\">        height: width</span><br><span class=\"line\">        radius: width / <span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Text &#123;</span><br><span class=\"line\">        x: <span class=\"number\">45</span></span><br><span class=\"line\">        y: <span class=\"number\">255</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;white&quot;</span></span><br><span class=\"line\">        text: <span class=\"string\">&quot;红绿灯&quot;</span></span><br><span class=\"line\">        font.pixelSize: <span class=\"number\">20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: parent.state = (parent.state == <span class=\"string\">&quot;stop&quot;</span> ? <span class=\"string\">&quot;go&quot;</span> : <span class=\"string\">&quot;stop&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697650715-1ede14db-ef63-4508-aac0-dea1c1b4bb97.png\" alt=\"\" /></p>\n<h2 id=\"font-stylecolorrgb51-51-51过渡transitionsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51过渡transitionsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">过渡（Transitions）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">一系列的过渡能够被加入任何元素，一个过渡由状态的改变触发执行。你可以使用属性的from:和to:来定义状态改变的指定过渡。这两个属性就像一个过滤器，当过滤器为true时，过渡生效。你也可以使用“</font><em><font style=\"color:rgb(51, 51, 51);\">”来表示任何状态。例如from:”</font></em><font style=\"color:rgb(51, 51, 51);\">“; to:”*”表示从任一状态到另一个任一状态的默认值，这意味着过渡用于每个状态的切换。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">在这个例子中，我们期望从状态“go”到“stop”转换时实现一个颜色改变的动画。对于从“stop”到“go”状态的改变，我们期望保持颜色的直接改变，不使用过渡。我们使用from和to来限制过渡只在从“go”到“stop”时生效。在过渡中我们给每个灯添加两个颜色的动画，这个动画将按照状态的描述来改变属性。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">transitions: [</span><br><span class=\"line\">               Transition &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">from</span>: <span class=\"string\">&quot;stop&quot;</span>; to: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">                   ColorAnimation &#123; target: light1; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">                   ColorAnimation &#123; target: light2; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               Transition &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">from</span>: <span class=\"string\">&quot;go&quot;</span>; to: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">                   ColorAnimation &#123; target: light1; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">                   ColorAnimation &#123; target: light2; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697640118-f659870b-4c97-43a0-8357-65fb884e4a31.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">接下来，你可以修改下这个例子，例如缩小未点亮的等来突出点亮的等。为此，你需要在状态中添加一个属性用来缩放，并且操作一个动画来播放缩放属性的过渡。另一个选择是可以添加一个“attention”状态，灯会出现黄色闪烁，为此你需要添加为这个过渡添加一个一秒连续的动画来显示黄色（使用“to”属性来实现，一秒后变为黑色）。也许你也可以改变缓冲曲线来使这个例子更加生动。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n","excerpt":"","more":"<p><strong><font style=\"color:rgb(51, 51, 51);\">这章的源代码能够在</font></strong><a href=\"http://qmlbook.org/assets\">assetts folder</a><strong><font style=\"color:rgb(51, 51, 51);\">找到。</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">这一章介绍如何控制属性值的变化，通过动画的方式在一段时间内来改变属性值。这项技术是建立一个现代化的平滑界面的基础，通过使用状态和过渡来扩展你的用户界面。每一种状态定义了属性的改变，与动画联系起来的状态改变称作过渡。</font></p>\n<h1 id=\"font-stylecolorrgb51-51-51动画animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画（Animations）</font></h1>\n<p><font style=\"color:rgb(51, 51, 51);\">动画被用于属性的改变。一个动画定义了属性值改变的曲线，将一个属性值变化从一个值过渡到另一个值。动画是由一连串的目标属性活动定义的，平缓的曲线算法能够引发一个定义时间内属性的持续变化。所有在QtQuick中的动画都由同一个计时器来控制，因此它们始终都保持同步，这也提高了动画的性能和显示效果。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">动画控制了属性的改变，也就是值的插入。这是一个基本的概念，QML是基于元素，属性与脚本的。每一个元素都提供了许多的属性，每一个属性都在等待使用动画。在这本书中你将会看到这是一个壮阔的场景，你会发现你自己在看一些动画时欣赏它们的美丽并且肯定自己的创造性想法。然后请记住：动画控制了属性的改变，每个元素都有大量的属性供你任意使用。</font></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// animation.qml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.5</span></span><br><span class=\"line\"></span><br><span class=\"line\">Image &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    source: <span class=\"string\">&quot;assets/background.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> padding: <span class=\"number\">40</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">4000</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">bool</span> running: false</span><br><span class=\"line\"></span><br><span class=\"line\">    Image &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: box</span><br><span class=\"line\">        x: root.padding;</span><br><span class=\"line\">        y: (root.height-height)/<span class=\"number\">2</span></span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_green.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        NumberAnimation on x &#123;</span><br><span class=\"line\">            to: root.width - box.width - root.padding</span><br><span class=\"line\">            duration: root.duration</span><br><span class=\"line\">            running: root.running</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        RotationAnimation on rotation &#123;</span><br><span class=\"line\">            to: <span class=\"number\">360</span></span><br><span class=\"line\">            duration: root.duration</span><br><span class=\"line\">            running: root.running</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: root.running = true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">上面的示例显示了应用于 and 属性的简单动画。每个动画的持续时间为 4000 毫秒 （msec），并永远循环。x 上的动画将 x 坐标从对象逐渐移动到 240px。旋转动画从当前角度运行到 360 度。这两个动画并行运行，并在加载 UI 后鼠标点击后立即启动。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">现在你可以通过to属性和duration属性来实现动画效果。或者你可以在opacity或者scale上添加动画作为例子，集成这两个参数，你可以实现火箭逐渐消失在太空中，试试吧!</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PropertyAnimation on opacity &#123;</span><br><span class=\"line\">    to: <span class=\"number\">0</span></span><br><span class=\"line\">    duration: root.duration</span><br><span class=\"line\">    running: root.running</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgb51-51-51动画元素animation-elementsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画元素animation-elementsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画元素（Animation Elements）</font></h3>\n<p><font style=\"color:rgb(51, 51, 51);\">有几种类型的动画，每一种都在特定情况下都有最佳的效果，下面列出了一些常用的动画：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PropertyAnimation（属性动画）- 使用属性值改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">NumberAnimation（数字动画）- 使用数字改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ColorAnimation（颜色动画）- 使用颜色改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">RotationAnimation（旋转动画）- 使用旋转改变播放的动画</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">除了上面这些基本和通常使用的动画元素，QtQuick还提供了一切特殊场景下使用的动画：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PauseAnimation（停止动画）- 运行暂停一个动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SequentialAnimation（顺序动画）- 允许动画有序播放</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ParallelAnimation（并行动画）- 允许动画同时播放</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">AnchorAnimation（锚定动画）- 使用锚定改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ParentAnimation（父元素动画）- 使用父对象改变播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SmotthedAnimation（平滑动画）- 跟踪一个平滑值播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">SpringAnimation（弹簧动画）- 跟踪一个弹簧变换的值播放的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">PathAnimation（路径动画）- 跟踪一个元素对象的路径的动画</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">Vector3dAnimation（3D容器动画）- 使用QVector3d值改变播放的动画</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">我们将在后面学习怎样创建一连串的动画。当使用更加复杂的动画时，我们可能需要在播放一个动画时中改变一个属性或者运行一个脚本。对于这个问题，QtQuick提供了一个动作元素：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">PropertyAction（属性动作）- 在播放动画时改变属性</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">ScriptAction（脚本动作）- 在播放动画时运行脚本</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">在这一章中我们将会使用一些小的例子来讨论大多数类型的动画。</font></p>\n<h3 id=\"font-stylecolorrgb51-51-51应用动画applying-animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51应用动画applying-animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">应用动画（Applying Animations）</font></h3>\n<p><font style=\"color:rgb(51, 51, 51);\">动画可以通过以下几种方式来应用：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">属性动画 - 在元素完整加载后自动运行</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">属性动作 - 当属性值改变时自动运行</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">独立运行动画 - 使用start()函数明确指定运行或者running属性被设置为true（比如通过属性绑定）</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">后面我们会谈论如何在状态变换时播放动画。</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    id: root</span><br><span class=\"line\">    width: container.childrenRect.width</span><br><span class=\"line\">    height: container.childrenRect.height</span><br><span class=\"line\">    property alias text: label.text</span><br><span class=\"line\">    property alias source: image.source</span><br><span class=\"line\">    signal clicked</span><br><span class=\"line\"></span><br><span class=\"line\">    Column &#123;</span><br><span class=\"line\">        id: container</span><br><span class=\"line\">        Image &#123;</span><br><span class=\"line\">            id: image</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Text &#123;</span><br><span class=\"line\">            id: label</span><br><span class=\"line\">            width: image.width</span><br><span class=\"line\">            horizontalAlignment: Text.AlignHCenter</span><br><span class=\"line\">            wrapMode: Text.WordWrap</span><br><span class=\"line\">            color: &quot;#ececec&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: root.clicked()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">为了给图片下面的元素定位，我们使用了Column（列）定位器，并且使用基于列的子矩形（childRect）属性来计算它的宽度和高度（width and height）。我们导出了文本（text）和图形源（source）属性，一个点击信号（clicked signal）。我们使用文本元素的wrapMode属性来设置文本与图像一样宽并且可以自动换行。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">对象升序。</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">这三个对象都位于相同的 y 位置 （）。他们需要全部前往.他们每个人都使用不同的方法，具有不同的副作用和功能。</font><font style=\"color:rgb(199, 37, 78);\">y=200y=40</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ClickableImageV2 &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: greenBox</span><br><span class=\"line\">       x: <span class=\"number\">40</span>; y: root.height-height</span><br><span class=\"line\">       source: <span class=\"string\">&quot;assets/box_green.png&quot;</span></span><br><span class=\"line\">       text: <span class=\"string\">&quot;animation on property&quot;</span></span><br><span class=\"line\">       NumberAnimation on y &#123;</span><br><span class=\"line\">           to: <span class=\"number\">40</span>; duration: <span class=\"number\">4000</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第一个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">第一个火箭使用了Animation on 属性变化的策略来完成。动画会在加载完成后立即播放。点击火箭可以重置它回到开始的位置。在动画播放时重置第一个火箭不会有任何影响。在动画开始前的几分之一秒设置一个新的y轴坐标让人感觉挺不安全的，应当避免这样的属性值竞争的变化。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    ClickableImageV2 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: blueBox</span><br><span class=\"line\">        x: (root.width-width)/<span class=\"number\">2</span>; y: root.height-height</span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_blue.png&quot;</span></span><br><span class=\"line\">        text: <span class=\"string\">&quot;behavior on property&quot;</span></span><br><span class=\"line\">        Behavior on y &#123;</span><br><span class=\"line\">            NumberAnimation &#123; duration: <span class=\"number\">4000</span> &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        onClicked: y = <span class=\"number\">40</span></span><br><span class=\"line\">        // random y on each click</span><br><span class=\"line\">//        onClicked: y = <span class=\"number\">40</span>+Math.random()*(<span class=\"number\">205</span>-<span class=\"number\">40</span>)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第二个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font><font style=\"color:rgb(51, 51, 51);\">第二个火箭使用了behavior on 属性行为策略的动画。这个行为告诉属性值每时每刻都在变化，通过动画的方式来改变这个值。可以使用行为元素的enabled : false来设置行为失效。当你点击这个火箭时它将会开始运行（y轴坐标逐渐移至40）。然后其它的点击对于位置的改变没有任何的影响。你可以试着使用一个随机值（例如 40+(Math.random()*(205-40)）来设置y轴坐标。你可以发现动画始终会将移动到新位置的时间匹配在4秒内完成。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ClickableImageV2 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: redBox</span><br><span class=\"line\">        x: root.width-width-<span class=\"number\">40</span>; y: root.height-height</span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/box_red.png&quot;</span></span><br><span class=\"line\">        onClicked: anim.start()</span><br><span class=\"line\">//        onClicked: anim.restart()</span><br><span class=\"line\"></span><br><span class=\"line\">        text: <span class=\"string\">&quot;standalone animation&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            target: redBox</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">40</span></span><br><span class=\"line\">            duration: <span class=\"number\">4000</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">第三个对象</font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">第三个火箭使用standalone animation独立动画策略。这个动画由一个私有的元素定义并且可以写在文档的任何地方。点击火箭调用动画函数start()来启动动画。每一个动画都有start()，stop()，resume()，restart()函数。这个动画自身可以比其他类型的动画更早的获取到更多的相关信息。我们只需要定义目标和目标元素的属性需要怎样改变的一个动画。我们定义一个to属性的值，在这个例子中我们也定义了一个from属性的值允许动画可以重复运行。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">另一个启动/停止一个动画的方法是绑定一个动画的running属性。当需要用户输入控制属性时这种方法非常有用：</font></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NumberAnimation &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       // animation runs when mouse <span class=\"keyword\">is</span> pressed</span><br><span class=\"line\">       running: area.pressed</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   MouseArea &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: area</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgb51-51-51缓冲曲线easing-curvesfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51缓冲曲线easing-curvesfont\"></a> <font style=\"color:rgb(51, 51, 51);\">缓冲曲线（Easing Curves）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">属性值的改变能够通过一个动画来控制，缓冲曲线属性影响了一个属性值改变的插值算法。我们现在已经定义的动画都使用了一种线性的插值算法，因为一个动画的默认缓冲类型是Easing.Linear。在一个小场景下的x轴与y轴坐标改变可以得到最好的视觉效果。一个线性插值算法将会在动画开始时使用from的值到动画结束时使用的to值绘制一条直线，所以缓冲类型定义了曲线的变化情况。精心为一个移动的对象挑选一个合适的缓冲类型将会使界面更加自然，例如一个页面的滑出，最初使用缓慢的速度滑出，然后在最后滑出时使用高速滑出，类似翻书一样的效果。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709691245443-36428021-3abc-43aa-b0dc-6641f71a156c.png\" alt=\"\" /></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意：不要过度的使用动画。用户界面动画的设计应该尽量小心，动画是让界面更加生动而不是充满整个界面。眼睛对于移动的东西非常敏感，很容易干扰用户的使用。</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\"></font></strong></p>\n<p><font style=\"color:rgb(51, 51, 51);\">在下面的例子中我们将会使用不同的缓冲曲线，每一种缓冲曲线都都使用了一个可点击图片来展示，点击将会在动画中设置一个新的缓冲类型并且使用这种曲线重新启动动画。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// EasingCurves.qml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.5</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> QtQuick.Layouts <span class=\"number\">1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: childrenRect.width</span><br><span class=\"line\">    height: childrenRect.height</span><br><span class=\"line\"></span><br><span class=\"line\">    color: <span class=\"string\">&#x27;#4a4a4a&#x27;</span></span><br><span class=\"line\">    gradient: Gradient &#123;</span><br><span class=\"line\">        GradientStop &#123; position: <span class=\"number\">0.0</span>; color: root.color &#125;</span><br><span class=\"line\">        GradientStop &#123; position: <span class=\"number\">1.0</span>; color: Qt.lighter(root.color, <span class=\"number\">1.2</span>) &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ColumnLayout &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Grid &#123;</span><br><span class=\"line\">            spacing: <span class=\"number\">8</span></span><br><span class=\"line\">            columns: <span class=\"number\">5</span></span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.Linear</span><br><span class=\"line\">                title: <span class=\"string\">&#x27;Linear&#x27;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.OutExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;OutExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutExpo</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutExpo&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutCubic</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutCubic&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.SineCurve</span><br><span class=\"line\">                title: <span class=\"string\">&quot;SineCurve&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutCirc</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutCirc&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutElastic</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutElastic&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutBack</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutBack&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            EasingType &#123;</span><br><span class=\"line\">                easingType: Easing.InOutBounce</span><br><span class=\"line\">                title: <span class=\"string\">&quot;InOutBounce&quot;</span></span><br><span class=\"line\">                onClicked: &#123;</span><br><span class=\"line\">                    animation.easing.<span class=\"built_in\">type</span> = easingType</span><br><span class=\"line\">                    box.toggle = !box.toggle</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Item &#123;</span><br><span class=\"line\">            height: <span class=\"number\">80</span></span><br><span class=\"line\">            Layout.fillWidth: true</span><br><span class=\"line\">            Box &#123;</span><br><span class=\"line\">                <span class=\"built_in\">id</span>: box</span><br><span class=\"line\">                <span class=\"built_in\">property</span> <span class=\"built_in\">bool</span> toggle</span><br><span class=\"line\">                x: toggle?<span class=\"number\">20</span>:root.width-width-<span class=\"number\">20</span></span><br><span class=\"line\">                anchors.verticalCenter: parent.verticalCenter</span><br><span class=\"line\">                gradient: Gradient &#123;</span><br><span class=\"line\">                    GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#2ed5fa&quot;</span> &#125;</span><br><span class=\"line\">                    GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#2467ec&quot;</span> &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Behavior on x &#123;</span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">id</span>: animation</span><br><span class=\"line\">                        duration: <span class=\"number\">500</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgb51-51-51动画分组grouped-animationsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51动画分组grouped-animationsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">动画分组（Grouped Animations）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">通常使用的动画比一个属性的动画更加复杂。例如你想同时运行几个动画并把他们连接起来，或者在一个一个的运行，或者在两个动画之间执行一个脚本。动画分组提供了很好的帮助，作为命名建议可以叫做一组动画。有两种方法来分组：平行与连续。你可以使用SequentialAnimation（连续动画）和ParallelAnimation（平行动画）来实现它们，它们作为动画的容器来包含其它的动画元素。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693400013-21b78616-019c-43cc-a4bf-b678236c0aca.png\" alt=\"\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    BrightSquare &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">        width: <span class=\"number\">300</span></span><br><span class=\"line\">        height: <span class=\"number\">200</span></span><br><span class=\"line\">        <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">        ClickableImageV3 &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: rocket</span><br><span class=\"line\">            x: <span class=\"number\">20</span>; y: <span class=\"number\">120</span></span><br><span class=\"line\">            source: <span class=\"string\">&quot;images/rocket2.png&quot;</span></span><br><span class=\"line\">            onClicked: anim.restart()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ParallelAnimation &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            NumberAnimation &#123;</span><br><span class=\"line\">                target: rocket</span><br><span class=\"line\">                properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                to: <span class=\"number\">20</span></span><br><span class=\"line\">                duration: root.duration</span><br><span class=\"line\">                easing.<span class=\"built_in\">type</span>:Easing.OutExpo</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            NumberAnimation &#123;</span><br><span class=\"line\">                target: rocket</span><br><span class=\"line\">                properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                to: <span class=\"number\">160</span></span><br><span class=\"line\">                duration: root.duration</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">一个连续的动画将会一个一个的运行子动画。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">2.0</span></span><br><span class=\"line\">BrightSquare &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: <span class=\"number\">300</span></span><br><span class=\"line\">    height: <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">    ClickableImageV3 &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: rocket</span><br><span class=\"line\">        x: <span class=\"number\">20</span>; y: <span class=\"number\">120</span></span><br><span class=\"line\">        source: <span class=\"string\">&quot;assets/rocket2.png&quot;</span></span><br><span class=\"line\">        onClicked: anim.restart()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SequentialAnimation &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            target: rocket</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">20</span></span><br><span class=\"line\">            // <span class=\"number\">60</span>% of time to travel up</span><br><span class=\"line\">            duration: root.duration*<span class=\"number\">0.6</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        NumberAnimation &#123;</span><br><span class=\"line\">            target: rocket</span><br><span class=\"line\">            properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">            to: <span class=\"number\">160</span></span><br><span class=\"line\">            // <span class=\"number\">40</span>% of time to travel sideways</span><br><span class=\"line\">            duration: root.duration*<span class=\"number\">0.4</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">分组动画也可以被嵌套，例如一个连续动画可以拥有两个平行动画作为子动画。我们来看看这个足球的例子。这个动画描述了一个从左向右扔一个球的行为：</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709693973021-accb3bf7-e016-4374-b801-b4a3e1475320.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">要弄明白这个动画我们需要剖析这个目标的运动过程。我们需要记住这个动画是通过属性变化来实现的动画，下面是不同部分的转换：</font></p>\n<ul>\n<li><font style=\"color:rgb(51, 51, 51);\">从左向右的x坐标转换（X1）。</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">从下往上的y坐标转换（Y1）然后跟着一个从上往下的Y坐标转换（Y2）。</font></li>\n<li><font style=\"color:rgb(51, 51, 51);\">整个动画过程中360度旋转。</font></li>\n</ul>\n<p><font style=\"color:rgb(51, 51, 51);\">这个动画将会花掉3秒钟的时间。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">我们使用一个空的基本元素对象（Item）作为根元素，它的宽度为480，高度为300。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> QtQuick <span class=\"number\">1.1</span></span><br><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    width: <span class=\"number\">480</span></span><br><span class=\"line\">    height: <span class=\"number\">300</span></span><br><span class=\"line\">    <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">我们定义动画的总持续时间作为参考，以便更好的同步各部分的动画。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">下一步我们需需要添加一个背景，在我们这个例子中有两个矩形框分别使用了绿色渐变和蓝色渐变填充。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: sky</span><br><span class=\"line\">       width: parent.width</span><br><span class=\"line\">       height: <span class=\"number\">200</span></span><br><span class=\"line\">       gradient: Gradient &#123;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#0080FF&quot;</span> &#125;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#66CCFF&quot;</span> &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   Rectangle &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: ground</span><br><span class=\"line\">       anchors.top: sky.bottom</span><br><span class=\"line\">       anchors.bottom: root.bottom</span><br><span class=\"line\">       width: parent.width</span><br><span class=\"line\">       gradient: Gradient &#123;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#00FF00&quot;</span> &#125;</span><br><span class=\"line\">           GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#00803F&quot;</span> &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">上面部分的蓝色区域高度为200像素，下面部分的区域使用上面的蓝色区域的底作为锚定的顶，使用根元素的底作为底。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">让我们将足球加入到屏幕上，足球是一个图片，位于路径“images/soccer_ball.png”。首先我们需要将它放置在左下角接近边界处。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Image &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: ball</span><br><span class=\"line\">       x: <span class=\"number\">20</span>; y: <span class=\"number\">240</span></span><br><span class=\"line\">       source: <span class=\"string\">&quot;assets/soccer_ball.png&quot;</span></span><br><span class=\"line\">       MouseArea &#123;</span><br><span class=\"line\">           anchors.fill: parent</span><br><span class=\"line\">           onClicked: &#123;</span><br><span class=\"line\">               ball.x = <span class=\"number\">20</span>; ball.y = <span class=\"number\">240</span></span><br><span class=\"line\">               anim.restart()</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">图片与鼠标区域连接，点击球将会重置球的状态，并且动画重新开始。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">首先使用一个连续的动画来播放两次的y轴变换和一次x轴。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ParallelAnimation&#123;</span><br><span class=\"line\">               <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">               SequentialAnimation &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                       NumberAnimation &#123;</span><br><span class=\"line\">                           target: ball</span><br><span class=\"line\">                           properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                           to: <span class=\"number\">20</span></span><br><span class=\"line\">                           duration: root.duration * <span class=\"number\">0.6</span></span><br><span class=\"line\">                           easing.<span class=\"built_in\">type</span>:Easing.OutQuad</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                       NumberAnimation &#123;</span><br><span class=\"line\">                           target: ball</span><br><span class=\"line\">                           properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                           to: <span class=\"number\">240</span></span><br><span class=\"line\">                           duration: root.duration * <span class=\"number\">0.4</span></span><br><span class=\"line\">                           easing.<span class=\"built_in\">type</span>:Easing.InCubic</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">                          target: ball</span><br><span class=\"line\">                          properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                          to: <span class=\"number\">400</span></span><br><span class=\"line\">                          duration: root.duration</span><br><span class=\"line\">                      &#125;</span><br><span class=\"line\">           &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">在动画总时间的40%的时间里完成上升部分，在动画总时间的60%的时间里完成下降部分，一个动画完成后播放下一个动画。目前还没有使用任何缓冲曲线。缓冲曲线将在后面使用easing curves来添加，现在我们只关心如何使用动画来完成过渡。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">现在我们需要添加x轴坐标转换。x轴坐标转换需要与y轴坐标转换同时进行，所以我们需要将y轴坐标转换的连续动画和x轴坐标转换一起压缩进一个平行动画中。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">最后我们想要旋转这个球，我们需要向平行动画中添加一个新的动画，我们选择RotationAnimation来实现旋转。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ParallelAnimation &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">       SequentialAnimation &#123;</span><br><span class=\"line\">           // ... our Y1, Y2 animation</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">           // X1 animation</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       RotationAnimation &#123;</span><br><span class=\"line\">           target: ball</span><br><span class=\"line\">           properties: <span class=\"string\">&quot;rotation&quot;</span></span><br><span class=\"line\">           to: <span class=\"number\">720</span></span><br><span class=\"line\">           duration: root.duration</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">我们已经完成了整个动画链表，然后我们需要给动画提供一个正确的缓冲曲线来描述一个移动的球。对于Y1动画我们使用Easing.OutQuad缓冲曲线，它看起来更像是一个圆周运动。Y2使用了Easing.InCubic缓冲曲线，因为在最后球会发生反弹。（试试使用Easing.InBounce，你会发现反弹将会立刻开始。）。X1和ROT1动画都使用线性曲线。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">     <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">     width: <span class=\"number\">480</span></span><br><span class=\"line\">     height: <span class=\"number\">300</span></span><br><span class=\"line\">     <span class=\"built_in\">property</span> <span class=\"built_in\">int</span> duration: <span class=\"number\">3000</span></span><br><span class=\"line\">     Rectangle &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: sky</span><br><span class=\"line\">            width: parent.width</span><br><span class=\"line\">            height: <span class=\"number\">200</span></span><br><span class=\"line\">            gradient: Gradient &#123;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#0080FF&quot;</span> &#125;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#66CCFF&quot;</span> &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Rectangle &#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: ground</span><br><span class=\"line\">            anchors.top: sky.bottom</span><br><span class=\"line\">            anchors.bottom: root.bottom</span><br><span class=\"line\">            width: parent.width</span><br><span class=\"line\">            gradient: Gradient &#123;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">0.0</span>; color: <span class=\"string\">&quot;#00FF00&quot;</span> &#125;</span><br><span class=\"line\">                GradientStop &#123; position: <span class=\"number\">1.0</span>; color: <span class=\"string\">&quot;#00803F&quot;</span> &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Image &#123;</span><br><span class=\"line\">               <span class=\"built_in\">id</span>: ball</span><br><span class=\"line\">               x: <span class=\"number\">20</span>; y: <span class=\"number\">240</span></span><br><span class=\"line\">               source: <span class=\"string\">&quot;images/soccer_ball.png&quot;</span></span><br><span class=\"line\">               MouseArea &#123;</span><br><span class=\"line\">                   anchors.fill: parent</span><br><span class=\"line\">                   onClicked: &#123;</span><br><span class=\"line\">                       ball.x = <span class=\"number\">20</span>; ball.y = <span class=\"number\">240</span> ;ball.rotation = <span class=\"number\">0</span></span><br><span class=\"line\">                       anim.restart()</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">        ParallelAnimation&#123;</span><br><span class=\"line\">            <span class=\"built_in\">id</span>: anim</span><br><span class=\"line\">            SequentialAnimation &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">20</span></span><br><span class=\"line\">                        duration: root.duration * <span class=\"number\">0.6</span></span><br><span class=\"line\">                        easing.<span class=\"built_in\">type</span>:Easing.OutQuad</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    NumberAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;y&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">240</span></span><br><span class=\"line\">                        duration: root.duration * <span class=\"number\">0.4</span></span><br><span class=\"line\">                        easing.<span class=\"built_in\">type</span>:Easing.InCubic</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            NumberAnimation &#123; // X1 animation</span><br><span class=\"line\">                       target: ball</span><br><span class=\"line\">                       properties: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">                       to: <span class=\"number\">400</span></span><br><span class=\"line\">                       duration: root.duration</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">            RotationAnimation &#123;</span><br><span class=\"line\">                        target: ball</span><br><span class=\"line\">                        properties: <span class=\"string\">&quot;rotation&quot;</span></span><br><span class=\"line\">                        to: <span class=\"number\">720</span></span><br><span class=\"line\">                        duration: root.duration</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"font-stylecolorrgb51-51-51状态与过渡states-and-transitionsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51状态与过渡states-and-transitionsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">状态与过渡（States and Transitions）</font></h1>\n<p><font style=\"color:rgb(51, 51, 51);\">通常我们将用户界面描述为一种状态。一个状态定义了一组属性的改变，并且会在一定的条件下被触发。另外在这些状态转化的过程中可以有一个过渡，定义了这些属性的动画或者一些附加的动作。当进入一个新的状态时，动作也可以被执行。</font></p>\n<h2 id=\"font-stylecolorrgb51-51-51状态statesfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51状态statesfont\"></a> <font style=\"color:rgb(51, 51, 51);\">状态（States）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">在QML中，使用State元素来定义状态，需要与基础元素对象（Item）的states序列属性连接。状态通过它的状态名来鉴别，由组成它的一系列简单的属性来改变元素。默认的状态在初始化元素属性时定义，并命名为“”（一个空的字符串）。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">    states: [</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123; ... &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123; ... &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">状态的改变由分配一个元素新的状态属性名来完成。</font></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">注意</font></strong></p>\n<p><strong><font style=\"color:rgb(51, 51, 51);\">另一种切换属性的方法是使用状态元素的when属性。when属性能够被设置为一个表达式的结果，当结果为true时，状态被使用</font></strong><font style=\"color:rgb(51, 51, 51);\">。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">       <span class=\"built_in\">id</span>: root</span><br><span class=\"line\">       states: [</span><br><span class=\"line\">           ...</span><br><span class=\"line\">       ]</span><br><span class=\"line\">       Button &#123;</span><br><span class=\"line\">           <span class=\"built_in\">id</span>: goButton</span><br><span class=\"line\">           ...</span><br><span class=\"line\">           onClicked: root.state = <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">例如一个交通信号灯有两个信号灯。上面的一个信号灯使用红色，下面的信号灯使用绿色。在这个例子中，两个信号灯不会同时发光。让我们看看状态图。</font></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709696409604-e3c522b7-fdc2-4fed-ac67-bb03633c0dcb.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">当系统启动时，它会自动切换到停止模式作为默认状态。停止状态改变了light1为红色并且light2为黑色（关闭）。一个外部的事件能够触发现在的状态变换为“go”状态。在go状态下，我们改变颜色属性，light1变为黑色（关闭），light2变为绿色。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">为了实现这个方案，我们给这两个灯绘制一个用户界面的草图，为了简单起见，我们使用两个包含园边的矩形框，设置园半径为宽度的一半（宽度与高度相同）。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light1</span><br><span class=\"line\">        x: <span class=\"number\">25</span>; y: <span class=\"number\">15</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span>; height: width</span><br><span class=\"line\">        radius: width/<span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light2</span><br><span class=\"line\">        x: <span class=\"number\">25</span>; y: <span class=\"number\">135</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span>; height: width</span><br><span class=\"line\">        radius: width/<span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgb(51, 51, 51);\">就像在状态图中定义的一样，我们有一个“go”状态和一个“stop”状态，它们将会分别将交通灯改变为红色和绿色。我们设置state属性到stop来确保初始化状态为stop状态。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Item &#123;</span><br><span class=\"line\">    <span class=\"built_in\">id</span>: root1</span><br><span class=\"line\">    width: <span class=\"number\">640</span></span><br><span class=\"line\">    height: <span class=\"number\">480</span></span><br><span class=\"line\">    //color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    states: [</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light1</span><br><span class=\"line\">                color: <span class=\"string\">&quot;red&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light2</span><br><span class=\"line\">                color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        State &#123;</span><br><span class=\"line\">            name: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light1</span><br><span class=\"line\">                color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            PropertyChanges &#123;</span><br><span class=\"line\">                target: light2</span><br><span class=\"line\">                color: <span class=\"string\">&quot;green&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    state: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light1</span><br><span class=\"line\">        x: <span class=\"number\">25</span></span><br><span class=\"line\">        y: <span class=\"number\">15</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span></span><br><span class=\"line\">        height: width</span><br><span class=\"line\">        radius: width / <span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Rectangle &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: light2</span><br><span class=\"line\">        x: <span class=\"number\">25</span></span><br><span class=\"line\">        y: <span class=\"number\">135</span></span><br><span class=\"line\">        width: <span class=\"number\">100</span></span><br><span class=\"line\">        height: width</span><br><span class=\"line\">        radius: width / <span class=\"number\">2</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;black&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Text &#123;</span><br><span class=\"line\">        x: <span class=\"number\">45</span></span><br><span class=\"line\">        y: <span class=\"number\">255</span></span><br><span class=\"line\">        color: <span class=\"string\">&quot;white&quot;</span></span><br><span class=\"line\">        text: <span class=\"string\">&quot;红绿灯&quot;</span></span><br><span class=\"line\">        font.pixelSize: <span class=\"number\">20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MouseArea &#123;</span><br><span class=\"line\">        anchors.fill: parent</span><br><span class=\"line\">        onClicked: parent.state = (parent.state == <span class=\"string\">&quot;stop&quot;</span> ? <span class=\"string\">&quot;go&quot;</span> : <span class=\"string\">&quot;stop&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697650715-1ede14db-ef63-4508-aac0-dea1c1b4bb97.png\" alt=\"\" /></p>\n<h2 id=\"font-stylecolorrgb51-51-51过渡transitionsfont\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51过渡transitionsfont\"></a> <font style=\"color:rgb(51, 51, 51);\">过渡（Transitions）</font></h2>\n<p><font style=\"color:rgb(51, 51, 51);\">一系列的过渡能够被加入任何元素，一个过渡由状态的改变触发执行。你可以使用属性的from:和to:来定义状态改变的指定过渡。这两个属性就像一个过滤器，当过滤器为true时，过渡生效。你也可以使用“</font><em><font style=\"color:rgb(51, 51, 51);\">”来表示任何状态。例如from:”</font></em><font style=\"color:rgb(51, 51, 51);\">“; to:”*”表示从任一状态到另一个任一状态的默认值，这意味着过渡用于每个状态的切换。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\">在这个例子中，我们期望从状态“go”到“stop”转换时实现一个颜色改变的动画。对于从“stop”到“go”状态的改变，我们期望保持颜色的直接改变，不使用过渡。我们使用from和to来限制过渡只在从“go”到“stop”时生效。在过渡中我们给每个灯添加两个颜色的动画，这个动画将按照状态的描述来改变属性。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">transitions: [</span><br><span class=\"line\">               Transition &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">from</span>: <span class=\"string\">&quot;stop&quot;</span>; to: <span class=\"string\">&quot;go&quot;</span></span><br><span class=\"line\">                   ColorAnimation &#123; target: light1; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">                   ColorAnimation &#123; target: light2; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               Transition &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">from</span>: <span class=\"string\">&quot;go&quot;</span>; to: <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">                   ColorAnimation &#123; target: light1; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">                   ColorAnimation &#123; target: light2; properties: <span class=\"string\">&quot;color&quot;</span>; duration: <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/33668333/1709697640118-f659870b-4c97-43a0-8357-65fb884e4a31.png\" alt=\"\" /></p>\n<p><font style=\"color:rgb(51, 51, 51);\">接下来，你可以修改下这个例子，例如缩小未点亮的等来突出点亮的等。为此，你需要在状态中添加一个属性用来缩放，并且操作一个动画来播放缩放属性的过渡。另一个选择是可以添加一个“attention”状态，灯会出现黄色闪烁，为此你需要添加为这个过渡添加一个一秒连续的动画来显示黄色（使用“to”属性来实现，一秒后变为黑色）。也许你也可以改变缓冲曲线来使这个例子更加生动。</font></p>\n<p><font style=\"color:rgb(51, 51, 51);\"></font></p>\n"},{"title":"ROS学习","mermaid":true,"date":"2024-03-21T16:00:00.000Z","comments":1,"_content":"\n1、工作空间\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">类似的，在ROS机器人开发中，我们针对机器人某些功能进行代码开始时，各种编写的代码、参数、脚本等文件，也需要放置在某一个文件夹里进行管理，这个文件夹在ROS系统中就叫做</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">工作空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">所以工作空间是一个存放项目开发相关文件的文件夹，也是</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">开发过程中存放所有资料的大本营</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ROS系统中一个典型的工作空间结构如图所示，这个dev_ws就是工作空间的根目录，里边会有四个子目录，或者叫做四个子空间。</font>\n\n![](/images/posts/ROS学习/1.png)\n\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">src，代码空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，未来编写的代码、脚本，都需要人为的放置到这里；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">build，编译空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，保存编译过程中产生的中间文件；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">install，安装空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，放置编译得到的可执行文件和脚本；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">log，日志空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，编译和运行过程中，保存各种警告、错误、信息等日志。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">总体来讲，这四个空间的文件夹，我们绝大部分操作都是在src中进行的，编译成功后，就会执行install里边的结果，build和log两个文件夹用的很少。</font>\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建工作空间</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">了解了工作空间的概念和结果，接下来我们可以使用如下命令创建一个工作空间，并且下载教程的代码：</font>\n\n\n\n```plain\n$ mkdir -p ~/dev_ws/src\n$ cd ~/dev_ws/src\n$ git clone https://gitee.com/guyuehome/ros2_21_tutorials.git\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">自动安装依赖</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">我们从社区中下载的各种代码，多少都会有一些依赖，我们可以手动一个一个安装，也可以使用rosdep工具自动安装：</font>\n\n\n\n```plain\n$ sudo apt install -y python3-pip\n$ sudo pip3 install rosdepc\n$ sudo rosdepc init\n$ rosdepc update\n$ cd ..\n$ rosdepc install -i --from-path src --rosdistro humble -y\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">编译工作空间</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">依赖安装完成后，就可以使用如下命令编译工作空间啦，如果有缺少的依赖，或者代码有错误，编译过程中会有报错，否则编译过程应该不会出现任何错误：</font>\n\n\n\n```plain\n$ sudo apt install python3-colcon-ros\n$ cd ~/dev_ws/\n$ colcon build\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">编译成功后，就可以在工作空间中看到自动生产的build、log、install文件夹了。</font>\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">如何在ROS2中创建一个功能包呢？我们可以使用这个指令：</font>\n\n\n\n```plain\n$ ros2 pkg create --build-type <build-type> <package_name>\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ros2命令中：</font>\n\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">pkg</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示功能包相关的功能；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">create</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示创建功能包；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">build-type</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示新创建的功能包是C++还是Python的，如果使用C++或者C，那这里就跟ament_cmake，如果使用Python，就跟ament_python；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">package_name</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：新建功能包的名字。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">比如在终端中分别创建C++和Python版本的功能包：</font>\n\n\n\n```plain\n$ cd ~/dev_ws/src\n$ ros2 pkg create --build-type ament_cmake learning_pkg_c               # C++\n$ ros2 pkg create --build-type ament_python learning_pkg_python # Python\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">编译功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">在创建好的功能包中，我们可以继续完成代码的编写，之后需要编译和配置环境变量，才能正常运行：</font>\n\n\n\n```plain\n$ cd ~/dev_ws\n$ colcon build   # 编译工作空间所有功能包\n$ source install/local_setup.bash\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">功能包的结构</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">功能包并不是普通的文件夹，那如何判断一个文件夹是否是功能包呢？我们来分析下刚才新创建两个功能包的结构。</font>\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">首先看下C++类型的功能包，其中必然存在两个文件：</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">和</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">CMakerLists.txt</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n![](/images/posts/ROS学习/2.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容如下，包含功能包的版权描述，和各种依赖的声明。</font>\n\n![](/images/posts/ROS学习/3.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">CMakeLists.txt文件是编译规则，C++代码需要编译才能运行，所以必须要在该文件中设置如何编译，使用CMake语法。</font>\n\n![](/images/posts/ROS学习/4.png)\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">Python功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包需要将源码编译成可执行文件，但是Python语言是解析型的，不需要编译，所以会有一些不同，但也会有这两个文件：</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">和</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n![](/images/posts/ROS学习/5.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容和C++版本功能包一样，包含功能包的版权描述，和各种依赖的声明。</font>\n\n![](/images/posts/ROS学习/6.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py文件里边也包含一些版权信息，除此之外，还有“entry_points”配置的程序入口，在后续编程讲解中，我们会给大家介绍如何使用。</font>\n\n![](/images/posts/ROS学习/7.png)\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">Hello World节点（面向过程）</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ROS2中节点的实现当然是需要编写程序了，我们从Hello World例程开始，先来实现一个最为简单的节点，功能并不复杂，就是循环打印一个“Hello World”字符串到终端中。</font>\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">运行效果</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">大家先不要着急看代码，是骡子是马，先拉出来溜溜，我们通过ros2 run命令，运行编译好的课程代码，看下这个节点执行的效果如何，然后再来分析代码的实现过程，做到知其然也知其所以然。</font>\n\n\n\n```plain\n$ ros2 run learning_node node_helloworld\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">运行成功后，可以在终端中看到循环打印“Hello World”字符串的效果。</font>\n\n![](/images/posts/ROS学习/8.png)\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">代码解析</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">这个节点是如何实现的呢？我们来看下代码。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">learning_node/node_helloworld.py</font>\n\n```python\n#!/usr/bin/env python3 \n# -*- coding: utf-8 -*-\n\n\"\"\"\n@作者: 古月居(www.guyuehome.com)\n@说明: ROS2节点示例-发布“Hello World”日志信息, 使用面向过程的实现方式\n\"\"\"\n\nimport rclpy                                   # ROS2 Python接口库\nfrom rclpy.node import Node                    # ROS2 节点类\nimport time\n\ndef main(args=None):                           # ROS2节点主入口main函数\n    rclpy.init(args=args)                      # ROS2 Python接口初始化\n    node = Node(\"node_helloworld\")             # 创建ROS2节点对象并进行初始化\n\n    while rclpy.ok():                          # ROS2系统是否正常运行\n        node.get_logger().info(\"Hello World\")  # ROS2日志输出\n        time.sleep(0.5)                        # 休眠控制循环时间\n\n    node.destroy_node()                        # 销毁节点对象    \n    rclpy.shutdown()                           # 关闭ROS2 Python接口\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">完成代码的编写后需要设置功能包的编译选项，让系统知道Python程序的入口，打开功能包的setup.py文件，加入如下入口点的配置：</font>\n\n```json\n entry_points={\n        'console_scripts': [\n         'node_helloworld       = learning_node.node_helloworld:main',\n        ],\n```\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点流程</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">代码中出现的函数大家未来会经常用到，大家先不用纠结函数的具体使用方法，更重要的是理解节点的编码流程。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">总结一下，想要实现一个节点，代码的实现流程是这样做：</font>\n\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">编程接口初始化</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点并初始化</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">实现节点功能</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">销毁节点并关闭接口</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">大家如果有学习过C++或者Pyhton的话，应该可以发现这里我们使用的是面向过程的编程方法，这种方式虽然实现简单，但是对于稍微复杂一点的机器人系统，就很难做到模块化编码。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\"></font>\n\n{% externalLinkCard \"\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n{% heatMapCard %}\n\n{% tagRoulette \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\" \"🕹️\" %}","source":"_posts/ROS学习.md","raw":"---\ntitle: ROS学习\nmermaid: true\ndate: 2024-03-22\ntags: [嵌入式, C语言, 笔记, python, linux, ros]\ncomments: true\ncategories: [嵌入式]\n---\n\n1、工作空间\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">类似的，在ROS机器人开发中，我们针对机器人某些功能进行代码开始时，各种编写的代码、参数、脚本等文件，也需要放置在某一个文件夹里进行管理，这个文件夹在ROS系统中就叫做</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">工作空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">所以工作空间是一个存放项目开发相关文件的文件夹，也是</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">开发过程中存放所有资料的大本营</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ROS系统中一个典型的工作空间结构如图所示，这个dev_ws就是工作空间的根目录，里边会有四个子目录，或者叫做四个子空间。</font>\n\n![](/images/posts/ROS学习/1.png)\n\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">src，代码空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，未来编写的代码、脚本，都需要人为的放置到这里；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">build，编译空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，保存编译过程中产生的中间文件；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">install，安装空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，放置编译得到的可执行文件和脚本；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">log，日志空间</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">，编译和运行过程中，保存各种警告、错误、信息等日志。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">总体来讲，这四个空间的文件夹，我们绝大部分操作都是在src中进行的，编译成功后，就会执行install里边的结果，build和log两个文件夹用的很少。</font>\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建工作空间</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">了解了工作空间的概念和结果，接下来我们可以使用如下命令创建一个工作空间，并且下载教程的代码：</font>\n\n\n\n```plain\n$ mkdir -p ~/dev_ws/src\n$ cd ~/dev_ws/src\n$ git clone https://gitee.com/guyuehome/ros2_21_tutorials.git\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">自动安装依赖</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">我们从社区中下载的各种代码，多少都会有一些依赖，我们可以手动一个一个安装，也可以使用rosdep工具自动安装：</font>\n\n\n\n```plain\n$ sudo apt install -y python3-pip\n$ sudo pip3 install rosdepc\n$ sudo rosdepc init\n$ rosdepc update\n$ cd ..\n$ rosdepc install -i --from-path src --rosdistro humble -y\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">编译工作空间</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">依赖安装完成后，就可以使用如下命令编译工作空间啦，如果有缺少的依赖，或者代码有错误，编译过程中会有报错，否则编译过程应该不会出现任何错误：</font>\n\n\n\n```plain\n$ sudo apt install python3-colcon-ros\n$ cd ~/dev_ws/\n$ colcon build\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">编译成功后，就可以在工作空间中看到自动生产的build、log、install文件夹了。</font>\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">如何在ROS2中创建一个功能包呢？我们可以使用这个指令：</font>\n\n\n\n```plain\n$ ros2 pkg create --build-type <build-type> <package_name>\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ros2命令中：</font>\n\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">pkg</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示功能包相关的功能；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">create</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示创建功能包；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">build-type</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：表示新创建的功能包是C++还是Python的，如果使用C++或者C，那这里就跟ament_cmake，如果使用Python，就跟ament_python；</font>\n+ **<font style=\"color:rgba(0, 0, 0, 0.87);\">package_name</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">：新建功能包的名字。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">比如在终端中分别创建C++和Python版本的功能包：</font>\n\n\n\n```plain\n$ cd ~/dev_ws/src\n$ ros2 pkg create --build-type ament_cmake learning_pkg_c               # C++\n$ ros2 pkg create --build-type ament_python learning_pkg_python # Python\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">编译功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">在创建好的功能包中，我们可以继续完成代码的编写，之后需要编译和配置环境变量，才能正常运行：</font>\n\n\n\n```plain\n$ cd ~/dev_ws\n$ colcon build   # 编译工作空间所有功能包\n$ source install/local_setup.bash\n```\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">功能包的结构</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">功能包并不是普通的文件夹，那如何判断一个文件夹是否是功能包呢？我们来分析下刚才新创建两个功能包的结构。</font>\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">首先看下C++类型的功能包，其中必然存在两个文件：</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">和</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">CMakerLists.txt</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n![](/images/posts/ROS学习/2.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容如下，包含功能包的版权描述，和各种依赖的声明。</font>\n\n![](/images/posts/ROS学习/3.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">CMakeLists.txt文件是编译规则，C++代码需要编译才能运行，所以必须要在该文件中设置如何编译，使用CMake语法。</font>\n\n![](/images/posts/ROS学习/4.png)\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">Python功能包</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包需要将源码编译成可执行文件，但是Python语言是解析型的，不需要编译，所以会有一些不同，但也会有这两个文件：</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">和</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py</font>**<font style=\"color:rgba(0, 0, 0, 0.87);\">。</font>\n\n![](/images/posts/ROS学习/5.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容和C++版本功能包一样，包含功能包的版权描述，和各种依赖的声明。</font>\n\n![](/images/posts/ROS学习/6.png)\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py文件里边也包含一些版权信息，除此之外，还有“entry_points”配置的程序入口，在后续编程讲解中，我们会给大家介绍如何使用。</font>\n\n![](/images/posts/ROS学习/7.png)\n\n## **<font style=\"color:rgba(0, 0, 0, 0.87);\">Hello World节点（面向过程）</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">ROS2中节点的实现当然是需要编写程序了，我们从Hello World例程开始，先来实现一个最为简单的节点，功能并不复杂，就是循环打印一个“Hello World”字符串到终端中。</font>\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">运行效果</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">大家先不要着急看代码，是骡子是马，先拉出来溜溜，我们通过ros2 run命令，运行编译好的课程代码，看下这个节点执行的效果如何，然后再来分析代码的实现过程，做到知其然也知其所以然。</font>\n\n\n\n```plain\n$ ros2 run learning_node node_helloworld\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">运行成功后，可以在终端中看到循环打印“Hello World”字符串的效果。</font>\n\n![](/images/posts/ROS学习/8.png)\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">代码解析</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">这个节点是如何实现的呢？我们来看下代码。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">learning_node/node_helloworld.py</font>\n\n```python\n#!/usr/bin/env python3 \n# -*- coding: utf-8 -*-\n\n\"\"\"\n@作者: 古月居(www.guyuehome.com)\n@说明: ROS2节点示例-发布“Hello World”日志信息, 使用面向过程的实现方式\n\"\"\"\n\nimport rclpy                                   # ROS2 Python接口库\nfrom rclpy.node import Node                    # ROS2 节点类\nimport time\n\ndef main(args=None):                           # ROS2节点主入口main函数\n    rclpy.init(args=args)                      # ROS2 Python接口初始化\n    node = Node(\"node_helloworld\")             # 创建ROS2节点对象并进行初始化\n\n    while rclpy.ok():                          # ROS2系统是否正常运行\n        node.get_logger().info(\"Hello World\")  # ROS2日志输出\n        time.sleep(0.5)                        # 休眠控制循环时间\n\n    node.destroy_node()                        # 销毁节点对象    \n    rclpy.shutdown()                           # 关闭ROS2 Python接口\n```\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">完成代码的编写后需要设置功能包的编译选项，让系统知道Python程序的入口，打开功能包的setup.py文件，加入如下入口点的配置：</font>\n\n```json\n entry_points={\n        'console_scripts': [\n         'node_helloworld       = learning_node.node_helloworld:main',\n        ],\n```\n\n### **<font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点流程</font>**\n<font style=\"color:rgba(0, 0, 0, 0.87);\">代码中出现的函数大家未来会经常用到，大家先不用纠结函数的具体使用方法，更重要的是理解节点的编码流程。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">总结一下，想要实现一个节点，代码的实现流程是这样做：</font>\n\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">编程接口初始化</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点并初始化</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">实现节点功能</font>\n+ <font style=\"color:rgba(0, 0, 0, 0.87);\">销毁节点并关闭接口</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\">大家如果有学习过C++或者Pyhton的话，应该可以发现这里我们使用的是面向过程的编程方法，这种方式虽然实现简单，但是对于稍微复杂一点的机器人系统，就很难做到模块化编码。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.87);\"></font>\n\n{% externalLinkCard \"\" \"https://www.f123.club/\" \"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" %}\n\n{% heatMapCard %}\n\n{% tagRoulette \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\" \"🕹️\" %}","slug":"ROS学习","published":1,"updated":"2025-07-16T09:38:39.484Z","layout":"post","photos":[],"_id":"cmd71t80s000f3cw68px82txx","content":"<p>1、工作空间</p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">类似的，在ROS机器人开发中，我们针对机器人某些功能进行代码开始时，各种编写的代码、参数、脚本等文件，也需要放置在某一个文件夹里进行管理，这个文件夹在ROS系统中就叫做</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">工作空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">所以工作空间是一个存放项目开发相关文件的文件夹，也是</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">开发过程中存放所有资料的大本营</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ROS系统中一个典型的工作空间结构如图所示，这个dev_ws就是工作空间的根目录，里边会有四个子目录，或者叫做四个子空间。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/1.png\" alt=\"\" /></p>\n<ul>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">src，代码空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，未来编写的代码、脚本，都需要人为的放置到这里；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">build，编译空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，保存编译过程中产生的中间文件；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">install，安装空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，放置编译得到的可执行文件和脚本；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">log，日志空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，编译和运行过程中，保存各种警告、错误、信息等日志。</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">总体来讲，这四个空间的文件夹，我们绝大部分操作都是在src中进行的，编译成功后，就会执行install里边的结果，build和log两个文件夹用的很少。</font></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087创建工作空间font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建工作空间font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建工作空间</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">了解了工作空间的概念和结果，接下来我们可以使用如下命令创建一个工作空间，并且下载教程的代码：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p ~/dev_ws/src</span><br><span class=\"line\">$ cd ~/dev_ws/src</span><br><span class=\"line\">$ git clone https://gitee.com/guyuehome/ros2_21_tutorials.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087自动安装依赖font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087自动安装依赖font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">自动安装依赖</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">我们从社区中下载的各种代码，多少都会有一些依赖，我们可以手动一个一个安装，也可以使用rosdep工具自动安装：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install -y python3-pip</span><br><span class=\"line\">$ sudo pip3 install rosdepc</span><br><span class=\"line\">$ sudo rosdepc init</span><br><span class=\"line\">$ rosdepc update</span><br><span class=\"line\">$ cd ..</span><br><span class=\"line\">$ rosdepc install -i --from-path src --rosdistro humble -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087编译工作空间font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087编译工作空间font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">编译工作空间</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">依赖安装完成后，就可以使用如下命令编译工作空间啦，如果有缺少的依赖，或者代码有错误，编译过程中会有报错，否则编译过程应该不会出现任何错误：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install python3-colcon-ros</span><br><span class=\"line\">$ cd ~/dev_ws/</span><br><span class=\"line\">$ colcon build</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">编译成功后，就可以在工作空间中看到自动生产的build、log、install文件夹了。</font></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087创建功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建功能包</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">如何在ROS2中创建一个功能包呢？我们可以使用这个指令：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ros2 pkg create --build-type &lt;build-type&gt; &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ros2命令中：</font></p>\n<ul>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">pkg</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示功能包相关的功能；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">create</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示创建功能包；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">build-type</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示新创建的功能包是C<ins>还是Python的，如果使用C</ins>或者C，那这里就跟ament_cmake，如果使用Python，就跟ament_python；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package_name</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：新建功能包的名字。</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">比如在终端中分别创建C++和Python版本的功能包：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/dev_ws/src</span><br><span class=\"line\">$ ros2 pkg create --build-type ament_cmake learning_pkg_c               # C++</span><br><span class=\"line\">$ ros2 pkg create --build-type ament_python learning_pkg_python # Python</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087编译功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087编译功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">编译功能包</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">在创建好的功能包中，我们可以继续完成代码的编写，之后需要编译和配置环境变量，才能正常运行：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/dev_ws</span><br><span class=\"line\">$ colcon build   # 编译工作空间所有功能包</span><br><span class=\"line\">$ source install/local_setup.bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087功能包的结构font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087功能包的结构font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">功能包的结构</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">功能包并不是普通的文件夹，那如何判断一个文件夹是否是功能包呢？我们来分析下刚才新创建两个功能包的结构。</font></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087c功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087c功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">首先看下C++类型的功能包，其中必然存在两个文件：</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">和</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">CMakerLists.txt</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/2.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容如下，包含功能包的版权描述，和各种依赖的声明。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/3.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">CMakeLists.txt文件是编译规则，C++代码需要编译才能运行，所以必须要在该文件中设置如何编译，使用CMake语法。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/4.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087python功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087python功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">Python功能包</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包需要将源码编译成可执行文件，但是Python语言是解析型的，不需要编译，所以会有一些不同，但也会有这两个文件：</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">和</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/5.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容和C++版本功能包一样，包含功能包的版权描述，和各种依赖的声明。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/6.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py文件里边也包含一些版权信息，除此之外，还有“entry_points”配置的程序入口，在后续编程讲解中，我们会给大家介绍如何使用。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/7.png\" alt=\"\" /></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087hello-world节点面向过程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087hello-world节点面向过程font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">Hello World节点（面向过程）</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ROS2中节点的实现当然是需要编写程序了，我们从Hello World例程开始，先来实现一个最为简单的节点，功能并不复杂，就是循环打印一个“Hello World”字符串到终端中。</font></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087运行效果font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087运行效果font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">运行效果</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">大家先不要着急看代码，是骡子是马，先拉出来溜溜，我们通过ros2 run命令，运行编译好的课程代码，看下这个节点执行的效果如何，然后再来分析代码的实现过程，做到知其然也知其所以然。</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ros2 run learning_node node_helloworld</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">运行成功后，可以在终端中看到循环打印“Hello World”字符串的效果。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/8.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087代码解析font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087代码解析font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">代码解析</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">这个节点是如何实现的呢？我们来看下代码。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">learning_node/node_helloworld.py</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3 </span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">@作者: 古月居(www.guyuehome.com)</span></span><br><span class=\"line\"><span class=\"string\">@说明: ROS2节点示例-发布“Hello World”日志信息, 使用面向过程的实现方式</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> rclpy                                   <span class=\"comment\"># ROS2 Python接口库</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> rclpy.node <span class=\"keyword\">import</span> Node                    <span class=\"comment\"># ROS2 节点类</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>(<span class=\"params\">args=<span class=\"literal\">None</span></span>):                           <span class=\"comment\"># ROS2节点主入口main函数</span></span><br><span class=\"line\">    rclpy.init(args=args)                      <span class=\"comment\"># ROS2 Python接口初始化</span></span><br><span class=\"line\">    node = Node(<span class=\"string\">&quot;node_helloworld&quot;</span>)             <span class=\"comment\"># 创建ROS2节点对象并进行初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> rclpy.ok():                          <span class=\"comment\"># ROS2系统是否正常运行</span></span><br><span class=\"line\">        node.get_logger().info(<span class=\"string\">&quot;Hello World&quot;</span>)  <span class=\"comment\"># ROS2日志输出</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.5</span>)                        <span class=\"comment\"># 休眠控制循环时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    node.destroy_node()                        <span class=\"comment\"># 销毁节点对象    </span></span><br><span class=\"line\">    rclpy.shutdown()                           <span class=\"comment\"># 关闭ROS2 Python接口</span></span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">完成代码的编写后需要设置功能包的编译选项，让系统知道Python程序的入口，打开功能包的setup.py文件，加入如下入口点的配置：</font></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry_points=<span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">       &#x27;console_scripts&#x27;<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        &#x27;node_helloworld       = learning_node.node_helloworld<span class=\"punctuation\">:</span>main&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">       <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgba0-0-0-087创建节点流程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建节点流程font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点流程</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">代码中出现的函数大家未来会经常用到，大家先不用纠结函数的具体使用方法，更重要的是理解节点的编码流程。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">总结一下，想要实现一个节点，代码的实现流程是这样做：</font></p>\n<ul>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">编程接口初始化</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点并初始化</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">实现节点功能</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">销毁节点并关闭接口</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">大家如果有学习过C++或者Pyhton的话，应该可以发现这里我们使用的是面向过程的编程方法，这种方式虽然实现简单，但是对于稍微复杂一点的机器人系统，就很难做到模块化编码。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\"></font></p>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" title=\"https://www.f123.club/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      \n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">https://www.f123.club/</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🕹️</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  ","excerpt":"","more":"<p>1、工作空间</p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">类似的，在ROS机器人开发中，我们针对机器人某些功能进行代码开始时，各种编写的代码、参数、脚本等文件，也需要放置在某一个文件夹里进行管理，这个文件夹在ROS系统中就叫做</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">工作空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">所以工作空间是一个存放项目开发相关文件的文件夹，也是</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">开发过程中存放所有资料的大本营</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ROS系统中一个典型的工作空间结构如图所示，这个dev_ws就是工作空间的根目录，里边会有四个子目录，或者叫做四个子空间。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/1.png\" alt=\"\" /></p>\n<ul>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">src，代码空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，未来编写的代码、脚本，都需要人为的放置到这里；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">build，编译空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，保存编译过程中产生的中间文件；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">install，安装空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，放置编译得到的可执行文件和脚本；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">log，日志空间</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">，编译和运行过程中，保存各种警告、错误、信息等日志。</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">总体来讲，这四个空间的文件夹，我们绝大部分操作都是在src中进行的，编译成功后，就会执行install里边的结果，build和log两个文件夹用的很少。</font></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087创建工作空间font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建工作空间font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建工作空间</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">了解了工作空间的概念和结果，接下来我们可以使用如下命令创建一个工作空间，并且下载教程的代码：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p ~/dev_ws/src</span><br><span class=\"line\">$ cd ~/dev_ws/src</span><br><span class=\"line\">$ git clone https://gitee.com/guyuehome/ros2_21_tutorials.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087自动安装依赖font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087自动安装依赖font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">自动安装依赖</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">我们从社区中下载的各种代码，多少都会有一些依赖，我们可以手动一个一个安装，也可以使用rosdep工具自动安装：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install -y python3-pip</span><br><span class=\"line\">$ sudo pip3 install rosdepc</span><br><span class=\"line\">$ sudo rosdepc init</span><br><span class=\"line\">$ rosdepc update</span><br><span class=\"line\">$ cd ..</span><br><span class=\"line\">$ rosdepc install -i --from-path src --rosdistro humble -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087编译工作空间font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087编译工作空间font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">编译工作空间</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">依赖安装完成后，就可以使用如下命令编译工作空间啦，如果有缺少的依赖，或者代码有错误，编译过程中会有报错，否则编译过程应该不会出现任何错误：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install python3-colcon-ros</span><br><span class=\"line\">$ cd ~/dev_ws/</span><br><span class=\"line\">$ colcon build</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">编译成功后，就可以在工作空间中看到自动生产的build、log、install文件夹了。</font></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087创建功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建功能包</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">如何在ROS2中创建一个功能包呢？我们可以使用这个指令：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ros2 pkg create --build-type &lt;build-type&gt; &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ros2命令中：</font></p>\n<ul>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">pkg</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示功能包相关的功能；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">create</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示创建功能包；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">build-type</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：表示新创建的功能包是C<ins>还是Python的，如果使用C</ins>或者C，那这里就跟ament_cmake，如果使用Python，就跟ament_python；</font></li>\n<li><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package_name</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">：新建功能包的名字。</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">比如在终端中分别创建C++和Python版本的功能包：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/dev_ws/src</span><br><span class=\"line\">$ ros2 pkg create --build-type ament_cmake learning_pkg_c               # C++</span><br><span class=\"line\">$ ros2 pkg create --build-type ament_python learning_pkg_python # Python</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087编译功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087编译功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">编译功能包</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">在创建好的功能包中，我们可以继续完成代码的编写，之后需要编译和配置环境变量，才能正常运行：</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/dev_ws</span><br><span class=\"line\">$ colcon build   # 编译工作空间所有功能包</span><br><span class=\"line\">$ source install/local_setup.bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"font-stylecolorrgba0-0-0-087功能包的结构font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087功能包的结构font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">功能包的结构</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">功能包并不是普通的文件夹，那如何判断一个文件夹是否是功能包呢？我们来分析下刚才新创建两个功能包的结构。</font></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087c功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087c功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">首先看下C++类型的功能包，其中必然存在两个文件：</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">和</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">CMakerLists.txt</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/2.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容如下，包含功能包的版权描述，和各种依赖的声明。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/3.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">CMakeLists.txt文件是编译规则，C++代码需要编译才能运行，所以必须要在该文件中设置如何编译，使用CMake语法。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/4.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087python功能包font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087python功能包font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">Python功能包</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">C++功能包需要将源码编译成可执行文件，但是Python语言是解析型的，不需要编译，所以会有一些不同，但也会有这两个文件：</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">和</font><strong><font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py</font></strong><font style=\"color:rgba(0, 0, 0, 0.87);\">。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/5.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">package.xml文件的主要内容和C++版本功能包一样，包含功能包的版权描述，和各种依赖的声明。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/6.png\" alt=\"\" /></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">setup.py文件里边也包含一些版权信息，除此之外，还有“entry_points”配置的程序入口，在后续编程讲解中，我们会给大家介绍如何使用。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/7.png\" alt=\"\" /></p>\n<h2 id=\"font-stylecolorrgba0-0-0-087hello-world节点面向过程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087hello-world节点面向过程font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">Hello World节点（面向过程）</font></strong></h2>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">ROS2中节点的实现当然是需要编写程序了，我们从Hello World例程开始，先来实现一个最为简单的节点，功能并不复杂，就是循环打印一个“Hello World”字符串到终端中。</font></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087运行效果font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087运行效果font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">运行效果</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">大家先不要着急看代码，是骡子是马，先拉出来溜溜，我们通过ros2 run命令，运行编译好的课程代码，看下这个节点执行的效果如何，然后再来分析代码的实现过程，做到知其然也知其所以然。</font></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ros2 run learning_node node_helloworld</span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">运行成功后，可以在终端中看到循环打印“Hello World”字符串的效果。</font></p>\n<p><img src=\"/images/posts/ROS%E5%AD%A6%E4%B9%A0/8.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgba0-0-0-087代码解析font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087代码解析font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">代码解析</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">这个节点是如何实现的呢？我们来看下代码。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">learning_node/node_helloworld.py</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3 </span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">@作者: 古月居(www.guyuehome.com)</span></span><br><span class=\"line\"><span class=\"string\">@说明: ROS2节点示例-发布“Hello World”日志信息, 使用面向过程的实现方式</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> rclpy                                   <span class=\"comment\"># ROS2 Python接口库</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> rclpy.node <span class=\"keyword\">import</span> Node                    <span class=\"comment\"># ROS2 节点类</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>(<span class=\"params\">args=<span class=\"literal\">None</span></span>):                           <span class=\"comment\"># ROS2节点主入口main函数</span></span><br><span class=\"line\">    rclpy.init(args=args)                      <span class=\"comment\"># ROS2 Python接口初始化</span></span><br><span class=\"line\">    node = Node(<span class=\"string\">&quot;node_helloworld&quot;</span>)             <span class=\"comment\"># 创建ROS2节点对象并进行初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> rclpy.ok():                          <span class=\"comment\"># ROS2系统是否正常运行</span></span><br><span class=\"line\">        node.get_logger().info(<span class=\"string\">&quot;Hello World&quot;</span>)  <span class=\"comment\"># ROS2日志输出</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.5</span>)                        <span class=\"comment\"># 休眠控制循环时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    node.destroy_node()                        <span class=\"comment\"># 销毁节点对象    </span></span><br><span class=\"line\">    rclpy.shutdown()                           <span class=\"comment\"># 关闭ROS2 Python接口</span></span><br></pre></td></tr></table></figure>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">完成代码的编写后需要设置功能包的编译选项，让系统知道Python程序的入口，打开功能包的setup.py文件，加入如下入口点的配置：</font></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry_points=<span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">       &#x27;console_scripts&#x27;<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        &#x27;node_helloworld       = learning_node.node_helloworld<span class=\"punctuation\">:</span>main&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">       <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"font-stylecolorrgba0-0-0-087创建节点流程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgba0-0-0-087创建节点流程font\"></a> <strong><font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点流程</font></strong></h3>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">代码中出现的函数大家未来会经常用到，大家先不用纠结函数的具体使用方法，更重要的是理解节点的编码流程。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">总结一下，想要实现一个节点，代码的实现流程是这样做：</font></p>\n<ul>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">编程接口初始化</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">创建节点并初始化</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">实现节点功能</font></li>\n<li><font style=\"color:rgba(0, 0, 0, 0.87);\">销毁节点并关闭接口</font></li>\n</ul>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\">大家如果有学习过C++或者Pyhton的话，应该可以发现这里我们使用的是面向过程的编程方法，这种方式虽然实现简单，但是对于稍微复杂一点的机器人系统，就很难做到模块化编码。</font></p>\n<p><font style=\"color:rgba(0, 0, 0, 0.87);\"></font></p>\n<div class=\"post-link-card-wrap\">\n    <div class=\"post-link-card\">\n      <a href=\"https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png\" title=\"https://www.f123.club/\" rel=\"noopener external nofollow noreferrer\" target=\"_blank\"></a>\n      \n      <div class=\"post-link-card-item-wrap\">\n        <div class=\"post-link-card-title\">https://www.f123.club/</div>\n        <div class=\"post-link-card-excerpt\"><span class=\"icon-link\"></span>https://www.f123.club/wp-content/uploads/2021/08/UN77_C6SA5GU39GBAWJ.png</div>\n      </div>\n    </div>\n  </div>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n<div class=\"roll\">\n    <div class=\"roll-button\" onclick=\"rollTagRoulette()\">🕹️</div>\n    <div class=\"roll-tags\"><span class=\"ready removing\"></span></div>\n</div>\n<script>\nvar rollTagRoulette = () => {\n  var tags = \"记忆衰退,表达欲丧失,更加怠惰,无感,好想睡觉\".split(\",\");\n  var tag = document.querySelector('.roll-tags');\n  tag.innerHTML = '';\n\n  var interval = setInterval(function () {\n    var span = document.createElement('span');\n    span.classList.add('ready');\n    span.classList.add('blur');\n    span.innerText = tags[Math.floor(Math.random() * tags.length)];\n    tag.appendChild(span);\n    spans = tag.querySelectorAll('span');\n    for (var i = 0; i < spans.length; i++) {\n      spans[i].classList.add('removing');\n    }\n  }, 200);\n\n  setTimeout(function () {\n    clearInterval(interval);\n    for (var i = 0; i < spans.length-1; i++) {\n      tag.removeChild(spans[i]);\n    }\n    setTimeout(function () {\n      spans[spans.length-1].classList.remove('blur');\n    }, 100);\n  }, 1000);\n}\n\nrollTagRoulette(); // 页面加载时自动触发一次滚动\n</script>\n\n<link rel=\"stylesheet\" href=\"/css/tag-roulette.css\">\n\n  "},{"title":"STM32单片机外设初始化例程","mermaid":true,"date":"2023-01-17T16:00:00.000Z","cover":"rgba(138, 237, 234, 0.47)","comments":1,"_content":"\n# STM32单片机外设初始化例程\n\n## 一、起因\n\n由于自己学习STM32单片机是零零散散的学习的，没有系统的进行学习，学习的东西非常的混乱，没有做过什么整体的框架整理，所以在此将STM32的外设的初始化进行系统的打包成一个文档，把程序的过程进行整理。\n\n## 二、基本流程\n\n### 1、基本STM32硬件知识点\n\nSTM32的单片机的开发程序发展的流程基本都是从寄存器阶段到标准库阶段到现在的HAL库、RTOS。所以第一步我们需要清楚单片机的整体工作流程。\n\n![](/images/posts/STM32单片机外设初始化例程/1.webp)\n\n通过图上可以看出，STM32单片机有一个Cortex-M3的内核CPU控制，分出三条数据总线控制各个外设：\n\n- **指令存储区总线（两条）**：I-Code总线和D-Code总线\n- **系统总线（System）**：用于访问内存和外设\n- **私有外设总线**：负责一部分私有外设的访问，主要就是访问调试组件\n\nI-Code用于取指，D-Code用于查表等操作，它们按最佳执行速度进行优化。\n\n系统总线（System）用于访问内存和外设，覆盖的区域包括SRAM，片上外设，片外RAM，片外扩展设备，以及系统级存储区的部分空间。\n\n私有外设总线负责一部分私有外设的访问，主要就是访问调试组件。它们也在系统级存储区。\n\n还有一个DMA总线，从字面上看，DMA是data memory access的意思，是一种连接内核和外设的桥梁，它可以访问外设、内存，传输不受CPU的控制，并且是双向通信。简而言之，这个家伙就是一个速度很快的且不受老大控制的数据搬运工。\n\n从结构框图上看，STM32的外设有串口、定时器、IO口、FSMC、SDIO、SPI、I2C等，这些外设按照速度的不同，分别挂载到AHB、APB2、APB1这三条总线上。\n\n其中寄存器其实可以理解为内存的地址，cpu通过地址访问对应的空间的内存数据，这个内存数据用来控制各个外设的开关。\n\n`stm32`的函数一切库的封装始于寄存器的映射操作。\n![](/images/posts/STM32单片机外设初始化例程/2.webp)\n![](/images/posts/STM32单片机外设初始化例程/4.webp)\n\n如果进行寄存器开发，就需要怼地址以及对寄存器进行字节赋值，不仅效率低而且容易出错。\n\n因此我们开始使用库函数进行编程。\n![](/images/posts/STM32单片机外设初始化例程/3.webp)\n\n### 内核库文件分析\n\n#### `cor_cm3.h`\n这个头文件实现了：  \n1. 内核结构体寄存器定义  \n2. 内核寄存器内存映射  \n3. 内存寄存器位定义  \n\n> 跟处理器相关的头文件`stm32f10x.h`实现的功能一样，一个是针对内核的寄存器，一个是针对内核之外，即处理器的寄存器。\n\n#### `misc.h`\n内核应用函数库头文件，对应`stm32f10x_xxx.h`。\n\n#### `misc.c`\n内核应用函数库文件，对应`stm32f10x_xxx.c`。\n\n在CM3这个内核里面还有一些功能组件，如：\n- `NVIC`\n- `SCB` \n- `ITM`\n- `MPU`\n- `CoreDebug`\n\n> CM3带有非常丰富的功能组件，但是芯片厂商在设计MCU的时候有一些并不是非要不可的，是可裁剪的，比如`MPU`、`ITM`等在STM32里面就没有。  \n> 其中`NVIC`在每一个CM3内核的单片机中都会有，但都会被裁剪，只能是CM3 NVIC的一个子集。在`NVIC`里面还有一个`SysTick`，是一个系统定时器，可以提供时基，一般为操作系统定时器所用。\n\n`misc.h`和`mics.c`这两个文件提供了操作这些组件的函数，并可以在CM3内核单片机直接移植。\n\n---\n\n### 处理器外设库文件分析\n\n#### `startup_stm32f10x_hd.s`\n这个是由汇编编写的启动文件，是STM32上电启动的第一个程序，启动文件主要实现了：\n\n- 初始化堆栈指针 `SP`\n- 设置 `PC` 指针`=Reset_Handler`\n- 设置向量表的地址，并初始化向量表（向量表里面放的是 STM32 所有中断函数的入口地址）\n- 调用库函数 `SystemInit`（把系统时钟配置成 72M，`SystemInit` 在库文件 `stytem_stm32f10x.c` 中定义）\n- 跳转到标号`_main`，最终去到 C 的世界\n\n#### `system_stm32f10x.c`\n这个文件的作用是里面实现了各种常用的系统时钟设置函数，有：\n- 72M\n- 56M \n- 48M\n- 36M\n- 24M\n- 8M\n\n> 我们使用的是把系统时钟设置成72M。\n\n#### `Stm32f10x.h`\n这个头文件非常重要，实现了：\n\n1. 处理器外设寄存器的结构体定义\n2. 处理器外设的内存映射\n3. 处理器外设寄存器的位定义\n\n> 关于1和2我们在用寄存器点亮LED的时候有讲解。\n\n**关于第3点说明：**  \n处理器外设寄存器的位定义就是把外设的每个寄存器的每一个位写1的16进制数定义成一个宏，宏名即用该位的名称表示。\n\n**示例：**\n```c\n// 一般的操作方法\nADC->CR2 = 0x00000001;\n\n// 使用位定义后的操作\nADC->CR2 = ADC_CR2_ADON;\n```\n\n#### `stm32f10x_xxx.h`\n外设xxx应用函数库头文件，这里面主要定义了实现外设某一功能的结构体。\n\n> 比如通用定时器有很多功能：定时功能、输出比较功能、输入捕捉功能。这个头文件就为我们打包好了要实现某一个功能的寄存器（以结构体的形式定义）。\n\n#### `stm32f10x_xxx.c`\n外设xxx应用函数库，这里面写好了操作xxx外设的所有常用的函数。\n\n> 我们使用库编程的时候，使用的最多的就是这里的函数。\n\n---\n\n### SystemInit 相关问题\n\n在工程中新建`main.c`后直接编译会报错：\n```\nUndefined symbol SystemInit (referred from startup_stm32f10x_hd.o).\n```\n\n**原因分析：**  \n从启动文件`startup_stm32f10x_hd.s`中我们知道：\n```assembly\n;Reset handler\nReset_Handler PROC\n    EXPORT Reset_Handler [WEAK]\n    IMPORT __main\n    ;IMPORT SystemInit\n    ;LDR R0, =SystemInit\n    BLX R0\n    LDR R0, =__main\n    BX R0\nENDP\n```\n> 汇编中`;`分号是注释的意思  \n> `Reset_Handler`调用了`SystemInit`函数（用来初始化系统时钟），该函数是在库文件`system_stm32f10x.c`中实现的。\n\n**解决方案：**  \n在main文件里面定义一个`SystemInit`空函数，为的是骗过编译器，把这个错误去掉。\n\n> 关于配置系统时钟之后会出文章RCC时钟树详细介绍，主要配置：\n> - 时钟控制寄存器(RCC_CR)\n> - 时钟配置寄存器(RCC_CFGR)  \n> \n> 但最好是直接使用CubeMX直接生成，因为它的配置过程有些冗长。  \n> 如果使用库，库函数`SystemInit`会帮我们把系统时钟设置成72M。\n\n\n## <font style=\"color:rgb(18, 18, 18);\">2、基本stm32外设配置流程</font>\n**程序模板**\n\n#### 第一步：申明结构体；\n```c\nxxx_InitTypeDef xxx_InitStructure;\n```\n\n#### 第二步：开启时钟；\n（第一步和第二步顺序不能调换：标准c要求所有变量/结构体,都必须在代码段之前声明）\n\n```c\nRCC_xPeriphClockCmd(RCC_AxBxPeriph_xxx, ENABLE)\n```\n\n> *2.5：引脚复用（如果有）并且开启复用的时钟\n>\n\n```c\nGPIO_PinAFConfig(GPIOx,GPIO_PinSourcex,GPIO_AF_x)\n```\n\n#### 第三步：初始化结构体；\n```c\nxxx_Init(xxx,&xxx_InitStructure)\n```\n\n### *若有设置中断\n> 中断名在startup_stm32f40_41xx.s中定义。\n>\n\n#### 第一步：使能外设某特定中断（定时器，串口，ADC）\n```c\nxxx_ITConfig(xxx, xxx, ENABLE);\n```\n\n#### 第二步：初始化 NVIC\n```c\nNVIC_Init(&NVIC_InitStructure);\n```\n\n#### 第三步：设置系统中断优先级分组(通常在主函数中配置）\n```c\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_x);\n```\n\n中断服务函数(典型）\n\n```c\nvoid xxx_IRQHandler(void)\n{\n    if(xxx_GetITStatus(xxx)!=RESET)//判断某个线上的中断是否发生 \n  { …中断逻辑…\n      xxx_ClearITPendingBit(xxx); //清除 LINE 上的中断标志位 \n  }\n}\n```\n\n其它中断相关\n\n```c\nxxx_GetITStatus(xxx)//获取中断状态，查看中断是否发生 \n//\nxxx_ClearITPendingBit(xxx)；//清除\nelse\nxxx_ClearFlag(xxx);//清除\n//前者会先判断这种中断是否使能，使能了才去判断中断标志位，\n//而后者直接用来判断状态标志位。\n```\n\n### END.定时器/串口/ADC使能\n```c\nxxx_Cmd(xxx, ENABLE);\n```\n\n## 3、结构体变量配置具体形式\n#### 初始化结构体初始化 GPIO 的常用格式\n```c\nGPIO_InitTypeDef GPIO_InitStructure;\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_x | GPIO_Pin_x;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_xxx;\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\nGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;\nGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;\nGPIO_Init(GPIOx,&GPIO_InitStructure);\n```\n\n#### 初始化结构体初始化 USART 的常用格式\n```c\nUSART_InitTypeDef USART_InitStructure;\nUSART_InitStructure.USART_BaudRate = bound;//一般设置为 9600;\nUSART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为 8 位数据格式\nUSART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位\nUSART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位\nUSART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;\nUSART_InitStructure.USART_Mode = USART_Mode_Rx |USART_Mode_Tx;//收发模式\nUSART_Init(USARTX, &USART_InitStructure); //初始化串口\n```\n\n#### 初始化结构体初始化 NVIC 的常用格式\n```c\nNVIC_InitTypeDef NVIC_InitStructure;\nNVIC_InitStructure.NVIC_IRQChannel = xxx_IRQn;//设置中断名\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3;//抢占优先级 3\nNVIC_InitStructure.NVIC_IRQChannelSubPriority =3; //响应优先级 3\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ 通道使能\nNVIC_Init(&NVIC_InitStructure); //根据指定的参数初始化 VIC 寄存器、\n```\n\n#### 初始化结构体初始化外部中断的常用格式\n```c\n EXTI_InitTypeDef EXTI_InitStructure;\n EXTI_InitStructure.EXTI_Line=EXTI_Linex;\n EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;\n EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_xxx;//上升，下降沿或任意电平\n EXTI_InitStructure.EXTI_LineCmd = ENABLE;\n EXTI_Init(&EXTI_InitStructure); //初始化外设 EXTI 寄存器\n```\n\n#### 初始化结构体初始化定时器中断的常用格式\n```c\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;\nTIM_TimeBaseStructure.TIM_Period = xxx;\nTIM_TimeBaseStructure.TIM_Prescaler =xxx; \nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIVx; \nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_x;\nTIM_TimeBaseInit(TIMx, &TIM_TimeBaseStructure);\n```\n\n#### 初始化结构体初始化输出比较的常用格式\n```c\nTIM_OCInitTypeDef TIM_OCInitStructure;\nTIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWMx; //选择模式 PWM\nTIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; //比较输出使能\nTIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_xxx; //输出极性\nTIM_OCxInit(TIMx, &TIM_OCInitStructure); //根据T指定的参数初始化外设\n```\n\n\n\n#### 设置 ADC 的通用控制寄存器 CCR( common control register)\n```c\nADC_CommonInitTypeDef ADC_CommonInitStructure;\nADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;//独立模式\nADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_xCycles;//两个采样阶段之间的延迟周期数，5~20\nADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;\nADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;//需保证 ADC1 的时钟频率不超过 36MHz。\nADC_CommonInit(&ADC_CommonInitStructure);//初始化\n```\n\n#### 初始化结构体初始化ADC的常用格式\n```c\nADC_InitTypeDef ADC_InitStructure;\nADC_InitStructure.ADC_Resolution = ADC_Resolution_xb;//6,8,10,12\nADC_InitStructure.ADC_ScanConvMode = DISABLE;//非扫描模式\nADC_InitStructure.ADC_ContinuousConvMode = DISABLE;//关闭连续模式\nADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;\n//禁止触发检测，使用软件触发\nADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;//右对齐\nADC_InitStructure.ADC_NbrOfConversion = 1;//1 个转换在规则序列中\nADC_Init(ADC1, &ADC_InitStructure);//ADC 初始化\n```\n\n# 三、GPIO配置\n### 1、常用函数\n\n> **GPIO_Init** 初始化GPIO，设置GPIO的模式，速度，引脚数 \n**GPIO_ReadInputDataBit**读取一位GPIO的输入数据\t\n**GPIO_ReadInputData**\t读取GPIOx的输入数据\t\n**GPIO_ReadOutputDataBit**\t读取一位GPIO的输出数据\t\n**GPIO_ReadOutputDat**a\t读取GPIOx的输出数据\t\n**GPIO_SetBits**\t使GPIO设置为高电平，可一起设置多，也可以设置一个\t\n**GPIO_ResetBits**\t使GPIO设置为高电平，课一起设置多，也可以设置一个\t\n**GPIO_WriteBit**\t设置GPIO的一个管脚\t\n**GPIO_Write**\t设置GPIOx全部管脚\t\n**GPIO_ToggleBits** 翻转指定的GPIO口\n**GPIO_PinAFConfig** 改变指定管脚的映射关系，即配置指定管脚的复用功能\n\n### <font style=\"color:rgb(77, 77, 77);\">设计框图</font>\n![](/images/posts/4.png)\n\n### <font style=\"color:rgb(77, 77, 77);\">例程代码</font>\n#### 示例一:<font style=\"color:rgb(77, 77, 77);\">LED灯初始化GPIO口例程</font>\n```c\nvoid LED_GPIO_Config(void)\n{\t\t\n\t\t/*定义一个GPIO_InitTypeDef类型的结构体*/\n\t\tGPIO_InitTypeDef GPIO_InitStructure;\n\t\t/*开启LED相关的GPIO外设时钟*/\n\t\tRCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOB,ENABLE);\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;\n\t\t/*设置引脚模式为通用推挽输出*/\n\t\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   \n\t\t/*设置引脚速率为50MHz */   \n\t\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; \n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOC, &GPIO_InitStructure);\t\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;\n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;\n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOC, &GPIO_InitStructure);\n}\n```\n\n参数：**GPIO_InitStruct**，GPIO的初始化相关结构体。该结构体里的成员变量决定了我们具体的初始化参数。以下进行说明：\n\n              GPIO_Pin：指定具体的io脚，如GPIO_Pin_0，GPIO_Pin_1这样的宏定义。\n\n              GPIO_Mode：指定GPIO的模式，\n\n**输入模式**\n\n\t\t+ 输入浮空： GPIO_Mode_IN_FLOATING\n\t\t+  输入上拉： GPIO_Mode_IPU\n\t\t+  输入下拉 ：GPIO_Mode_IPD\n\t\t+  模拟输入 ：GPIO_Mode_AIN\n\n**输出模式**\n\n            +  开漏输出 GPIO_Mode_Out_OD\n            + 推挽输出 GPIO_Mode_Out_PP\n            + 复用功能推挽 GPIO_Mode_AF_PP\n            +  复用功能开漏 GPIO_Mode_AF_OD\n\nGPIO_Speed：指定IO最快翻转速度，也就是当使用IO产生频率（如PWM）的最大速度：\n\n            + GPIO_Speed_10MHz,\n            + GPIO_Speed_2MHz, \n            + GPIO_Speed_50MHz等\n\n#### 示例二:把GPIO配置成输入\n> 常规方式按键使用中断触发，本案例很少被使用在按键中。\n>\n\n```c\nvoid KEY_Init(void)\n{\nGPIO_InitTypeDef GPIO_InitStructure;\n//结构体定义\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);\n//使能 PORTA,PORTC 时钟\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;\n//PA15\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; \n//设置成上拉输入\nGPIO_Init(GPIOA, &GPIO_InitStructure);\n//初始化 GPIOA15\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;\n//PC5\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; \n//设置成上拉输入\nGPIO_Init(GPIOC, &GPIO_InitStructure);\n//初始化 GPIOC5\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;\n//PA0\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; \n//PA0 设置成输入，默认下拉 \nGPIO_Init(GPIOA, &GPIO_InitStructure);\n//初始化 GPIOA.0\n}\n```\n\n#### <font style=\"color:rgb(51, 51, 51);\">示例三:配置复用功能 PA9 PA10 配置成串口1的收发接口</font>\n```c\n    GPIO_InitTypeDef GPIO_InitStructure;\n    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);//使能GPIOA时钟\n    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);//使能USART1时钟\n    //串口1对应引脚复用映射\n    GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);//GPIOA9复用为USART1\n    GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);//GPIOA10复用为USART1\n    //USART1端口配置\n    GPIO_InitStructure.GPIO_Pin= GPIO_Pin_9 | GPIO_Pin_10; //GPIOA9与GPIOA10\n    GPIO_InitStructure.GPIO_Mode= GPIO_Mode_AF;//复用功能\n    GPIO_InitStructure.GPIO_Speed= GPIO_Speed_50MHz;      //速度50MHz\n    GPIO_InitStructure.GPIO_OType= GPIO_OType_PP; //推挽复用输出\n    GPIO_InitStructure.GPIO_PuPd= GPIO_PuPd_UP; //上拉\n    GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化PA9，PA10\n```\n\n# 四、外部中断\n### 1、常用函数\n>void EXTI_DeInit(void); 重设为缺省值\nvoid EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct); 根据EXTI_InitStruct结构体的配置进行初始化\nvoid EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);把结构体变量的每一个变量按照缺省值填入。\nvoid EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);产生一个中断\nFlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);获取指定的EXTI线路挂起的标志位\nvoid EXTI_ClearFlag(uint32_t EXTI_Line);清楚EXTI的挂起标志位\nITStatus EXTI_GetITStatus(uint32_t EXTI_Line);检查指定的EXTI线路触发请求发送与否\nvoid EXTI_ClearITPendingBit(uint32_t EXTI_Line);清楚EXTI线路挂起位\n\n---\n\nvoidNVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)<font style=\"color:rgb(77, 77, 77);\">中断优先级分组</font>\n\n| **<font style=\"color:rgb(79, 79, 79);\">分组号</font>** | **<font style=\"color:rgb(79, 79, 79);\">4 bit 分配情况</font>** | **<font style=\"color:rgb(79, 79, 79);\">说明</font>** |\n| :---: | :---: | :---: |\n| <font style=\"color:rgb(79, 79, 79);\">第0组</font> | <font style=\"color:rgb(79, 79, 79);\">0 : 4</font> | <font style=\"color:rgb(79, 79, 79);\">无抢占式优先级，16 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第1组</font> | <font style=\"color:rgb(79, 79, 79);\">1 : 3</font> | <font style=\"color:rgb(79, 79, 79);\">2 个抢占式优先级，8 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第2组</font> | <font style=\"color:rgb(79, 79, 79);\">2 : 2</font> | <font style=\"color:rgb(79, 79, 79);\">4 个抢占式优先级，4 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第3组</font> | <font style=\"color:rgb(79, 79, 79);\">3 : 1</font> | <font style=\"color:rgb(79, 79, 79);\">8 个抢占式优先级，2 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第4组</font> | <font style=\"color:rgb(79, 79, 79);\">4 : 0</font> | <font style=\"color:rgb(79, 79, 79);\">16 个抢占式优先级，无子优先级</font> |\n\n\n> 如果用户没有设置优先级分组，即用户没有调用\">NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)则优先级分组默认设置为分组 0，即无抢占式优先级、16个子优先级。\n> NVIC_Init(&NVIC_InitStruct); 根据NVIC_InitStruct结构体的配置进行初始化\n\n### 设计框图\n![](/images/posts/STM32单片机外设初始化例程/5.png)\n\n![](/images/posts/STM32单片机外设初始化例程/6.png)\n\n### 例程代码\n**<font style=\"color:rgb(77, 77, 77);\">相关配置代码的介绍</font>**\n\n```c\n//0、初始化GPIO\nGPIO_InitTypeDef GPIO_InitStructure;\nGPIO_StructInit(&GPIO_InitStructure);\nGPIO_InitStructure.GPIO_Pin = Z_GPIO_PIN;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; //浮空输入\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\nGPIO_Init(Z_GPIO_PORT, &GPIO_InitStructure);\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);\t//使能复用功能时钟\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB, ENABLE);\n//1.配置中断线\nEXTI_InitTypeDef EXTI_InitStruct;//创建结构体来初始化中断线\nEXTI_ClearITPendingBit(EXTI_Line9);     //清除中断标志位\nGPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource5);\nEXTI_InitStructure.EXTI_Line = EXTI_Line13;//选择EXTI的信号源\nEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;/* EXTI为中断模式 */\nEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;/* 下降沿中断 */\nEXTI_InitStructure.EXTI_LineCmd = ENABLE;/* 使能中断 */\t\nEXTI_Init(&EXTI_InitStructure);\n//2.配置NVIC中断优先级\nNVIC_InitTypeDef NVIC_InitStructure;//创建结构体来初始化中断优先级\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//配置分组号\nNVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;\n//使能按键所在的外部中断通道\nNVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;\nNVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0x02;//设置抢占优先级\nNVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x01;//设置子优先级\nNVIC_Init(&NVIC_InitStruct);\n//3.实现中断服务函数（注意配置完之后清除函数的挂起）\nvoid EXTI0_IRQHandler(void)\n{\n\tdelay_ms(10); //消抖?\n\tif (WK_UP == 1)\n\t{\n\t\tLED0 = 1;//led函数宏\n\t\tLED1 = 1;\n\t}\n\tEXTI_ClearITPendingBit(EXTI_Line0); //清除 EXTI0 线路挂起，清除位\n}\n\n```\n\n> NVIC_InitTypeDef 结构体中间有四个成员变量，这四个成员变量的作用是：\n>\n> + NVIC_IRQChannel：定义初始化的是哪个中断，这个我们可以在 stm32f10x.h 中找到每个中断对应的名字。\n> + NVIC_IRQChannelPreemptionPriority：定义这个中断的抢占优先级别。\n> + NVIC_IRQChannelSubPriority：定义这个中断的子优先级别。\n> + NVIC_IRQChannelCmd：使能or失能NVIC\n>\n\n> <font >EXTI的配置，EXTI_Trigger这里支持三种模式；</font>\n>\n> + <font >EXTI_Trigger_Rising 上升沿触发；</font>\n> + <font >EXTI_Trigger_Falling 下降沿触发；</font>\n> + <font >EXTI_Trigger_Rising_Falling 上升沿和下降沿都可以触发；</font>\n>\n\n**中断服务函数在stm32f10x_it.c中编写，在汇编文件中查询**\n\n#### 完整代码\n```c\nvoid CountSensor_Init(void)\n{\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);\n\t\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;\n\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\n\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\t\n\tGPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource14);\n\t\n\tEXTI_InitTypeDef EXTI_InitStructure;\n\tEXTI_InitStructure.EXTI_Line = EXTI_Line14;\n\tEXTI_InitStructure.EXTI_LineCmd = ENABLE;\n\tEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;\n\tEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;\n\tEXTI_Init(&EXTI_InitStructure);\n\t\n\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);\n\t\n\tNVIC_InitTypeDef NVIC_InitStructure;\n\tNVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;\n\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;\n\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;\n\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;\n\tNVIC_Init(&NVIC_InitStructure);\n}\nvoid EXTI15_10_IRQHandler(void)\n{\n\tif (EXTI_GetITStatus(EXTI_Line14) == SET)\n\t{\n\t\tif (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14) == 0)\n\t\t{\n\t\t\tCountSensor_Count ++;\n\t\t}\n\t\tEXTI_ClearITPendingBit(EXTI_Line14);\n\t}\n}\n```\n\n# 五、定时器\n### 1、常用函数\n>void TIM_DeInit\nvoid TIM_TimeBaseInit\nvoid TIM_OC1Init\nvoid TIM_OC2Init\nvoid TIM_OC3Init\nvoid TIM_OC4Init\nvoid TIM_ICInit\nvoid TIM_PWMIConfig\nvoid TIM_BDTRConfig\nvoid TIM_TimeBaseStructInit\nvoid TIM_OCStructInit\nvoid TIM_ICStructInit\nvoid TIM_BDTRStructInit\nvoid TIM_Cmd\nvoid TIM_CtrlPWMOutputs\nvoid TIM_ITConfig\nvoid TIM_GenerateEvent\nvoid TIM_DMAConfig\nvoid TIM_DMACmd\nvoid TIM_InternalClockConfig\nvoid TIM_ITRxExternalClockConfig\nvoid TIM_TIxExternalClockConfig\nvoid TIM_ETRClockMode1Config\nvoid TIM_ETRClockMode2Config\nvoid TIM_ETRConfig\nvoid TIM_PrescalerConfig\nvoid TIM_CounterModeConfig\nvoid TIM_SelectInputTrigger\nvoid TIM_EncoderInterfaceConfig\nvoid TIM_ForcedOC1Config\nvoid TIM_ForcedOC2Config\nvoid TIM_ForcedOC3Config\nvoid TIM_ForcedOC4Config\nvoid TIM_ARRPreloadConfig\nvoid TIM_SelectCOM\nvoid TIM_SelectCCDMA\nvoid TIM_CCPreloadControl\nvoid TIM_OC1PreloadConfig\nvoid TIM_OC2PreloadConfig\nvoid TIM_OC3PreloadConfig\nvoid TIM_OC4PreloadConfig\nvoid TIM_OC1FastConfig\nvoid TIM_OC2FastConfig\nvoid TIM_OC3FastConfig\nvoid TIM_OC4FastConfig\nvoid TIM_ClearOC1Ref\nvoid TIM_ClearOC2Ref\nvoid TIM_ClearOC3Ref\nvoid TIM_ClearOC4Ref\nvoid TIM_OC1PolarityConfig\nvoid TIM_OC1NPolarityConfig\nvoid TIM_OC2PolarityConfig\nvoid TIM_OC2NPolarityConfig\nvoid TIM_OC3PolarityConfig\nvoid TIM_OC3NPolarityConfig\nvoid TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);\nvoid TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);\nvoid TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);\nvoid TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);\nvoid TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);\nvoid TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);\nvoid TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);\nvoid TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);\nvoid TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);\nvoid TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);\nvoid TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);\nvoid TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter);\nvoid TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload);\nvoid TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);\nvoid TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2);\nvoid TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3);\nvoid TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4);\nvoid TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);\nuint16_t TIM_GetCapture1(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture2(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture3(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture4(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCounter(TIM_TypeDef* TIMx);\nuint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);\nFlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);\nvoid TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);\nITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);\nvoid TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);\n\n### 设计框图\n \n\n| 类型 | 编号 | 总线 | 功能 |\n| :---: | :---: | :---: | :---: |\n| <font style=\"color:black;\">高级定时器</font> | <font style=\"color:black;\">TIM1</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM8</font> | <font style=\"color:black;\">APB2</font> | <font style=\"color:black;\">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</font> |\n| <font style=\"color:black;\">通用定时器</font> | <font style=\"color:black;\">TIM2</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM3</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM4</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM5</font> | <font style=\"color:black;\">APB1</font> | <font style=\"color:black;\">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</font> |\n| <font style=\"color:black;\">基本定时器</font> | <font style=\"color:black;\">TIM6</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM7</font> | <font style=\"color:black;\">APB1</font> | <font style=\"color:black;\">拥有定时中断、主模式触发</font><font style=\"color:black;\">DAC</font><font style=\"color:black;\">的功能</font> |\n\n![](/images/posts/STM32单片机外设初始化例程/7.png)\n![](/images/posts/STM32单片机外设初始化例程/8.png)\n![](/images/posts/STM32单片机外设初始化例程/9.png)\n\n\n### 例程代码\n定时器中断实现步骤\n\n① 能定时器时钟。\n\n       RCC_APB1PeriphClockCmd();\n\n②  初始化定时器，配置ARR,PSC。\n\n      TIM_TimeBaseInit();\n\n③开启定时器中断，配置NVIC。\n\n      void TIM_ITConfig();\n\n      NVIC_Init();\n\n④  使能定时器。\n\n      TIM_Cmd();\n\n⑥  编写中断服务函数。\n\n      TIMx_IRQHandler();\n\n```c\nvoid TIM3_Int_Init(u16 arr,u16 psc)\n{\n    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;\n\tNVIC_InitTypeDef NVIC_InitStructure;\n \n\tRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能\n\tTIM_InternalClockConfig(TIM3);\n\t//定时器TIM3初始化\n\tTIM_TimeBaseInitStructure.TIM_Period = 10000 - 1; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值\t\n\tTIM_TimeBaseInitStructure.TIM_Prescaler = 7200 - 1; //设置用来作为TIMx时钟频率除数的预分频值\n\tTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim\n\tTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式\n\tTIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位\n\n    TIM_ClearFlag(TIM3, TIM_FLAG_Update);//清除标志位\n\tTIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); //使能指定的TIM3中断,允许更新中断\n \n\t//中断优先级NVIC设置\n    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//选择分组\n\tNVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断\n\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  //先占优先级0级\n\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;  //从优先级3级\n\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能\n\tNVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器\n \n \n\tTIM_Cmd(TIM3, ENABLE);  //使能TIMx\t\t\t\t\t \n}\n//定时器3中断服务程序\nvoid TIM3_IRQHandler(void)   //TIM3中断\n{\n\tif (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  //检查TIM3更新中断发生与否\n\t\t{\n\t\tTIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  //清除TIMx更新中断标志 \n\t\tLED1=!LED1;\n\t\t}\n}\n```\n\n","source":"_posts/STM32单片机外设初始化例程.md","raw":"---\ntitle: STM32单片机外设初始化例程\nmermaid: true\ndate: 2023-01-18\ntags: [嵌入式, 单片机, 技术, C语言]\ncover: rgba(138, 237, 234, 0.47)\ncomments: true\ncategories: [嵌入式]\n---\n\n# STM32单片机外设初始化例程\n\n## 一、起因\n\n由于自己学习STM32单片机是零零散散的学习的，没有系统的进行学习，学习的东西非常的混乱，没有做过什么整体的框架整理，所以在此将STM32的外设的初始化进行系统的打包成一个文档，把程序的过程进行整理。\n\n## 二、基本流程\n\n### 1、基本STM32硬件知识点\n\nSTM32的单片机的开发程序发展的流程基本都是从寄存器阶段到标准库阶段到现在的HAL库、RTOS。所以第一步我们需要清楚单片机的整体工作流程。\n\n![](/images/posts/STM32单片机外设初始化例程/1.webp)\n\n通过图上可以看出，STM32单片机有一个Cortex-M3的内核CPU控制，分出三条数据总线控制各个外设：\n\n- **指令存储区总线（两条）**：I-Code总线和D-Code总线\n- **系统总线（System）**：用于访问内存和外设\n- **私有外设总线**：负责一部分私有外设的访问，主要就是访问调试组件\n\nI-Code用于取指，D-Code用于查表等操作，它们按最佳执行速度进行优化。\n\n系统总线（System）用于访问内存和外设，覆盖的区域包括SRAM，片上外设，片外RAM，片外扩展设备，以及系统级存储区的部分空间。\n\n私有外设总线负责一部分私有外设的访问，主要就是访问调试组件。它们也在系统级存储区。\n\n还有一个DMA总线，从字面上看，DMA是data memory access的意思，是一种连接内核和外设的桥梁，它可以访问外设、内存，传输不受CPU的控制，并且是双向通信。简而言之，这个家伙就是一个速度很快的且不受老大控制的数据搬运工。\n\n从结构框图上看，STM32的外设有串口、定时器、IO口、FSMC、SDIO、SPI、I2C等，这些外设按照速度的不同，分别挂载到AHB、APB2、APB1这三条总线上。\n\n其中寄存器其实可以理解为内存的地址，cpu通过地址访问对应的空间的内存数据，这个内存数据用来控制各个外设的开关。\n\n`stm32`的函数一切库的封装始于寄存器的映射操作。\n![](/images/posts/STM32单片机外设初始化例程/2.webp)\n![](/images/posts/STM32单片机外设初始化例程/4.webp)\n\n如果进行寄存器开发，就需要怼地址以及对寄存器进行字节赋值，不仅效率低而且容易出错。\n\n因此我们开始使用库函数进行编程。\n![](/images/posts/STM32单片机外设初始化例程/3.webp)\n\n### 内核库文件分析\n\n#### `cor_cm3.h`\n这个头文件实现了：  \n1. 内核结构体寄存器定义  \n2. 内核寄存器内存映射  \n3. 内存寄存器位定义  \n\n> 跟处理器相关的头文件`stm32f10x.h`实现的功能一样，一个是针对内核的寄存器，一个是针对内核之外，即处理器的寄存器。\n\n#### `misc.h`\n内核应用函数库头文件，对应`stm32f10x_xxx.h`。\n\n#### `misc.c`\n内核应用函数库文件，对应`stm32f10x_xxx.c`。\n\n在CM3这个内核里面还有一些功能组件，如：\n- `NVIC`\n- `SCB` \n- `ITM`\n- `MPU`\n- `CoreDebug`\n\n> CM3带有非常丰富的功能组件，但是芯片厂商在设计MCU的时候有一些并不是非要不可的，是可裁剪的，比如`MPU`、`ITM`等在STM32里面就没有。  \n> 其中`NVIC`在每一个CM3内核的单片机中都会有，但都会被裁剪，只能是CM3 NVIC的一个子集。在`NVIC`里面还有一个`SysTick`，是一个系统定时器，可以提供时基，一般为操作系统定时器所用。\n\n`misc.h`和`mics.c`这两个文件提供了操作这些组件的函数，并可以在CM3内核单片机直接移植。\n\n---\n\n### 处理器外设库文件分析\n\n#### `startup_stm32f10x_hd.s`\n这个是由汇编编写的启动文件，是STM32上电启动的第一个程序，启动文件主要实现了：\n\n- 初始化堆栈指针 `SP`\n- 设置 `PC` 指针`=Reset_Handler`\n- 设置向量表的地址，并初始化向量表（向量表里面放的是 STM32 所有中断函数的入口地址）\n- 调用库函数 `SystemInit`（把系统时钟配置成 72M，`SystemInit` 在库文件 `stytem_stm32f10x.c` 中定义）\n- 跳转到标号`_main`，最终去到 C 的世界\n\n#### `system_stm32f10x.c`\n这个文件的作用是里面实现了各种常用的系统时钟设置函数，有：\n- 72M\n- 56M \n- 48M\n- 36M\n- 24M\n- 8M\n\n> 我们使用的是把系统时钟设置成72M。\n\n#### `Stm32f10x.h`\n这个头文件非常重要，实现了：\n\n1. 处理器外设寄存器的结构体定义\n2. 处理器外设的内存映射\n3. 处理器外设寄存器的位定义\n\n> 关于1和2我们在用寄存器点亮LED的时候有讲解。\n\n**关于第3点说明：**  \n处理器外设寄存器的位定义就是把外设的每个寄存器的每一个位写1的16进制数定义成一个宏，宏名即用该位的名称表示。\n\n**示例：**\n```c\n// 一般的操作方法\nADC->CR2 = 0x00000001;\n\n// 使用位定义后的操作\nADC->CR2 = ADC_CR2_ADON;\n```\n\n#### `stm32f10x_xxx.h`\n外设xxx应用函数库头文件，这里面主要定义了实现外设某一功能的结构体。\n\n> 比如通用定时器有很多功能：定时功能、输出比较功能、输入捕捉功能。这个头文件就为我们打包好了要实现某一个功能的寄存器（以结构体的形式定义）。\n\n#### `stm32f10x_xxx.c`\n外设xxx应用函数库，这里面写好了操作xxx外设的所有常用的函数。\n\n> 我们使用库编程的时候，使用的最多的就是这里的函数。\n\n---\n\n### SystemInit 相关问题\n\n在工程中新建`main.c`后直接编译会报错：\n```\nUndefined symbol SystemInit (referred from startup_stm32f10x_hd.o).\n```\n\n**原因分析：**  \n从启动文件`startup_stm32f10x_hd.s`中我们知道：\n```assembly\n;Reset handler\nReset_Handler PROC\n    EXPORT Reset_Handler [WEAK]\n    IMPORT __main\n    ;IMPORT SystemInit\n    ;LDR R0, =SystemInit\n    BLX R0\n    LDR R0, =__main\n    BX R0\nENDP\n```\n> 汇编中`;`分号是注释的意思  \n> `Reset_Handler`调用了`SystemInit`函数（用来初始化系统时钟），该函数是在库文件`system_stm32f10x.c`中实现的。\n\n**解决方案：**  \n在main文件里面定义一个`SystemInit`空函数，为的是骗过编译器，把这个错误去掉。\n\n> 关于配置系统时钟之后会出文章RCC时钟树详细介绍，主要配置：\n> - 时钟控制寄存器(RCC_CR)\n> - 时钟配置寄存器(RCC_CFGR)  \n> \n> 但最好是直接使用CubeMX直接生成，因为它的配置过程有些冗长。  \n> 如果使用库，库函数`SystemInit`会帮我们把系统时钟设置成72M。\n\n\n## <font style=\"color:rgb(18, 18, 18);\">2、基本stm32外设配置流程</font>\n**程序模板**\n\n#### 第一步：申明结构体；\n```c\nxxx_InitTypeDef xxx_InitStructure;\n```\n\n#### 第二步：开启时钟；\n（第一步和第二步顺序不能调换：标准c要求所有变量/结构体,都必须在代码段之前声明）\n\n```c\nRCC_xPeriphClockCmd(RCC_AxBxPeriph_xxx, ENABLE)\n```\n\n> *2.5：引脚复用（如果有）并且开启复用的时钟\n>\n\n```c\nGPIO_PinAFConfig(GPIOx,GPIO_PinSourcex,GPIO_AF_x)\n```\n\n#### 第三步：初始化结构体；\n```c\nxxx_Init(xxx,&xxx_InitStructure)\n```\n\n### *若有设置中断\n> 中断名在startup_stm32f40_41xx.s中定义。\n>\n\n#### 第一步：使能外设某特定中断（定时器，串口，ADC）\n```c\nxxx_ITConfig(xxx, xxx, ENABLE);\n```\n\n#### 第二步：初始化 NVIC\n```c\nNVIC_Init(&NVIC_InitStructure);\n```\n\n#### 第三步：设置系统中断优先级分组(通常在主函数中配置）\n```c\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_x);\n```\n\n中断服务函数(典型）\n\n```c\nvoid xxx_IRQHandler(void)\n{\n    if(xxx_GetITStatus(xxx)!=RESET)//判断某个线上的中断是否发生 \n  { …中断逻辑…\n      xxx_ClearITPendingBit(xxx); //清除 LINE 上的中断标志位 \n  }\n}\n```\n\n其它中断相关\n\n```c\nxxx_GetITStatus(xxx)//获取中断状态，查看中断是否发生 \n//\nxxx_ClearITPendingBit(xxx)；//清除\nelse\nxxx_ClearFlag(xxx);//清除\n//前者会先判断这种中断是否使能，使能了才去判断中断标志位，\n//而后者直接用来判断状态标志位。\n```\n\n### END.定时器/串口/ADC使能\n```c\nxxx_Cmd(xxx, ENABLE);\n```\n\n## 3、结构体变量配置具体形式\n#### 初始化结构体初始化 GPIO 的常用格式\n```c\nGPIO_InitTypeDef GPIO_InitStructure;\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_x | GPIO_Pin_x;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_xxx;\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\nGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;\nGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;\nGPIO_Init(GPIOx,&GPIO_InitStructure);\n```\n\n#### 初始化结构体初始化 USART 的常用格式\n```c\nUSART_InitTypeDef USART_InitStructure;\nUSART_InitStructure.USART_BaudRate = bound;//一般设置为 9600;\nUSART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为 8 位数据格式\nUSART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位\nUSART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位\nUSART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;\nUSART_InitStructure.USART_Mode = USART_Mode_Rx |USART_Mode_Tx;//收发模式\nUSART_Init(USARTX, &USART_InitStructure); //初始化串口\n```\n\n#### 初始化结构体初始化 NVIC 的常用格式\n```c\nNVIC_InitTypeDef NVIC_InitStructure;\nNVIC_InitStructure.NVIC_IRQChannel = xxx_IRQn;//设置中断名\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3;//抢占优先级 3\nNVIC_InitStructure.NVIC_IRQChannelSubPriority =3; //响应优先级 3\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ 通道使能\nNVIC_Init(&NVIC_InitStructure); //根据指定的参数初始化 VIC 寄存器、\n```\n\n#### 初始化结构体初始化外部中断的常用格式\n```c\n EXTI_InitTypeDef EXTI_InitStructure;\n EXTI_InitStructure.EXTI_Line=EXTI_Linex;\n EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;\n EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_xxx;//上升，下降沿或任意电平\n EXTI_InitStructure.EXTI_LineCmd = ENABLE;\n EXTI_Init(&EXTI_InitStructure); //初始化外设 EXTI 寄存器\n```\n\n#### 初始化结构体初始化定时器中断的常用格式\n```c\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;\nTIM_TimeBaseStructure.TIM_Period = xxx;\nTIM_TimeBaseStructure.TIM_Prescaler =xxx; \nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIVx; \nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_x;\nTIM_TimeBaseInit(TIMx, &TIM_TimeBaseStructure);\n```\n\n#### 初始化结构体初始化输出比较的常用格式\n```c\nTIM_OCInitTypeDef TIM_OCInitStructure;\nTIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWMx; //选择模式 PWM\nTIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; //比较输出使能\nTIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_xxx; //输出极性\nTIM_OCxInit(TIMx, &TIM_OCInitStructure); //根据T指定的参数初始化外设\n```\n\n\n\n#### 设置 ADC 的通用控制寄存器 CCR( common control register)\n```c\nADC_CommonInitTypeDef ADC_CommonInitStructure;\nADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;//独立模式\nADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_xCycles;//两个采样阶段之间的延迟周期数，5~20\nADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;\nADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;//需保证 ADC1 的时钟频率不超过 36MHz。\nADC_CommonInit(&ADC_CommonInitStructure);//初始化\n```\n\n#### 初始化结构体初始化ADC的常用格式\n```c\nADC_InitTypeDef ADC_InitStructure;\nADC_InitStructure.ADC_Resolution = ADC_Resolution_xb;//6,8,10,12\nADC_InitStructure.ADC_ScanConvMode = DISABLE;//非扫描模式\nADC_InitStructure.ADC_ContinuousConvMode = DISABLE;//关闭连续模式\nADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;\n//禁止触发检测，使用软件触发\nADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;//右对齐\nADC_InitStructure.ADC_NbrOfConversion = 1;//1 个转换在规则序列中\nADC_Init(ADC1, &ADC_InitStructure);//ADC 初始化\n```\n\n# 三、GPIO配置\n### 1、常用函数\n\n> **GPIO_Init** 初始化GPIO，设置GPIO的模式，速度，引脚数 \n**GPIO_ReadInputDataBit**读取一位GPIO的输入数据\t\n**GPIO_ReadInputData**\t读取GPIOx的输入数据\t\n**GPIO_ReadOutputDataBit**\t读取一位GPIO的输出数据\t\n**GPIO_ReadOutputDat**a\t读取GPIOx的输出数据\t\n**GPIO_SetBits**\t使GPIO设置为高电平，可一起设置多，也可以设置一个\t\n**GPIO_ResetBits**\t使GPIO设置为高电平，课一起设置多，也可以设置一个\t\n**GPIO_WriteBit**\t设置GPIO的一个管脚\t\n**GPIO_Write**\t设置GPIOx全部管脚\t\n**GPIO_ToggleBits** 翻转指定的GPIO口\n**GPIO_PinAFConfig** 改变指定管脚的映射关系，即配置指定管脚的复用功能\n\n### <font style=\"color:rgb(77, 77, 77);\">设计框图</font>\n![](/images/posts/4.png)\n\n### <font style=\"color:rgb(77, 77, 77);\">例程代码</font>\n#### 示例一:<font style=\"color:rgb(77, 77, 77);\">LED灯初始化GPIO口例程</font>\n```c\nvoid LED_GPIO_Config(void)\n{\t\t\n\t\t/*定义一个GPIO_InitTypeDef类型的结构体*/\n\t\tGPIO_InitTypeDef GPIO_InitStructure;\n\t\t/*开启LED相关的GPIO外设时钟*/\n\t\tRCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOB,ENABLE);\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;\n\t\t/*设置引脚模式为通用推挽输出*/\n\t\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   \n\t\t/*设置引脚速率为50MHz */   \n\t\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; \n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOC, &GPIO_InitStructure);\t\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;\n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\t\t/*选择要控制的GPIO引脚*/\n\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;\n\t\t/*调用库函数，初始化GPIO*/\n\t\tGPIO_Init(GPIOC, &GPIO_InitStructure);\n}\n```\n\n参数：**GPIO_InitStruct**，GPIO的初始化相关结构体。该结构体里的成员变量决定了我们具体的初始化参数。以下进行说明：\n\n              GPIO_Pin：指定具体的io脚，如GPIO_Pin_0，GPIO_Pin_1这样的宏定义。\n\n              GPIO_Mode：指定GPIO的模式，\n\n**输入模式**\n\n\t\t+ 输入浮空： GPIO_Mode_IN_FLOATING\n\t\t+  输入上拉： GPIO_Mode_IPU\n\t\t+  输入下拉 ：GPIO_Mode_IPD\n\t\t+  模拟输入 ：GPIO_Mode_AIN\n\n**输出模式**\n\n            +  开漏输出 GPIO_Mode_Out_OD\n            + 推挽输出 GPIO_Mode_Out_PP\n            + 复用功能推挽 GPIO_Mode_AF_PP\n            +  复用功能开漏 GPIO_Mode_AF_OD\n\nGPIO_Speed：指定IO最快翻转速度，也就是当使用IO产生频率（如PWM）的最大速度：\n\n            + GPIO_Speed_10MHz,\n            + GPIO_Speed_2MHz, \n            + GPIO_Speed_50MHz等\n\n#### 示例二:把GPIO配置成输入\n> 常规方式按键使用中断触发，本案例很少被使用在按键中。\n>\n\n```c\nvoid KEY_Init(void)\n{\nGPIO_InitTypeDef GPIO_InitStructure;\n//结构体定义\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);\n//使能 PORTA,PORTC 时钟\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;\n//PA15\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; \n//设置成上拉输入\nGPIO_Init(GPIOA, &GPIO_InitStructure);\n//初始化 GPIOA15\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;\n//PC5\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; \n//设置成上拉输入\nGPIO_Init(GPIOC, &GPIO_InitStructure);\n//初始化 GPIOC5\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;\n//PA0\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; \n//PA0 设置成输入，默认下拉 \nGPIO_Init(GPIOA, &GPIO_InitStructure);\n//初始化 GPIOA.0\n}\n```\n\n#### <font style=\"color:rgb(51, 51, 51);\">示例三:配置复用功能 PA9 PA10 配置成串口1的收发接口</font>\n```c\n    GPIO_InitTypeDef GPIO_InitStructure;\n    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);//使能GPIOA时钟\n    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);//使能USART1时钟\n    //串口1对应引脚复用映射\n    GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);//GPIOA9复用为USART1\n    GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);//GPIOA10复用为USART1\n    //USART1端口配置\n    GPIO_InitStructure.GPIO_Pin= GPIO_Pin_9 | GPIO_Pin_10; //GPIOA9与GPIOA10\n    GPIO_InitStructure.GPIO_Mode= GPIO_Mode_AF;//复用功能\n    GPIO_InitStructure.GPIO_Speed= GPIO_Speed_50MHz;      //速度50MHz\n    GPIO_InitStructure.GPIO_OType= GPIO_OType_PP; //推挽复用输出\n    GPIO_InitStructure.GPIO_PuPd= GPIO_PuPd_UP; //上拉\n    GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化PA9，PA10\n```\n\n# 四、外部中断\n### 1、常用函数\n>void EXTI_DeInit(void); 重设为缺省值\nvoid EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct); 根据EXTI_InitStruct结构体的配置进行初始化\nvoid EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);把结构体变量的每一个变量按照缺省值填入。\nvoid EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);产生一个中断\nFlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);获取指定的EXTI线路挂起的标志位\nvoid EXTI_ClearFlag(uint32_t EXTI_Line);清楚EXTI的挂起标志位\nITStatus EXTI_GetITStatus(uint32_t EXTI_Line);检查指定的EXTI线路触发请求发送与否\nvoid EXTI_ClearITPendingBit(uint32_t EXTI_Line);清楚EXTI线路挂起位\n\n---\n\nvoidNVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)<font style=\"color:rgb(77, 77, 77);\">中断优先级分组</font>\n\n| **<font style=\"color:rgb(79, 79, 79);\">分组号</font>** | **<font style=\"color:rgb(79, 79, 79);\">4 bit 分配情况</font>** | **<font style=\"color:rgb(79, 79, 79);\">说明</font>** |\n| :---: | :---: | :---: |\n| <font style=\"color:rgb(79, 79, 79);\">第0组</font> | <font style=\"color:rgb(79, 79, 79);\">0 : 4</font> | <font style=\"color:rgb(79, 79, 79);\">无抢占式优先级，16 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第1组</font> | <font style=\"color:rgb(79, 79, 79);\">1 : 3</font> | <font style=\"color:rgb(79, 79, 79);\">2 个抢占式优先级，8 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第2组</font> | <font style=\"color:rgb(79, 79, 79);\">2 : 2</font> | <font style=\"color:rgb(79, 79, 79);\">4 个抢占式优先级，4 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第3组</font> | <font style=\"color:rgb(79, 79, 79);\">3 : 1</font> | <font style=\"color:rgb(79, 79, 79);\">8 个抢占式优先级，2 个子优先级</font> |\n| <font style=\"color:rgb(79, 79, 79);\">第4组</font> | <font style=\"color:rgb(79, 79, 79);\">4 : 0</font> | <font style=\"color:rgb(79, 79, 79);\">16 个抢占式优先级，无子优先级</font> |\n\n\n> 如果用户没有设置优先级分组，即用户没有调用\">NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)则优先级分组默认设置为分组 0，即无抢占式优先级、16个子优先级。\n> NVIC_Init(&NVIC_InitStruct); 根据NVIC_InitStruct结构体的配置进行初始化\n\n### 设计框图\n![](/images/posts/STM32单片机外设初始化例程/5.png)\n\n![](/images/posts/STM32单片机外设初始化例程/6.png)\n\n### 例程代码\n**<font style=\"color:rgb(77, 77, 77);\">相关配置代码的介绍</font>**\n\n```c\n//0、初始化GPIO\nGPIO_InitTypeDef GPIO_InitStructure;\nGPIO_StructInit(&GPIO_InitStructure);\nGPIO_InitStructure.GPIO_Pin = Z_GPIO_PIN;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; //浮空输入\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\nGPIO_Init(Z_GPIO_PORT, &GPIO_InitStructure);\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);\t//使能复用功能时钟\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB, ENABLE);\n//1.配置中断线\nEXTI_InitTypeDef EXTI_InitStruct;//创建结构体来初始化中断线\nEXTI_ClearITPendingBit(EXTI_Line9);     //清除中断标志位\nGPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource5);\nEXTI_InitStructure.EXTI_Line = EXTI_Line13;//选择EXTI的信号源\nEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;/* EXTI为中断模式 */\nEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;/* 下降沿中断 */\nEXTI_InitStructure.EXTI_LineCmd = ENABLE;/* 使能中断 */\t\nEXTI_Init(&EXTI_InitStructure);\n//2.配置NVIC中断优先级\nNVIC_InitTypeDef NVIC_InitStructure;//创建结构体来初始化中断优先级\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//配置分组号\nNVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;\n//使能按键所在的外部中断通道\nNVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;\nNVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0x02;//设置抢占优先级\nNVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x01;//设置子优先级\nNVIC_Init(&NVIC_InitStruct);\n//3.实现中断服务函数（注意配置完之后清除函数的挂起）\nvoid EXTI0_IRQHandler(void)\n{\n\tdelay_ms(10); //消抖?\n\tif (WK_UP == 1)\n\t{\n\t\tLED0 = 1;//led函数宏\n\t\tLED1 = 1;\n\t}\n\tEXTI_ClearITPendingBit(EXTI_Line0); //清除 EXTI0 线路挂起，清除位\n}\n\n```\n\n> NVIC_InitTypeDef 结构体中间有四个成员变量，这四个成员变量的作用是：\n>\n> + NVIC_IRQChannel：定义初始化的是哪个中断，这个我们可以在 stm32f10x.h 中找到每个中断对应的名字。\n> + NVIC_IRQChannelPreemptionPriority：定义这个中断的抢占优先级别。\n> + NVIC_IRQChannelSubPriority：定义这个中断的子优先级别。\n> + NVIC_IRQChannelCmd：使能or失能NVIC\n>\n\n> <font >EXTI的配置，EXTI_Trigger这里支持三种模式；</font>\n>\n> + <font >EXTI_Trigger_Rising 上升沿触发；</font>\n> + <font >EXTI_Trigger_Falling 下降沿触发；</font>\n> + <font >EXTI_Trigger_Rising_Falling 上升沿和下降沿都可以触发；</font>\n>\n\n**中断服务函数在stm32f10x_it.c中编写，在汇编文件中查询**\n\n#### 完整代码\n```c\nvoid CountSensor_Init(void)\n{\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);\n\t\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;\n\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\n\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\t\n\tGPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource14);\n\t\n\tEXTI_InitTypeDef EXTI_InitStructure;\n\tEXTI_InitStructure.EXTI_Line = EXTI_Line14;\n\tEXTI_InitStructure.EXTI_LineCmd = ENABLE;\n\tEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;\n\tEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;\n\tEXTI_Init(&EXTI_InitStructure);\n\t\n\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);\n\t\n\tNVIC_InitTypeDef NVIC_InitStructure;\n\tNVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;\n\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;\n\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;\n\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;\n\tNVIC_Init(&NVIC_InitStructure);\n}\nvoid EXTI15_10_IRQHandler(void)\n{\n\tif (EXTI_GetITStatus(EXTI_Line14) == SET)\n\t{\n\t\tif (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14) == 0)\n\t\t{\n\t\t\tCountSensor_Count ++;\n\t\t}\n\t\tEXTI_ClearITPendingBit(EXTI_Line14);\n\t}\n}\n```\n\n# 五、定时器\n### 1、常用函数\n>void TIM_DeInit\nvoid TIM_TimeBaseInit\nvoid TIM_OC1Init\nvoid TIM_OC2Init\nvoid TIM_OC3Init\nvoid TIM_OC4Init\nvoid TIM_ICInit\nvoid TIM_PWMIConfig\nvoid TIM_BDTRConfig\nvoid TIM_TimeBaseStructInit\nvoid TIM_OCStructInit\nvoid TIM_ICStructInit\nvoid TIM_BDTRStructInit\nvoid TIM_Cmd\nvoid TIM_CtrlPWMOutputs\nvoid TIM_ITConfig\nvoid TIM_GenerateEvent\nvoid TIM_DMAConfig\nvoid TIM_DMACmd\nvoid TIM_InternalClockConfig\nvoid TIM_ITRxExternalClockConfig\nvoid TIM_TIxExternalClockConfig\nvoid TIM_ETRClockMode1Config\nvoid TIM_ETRClockMode2Config\nvoid TIM_ETRConfig\nvoid TIM_PrescalerConfig\nvoid TIM_CounterModeConfig\nvoid TIM_SelectInputTrigger\nvoid TIM_EncoderInterfaceConfig\nvoid TIM_ForcedOC1Config\nvoid TIM_ForcedOC2Config\nvoid TIM_ForcedOC3Config\nvoid TIM_ForcedOC4Config\nvoid TIM_ARRPreloadConfig\nvoid TIM_SelectCOM\nvoid TIM_SelectCCDMA\nvoid TIM_CCPreloadControl\nvoid TIM_OC1PreloadConfig\nvoid TIM_OC2PreloadConfig\nvoid TIM_OC3PreloadConfig\nvoid TIM_OC4PreloadConfig\nvoid TIM_OC1FastConfig\nvoid TIM_OC2FastConfig\nvoid TIM_OC3FastConfig\nvoid TIM_OC4FastConfig\nvoid TIM_ClearOC1Ref\nvoid TIM_ClearOC2Ref\nvoid TIM_ClearOC3Ref\nvoid TIM_ClearOC4Ref\nvoid TIM_OC1PolarityConfig\nvoid TIM_OC1NPolarityConfig\nvoid TIM_OC2PolarityConfig\nvoid TIM_OC2NPolarityConfig\nvoid TIM_OC3PolarityConfig\nvoid TIM_OC3NPolarityConfig\nvoid TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);\nvoid TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);\nvoid TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);\nvoid TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);\nvoid TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);\nvoid TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);\nvoid TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);\nvoid TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);\nvoid TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);\nvoid TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);\nvoid TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);\nvoid TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter);\nvoid TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload);\nvoid TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);\nvoid TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2);\nvoid TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3);\nvoid TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4);\nvoid TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);\nvoid TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);\nuint16_t TIM_GetCapture1(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture2(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture3(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCapture4(TIM_TypeDef* TIMx);\nuint16_t TIM_GetCounter(TIM_TypeDef* TIMx);\nuint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);\nFlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);\nvoid TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);\nITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);\nvoid TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);\n\n### 设计框图\n \n\n| 类型 | 编号 | 总线 | 功能 |\n| :---: | :---: | :---: | :---: |\n| <font style=\"color:black;\">高级定时器</font> | <font style=\"color:black;\">TIM1</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM8</font> | <font style=\"color:black;\">APB2</font> | <font style=\"color:black;\">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</font> |\n| <font style=\"color:black;\">通用定时器</font> | <font style=\"color:black;\">TIM2</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM3</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM4</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM5</font> | <font style=\"color:black;\">APB1</font> | <font style=\"color:black;\">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</font> |\n| <font style=\"color:black;\">基本定时器</font> | <font style=\"color:black;\">TIM6</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM7</font> | <font style=\"color:black;\">APB1</font> | <font style=\"color:black;\">拥有定时中断、主模式触发</font><font style=\"color:black;\">DAC</font><font style=\"color:black;\">的功能</font> |\n\n![](/images/posts/STM32单片机外设初始化例程/7.png)\n![](/images/posts/STM32单片机外设初始化例程/8.png)\n![](/images/posts/STM32单片机外设初始化例程/9.png)\n\n\n### 例程代码\n定时器中断实现步骤\n\n① 能定时器时钟。\n\n       RCC_APB1PeriphClockCmd();\n\n②  初始化定时器，配置ARR,PSC。\n\n      TIM_TimeBaseInit();\n\n③开启定时器中断，配置NVIC。\n\n      void TIM_ITConfig();\n\n      NVIC_Init();\n\n④  使能定时器。\n\n      TIM_Cmd();\n\n⑥  编写中断服务函数。\n\n      TIMx_IRQHandler();\n\n```c\nvoid TIM3_Int_Init(u16 arr,u16 psc)\n{\n    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;\n\tNVIC_InitTypeDef NVIC_InitStructure;\n \n\tRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能\n\tTIM_InternalClockConfig(TIM3);\n\t//定时器TIM3初始化\n\tTIM_TimeBaseInitStructure.TIM_Period = 10000 - 1; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值\t\n\tTIM_TimeBaseInitStructure.TIM_Prescaler = 7200 - 1; //设置用来作为TIMx时钟频率除数的预分频值\n\tTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim\n\tTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式\n\tTIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位\n\n    TIM_ClearFlag(TIM3, TIM_FLAG_Update);//清除标志位\n\tTIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); //使能指定的TIM3中断,允许更新中断\n \n\t//中断优先级NVIC设置\n    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//选择分组\n\tNVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断\n\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  //先占优先级0级\n\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;  //从优先级3级\n\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能\n\tNVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器\n \n \n\tTIM_Cmd(TIM3, ENABLE);  //使能TIMx\t\t\t\t\t \n}\n//定时器3中断服务程序\nvoid TIM3_IRQHandler(void)   //TIM3中断\n{\n\tif (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  //检查TIM3更新中断发生与否\n\t\t{\n\t\tTIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  //清除TIMx更新中断标志 \n\t\tLED1=!LED1;\n\t\t}\n}\n```\n\n","slug":"STM32单片机外设初始化例程","published":1,"updated":"2025-07-16T09:01:59.164Z","layout":"post","photos":[],"_id":"cmd71t80t000h3cw68tgg2t7t","content":"<h1 id=\"stm32单片机外设初始化例程\"><a class=\"markdownIt-Anchor\" href=\"#stm32单片机外设初始化例程\"></a> STM32单片机外设初始化例程</h1>\n<h2 id=\"一-起因\"><a class=\"markdownIt-Anchor\" href=\"#一-起因\"></a> 一、起因</h2>\n<p>由于自己学习STM32单片机是零零散散的学习的，没有系统的进行学习，学习的东西非常的混乱，没有做过什么整体的框架整理，所以在此将STM32的外设的初始化进行系统的打包成一个文档，把程序的过程进行整理。</p>\n<h2 id=\"二-基本流程\"><a class=\"markdownIt-Anchor\" href=\"#二-基本流程\"></a> 二、基本流程</h2>\n<h3 id=\"1-基本stm32硬件知识点\"><a class=\"markdownIt-Anchor\" href=\"#1-基本stm32硬件知识点\"></a> 1、基本STM32硬件知识点</h3>\n<p>STM32的单片机的开发程序发展的流程基本都是从寄存器阶段到标准库阶段到现在的HAL库、RTOS。所以第一步我们需要清楚单片机的整体工作流程。</p>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/1.webp\" alt=\"\" /></p>\n<p>通过图上可以看出，STM32单片机有一个Cortex-M3的内核CPU控制，分出三条数据总线控制各个外设：</p>\n<ul>\n<li><strong>指令存储区总线（两条）</strong>：I-Code总线和D-Code总线</li>\n<li><strong>系统总线（System）</strong>：用于访问内存和外设</li>\n<li><strong>私有外设总线</strong>：负责一部分私有外设的访问，主要就是访问调试组件</li>\n</ul>\n<p>I-Code用于取指，D-Code用于查表等操作，它们按最佳执行速度进行优化。</p>\n<p>系统总线（System）用于访问内存和外设，覆盖的区域包括SRAM，片上外设，片外RAM，片外扩展设备，以及系统级存储区的部分空间。</p>\n<p>私有外设总线负责一部分私有外设的访问，主要就是访问调试组件。它们也在系统级存储区。</p>\n<p>还有一个DMA总线，从字面上看，DMA是data memory access的意思，是一种连接内核和外设的桥梁，它可以访问外设、内存，传输不受CPU的控制，并且是双向通信。简而言之，这个家伙就是一个速度很快的且不受老大控制的数据搬运工。</p>\n<p>从结构框图上看，STM32的外设有串口、定时器、IO口、FSMC、SDIO、SPI、I2C等，这些外设按照速度的不同，分别挂载到AHB、APB2、APB1这三条总线上。</p>\n<p>其中寄存器其实可以理解为内存的地址，cpu通过地址访问对应的空间的内存数据，这个内存数据用来控制各个外设的开关。</p>\n<p><code>stm32</code>的函数一切库的封装始于寄存器的映射操作。<br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/2.webp\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/4.webp\" alt=\"\" /></p>\n<p>如果进行寄存器开发，就需要怼地址以及对寄存器进行字节赋值，不仅效率低而且容易出错。</p>\n<p>因此我们开始使用库函数进行编程。<br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/3.webp\" alt=\"\" /></p>\n<h3 id=\"内核库文件分析\"><a class=\"markdownIt-Anchor\" href=\"#内核库文件分析\"></a> 内核库文件分析</h3>\n<h4 id=\"cor_cm3h\"><a class=\"markdownIt-Anchor\" href=\"#cor_cm3h\"></a> <code>cor_cm3.h</code></h4>\n<p>这个头文件实现了：</p>\n<ol>\n<li>内核结构体寄存器定义</li>\n<li>内核寄存器内存映射</li>\n<li>内存寄存器位定义</li>\n</ol>\n<blockquote>\n<p>跟处理器相关的头文件<code>stm32f10x.h</code>实现的功能一样，一个是针对内核的寄存器，一个是针对内核之外，即处理器的寄存器。</p>\n</blockquote>\n<h4 id=\"misch\"><a class=\"markdownIt-Anchor\" href=\"#misch\"></a> <code>misc.h</code></h4>\n<p>内核应用函数库头文件，对应<code>stm32f10x_xxx.h</code>。</p>\n<h4 id=\"miscc\"><a class=\"markdownIt-Anchor\" href=\"#miscc\"></a> <code>misc.c</code></h4>\n<p>内核应用函数库文件，对应<code>stm32f10x_xxx.c</code>。</p>\n<p>在CM3这个内核里面还有一些功能组件，如：</p>\n<ul>\n<li><code>NVIC</code></li>\n<li><code>SCB</code></li>\n<li><code>ITM</code></li>\n<li><code>MPU</code></li>\n<li><code>CoreDebug</code></li>\n</ul>\n<blockquote>\n<p>CM3带有非常丰富的功能组件，但是芯片厂商在设计MCU的时候有一些并不是非要不可的，是可裁剪的，比如<code>MPU</code>、<code>ITM</code>等在STM32里面就没有。<br />\n其中<code>NVIC</code>在每一个CM3内核的单片机中都会有，但都会被裁剪，只能是CM3 NVIC的一个子集。在<code>NVIC</code>里面还有一个<code>SysTick</code>，是一个系统定时器，可以提供时基，一般为操作系统定时器所用。</p>\n</blockquote>\n<p><code>misc.h</code>和<code>mics.c</code>这两个文件提供了操作这些组件的函数，并可以在CM3内核单片机直接移植。</p>\n<hr />\n<h3 id=\"处理器外设库文件分析\"><a class=\"markdownIt-Anchor\" href=\"#处理器外设库文件分析\"></a> 处理器外设库文件分析</h3>\n<h4 id=\"startup_stm32f10x_hds\"><a class=\"markdownIt-Anchor\" href=\"#startup_stm32f10x_hds\"></a> <code>startup_stm32f10x_hd.s</code></h4>\n<p>这个是由汇编编写的启动文件，是STM32上电启动的第一个程序，启动文件主要实现了：</p>\n<ul>\n<li>初始化堆栈指针 <code>SP</code></li>\n<li>设置 <code>PC</code> 指针<code>=Reset_Handler</code></li>\n<li>设置向量表的地址，并初始化向量表（向量表里面放的是 STM32 所有中断函数的入口地址）</li>\n<li>调用库函数 <code>SystemInit</code>（把系统时钟配置成 72M，<code>SystemInit</code> 在库文件 <code>stytem_stm32f10x.c</code> 中定义）</li>\n<li>跳转到标号<code>_main</code>，最终去到 C 的世界</li>\n</ul>\n<h4 id=\"system_stm32f10xc\"><a class=\"markdownIt-Anchor\" href=\"#system_stm32f10xc\"></a> <code>system_stm32f10x.c</code></h4>\n<p>这个文件的作用是里面实现了各种常用的系统时钟设置函数，有：</p>\n<ul>\n<li>72M</li>\n<li>56M</li>\n<li>48M</li>\n<li>36M</li>\n<li>24M</li>\n<li>8M</li>\n</ul>\n<blockquote>\n<p>我们使用的是把系统时钟设置成72M。</p>\n</blockquote>\n<h4 id=\"stm32f10xh\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10xh\"></a> <code>Stm32f10x.h</code></h4>\n<p>这个头文件非常重要，实现了：</p>\n<ol>\n<li>处理器外设寄存器的结构体定义</li>\n<li>处理器外设的内存映射</li>\n<li>处理器外设寄存器的位定义</li>\n</ol>\n<blockquote>\n<p>关于1和2我们在用寄存器点亮LED的时候有讲解。</p>\n</blockquote>\n<p><strong>关于第3点说明：</strong><br />\n处理器外设寄存器的位定义就是把外设的每个寄存器的每一个位写1的16进制数定义成一个宏，宏名即用该位的名称表示。</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一般的操作方法</span></span><br><span class=\"line\">ADC-&gt;CR2 = <span class=\"number\">0x00000001</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用位定义后的操作</span></span><br><span class=\"line\">ADC-&gt;CR2 = ADC_CR2_ADON;</span><br></pre></td></tr></table></figure>\n<h4 id=\"stm32f10x_xxxh\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10x_xxxh\"></a> <code>stm32f10x_xxx.h</code></h4>\n<p>外设xxx应用函数库头文件，这里面主要定义了实现外设某一功能的结构体。</p>\n<blockquote>\n<p>比如通用定时器有很多功能：定时功能、输出比较功能、输入捕捉功能。这个头文件就为我们打包好了要实现某一个功能的寄存器（以结构体的形式定义）。</p>\n</blockquote>\n<h4 id=\"stm32f10x_xxxc\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10x_xxxc\"></a> <code>stm32f10x_xxx.c</code></h4>\n<p>外设xxx应用函数库，这里面写好了操作xxx外设的所有常用的函数。</p>\n<blockquote>\n<p>我们使用库编程的时候，使用的最多的就是这里的函数。</p>\n</blockquote>\n<hr />\n<h3 id=\"systeminit-相关问题\"><a class=\"markdownIt-Anchor\" href=\"#systeminit-相关问题\"></a> SystemInit 相关问题</h3>\n<p>在工程中新建<code>main.c</code>后直接编译会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Undefined symbol SystemInit (referred from startup_stm32f10x_hd.o).</span><br></pre></td></tr></table></figure>\n<p><strong>原因分析：</strong><br />\n从启动文件<code>startup_stm32f10x_hd.s</code>中我们知道：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;Reset handler</span><br><span class=\"line\">Reset_Handler PROC</span><br><span class=\"line\">    EXPORT Reset_Handler [WEAK]</span><br><span class=\"line\">    IMPORT __main</span><br><span class=\"line\">    ;IMPORT SystemInit</span><br><span class=\"line\">    ;LDR R0, =SystemInit</span><br><span class=\"line\">    BLX R0</span><br><span class=\"line\">    LDR R0, =__main</span><br><span class=\"line\">    BX R0</span><br><span class=\"line\">ENDP</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>汇编中<code>;</code>分号是注释的意思<br />\n<code>Reset_Handler</code>调用了<code>SystemInit</code>函数（用来初始化系统时钟），该函数是在库文件<code>system_stm32f10x.c</code>中实现的。</p>\n</blockquote>\n<p><strong>解决方案：</strong><br />\n在main文件里面定义一个<code>SystemInit</code>空函数，为的是骗过编译器，把这个错误去掉。</p>\n<blockquote>\n<p>关于配置系统时钟之后会出文章RCC时钟树详细介绍，主要配置：</p>\n<ul>\n<li>时钟控制寄存器(RCC_CR)</li>\n<li>时钟配置寄存器(RCC_CFGR)</li>\n</ul>\n<p>但最好是直接使用CubeMX直接生成，因为它的配置过程有些冗长。<br />\n如果使用库，库函数<code>SystemInit</code>会帮我们把系统时钟设置成72M。</p>\n</blockquote>\n<h2 id=\"font-stylecolorrgb18-18-182-基本stm32外设配置流程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb18-18-182-基本stm32外设配置流程font\"></a> <font style=\"color:rgb(18, 18, 18);\">2、基本stm32外设配置流程</font></h2>\n<p><strong>程序模板</strong></p>\n<h4 id=\"第一步申明结构体\"><a class=\"markdownIt-Anchor\" href=\"#第一步申明结构体\"></a> 第一步：申明结构体；</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_InitTypeDef xxx_InitStructure;</span><br></pre></td></tr></table></figure>\n<h4 id=\"第二步开启时钟\"><a class=\"markdownIt-Anchor\" href=\"#第二步开启时钟\"></a> 第二步：开启时钟；</h4>\n<p>（第一步和第二步顺序不能调换：标准c要求所有变量/结构体,都必须在代码段之前声明）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RCC_xPeriphClockCmd(RCC_AxBxPeriph_xxx, ENABLE)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>*2.5：引脚复用（如果有）并且开启复用的时钟</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_PinAFConfig(GPIOx,GPIO_PinSourcex,GPIO_AF_x)</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三步初始化结构体\"><a class=\"markdownIt-Anchor\" href=\"#第三步初始化结构体\"></a> 第三步：初始化结构体；</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_Init(xxx,&amp;xxx_InitStructure)</span><br></pre></td></tr></table></figure>\n<h3 id=\"若有设置中断\"><a class=\"markdownIt-Anchor\" href=\"#若有设置中断\"></a> *若有设置中断</h3>\n<blockquote>\n<p>中断名在startup_stm32f40_41xx.s中定义。</p>\n</blockquote>\n<h4 id=\"第一步使能外设某特定中断定时器串口adc\"><a class=\"markdownIt-Anchor\" href=\"#第一步使能外设某特定中断定时器串口adc\"></a> 第一步：使能外设某特定中断（定时器，串口，ADC）</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_ITConfig(xxx, xxx, ENABLE);</span><br></pre></td></tr></table></figure>\n<h4 id=\"第二步初始化-nvic\"><a class=\"markdownIt-Anchor\" href=\"#第二步初始化-nvic\"></a> 第二步：初始化 NVIC</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三步设置系统中断优先级分组通常在主函数中配置\"><a class=\"markdownIt-Anchor\" href=\"#第三步设置系统中断优先级分组通常在主函数中配置\"></a> 第三步：设置系统中断优先级分组(通常在主函数中配置）</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_x);</span><br></pre></td></tr></table></figure>\n<p>中断服务函数(典型）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">xxx_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xxx_GetITStatus(xxx)!=RESET)<span class=\"comment\">//判断某个线上的中断是否发生 </span></span><br><span class=\"line\">  &#123; …中断逻辑…</span><br><span class=\"line\">      xxx_ClearITPendingBit(xxx); <span class=\"comment\">//清除 LINE 上的中断标志位 </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其它中断相关</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_GetITStatus(xxx)<span class=\"comment\">//获取中断状态，查看中断是否发生 </span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">xxx_ClearITPendingBit(xxx)；<span class=\"comment\">//清除</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">xxx_ClearFlag(xxx);<span class=\"comment\">//清除</span></span><br><span class=\"line\"><span class=\"comment\">//前者会先判断这种中断是否使能，使能了才去判断中断标志位，</span></span><br><span class=\"line\"><span class=\"comment\">//而后者直接用来判断状态标志位。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"end定时器串口adc使能\"><a class=\"markdownIt-Anchor\" href=\"#end定时器串口adc使能\"></a> END.定时器/串口/ADC使能</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_Cmd(xxx, ENABLE);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-结构体变量配置具体形式\"><a class=\"markdownIt-Anchor\" href=\"#3-结构体变量配置具体形式\"></a> 3、结构体变量配置具体形式</h2>\n<h4 id=\"初始化结构体初始化-gpio-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-gpio-的常用格式\"></a> 初始化结构体初始化 GPIO 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_x | GPIO_Pin_x;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_xxx;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;</span><br><span class=\"line\">GPIO_Init(GPIOx,&amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化-usart-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-usart-的常用格式\"></a> 初始化结构体初始化 USART 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USART_InitTypeDef USART_InitStructure;</span><br><span class=\"line\">USART_InitStructure.USART_BaudRate = bound;<span class=\"comment\">//一般设置为 9600;</span></span><br><span class=\"line\">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class=\"comment\">//字长为 8 位数据格式</span></span><br><span class=\"line\">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class=\"comment\">//一个停止位</span></span><br><span class=\"line\">USART_InitStructure.USART_Parity = USART_Parity_No;<span class=\"comment\">//无奇偶校验位</span></span><br><span class=\"line\">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;</span><br><span class=\"line\">USART_InitStructure.USART_Mode = USART_Mode_Rx |USART_Mode_Tx;<span class=\"comment\">//收发模式</span></span><br><span class=\"line\">USART_Init(USARTX, &amp;USART_InitStructure); <span class=\"comment\">//初始化串口</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化-nvic-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-nvic-的常用格式\"></a> 初始化结构体初始化 NVIC 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannel = xxx_IRQn;<span class=\"comment\">//设置中断名</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class=\"number\">3</span>;<span class=\"comment\">//抢占优先级 3</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelSubPriority =<span class=\"number\">3</span>; <span class=\"comment\">//响应优先级 3</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class=\"comment\">//IRQ 通道使能</span></span><br><span class=\"line\">NVIC_Init(&amp;NVIC_InitStructure); <span class=\"comment\">//根据指定的参数初始化 VIC 寄存器、</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化外部中断的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化外部中断的常用格式\"></a> 初始化结构体初始化外部中断的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Line=EXTI_Linex;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_xxx;<span class=\"comment\">//上升，下降沿或任意电平</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class=\"line\">EXTI_Init(&amp;EXTI_InitStructure); <span class=\"comment\">//初始化外设 EXTI 寄存器</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化定时器中断的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化定时器中断的常用格式\"></a> 初始化结构体初始化定时器中断的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;</span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_Period = xxx;</span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_Prescaler =xxx; </span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIVx; </span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_x;</span><br><span class=\"line\">TIM_TimeBaseInit(TIMx, &amp;TIM_TimeBaseStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化输出比较的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化输出比较的常用格式\"></a> 初始化结构体初始化输出比较的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class=\"line\">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWMx; <span class=\"comment\">//选择模式 PWM</span></span><br><span class=\"line\">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class=\"comment\">//比较输出使能</span></span><br><span class=\"line\">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_xxx; <span class=\"comment\">//输出极性</span></span><br><span class=\"line\">TIM_OCxInit(TIMx, &amp;TIM_OCInitStructure); <span class=\"comment\">//根据T指定的参数初始化外设</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"设置-adc-的通用控制寄存器-ccr-common-control-register\"><a class=\"markdownIt-Anchor\" href=\"#设置-adc-的通用控制寄存器-ccr-common-control-register\"></a> 设置 ADC 的通用控制寄存器 CCR( common control register)</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADC_CommonInitTypeDef ADC_CommonInitStructure;</span><br><span class=\"line\">ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;<span class=\"comment\">//独立模式</span></span><br><span class=\"line\">ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_xCycles;<span class=\"comment\">//两个采样阶段之间的延迟周期数，5~20</span></span><br><span class=\"line\">ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;</span><br><span class=\"line\">ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;<span class=\"comment\">//需保证 ADC1 的时钟频率不超过 36MHz。</span></span><br><span class=\"line\">ADC_CommonInit(&amp;ADC_CommonInitStructure);<span class=\"comment\">//初始化</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化adc的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化adc的常用格式\"></a> 初始化结构体初始化ADC的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADC_InitTypeDef ADC_InitStructure;</span><br><span class=\"line\">ADC_InitStructure.ADC_Resolution = ADC_Resolution_xb;<span class=\"comment\">//6,8,10,12</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ScanConvMode = DISABLE;<span class=\"comment\">//非扫描模式</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;<span class=\"comment\">//关闭连续模式</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;</span><br><span class=\"line\"><span class=\"comment\">//禁止触发检测，使用软件触发</span></span><br><span class=\"line\">ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;<span class=\"comment\">//右对齐</span></span><br><span class=\"line\">ADC_InitStructure.ADC_NbrOfConversion = <span class=\"number\">1</span>;<span class=\"comment\">//1 个转换在规则序列中</span></span><br><span class=\"line\">ADC_Init(ADC1, &amp;ADC_InitStructure);<span class=\"comment\">//ADC 初始化</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"三-gpio配置\"><a class=\"markdownIt-Anchor\" href=\"#三-gpio配置\"></a> 三、GPIO配置</h1>\n<h3 id=\"1-常用函数\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数\"></a> 1、常用函数</h3>\n<blockquote>\n<p><strong>GPIO_Init</strong> 初始化GPIO，设置GPIO的模式，速度，引脚数<br />\n<strong>GPIO_ReadInputDataBit</strong>读取一位GPIO的输入数据\t<br />\n<strong>GPIO_ReadInputData</strong>\t读取GPIOx的输入数据\t<br />\n<strong>GPIO_ReadOutputDataBit</strong>\t读取一位GPIO的输出数据\t<br />\n<strong>GPIO_ReadOutputDat</strong>a\t读取GPIOx的输出数据\t<br />\n<strong>GPIO_SetBits</strong>\t使GPIO设置为高电平，可一起设置多，也可以设置一个\t<br />\n<strong>GPIO_ResetBits</strong>\t使GPIO设置为高电平，课一起设置多，也可以设置一个\t<br />\n<strong>GPIO_WriteBit</strong>\t设置GPIO的一个管脚\t<br />\n<strong>GPIO_Write</strong>\t设置GPIOx全部管脚\t<br />\n<strong>GPIO_ToggleBits</strong> 翻转指定的GPIO口<br />\n<strong>GPIO_PinAFConfig</strong> 改变指定管脚的映射关系，即配置指定管脚的复用功能</p>\n</blockquote>\n<h3 id=\"font-stylecolorrgb77-77-77设计框图font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb77-77-77设计框图font\"></a> <font style=\"color:rgb(77, 77, 77);\">设计框图</font></h3>\n<p><img src=\"/images/posts/4.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgb77-77-77例程代码font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb77-77-77例程代码font\"></a> <font style=\"color:rgb(77, 77, 77);\">例程代码</font></h3>\n<h4 id=\"示例一font-stylecolorrgb77-77-77led灯初始化gpio口例程font\"><a class=\"markdownIt-Anchor\" href=\"#示例一font-stylecolorrgb77-77-77led灯初始化gpio口例程font\"></a> 示例一:<font style=\"color:rgb(77, 77, 77);\">LED灯初始化GPIO口例程</font></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LED_GPIO_Config</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*定义一个GPIO_InitTypeDef类型的结构体*/</span></span><br><span class=\"line\">\t\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*开启LED相关的GPIO外设时钟*/</span></span><br><span class=\"line\">\t\tRCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*设置引脚模式为通用推挽输出*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   </span><br><span class=\"line\">\t\t<span class=\"comment\">/*设置引脚速率为50MHz */</span>   </span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; </span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOC, &amp;GPIO_InitStructure);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参数：<strong>GPIO_InitStruct</strong>，GPIO的初始化相关结构体。该结构体里的成员变量决定了我们具体的初始化参数。以下进行说明：</p>\n<pre><code>          GPIO_Pin：指定具体的io脚，如GPIO_Pin_0，GPIO_Pin_1这样的宏定义。\n\n          GPIO_Mode：指定GPIO的模式，\n</code></pre>\n<p><strong>输入模式</strong></p>\n<pre><code>\t+ 输入浮空： GPIO_Mode_IN_FLOATING\n\t+  输入上拉： GPIO_Mode_IPU\n\t+  输入下拉 ：GPIO_Mode_IPD\n\t+  模拟输入 ：GPIO_Mode_AIN\n</code></pre>\n<p><strong>输出模式</strong></p>\n<pre><code>        +  开漏输出 GPIO_Mode_Out_OD\n        + 推挽输出 GPIO_Mode_Out_PP\n        + 复用功能推挽 GPIO_Mode_AF_PP\n        +  复用功能开漏 GPIO_Mode_AF_OD\n</code></pre>\n<p>GPIO_Speed：指定IO最快翻转速度，也就是当使用IO产生频率（如PWM）的最大速度：</p>\n<pre><code>        + GPIO_Speed_10MHz,\n        + GPIO_Speed_2MHz, \n        + GPIO_Speed_50MHz等\n</code></pre>\n<h4 id=\"示例二把gpio配置成输入\"><a class=\"markdownIt-Anchor\" href=\"#示例二把gpio配置成输入\"></a> 示例二:把GPIO配置成输入</h4>\n<blockquote>\n<p>常规方式按键使用中断触发，本案例很少被使用在按键中。</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">KEY_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);</span><br><span class=\"line\"><span class=\"comment\">//使能 PORTA,PORTC 时钟</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;</span><br><span class=\"line\"><span class=\"comment\">//PA15</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; </span><br><span class=\"line\"><span class=\"comment\">//设置成上拉输入</span></span><br><span class=\"line\">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOA15</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class=\"line\"><span class=\"comment\">//PC5</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; </span><br><span class=\"line\"><span class=\"comment\">//设置成上拉输入</span></span><br><span class=\"line\">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOC5</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class=\"line\"><span class=\"comment\">//PA0</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; </span><br><span class=\"line\"><span class=\"comment\">//PA0 设置成输入，默认下拉 </span></span><br><span class=\"line\">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOA.0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb51-51-51示例三配置复用功能-pa9-pa10-配置成串口1的收发接口font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51示例三配置复用功能-pa9-pa10-配置成串口1的收发接口font\"></a> <font style=\"color:rgb(51, 51, 51);\">示例三:配置复用功能 PA9 PA10 配置成串口1的收发接口</font></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);<span class=\"comment\">//使能GPIOA时钟</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class=\"comment\">//使能USART1时钟</span></span><br><span class=\"line\"><span class=\"comment\">//串口1对应引脚复用映射</span></span><br><span class=\"line\">GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);<span class=\"comment\">//GPIOA9复用为USART1</span></span><br><span class=\"line\">GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);<span class=\"comment\">//GPIOA10复用为USART1</span></span><br><span class=\"line\"><span class=\"comment\">//USART1端口配置</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin= GPIO_Pin_9 | GPIO_Pin_10; <span class=\"comment\">//GPIOA9与GPIOA10</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode= GPIO_Mode_AF;<span class=\"comment\">//复用功能</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed= GPIO_Speed_50MHz;      <span class=\"comment\">//速度50MHz</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_OType= GPIO_OType_PP; <span class=\"comment\">//推挽复用输出</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_PuPd= GPIO_PuPd_UP; <span class=\"comment\">//上拉</span></span><br><span class=\"line\">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);<span class=\"comment\">//初始化PA9，PA10</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"四-外部中断\"><a class=\"markdownIt-Anchor\" href=\"#四-外部中断\"></a> 四、外部中断</h1>\n<h3 id=\"1-常用函数-2\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数-2\"></a> 1、常用函数</h3>\n<blockquote>\n<p>void EXTI_DeInit(void); 重设为缺省值<br />\nvoid EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct); 根据EXTI_InitStruct结构体的配置进行初始化<br />\nvoid EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);把结构体变量的每一个变量按照缺省值填入。<br />\nvoid EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);产生一个中断<br />\nFlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);获取指定的EXTI线路挂起的标志位<br />\nvoid EXTI_ClearFlag(uint32_t EXTI_Line);清楚EXTI的挂起标志位<br />\nITStatus EXTI_GetITStatus(uint32_t EXTI_Line);检查指定的EXTI线路触发请求发送与否<br />\nvoid EXTI_ClearITPendingBit(uint32_t EXTI_Line);清楚EXTI线路挂起位</p>\n</blockquote>\n<hr />\n<p>voidNVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)<font style=\"color:rgb(77, 77, 77);\">中断优先级分组</font></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">分组号</font></strong></th>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">4 bit 分配情况</font></strong></th>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">说明</font></strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第0组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">0 : 4</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">无抢占式优先级，16 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第1组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">1 : 3</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">2 个抢占式优先级，8 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第2组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">2 : 2</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">4 个抢占式优先级，4 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第3组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">3 : 1</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">8 个抢占式优先级，2 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第4组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">4 : 0</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">16 个抢占式优先级，无子优先级</font></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>如果用户没有设置优先级分组，即用户没有调用&quot;&gt;NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)则优先级分组默认设置为分组 0，即无抢占式优先级、16个子优先级。<br />\nNVIC_Init(&amp;NVIC_InitStruct); 根据NVIC_InitStruct结构体的配置进行初始化</p>\n</blockquote>\n<h3 id=\"设计框图\"><a class=\"markdownIt-Anchor\" href=\"#设计框图\"></a> 设计框图</h3>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/5.png\" alt=\"\" /></p>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/6.png\" alt=\"\" /></p>\n<h3 id=\"例程代码\"><a class=\"markdownIt-Anchor\" href=\"#例程代码\"></a> 例程代码</h3>\n<p><strong><font style=\"color:rgb(77, 77, 77);\">相关配置代码的介绍</font></strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//0、初始化GPIO</span></span><br><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">GPIO_StructInit(&amp;GPIO_InitStructure);</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = Z_GPIO_PIN;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; <span class=\"comment\">//浮空输入</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">GPIO_Init(Z_GPIO_PORT, &amp;GPIO_InitStructure);</span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);\t<span class=\"comment\">//使能复用功能时钟</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\"><span class=\"comment\">//1.配置中断线</span></span><br><span class=\"line\">EXTI_InitTypeDef EXTI_InitStruct;<span class=\"comment\">//创建结构体来初始化中断线</span></span><br><span class=\"line\">EXTI_ClearITPendingBit(EXTI_Line9);     <span class=\"comment\">//清除中断标志位</span></span><br><span class=\"line\">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource5);</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Line = EXTI_Line13;<span class=\"comment\">//选择EXTI的信号源</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;<span class=\"comment\">/* EXTI为中断模式 */</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;<span class=\"comment\">/* 下降沿中断 */</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_LineCmd = ENABLE;<span class=\"comment\">/* 使能中断 */</span>\t</span><br><span class=\"line\">EXTI_Init(&amp;EXTI_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//2.配置NVIC中断优先级</span></span><br><span class=\"line\">NVIC_InitTypeDef NVIC_InitStructure;<span class=\"comment\">//创建结构体来初始化中断优先级</span></span><br><span class=\"line\">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class=\"comment\">//配置分组号</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;</span><br><span class=\"line\"><span class=\"comment\">//使能按键所在的外部中断通道</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;</span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">0x02</span>;<span class=\"comment\">//设置抢占优先级</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class=\"number\">0x01</span>;<span class=\"comment\">//设置子优先级</span></span><br><span class=\"line\">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class=\"line\"><span class=\"comment\">//3.实现中断服务函数（注意配置完之后清除函数的挂起）</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EXTI0_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tdelay_ms(<span class=\"number\">10</span>); <span class=\"comment\">//消抖?</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (WK_UP == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tLED0 = <span class=\"number\">1</span>;<span class=\"comment\">//led函数宏</span></span><br><span class=\"line\">\t\tLED1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tEXTI_ClearITPendingBit(EXTI_Line0); <span class=\"comment\">//清除 EXTI0 线路挂起，清除位</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>NVIC_InitTypeDef 结构体中间有四个成员变量，这四个成员变量的作用是：</p>\n<ul>\n<li>NVIC_IRQChannel：定义初始化的是哪个中断，这个我们可以在 stm32f10x.h 中找到每个中断对应的名字。</li>\n<li>NVIC_IRQChannelPreemptionPriority：定义这个中断的抢占优先级别。</li>\n<li>NVIC_IRQChannelSubPriority：定义这个中断的子优先级别。</li>\n<li>NVIC_IRQChannelCmd：使能or失能NVIC</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><font >EXTI的配置，EXTI_Trigger这里支持三种模式；</font></p>\n<ul>\n<li><font >EXTI_Trigger_Rising 上升沿触发；</font></li>\n<li><font >EXTI_Trigger_Falling 下降沿触发；</font></li>\n<li><font >EXTI_Trigger_Rising_Falling 上升沿和下降沿都可以触发；</font></li>\n</ul>\n</blockquote>\n<p><strong>中断服务函数在stm32f10x_it.c中编写，在汇编文件中查询</strong></p>\n<h4 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\"></a> 完整代码</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">CountSensor_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource14);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tEXTI_InitTypeDef EXTI_InitStructure;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Line = EXTI_Line14;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;</span><br><span class=\"line\">\tEXTI_Init(&amp;EXTI_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tNVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_Init(&amp;NVIC_InitStructure);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EXTI15_10_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (EXTI_GetITStatus(EXTI_Line14) == SET)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14) == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tCountSensor_Count ++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEXTI_ClearITPendingBit(EXTI_Line14);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"五-定时器\"><a class=\"markdownIt-Anchor\" href=\"#五-定时器\"></a> 五、定时器</h1>\n<h3 id=\"1-常用函数-3\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数-3\"></a> 1、常用函数</h3>\n<blockquote>\n<p>void TIM_DeInit<br />\nvoid TIM_TimeBaseInit<br />\nvoid TIM_OC1Init<br />\nvoid TIM_OC2Init<br />\nvoid TIM_OC3Init<br />\nvoid TIM_OC4Init<br />\nvoid TIM_ICInit<br />\nvoid TIM_PWMIConfig<br />\nvoid TIM_BDTRConfig<br />\nvoid TIM_TimeBaseStructInit<br />\nvoid TIM_OCStructInit<br />\nvoid TIM_ICStructInit<br />\nvoid TIM_BDTRStructInit<br />\nvoid TIM_Cmd<br />\nvoid TIM_CtrlPWMOutputs<br />\nvoid TIM_ITConfig<br />\nvoid TIM_GenerateEvent<br />\nvoid TIM_DMAConfig<br />\nvoid TIM_DMACmd<br />\nvoid TIM_InternalClockConfig<br />\nvoid TIM_ITRxExternalClockConfig<br />\nvoid TIM_TIxExternalClockConfig<br />\nvoid TIM_ETRClockMode1Config<br />\nvoid TIM_ETRClockMode2Config<br />\nvoid TIM_ETRConfig<br />\nvoid TIM_PrescalerConfig<br />\nvoid TIM_CounterModeConfig<br />\nvoid TIM_SelectInputTrigger<br />\nvoid TIM_EncoderInterfaceConfig<br />\nvoid TIM_ForcedOC1Config<br />\nvoid TIM_ForcedOC2Config<br />\nvoid TIM_ForcedOC3Config<br />\nvoid TIM_ForcedOC4Config<br />\nvoid TIM_ARRPreloadConfig<br />\nvoid TIM_SelectCOM<br />\nvoid TIM_SelectCCDMA<br />\nvoid TIM_CCPreloadControl<br />\nvoid TIM_OC1PreloadConfig<br />\nvoid TIM_OC2PreloadConfig<br />\nvoid TIM_OC3PreloadConfig<br />\nvoid TIM_OC4PreloadConfig<br />\nvoid TIM_OC1FastConfig<br />\nvoid TIM_OC2FastConfig<br />\nvoid TIM_OC3FastConfig<br />\nvoid TIM_OC4FastConfig<br />\nvoid TIM_ClearOC1Ref<br />\nvoid TIM_ClearOC2Ref<br />\nvoid TIM_ClearOC3Ref<br />\nvoid TIM_ClearOC4Ref<br />\nvoid TIM_OC1PolarityConfig<br />\nvoid TIM_OC1NPolarityConfig<br />\nvoid TIM_OC2PolarityConfig<br />\nvoid TIM_OC2NPolarityConfig<br />\nvoid TIM_OC3PolarityConfig<br />\nvoid TIM_OC3NPolarityConfig<br />\nvoid TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);<br />\nvoid TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);<br />\nvoid TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);<br />\nvoid TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);<br />\nvoid TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);<br />\nvoid TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);<br />\nvoid TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);<br />\nvoid TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);<br />\nvoid TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);<br />\nvoid TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);<br />\nvoid TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);<br />\nvoid TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter);<br />\nvoid TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload);<br />\nvoid TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);<br />\nvoid TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2);<br />\nvoid TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3);<br />\nvoid TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4);<br />\nvoid TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);<br />\nuint16_t TIM_GetCapture1(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture2(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture3(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture4(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCounter(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);<br />\nFlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);<br />\nvoid TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);<br />\nITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);<br />\nvoid TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);</p>\n</blockquote>\n<h3 id=\"设计框图-2\"><a class=\"markdownIt-Anchor\" href=\"#设计框图-2\"></a> 设计框图</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">编号</th>\n<th style=\"text-align:center\">总线</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">高级定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM1</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM8</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB2</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">通用定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM2</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM3</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM4</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM5</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB1</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">基本定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM6</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM7</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB1</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有定时中断、主模式触发</font><font style=\"color:black;\">DAC</font><font style=\"color:black;\">的功能</font></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/7.png\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/8.png\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/9.png\" alt=\"\" /></p>\n<h3 id=\"例程代码-2\"><a class=\"markdownIt-Anchor\" href=\"#例程代码-2\"></a> 例程代码</h3>\n<p>定时器中断实现步骤</p>\n<p>① 能定时器时钟。</p>\n<pre><code>   RCC_APB1PeriphClockCmd();\n</code></pre>\n<p>②  初始化定时器，配置ARR,PSC。</p>\n<pre><code>  TIM_TimeBaseInit();\n</code></pre>\n<p>③开启定时器中断，配置NVIC。</p>\n<pre><code>  void TIM_ITConfig();\n\n  NVIC_Init();\n</code></pre>\n<p>④  使能定时器。</p>\n<pre><code>  TIM_Cmd();\n</code></pre>\n<p>⑥  编写中断服务函数。</p>\n<pre><code>  TIMx_IRQHandler();\n</code></pre>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">TIM3_Int_Init</span><span class=\"params\">(u16 arr,u16 psc)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class=\"line\">\tNVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class=\"comment\">//时钟使能</span></span><br><span class=\"line\">\tTIM_InternalClockConfig(TIM3);</span><br><span class=\"line\">\t<span class=\"comment\">//定时器TIM3初始化</span></span><br><span class=\"line\">\tTIM_TimeBaseInitStructure.TIM_Period = <span class=\"number\">10000</span> - <span class=\"number\">1</span>; <span class=\"comment\">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值\t</span></span><br><span class=\"line\">\tTIM_TimeBaseInitStructure.TIM_Prescaler = <span class=\"number\">7200</span> - <span class=\"number\">1</span>; <span class=\"comment\">//设置用来作为TIMx时钟频率除数的预分频值</span></span><br><span class=\"line\">\tTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; <span class=\"comment\">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class=\"line\">\tTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class=\"comment\">//TIM向上计数模式</span></span><br><span class=\"line\">\tTIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class=\"comment\">//根据指定的参数初始化TIMx的时间基数单位</span></span><br><span class=\"line\"></span><br><span class=\"line\">    TIM_ClearFlag(TIM3, TIM_FLAG_Update);<span class=\"comment\">//清除标志位</span></span><br><span class=\"line\">\tTIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); <span class=\"comment\">//使能指定的TIM3中断,允许更新中断</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"comment\">//中断优先级NVIC设置</span></span><br><span class=\"line\">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class=\"comment\">//选择分组</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  <span class=\"comment\">//TIM3中断</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">0</span>;  <span class=\"comment\">//先占优先级0级</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class=\"number\">3</span>;  <span class=\"comment\">//从优先级3级</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class=\"comment\">//IRQ通道被使能</span></span><br><span class=\"line\">\tNVIC_Init(&amp;NVIC_InitStructure);  <span class=\"comment\">//初始化NVIC寄存器</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">\tTIM_Cmd(TIM3, ENABLE);  <span class=\"comment\">//使能TIMx\t\t\t\t\t </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//定时器3中断服务程序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">TIM3_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span>   <span class=\"comment\">//TIM3中断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  <span class=\"comment\">//检查TIM3更新中断发生与否</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\tTIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  <span class=\"comment\">//清除TIMx更新中断标志 </span></span><br><span class=\"line\">\t\tLED1=!LED1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"stm32单片机外设初始化例程\"><a class=\"markdownIt-Anchor\" href=\"#stm32单片机外设初始化例程\"></a> STM32单片机外设初始化例程</h1>\n<h2 id=\"一-起因\"><a class=\"markdownIt-Anchor\" href=\"#一-起因\"></a> 一、起因</h2>\n<p>由于自己学习STM32单片机是零零散散的学习的，没有系统的进行学习，学习的东西非常的混乱，没有做过什么整体的框架整理，所以在此将STM32的外设的初始化进行系统的打包成一个文档，把程序的过程进行整理。</p>\n<h2 id=\"二-基本流程\"><a class=\"markdownIt-Anchor\" href=\"#二-基本流程\"></a> 二、基本流程</h2>\n<h3 id=\"1-基本stm32硬件知识点\"><a class=\"markdownIt-Anchor\" href=\"#1-基本stm32硬件知识点\"></a> 1、基本STM32硬件知识点</h3>\n<p>STM32的单片机的开发程序发展的流程基本都是从寄存器阶段到标准库阶段到现在的HAL库、RTOS。所以第一步我们需要清楚单片机的整体工作流程。</p>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/1.webp\" alt=\"\" /></p>\n<p>通过图上可以看出，STM32单片机有一个Cortex-M3的内核CPU控制，分出三条数据总线控制各个外设：</p>\n<ul>\n<li><strong>指令存储区总线（两条）</strong>：I-Code总线和D-Code总线</li>\n<li><strong>系统总线（System）</strong>：用于访问内存和外设</li>\n<li><strong>私有外设总线</strong>：负责一部分私有外设的访问，主要就是访问调试组件</li>\n</ul>\n<p>I-Code用于取指，D-Code用于查表等操作，它们按最佳执行速度进行优化。</p>\n<p>系统总线（System）用于访问内存和外设，覆盖的区域包括SRAM，片上外设，片外RAM，片外扩展设备，以及系统级存储区的部分空间。</p>\n<p>私有外设总线负责一部分私有外设的访问，主要就是访问调试组件。它们也在系统级存储区。</p>\n<p>还有一个DMA总线，从字面上看，DMA是data memory access的意思，是一种连接内核和外设的桥梁，它可以访问外设、内存，传输不受CPU的控制，并且是双向通信。简而言之，这个家伙就是一个速度很快的且不受老大控制的数据搬运工。</p>\n<p>从结构框图上看，STM32的外设有串口、定时器、IO口、FSMC、SDIO、SPI、I2C等，这些外设按照速度的不同，分别挂载到AHB、APB2、APB1这三条总线上。</p>\n<p>其中寄存器其实可以理解为内存的地址，cpu通过地址访问对应的空间的内存数据，这个内存数据用来控制各个外设的开关。</p>\n<p><code>stm32</code>的函数一切库的封装始于寄存器的映射操作。<br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/2.webp\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/4.webp\" alt=\"\" /></p>\n<p>如果进行寄存器开发，就需要怼地址以及对寄存器进行字节赋值，不仅效率低而且容易出错。</p>\n<p>因此我们开始使用库函数进行编程。<br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/3.webp\" alt=\"\" /></p>\n<h3 id=\"内核库文件分析\"><a class=\"markdownIt-Anchor\" href=\"#内核库文件分析\"></a> 内核库文件分析</h3>\n<h4 id=\"cor_cm3h\"><a class=\"markdownIt-Anchor\" href=\"#cor_cm3h\"></a> <code>cor_cm3.h</code></h4>\n<p>这个头文件实现了：</p>\n<ol>\n<li>内核结构体寄存器定义</li>\n<li>内核寄存器内存映射</li>\n<li>内存寄存器位定义</li>\n</ol>\n<blockquote>\n<p>跟处理器相关的头文件<code>stm32f10x.h</code>实现的功能一样，一个是针对内核的寄存器，一个是针对内核之外，即处理器的寄存器。</p>\n</blockquote>\n<h4 id=\"misch\"><a class=\"markdownIt-Anchor\" href=\"#misch\"></a> <code>misc.h</code></h4>\n<p>内核应用函数库头文件，对应<code>stm32f10x_xxx.h</code>。</p>\n<h4 id=\"miscc\"><a class=\"markdownIt-Anchor\" href=\"#miscc\"></a> <code>misc.c</code></h4>\n<p>内核应用函数库文件，对应<code>stm32f10x_xxx.c</code>。</p>\n<p>在CM3这个内核里面还有一些功能组件，如：</p>\n<ul>\n<li><code>NVIC</code></li>\n<li><code>SCB</code></li>\n<li><code>ITM</code></li>\n<li><code>MPU</code></li>\n<li><code>CoreDebug</code></li>\n</ul>\n<blockquote>\n<p>CM3带有非常丰富的功能组件，但是芯片厂商在设计MCU的时候有一些并不是非要不可的，是可裁剪的，比如<code>MPU</code>、<code>ITM</code>等在STM32里面就没有。<br />\n其中<code>NVIC</code>在每一个CM3内核的单片机中都会有，但都会被裁剪，只能是CM3 NVIC的一个子集。在<code>NVIC</code>里面还有一个<code>SysTick</code>，是一个系统定时器，可以提供时基，一般为操作系统定时器所用。</p>\n</blockquote>\n<p><code>misc.h</code>和<code>mics.c</code>这两个文件提供了操作这些组件的函数，并可以在CM3内核单片机直接移植。</p>\n<hr />\n<h3 id=\"处理器外设库文件分析\"><a class=\"markdownIt-Anchor\" href=\"#处理器外设库文件分析\"></a> 处理器外设库文件分析</h3>\n<h4 id=\"startup_stm32f10x_hds\"><a class=\"markdownIt-Anchor\" href=\"#startup_stm32f10x_hds\"></a> <code>startup_stm32f10x_hd.s</code></h4>\n<p>这个是由汇编编写的启动文件，是STM32上电启动的第一个程序，启动文件主要实现了：</p>\n<ul>\n<li>初始化堆栈指针 <code>SP</code></li>\n<li>设置 <code>PC</code> 指针<code>=Reset_Handler</code></li>\n<li>设置向量表的地址，并初始化向量表（向量表里面放的是 STM32 所有中断函数的入口地址）</li>\n<li>调用库函数 <code>SystemInit</code>（把系统时钟配置成 72M，<code>SystemInit</code> 在库文件 <code>stytem_stm32f10x.c</code> 中定义）</li>\n<li>跳转到标号<code>_main</code>，最终去到 C 的世界</li>\n</ul>\n<h4 id=\"system_stm32f10xc\"><a class=\"markdownIt-Anchor\" href=\"#system_stm32f10xc\"></a> <code>system_stm32f10x.c</code></h4>\n<p>这个文件的作用是里面实现了各种常用的系统时钟设置函数，有：</p>\n<ul>\n<li>72M</li>\n<li>56M</li>\n<li>48M</li>\n<li>36M</li>\n<li>24M</li>\n<li>8M</li>\n</ul>\n<blockquote>\n<p>我们使用的是把系统时钟设置成72M。</p>\n</blockquote>\n<h4 id=\"stm32f10xh\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10xh\"></a> <code>Stm32f10x.h</code></h4>\n<p>这个头文件非常重要，实现了：</p>\n<ol>\n<li>处理器外设寄存器的结构体定义</li>\n<li>处理器外设的内存映射</li>\n<li>处理器外设寄存器的位定义</li>\n</ol>\n<blockquote>\n<p>关于1和2我们在用寄存器点亮LED的时候有讲解。</p>\n</blockquote>\n<p><strong>关于第3点说明：</strong><br />\n处理器外设寄存器的位定义就是把外设的每个寄存器的每一个位写1的16进制数定义成一个宏，宏名即用该位的名称表示。</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一般的操作方法</span></span><br><span class=\"line\">ADC-&gt;CR2 = <span class=\"number\">0x00000001</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用位定义后的操作</span></span><br><span class=\"line\">ADC-&gt;CR2 = ADC_CR2_ADON;</span><br></pre></td></tr></table></figure>\n<h4 id=\"stm32f10x_xxxh\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10x_xxxh\"></a> <code>stm32f10x_xxx.h</code></h4>\n<p>外设xxx应用函数库头文件，这里面主要定义了实现外设某一功能的结构体。</p>\n<blockquote>\n<p>比如通用定时器有很多功能：定时功能、输出比较功能、输入捕捉功能。这个头文件就为我们打包好了要实现某一个功能的寄存器（以结构体的形式定义）。</p>\n</blockquote>\n<h4 id=\"stm32f10x_xxxc\"><a class=\"markdownIt-Anchor\" href=\"#stm32f10x_xxxc\"></a> <code>stm32f10x_xxx.c</code></h4>\n<p>外设xxx应用函数库，这里面写好了操作xxx外设的所有常用的函数。</p>\n<blockquote>\n<p>我们使用库编程的时候，使用的最多的就是这里的函数。</p>\n</blockquote>\n<hr />\n<h3 id=\"systeminit-相关问题\"><a class=\"markdownIt-Anchor\" href=\"#systeminit-相关问题\"></a> SystemInit 相关问题</h3>\n<p>在工程中新建<code>main.c</code>后直接编译会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Undefined symbol SystemInit (referred from startup_stm32f10x_hd.o).</span><br></pre></td></tr></table></figure>\n<p><strong>原因分析：</strong><br />\n从启动文件<code>startup_stm32f10x_hd.s</code>中我们知道：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;Reset handler</span><br><span class=\"line\">Reset_Handler PROC</span><br><span class=\"line\">    EXPORT Reset_Handler [WEAK]</span><br><span class=\"line\">    IMPORT __main</span><br><span class=\"line\">    ;IMPORT SystemInit</span><br><span class=\"line\">    ;LDR R0, =SystemInit</span><br><span class=\"line\">    BLX R0</span><br><span class=\"line\">    LDR R0, =__main</span><br><span class=\"line\">    BX R0</span><br><span class=\"line\">ENDP</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>汇编中<code>;</code>分号是注释的意思<br />\n<code>Reset_Handler</code>调用了<code>SystemInit</code>函数（用来初始化系统时钟），该函数是在库文件<code>system_stm32f10x.c</code>中实现的。</p>\n</blockquote>\n<p><strong>解决方案：</strong><br />\n在main文件里面定义一个<code>SystemInit</code>空函数，为的是骗过编译器，把这个错误去掉。</p>\n<blockquote>\n<p>关于配置系统时钟之后会出文章RCC时钟树详细介绍，主要配置：</p>\n<ul>\n<li>时钟控制寄存器(RCC_CR)</li>\n<li>时钟配置寄存器(RCC_CFGR)</li>\n</ul>\n<p>但最好是直接使用CubeMX直接生成，因为它的配置过程有些冗长。<br />\n如果使用库，库函数<code>SystemInit</code>会帮我们把系统时钟设置成72M。</p>\n</blockquote>\n<h2 id=\"font-stylecolorrgb18-18-182-基本stm32外设配置流程font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb18-18-182-基本stm32外设配置流程font\"></a> <font style=\"color:rgb(18, 18, 18);\">2、基本stm32外设配置流程</font></h2>\n<p><strong>程序模板</strong></p>\n<h4 id=\"第一步申明结构体\"><a class=\"markdownIt-Anchor\" href=\"#第一步申明结构体\"></a> 第一步：申明结构体；</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_InitTypeDef xxx_InitStructure;</span><br></pre></td></tr></table></figure>\n<h4 id=\"第二步开启时钟\"><a class=\"markdownIt-Anchor\" href=\"#第二步开启时钟\"></a> 第二步：开启时钟；</h4>\n<p>（第一步和第二步顺序不能调换：标准c要求所有变量/结构体,都必须在代码段之前声明）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RCC_xPeriphClockCmd(RCC_AxBxPeriph_xxx, ENABLE)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>*2.5：引脚复用（如果有）并且开启复用的时钟</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_PinAFConfig(GPIOx,GPIO_PinSourcex,GPIO_AF_x)</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三步初始化结构体\"><a class=\"markdownIt-Anchor\" href=\"#第三步初始化结构体\"></a> 第三步：初始化结构体；</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_Init(xxx,&amp;xxx_InitStructure)</span><br></pre></td></tr></table></figure>\n<h3 id=\"若有设置中断\"><a class=\"markdownIt-Anchor\" href=\"#若有设置中断\"></a> *若有设置中断</h3>\n<blockquote>\n<p>中断名在startup_stm32f40_41xx.s中定义。</p>\n</blockquote>\n<h4 id=\"第一步使能外设某特定中断定时器串口adc\"><a class=\"markdownIt-Anchor\" href=\"#第一步使能外设某特定中断定时器串口adc\"></a> 第一步：使能外设某特定中断（定时器，串口，ADC）</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_ITConfig(xxx, xxx, ENABLE);</span><br></pre></td></tr></table></figure>\n<h4 id=\"第二步初始化-nvic\"><a class=\"markdownIt-Anchor\" href=\"#第二步初始化-nvic\"></a> 第二步：初始化 NVIC</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三步设置系统中断优先级分组通常在主函数中配置\"><a class=\"markdownIt-Anchor\" href=\"#第三步设置系统中断优先级分组通常在主函数中配置\"></a> 第三步：设置系统中断优先级分组(通常在主函数中配置）</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_x);</span><br></pre></td></tr></table></figure>\n<p>中断服务函数(典型）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">xxx_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xxx_GetITStatus(xxx)!=RESET)<span class=\"comment\">//判断某个线上的中断是否发生 </span></span><br><span class=\"line\">  &#123; …中断逻辑…</span><br><span class=\"line\">      xxx_ClearITPendingBit(xxx); <span class=\"comment\">//清除 LINE 上的中断标志位 </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其它中断相关</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_GetITStatus(xxx)<span class=\"comment\">//获取中断状态，查看中断是否发生 </span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">xxx_ClearITPendingBit(xxx)；<span class=\"comment\">//清除</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">xxx_ClearFlag(xxx);<span class=\"comment\">//清除</span></span><br><span class=\"line\"><span class=\"comment\">//前者会先判断这种中断是否使能，使能了才去判断中断标志位，</span></span><br><span class=\"line\"><span class=\"comment\">//而后者直接用来判断状态标志位。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"end定时器串口adc使能\"><a class=\"markdownIt-Anchor\" href=\"#end定时器串口adc使能\"></a> END.定时器/串口/ADC使能</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx_Cmd(xxx, ENABLE);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-结构体变量配置具体形式\"><a class=\"markdownIt-Anchor\" href=\"#3-结构体变量配置具体形式\"></a> 3、结构体变量配置具体形式</h2>\n<h4 id=\"初始化结构体初始化-gpio-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-gpio-的常用格式\"></a> 初始化结构体初始化 GPIO 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_x | GPIO_Pin_x;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_xxx;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;</span><br><span class=\"line\">GPIO_Init(GPIOx,&amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化-usart-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-usart-的常用格式\"></a> 初始化结构体初始化 USART 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USART_InitTypeDef USART_InitStructure;</span><br><span class=\"line\">USART_InitStructure.USART_BaudRate = bound;<span class=\"comment\">//一般设置为 9600;</span></span><br><span class=\"line\">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class=\"comment\">//字长为 8 位数据格式</span></span><br><span class=\"line\">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class=\"comment\">//一个停止位</span></span><br><span class=\"line\">USART_InitStructure.USART_Parity = USART_Parity_No;<span class=\"comment\">//无奇偶校验位</span></span><br><span class=\"line\">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;</span><br><span class=\"line\">USART_InitStructure.USART_Mode = USART_Mode_Rx |USART_Mode_Tx;<span class=\"comment\">//收发模式</span></span><br><span class=\"line\">USART_Init(USARTX, &amp;USART_InitStructure); <span class=\"comment\">//初始化串口</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化-nvic-的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化-nvic-的常用格式\"></a> 初始化结构体初始化 NVIC 的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannel = xxx_IRQn;<span class=\"comment\">//设置中断名</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class=\"number\">3</span>;<span class=\"comment\">//抢占优先级 3</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelSubPriority =<span class=\"number\">3</span>; <span class=\"comment\">//响应优先级 3</span></span><br><span class=\"line\">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class=\"comment\">//IRQ 通道使能</span></span><br><span class=\"line\">NVIC_Init(&amp;NVIC_InitStructure); <span class=\"comment\">//根据指定的参数初始化 VIC 寄存器、</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化外部中断的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化外部中断的常用格式\"></a> 初始化结构体初始化外部中断的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Line=EXTI_Linex;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_xxx;<span class=\"comment\">//上升，下降沿或任意电平</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class=\"line\">EXTI_Init(&amp;EXTI_InitStructure); <span class=\"comment\">//初始化外设 EXTI 寄存器</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化定时器中断的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化定时器中断的常用格式\"></a> 初始化结构体初始化定时器中断的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;</span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_Period = xxx;</span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_Prescaler =xxx; </span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIVx; </span><br><span class=\"line\">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_x;</span><br><span class=\"line\">TIM_TimeBaseInit(TIMx, &amp;TIM_TimeBaseStructure);</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化输出比较的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化输出比较的常用格式\"></a> 初始化结构体初始化输出比较的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class=\"line\">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWMx; <span class=\"comment\">//选择模式 PWM</span></span><br><span class=\"line\">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class=\"comment\">//比较输出使能</span></span><br><span class=\"line\">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_xxx; <span class=\"comment\">//输出极性</span></span><br><span class=\"line\">TIM_OCxInit(TIMx, &amp;TIM_OCInitStructure); <span class=\"comment\">//根据T指定的参数初始化外设</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"设置-adc-的通用控制寄存器-ccr-common-control-register\"><a class=\"markdownIt-Anchor\" href=\"#设置-adc-的通用控制寄存器-ccr-common-control-register\"></a> 设置 ADC 的通用控制寄存器 CCR( common control register)</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADC_CommonInitTypeDef ADC_CommonInitStructure;</span><br><span class=\"line\">ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;<span class=\"comment\">//独立模式</span></span><br><span class=\"line\">ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_xCycles;<span class=\"comment\">//两个采样阶段之间的延迟周期数，5~20</span></span><br><span class=\"line\">ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;</span><br><span class=\"line\">ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;<span class=\"comment\">//需保证 ADC1 的时钟频率不超过 36MHz。</span></span><br><span class=\"line\">ADC_CommonInit(&amp;ADC_CommonInitStructure);<span class=\"comment\">//初始化</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化结构体初始化adc的常用格式\"><a class=\"markdownIt-Anchor\" href=\"#初始化结构体初始化adc的常用格式\"></a> 初始化结构体初始化ADC的常用格式</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADC_InitTypeDef ADC_InitStructure;</span><br><span class=\"line\">ADC_InitStructure.ADC_Resolution = ADC_Resolution_xb;<span class=\"comment\">//6,8,10,12</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ScanConvMode = DISABLE;<span class=\"comment\">//非扫描模式</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;<span class=\"comment\">//关闭连续模式</span></span><br><span class=\"line\">ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;</span><br><span class=\"line\"><span class=\"comment\">//禁止触发检测，使用软件触发</span></span><br><span class=\"line\">ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;<span class=\"comment\">//右对齐</span></span><br><span class=\"line\">ADC_InitStructure.ADC_NbrOfConversion = <span class=\"number\">1</span>;<span class=\"comment\">//1 个转换在规则序列中</span></span><br><span class=\"line\">ADC_Init(ADC1, &amp;ADC_InitStructure);<span class=\"comment\">//ADC 初始化</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"三-gpio配置\"><a class=\"markdownIt-Anchor\" href=\"#三-gpio配置\"></a> 三、GPIO配置</h1>\n<h3 id=\"1-常用函数\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数\"></a> 1、常用函数</h3>\n<blockquote>\n<p><strong>GPIO_Init</strong> 初始化GPIO，设置GPIO的模式，速度，引脚数<br />\n<strong>GPIO_ReadInputDataBit</strong>读取一位GPIO的输入数据\t<br />\n<strong>GPIO_ReadInputData</strong>\t读取GPIOx的输入数据\t<br />\n<strong>GPIO_ReadOutputDataBit</strong>\t读取一位GPIO的输出数据\t<br />\n<strong>GPIO_ReadOutputDat</strong>a\t读取GPIOx的输出数据\t<br />\n<strong>GPIO_SetBits</strong>\t使GPIO设置为高电平，可一起设置多，也可以设置一个\t<br />\n<strong>GPIO_ResetBits</strong>\t使GPIO设置为高电平，课一起设置多，也可以设置一个\t<br />\n<strong>GPIO_WriteBit</strong>\t设置GPIO的一个管脚\t<br />\n<strong>GPIO_Write</strong>\t设置GPIOx全部管脚\t<br />\n<strong>GPIO_ToggleBits</strong> 翻转指定的GPIO口<br />\n<strong>GPIO_PinAFConfig</strong> 改变指定管脚的映射关系，即配置指定管脚的复用功能</p>\n</blockquote>\n<h3 id=\"font-stylecolorrgb77-77-77设计框图font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb77-77-77设计框图font\"></a> <font style=\"color:rgb(77, 77, 77);\">设计框图</font></h3>\n<p><img src=\"/images/posts/4.png\" alt=\"\" /></p>\n<h3 id=\"font-stylecolorrgb77-77-77例程代码font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb77-77-77例程代码font\"></a> <font style=\"color:rgb(77, 77, 77);\">例程代码</font></h3>\n<h4 id=\"示例一font-stylecolorrgb77-77-77led灯初始化gpio口例程font\"><a class=\"markdownIt-Anchor\" href=\"#示例一font-stylecolorrgb77-77-77led灯初始化gpio口例程font\"></a> 示例一:<font style=\"color:rgb(77, 77, 77);\">LED灯初始化GPIO口例程</font></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LED_GPIO_Config</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*定义一个GPIO_InitTypeDef类型的结构体*/</span></span><br><span class=\"line\">\t\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*开启LED相关的GPIO外设时钟*/</span></span><br><span class=\"line\">\t\tRCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*设置引脚模式为通用推挽输出*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   </span><br><span class=\"line\">\t\t<span class=\"comment\">/*设置引脚速率为50MHz */</span>   </span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; </span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOC, &amp;GPIO_InitStructure);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\">\t\t<span class=\"comment\">/*选择要控制的GPIO引脚*/</span></span><br><span class=\"line\">\t\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*调用库函数，初始化GPIO*/</span></span><br><span class=\"line\">\t\tGPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参数：<strong>GPIO_InitStruct</strong>，GPIO的初始化相关结构体。该结构体里的成员变量决定了我们具体的初始化参数。以下进行说明：</p>\n<pre><code>          GPIO_Pin：指定具体的io脚，如GPIO_Pin_0，GPIO_Pin_1这样的宏定义。\n\n          GPIO_Mode：指定GPIO的模式，\n</code></pre>\n<p><strong>输入模式</strong></p>\n<pre><code>\t+ 输入浮空： GPIO_Mode_IN_FLOATING\n\t+  输入上拉： GPIO_Mode_IPU\n\t+  输入下拉 ：GPIO_Mode_IPD\n\t+  模拟输入 ：GPIO_Mode_AIN\n</code></pre>\n<p><strong>输出模式</strong></p>\n<pre><code>        +  开漏输出 GPIO_Mode_Out_OD\n        + 推挽输出 GPIO_Mode_Out_PP\n        + 复用功能推挽 GPIO_Mode_AF_PP\n        +  复用功能开漏 GPIO_Mode_AF_OD\n</code></pre>\n<p>GPIO_Speed：指定IO最快翻转速度，也就是当使用IO产生频率（如PWM）的最大速度：</p>\n<pre><code>        + GPIO_Speed_10MHz,\n        + GPIO_Speed_2MHz, \n        + GPIO_Speed_50MHz等\n</code></pre>\n<h4 id=\"示例二把gpio配置成输入\"><a class=\"markdownIt-Anchor\" href=\"#示例二把gpio配置成输入\"></a> 示例二:把GPIO配置成输入</h4>\n<blockquote>\n<p>常规方式按键使用中断触发，本案例很少被使用在按键中。</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">KEY_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);</span><br><span class=\"line\"><span class=\"comment\">//使能 PORTA,PORTC 时钟</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;</span><br><span class=\"line\"><span class=\"comment\">//PA15</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; </span><br><span class=\"line\"><span class=\"comment\">//设置成上拉输入</span></span><br><span class=\"line\">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOA15</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class=\"line\"><span class=\"comment\">//PC5</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; </span><br><span class=\"line\"><span class=\"comment\">//设置成上拉输入</span></span><br><span class=\"line\">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOC5</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class=\"line\"><span class=\"comment\">//PA0</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; </span><br><span class=\"line\"><span class=\"comment\">//PA0 设置成输入，默认下拉 </span></span><br><span class=\"line\">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//初始化 GPIOA.0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb51-51-51示例三配置复用功能-pa9-pa10-配置成串口1的收发接口font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb51-51-51示例三配置复用功能-pa9-pa10-配置成串口1的收发接口font\"></a> <font style=\"color:rgb(51, 51, 51);\">示例三:配置复用功能 PA9 PA10 配置成串口1的收发接口</font></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);<span class=\"comment\">//使能GPIOA时钟</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class=\"comment\">//使能USART1时钟</span></span><br><span class=\"line\"><span class=\"comment\">//串口1对应引脚复用映射</span></span><br><span class=\"line\">GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);<span class=\"comment\">//GPIOA9复用为USART1</span></span><br><span class=\"line\">GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);<span class=\"comment\">//GPIOA10复用为USART1</span></span><br><span class=\"line\"><span class=\"comment\">//USART1端口配置</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin= GPIO_Pin_9 | GPIO_Pin_10; <span class=\"comment\">//GPIOA9与GPIOA10</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode= GPIO_Mode_AF;<span class=\"comment\">//复用功能</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed= GPIO_Speed_50MHz;      <span class=\"comment\">//速度50MHz</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_OType= GPIO_OType_PP; <span class=\"comment\">//推挽复用输出</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_PuPd= GPIO_PuPd_UP; <span class=\"comment\">//上拉</span></span><br><span class=\"line\">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);<span class=\"comment\">//初始化PA9，PA10</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"四-外部中断\"><a class=\"markdownIt-Anchor\" href=\"#四-外部中断\"></a> 四、外部中断</h1>\n<h3 id=\"1-常用函数-2\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数-2\"></a> 1、常用函数</h3>\n<blockquote>\n<p>void EXTI_DeInit(void); 重设为缺省值<br />\nvoid EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct); 根据EXTI_InitStruct结构体的配置进行初始化<br />\nvoid EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct);把结构体变量的每一个变量按照缺省值填入。<br />\nvoid EXTI_GenerateSWInterrupt(uint32_t EXTI_Line);产生一个中断<br />\nFlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line);获取指定的EXTI线路挂起的标志位<br />\nvoid EXTI_ClearFlag(uint32_t EXTI_Line);清楚EXTI的挂起标志位<br />\nITStatus EXTI_GetITStatus(uint32_t EXTI_Line);检查指定的EXTI线路触发请求发送与否<br />\nvoid EXTI_ClearITPendingBit(uint32_t EXTI_Line);清楚EXTI线路挂起位</p>\n</blockquote>\n<hr />\n<p>voidNVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)<font style=\"color:rgb(77, 77, 77);\">中断优先级分组</font></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">分组号</font></strong></th>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">4 bit 分配情况</font></strong></th>\n<th style=\"text-align:center\"><strong><font style=\"color:rgb(79, 79, 79);\">说明</font></strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第0组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">0 : 4</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">无抢占式优先级，16 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第1组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">1 : 3</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">2 个抢占式优先级，8 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第2组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">2 : 2</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">4 个抢占式优先级，4 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第3组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">3 : 1</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">8 个抢占式优先级，2 个子优先级</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">第4组</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">4 : 0</font></td>\n<td style=\"text-align:center\"><font style=\"color:rgb(79, 79, 79);\">16 个抢占式优先级，无子优先级</font></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>如果用户没有设置优先级分组，即用户没有调用&quot;&gt;NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)则优先级分组默认设置为分组 0，即无抢占式优先级、16个子优先级。<br />\nNVIC_Init(&amp;NVIC_InitStruct); 根据NVIC_InitStruct结构体的配置进行初始化</p>\n</blockquote>\n<h3 id=\"设计框图\"><a class=\"markdownIt-Anchor\" href=\"#设计框图\"></a> 设计框图</h3>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/5.png\" alt=\"\" /></p>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/6.png\" alt=\"\" /></p>\n<h3 id=\"例程代码\"><a class=\"markdownIt-Anchor\" href=\"#例程代码\"></a> 例程代码</h3>\n<p><strong><font style=\"color:rgb(77, 77, 77);\">相关配置代码的介绍</font></strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//0、初始化GPIO</span></span><br><span class=\"line\">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">GPIO_StructInit(&amp;GPIO_InitStructure);</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Pin = Z_GPIO_PIN;</span><br><span class=\"line\">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; <span class=\"comment\">//浮空输入</span></span><br><span class=\"line\">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">GPIO_Init(Z_GPIO_PORT, &amp;GPIO_InitStructure);</span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);\t<span class=\"comment\">//使能复用功能时钟</span></span><br><span class=\"line\">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\"><span class=\"comment\">//1.配置中断线</span></span><br><span class=\"line\">EXTI_InitTypeDef EXTI_InitStruct;<span class=\"comment\">//创建结构体来初始化中断线</span></span><br><span class=\"line\">EXTI_ClearITPendingBit(EXTI_Line9);     <span class=\"comment\">//清除中断标志位</span></span><br><span class=\"line\">GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource5);</span><br><span class=\"line\">EXTI_InitStructure.EXTI_Line = EXTI_Line13;<span class=\"comment\">//选择EXTI的信号源</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;<span class=\"comment\">/* EXTI为中断模式 */</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;<span class=\"comment\">/* 下降沿中断 */</span></span><br><span class=\"line\">EXTI_InitStructure.EXTI_LineCmd = ENABLE;<span class=\"comment\">/* 使能中断 */</span>\t</span><br><span class=\"line\">EXTI_Init(&amp;EXTI_InitStructure);</span><br><span class=\"line\"><span class=\"comment\">//2.配置NVIC中断优先级</span></span><br><span class=\"line\">NVIC_InitTypeDef NVIC_InitStructure;<span class=\"comment\">//创建结构体来初始化中断优先级</span></span><br><span class=\"line\">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class=\"comment\">//配置分组号</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;</span><br><span class=\"line\"><span class=\"comment\">//使能按键所在的外部中断通道</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;</span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">0x02</span>;<span class=\"comment\">//设置抢占优先级</span></span><br><span class=\"line\">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class=\"number\">0x01</span>;<span class=\"comment\">//设置子优先级</span></span><br><span class=\"line\">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class=\"line\"><span class=\"comment\">//3.实现中断服务函数（注意配置完之后清除函数的挂起）</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EXTI0_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tdelay_ms(<span class=\"number\">10</span>); <span class=\"comment\">//消抖?</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (WK_UP == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tLED0 = <span class=\"number\">1</span>;<span class=\"comment\">//led函数宏</span></span><br><span class=\"line\">\t\tLED1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tEXTI_ClearITPendingBit(EXTI_Line0); <span class=\"comment\">//清除 EXTI0 线路挂起，清除位</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>NVIC_InitTypeDef 结构体中间有四个成员变量，这四个成员变量的作用是：</p>\n<ul>\n<li>NVIC_IRQChannel：定义初始化的是哪个中断，这个我们可以在 stm32f10x.h 中找到每个中断对应的名字。</li>\n<li>NVIC_IRQChannelPreemptionPriority：定义这个中断的抢占优先级别。</li>\n<li>NVIC_IRQChannelSubPriority：定义这个中断的子优先级别。</li>\n<li>NVIC_IRQChannelCmd：使能or失能NVIC</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><font >EXTI的配置，EXTI_Trigger这里支持三种模式；</font></p>\n<ul>\n<li><font >EXTI_Trigger_Rising 上升沿触发；</font></li>\n<li><font >EXTI_Trigger_Falling 下降沿触发；</font></li>\n<li><font >EXTI_Trigger_Rising_Falling 上升沿和下降沿都可以触发；</font></li>\n</ul>\n</blockquote>\n<p><strong>中断服务函数在stm32f10x_it.c中编写，在汇编文件中查询</strong></p>\n<h4 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\"></a> 完整代码</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">CountSensor_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource14);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tEXTI_InitTypeDef EXTI_InitStructure;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Line = EXTI_Line14;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;</span><br><span class=\"line\">\tEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;</span><br><span class=\"line\">\tEXTI_Init(&amp;EXTI_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tNVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_Init(&amp;NVIC_InitStructure);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">EXTI15_10_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (EXTI_GetITStatus(EXTI_Line14) == SET)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14) == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tCountSensor_Count ++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEXTI_ClearITPendingBit(EXTI_Line14);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"五-定时器\"><a class=\"markdownIt-Anchor\" href=\"#五-定时器\"></a> 五、定时器</h1>\n<h3 id=\"1-常用函数-3\"><a class=\"markdownIt-Anchor\" href=\"#1-常用函数-3\"></a> 1、常用函数</h3>\n<blockquote>\n<p>void TIM_DeInit<br />\nvoid TIM_TimeBaseInit<br />\nvoid TIM_OC1Init<br />\nvoid TIM_OC2Init<br />\nvoid TIM_OC3Init<br />\nvoid TIM_OC4Init<br />\nvoid TIM_ICInit<br />\nvoid TIM_PWMIConfig<br />\nvoid TIM_BDTRConfig<br />\nvoid TIM_TimeBaseStructInit<br />\nvoid TIM_OCStructInit<br />\nvoid TIM_ICStructInit<br />\nvoid TIM_BDTRStructInit<br />\nvoid TIM_Cmd<br />\nvoid TIM_CtrlPWMOutputs<br />\nvoid TIM_ITConfig<br />\nvoid TIM_GenerateEvent<br />\nvoid TIM_DMAConfig<br />\nvoid TIM_DMACmd<br />\nvoid TIM_InternalClockConfig<br />\nvoid TIM_ITRxExternalClockConfig<br />\nvoid TIM_TIxExternalClockConfig<br />\nvoid TIM_ETRClockMode1Config<br />\nvoid TIM_ETRClockMode2Config<br />\nvoid TIM_ETRConfig<br />\nvoid TIM_PrescalerConfig<br />\nvoid TIM_CounterModeConfig<br />\nvoid TIM_SelectInputTrigger<br />\nvoid TIM_EncoderInterfaceConfig<br />\nvoid TIM_ForcedOC1Config<br />\nvoid TIM_ForcedOC2Config<br />\nvoid TIM_ForcedOC3Config<br />\nvoid TIM_ForcedOC4Config<br />\nvoid TIM_ARRPreloadConfig<br />\nvoid TIM_SelectCOM<br />\nvoid TIM_SelectCCDMA<br />\nvoid TIM_CCPreloadControl<br />\nvoid TIM_OC1PreloadConfig<br />\nvoid TIM_OC2PreloadConfig<br />\nvoid TIM_OC3PreloadConfig<br />\nvoid TIM_OC4PreloadConfig<br />\nvoid TIM_OC1FastConfig<br />\nvoid TIM_OC2FastConfig<br />\nvoid TIM_OC3FastConfig<br />\nvoid TIM_OC4FastConfig<br />\nvoid TIM_ClearOC1Ref<br />\nvoid TIM_ClearOC2Ref<br />\nvoid TIM_ClearOC3Ref<br />\nvoid TIM_ClearOC4Ref<br />\nvoid TIM_OC1PolarityConfig<br />\nvoid TIM_OC1NPolarityConfig<br />\nvoid TIM_OC2PolarityConfig<br />\nvoid TIM_OC2NPolarityConfig<br />\nvoid TIM_OC3PolarityConfig<br />\nvoid TIM_OC3NPolarityConfig<br />\nvoid TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);<br />\nvoid TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);<br />\nvoid TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);<br />\nvoid TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);<br />\nvoid TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState);<br />\nvoid TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource);<br />\nvoid TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState);<br />\nvoid TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode);<br />\nvoid TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource);<br />\nvoid TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);<br />\nvoid TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);<br />\nvoid TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter);<br />\nvoid TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload);<br />\nvoid TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);<br />\nvoid TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2);<br />\nvoid TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3);<br />\nvoid TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4);<br />\nvoid TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC);<br />\nvoid TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD);<br />\nuint16_t TIM_GetCapture1(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture2(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture3(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCapture4(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetCounter(TIM_TypeDef* TIMx);<br />\nuint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx);<br />\nFlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);<br />\nvoid TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG);<br />\nITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT);<br />\nvoid TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT);</p>\n</blockquote>\n<h3 id=\"设计框图-2\"><a class=\"markdownIt-Anchor\" href=\"#设计框图-2\"></a> 设计框图</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">编号</th>\n<th style=\"text-align:center\">总线</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">高级定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM1</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM8</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB2</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">通用定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM2</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM3</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM4</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM5</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB1</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</font></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font style=\"color:black;\">基本定时器</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">TIM6</font><font style=\"color:black;\">、</font><font style=\"color:black;\">TIM7</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">APB1</font></td>\n<td style=\"text-align:center\"><font style=\"color:black;\">拥有定时中断、主模式触发</font><font style=\"color:black;\">DAC</font><font style=\"color:black;\">的功能</font></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/7.png\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/8.png\" alt=\"\" /><br />\n<img src=\"/images/posts/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/9.png\" alt=\"\" /></p>\n<h3 id=\"例程代码-2\"><a class=\"markdownIt-Anchor\" href=\"#例程代码-2\"></a> 例程代码</h3>\n<p>定时器中断实现步骤</p>\n<p>① 能定时器时钟。</p>\n<pre><code>   RCC_APB1PeriphClockCmd();\n</code></pre>\n<p>②  初始化定时器，配置ARR,PSC。</p>\n<pre><code>  TIM_TimeBaseInit();\n</code></pre>\n<p>③开启定时器中断，配置NVIC。</p>\n<pre><code>  void TIM_ITConfig();\n\n  NVIC_Init();\n</code></pre>\n<p>④  使能定时器。</p>\n<pre><code>  TIM_Cmd();\n</code></pre>\n<p>⑥  编写中断服务函数。</p>\n<pre><code>  TIMx_IRQHandler();\n</code></pre>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">TIM3_Int_Init</span><span class=\"params\">(u16 arr,u16 psc)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class=\"line\">\tNVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class=\"comment\">//时钟使能</span></span><br><span class=\"line\">\tTIM_InternalClockConfig(TIM3);</span><br><span class=\"line\">\t<span class=\"comment\">//定时器TIM3初始化</span></span><br><span class=\"line\">\tTIM_TimeBaseInitStructure.TIM_Period = <span class=\"number\">10000</span> - <span class=\"number\">1</span>; <span class=\"comment\">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值\t</span></span><br><span class=\"line\">\tTIM_TimeBaseInitStructure.TIM_Prescaler = <span class=\"number\">7200</span> - <span class=\"number\">1</span>; <span class=\"comment\">//设置用来作为TIMx时钟频率除数的预分频值</span></span><br><span class=\"line\">\tTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; <span class=\"comment\">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class=\"line\">\tTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class=\"comment\">//TIM向上计数模式</span></span><br><span class=\"line\">\tTIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure); <span class=\"comment\">//根据指定的参数初始化TIMx的时间基数单位</span></span><br><span class=\"line\"></span><br><span class=\"line\">    TIM_ClearFlag(TIM3, TIM_FLAG_Update);<span class=\"comment\">//清除标志位</span></span><br><span class=\"line\">\tTIM_ITConfig(TIM3,TIM_IT_Update,ENABLE ); <span class=\"comment\">//使能指定的TIM3中断,允许更新中断</span></span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"comment\">//中断优先级NVIC设置</span></span><br><span class=\"line\">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class=\"comment\">//选择分组</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  <span class=\"comment\">//TIM3中断</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class=\"number\">0</span>;  <span class=\"comment\">//先占优先级0级</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class=\"number\">3</span>;  <span class=\"comment\">//从优先级3级</span></span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; <span class=\"comment\">//IRQ通道被使能</span></span><br><span class=\"line\">\tNVIC_Init(&amp;NVIC_InitStructure);  <span class=\"comment\">//初始化NVIC寄存器</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">\tTIM_Cmd(TIM3, ENABLE);  <span class=\"comment\">//使能TIMx\t\t\t\t\t </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//定时器3中断服务程序</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">TIM3_IRQHandler</span><span class=\"params\">(<span class=\"type\">void</span>)</span>   <span class=\"comment\">//TIM3中断</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)  <span class=\"comment\">//检查TIM3更新中断发生与否</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\tTIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  <span class=\"comment\">//清除TIMx更新中断标志 </span></span><br><span class=\"line\">\t\tLED1=!LED1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"WPF的XAML解析","mermaid":true,"date":"2025-07-13T16:00:00.000Z","cover":"rgba(219, 138, 237, 0.47)","comments":1,"_content":"XAML（eXtensible Application Markup Language）是WPF的核心技术，它是一种基于XML的声明式语言，用于定义用户界面和应用程序结构。下面我将全面讲解XAML的各种格式和设置。\n\n## 一、XAML基础结构\n### 1. 基本文档结构\n```xml\n<Window x:Class=\"MyApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"Main Window\" Height=\"450\" Width=\"800\">\n    <!-- 只能有一个根子元素 -->\n    <Grid>\n        <!-- UI元素放在这里 -->\n    </Grid>\n</Window>\n\n```\n\n### 2. 核心组成部分\n+ **根元素**：Window、Page、UserControl等\n+ **命名空间声明**：\n    - `xmlns`：WPF核心命名空间\n    - `xmlns:x`：XAML语言特性命名空间\n+ **x:Class属性**：关联后台代码文件\n+ **属性设置**：直接在元素上设置属性值\n\n## 二、属性设置方式详解\n### 1. 直接属性设置\n```xml\n<Button Content=\"Click Me\" \n        Background=\"#FF4C5FF5\" \n        Foreground=\"White\"\n        Margin=\"10\" \n        Padding=\"15,5\"\n        FontSize=\"14\"/>\n```\n\n### 2. 属性元素语法\n当属性值复杂时使用：\n\n```xml\n<Button>\n    <Button.Background>\n        <LinearGradientBrush>\n            <GradientStop Color=\"#FF4C5FF5\" Offset=\"0\"/>\n            <GradientStop Color=\"#3A5BFF\" Offset=\"1\"/>\n        </LinearGradientBrush>\n    </Button.Background>\n    <Button.Content>\n        <StackPanel Orientation=\"Horizontal\">\n            <Image Source=\"icon.png\" Width=\"16\" Height=\"16\"/>\n            <TextBlock Text=\"Click Me\" Margin=\"5,0,0,0\"/>\n        </StackPanel>\n    </Button.Content>\n</Button>\n\n```\n\n### 3. 内容属性简写\n当属性被标记为内容属性时：\n\n```xml\n<!-- 标准写法 -->\n<Button>\n    <Button.Content>\n        Click Me\n    </Button.Content>\n</Button>\n<!-- 简写写法 -->\n<Button>Click Me</Button>\n\n```\n\n### 4. 标记扩展\nXAML提供多种标记扩展：\n\n```xml\n<!-- 数据绑定 -->\n<TextBlock Text=\"{Binding UserName, Mode=OneWay}\"/>\n\n<!-- 静态资源 -->\n<Button Background=\"{StaticResource PrimaryBrush}\"/>\n\n<!-- 动态资源 -->\n<Border BorderBrush=\"{DynamicResource BorderColor}\"/>\n\n<!-- 相对绑定 -->\n<TextBlock Text=\"{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}\"/>\n\n<!-- 模板绑定 -->\n<ControlTemplate TargetType=\"Button\">\n    <Border Background=\"{TemplateBinding Background}\"/>\n</ControlTemplate>\n\n```\n\n## 三、布局系统详解\n### 1. 常用布局容器\n```xml\n<!-- Grid布局 -->\n<Grid>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"Auto\"/>\n        <RowDefinition Height=\"*\"/>\n        <RowDefinition Height=\"2*\"/>\n    </Grid.RowDefinitions>\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"Auto\"/>\n        <ColumnDefinition Width=\"*\"/>\n    </Grid.ColumnDefinitions>\n    \n    <TextBlock Grid.Row=\"0\" Grid.Column=\"0\" Text=\"Name:\"/>\n    <TextBox Grid.Row=\"0\" Grid.Column=\"1\" Text=\"{Binding Name}\"/>\n    \n    <ListBox Grid.Row=\"1\" Grid.ColumnSpan=\"2\" ItemsSource=\"{Binding Items}\"/>\n</Grid>\n<!-- StackPanel布局 -->\n<StackPanel Orientation=\"Vertical\">\n    <Label Content=\"Username\"/>\n    <TextBox/>\n    <Label Content=\"Password\"/>\n    <PasswordBox/>\n    <Button Content=\"Login\" Margin=\"0,10\"/>\n</StackPanel>\n<!-- DockPanel布局 -->\n<DockPanel LastChildFill=\"True\">\n    <Menu DockPanel.Dock=\"Top\">...</Menu>\n    <StatusBar DockPanel.Dock=\"Bottom\">...</StatusBar>\n    <ToolBar DockPanel.Dock=\"Left\">...</ToolBar>\n    <ContentControl>主内容区</ContentControl>\n</DockPanel>\n\n```\n\n### 2. 布局属性\n| 属性 | 描述 | 示例 |\n| --- | --- | --- |\n| `Margin` | 外边距 | `Margin=\"10\"`、`Margin=\"5,10,5,10\"` |\n| `Padding` | 内边距 | `Padding=\"5\"` |\n| `HorizontalAlignment` | 水平对齐 | `Left`、`Center`、`Right`、`Stretch` |\n| `VerticalAlignment` | 垂直对齐 | `Top`、`Center`、`Bottom`、`Stretch` |\n| `Width/Height` | 显式尺寸 | `Width=\"100\"`、`Height=\"Auto\"` |\n\n\n## 四、资源系统\n### 1. 资源定义与引用\n```xml\n<Window.Resources>\n    <!-- 简单资源 -->\n    <SolidColorBrush x:Key=\"PrimaryBrush\" Color=\"#FF4C5FF5\"/>\n    \n    <!-- 样式资源 -->\n    <Style x:Key=\"RoundButtonStyle\" TargetType=\"Button\">\n        <Setter Property=\"Background\" Value=\"{StaticResource PrimaryBrush}\"/>\n        <Setter Property=\"Foreground\" Value=\"White\"/>\n        <Setter Property=\"Padding\" Value=\"12,6\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"Button\">\n                    <Border CornerRadius=\"8\" Background=\"{TemplateBinding Background}\">\n                        <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n                    </Border>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n    \n    <!-- 数据模板 -->\n    <DataTemplate x:Key=\"PersonTemplate\" DataType=\"local:Person\">\n        <StackPanel Orientation=\"Horizontal\">\n            <TextBlock Text=\"{Binding Name}\" FontWeight=\"Bold\"/>\n            <TextBlock Text=\" - \"/>\n            <TextBlock Text=\"{Binding Age}\"/>\n        </StackPanel>\n    </DataTemplate>\n</Window.Resources>\n<!-- 资源引用 -->\n<Button Style=\"{StaticResource RoundButtonStyle}\" Content=\"Submit\"/>\n```\n\n### 2. 资源作用域\n| 级别 | 定义位置 | 访问范围 |\n| --- | --- | --- |\n| 元素级 | 元素.Resources | 当前元素及子元素 |\n| 窗口级 | Window.Resources | 当前窗口 |\n| 应用级 | App.xaml | 全局可用 |\n| 主题级 | Themes/generic.xaml | 整个应用程序 |\n\n\n## 五、数据绑定\n### 1. 绑定基础\n```xml\n<!-- 简单绑定 -->\n<TextBlock Text=\"{Binding UserName}\"/>\n\n<!-- 带路径的绑定 -->\n<TextBlock Text=\"{Binding User.Address.City}\"/>\n\n<!-- 带转换器的绑定 -->\n<TextBlock Text=\"{Binding BirthDate, StringFormat='yyyy-MM-dd'}\"/>\n<TextBlock Text=\"{Binding Temperature, Converter={StaticResource TemperatureConverter}}\"/>\n\n<!-- 多绑定 -->\n<TextBlock>\n    <TextBlock.Text>\n        <MultiBinding StringFormat=\"{}{0} {1}\">\n            <Binding Path=\"FirstName\"/>\n            <Binding Path=\"LastName\"/>\n        </MultiBinding>\n    </TextBlock.Text>\n</TextBlock>\n\n```\n\n### 2. 绑定模式\n| 模式 | 描述 | 语法 |\n| --- | --- | --- |\n| OneWay | 源→目标 | `{Binding Path, Mode=OneWay}` |\n| TwoWay | 双向绑定 | `{Binding Path, Mode=TwoWay}` |\n| OneTime | 仅初始化 | `{Binding Path, Mode=OneTime}` |\n| OneWayToSource | 目标→源 | `{Binding Path, Mode=OneWayToSource}` |\n\n\n## 六、样式与模板\n### 1. 样式系统\n```xml\n<!-- 隐式样式（自动应用到所有匹配类型） -->\n<Style TargetType=\"TextBlock\">\n    <Setter Property=\"FontSize\" Value=\"14\"/>\n    <Setter Property=\"Margin\" Value=\"0,5\"/>\n</Style>\n<!-- 显式样式 -->\n<Style x:Key=\"HeaderText\" TargetType=\"TextBlock\" BasedOn=\"{StaticResource {x:Type TextBlock}}\">\n    <Setter Property=\"FontSize\" Value=\"18\"/>\n    <Setter Property=\"FontWeight\" Value=\"Bold\"/>\n    <Setter Property=\"Foreground\" Value=\"DarkBlue\"/>\n</Style>\n\n```\n\n### 2. 控件模板\n```xml\n<ControlTemplate x:Key=\"CustomButtonTemplate\" TargetType=\"Button\">\n    <Border x:Name=\"border\" \n            CornerRadius=\"8\"\n            Background=\"{TemplateBinding Background}\"\n            BorderBrush=\"{TemplateBinding BorderBrush}\"\n            BorderThickness=\"1\">\n        <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n    </Border>\n    <ControlTemplate.Triggers>\n        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n            <Setter TargetName=\"border\" Property=\"Background\" Value=\"#3A5BFF\"/>\n            <Setter TargetName=\"border\" Property=\"BorderBrush\" Value=\"#B0C4FF\"/>\n        </Trigger>\n    </ControlTemplate.Triggers>\n</ControlTemplate>\n\n```\n\n## 七、动画与视觉效果\n### 1. 基本动画\n```xml\n<Button Content=\"Animate\">\n    <Button.Triggers>\n        <EventTrigger RoutedEvent=\"Button.Click\">\n            <BeginStoryboard>\n                <Storyboard>\n                    <DoubleAnimation\n                        Storyboard.TargetProperty=\"Width\"\n                        From=\"100\" To=\"200\" Duration=\"0:0:0.5\"\n                        AutoReverse=\"True\"/>\n                    <ColorAnimation\n                        Storyboard.TargetProperty=\"Background.Color\"\n                        To=\"LightGreen\" Duration=\"0:0:0.5\"\n                        AutoReverse=\"True\"/>\n                </Storyboard>\n            </BeginStoryboard>\n        </EventTrigger>\n    </Button.Triggers>\n</Button>\n\n```\n\n### 2. 变换效果\n```xml\n<Button Content=\"Transform\">\n    <Button.RenderTransform>\n        <TransformGroup>\n            <RotateTransform Angle=\"0\" x:Name=\"rotate\"/>\n            <ScaleTransform ScaleX=\"1\" ScaleY=\"1\" x:Name=\"scale\"/>\n        </TransformGroup>\n    </Button.RenderTransform>\n    <Button.Triggers>\n        <EventTrigger RoutedEvent=\"Button.MouseEnter\">\n            <BeginStoryboard>\n                <Storyboard>\n                    <DoubleAnimation \n                        Storyboard.TargetName=\"rotate\"\n                        Storyboard.TargetProperty=\"Angle\"\n                        To=\"10\" Duration=\"0:0:0.2\"/>\n                    <DoubleAnimation \n                        Storyboard.TargetName=\"scale\"\n                        Storyboard.TargetProperty=\"ScaleX\"\n                        To=\"1.05\" Duration=\"0:0:0.2\"/>\n                </Storyboard>\n            </BeginStoryboard>\n        </EventTrigger>\n    </Button.Triggers>\n</Button>\n\n```\n\n## 八、高级技巧与最佳实践\n### 1. XAML命名规范\n```xml\n<!-- 使用有意义的名称 -->\n<Button x:Name=\"SubmitButton\" Content=\"Submit\"/>\n<TextBox x:Name=\"UsernameTextBox\"/>\n<ListView x:Name=\"CustomerListView\"/>\n```\n\n### 2. 资源组织策略\n```xml\n<!-- 资源字典 -->\n<ResourceDictionary>\n    <ResourceDictionary.MergedDictionaries>\n        <ResourceDictionary Source=\"Styles/Brushes.xaml\"/>\n        <ResourceDictionary Source=\"Styles/Buttons.xaml\"/>\n        <ResourceDictionary Source=\"Styles/TextStyles.xaml\"/>\n    </ResourceDictionary.MergedDictionaries>\n    \n    <!-- 本地资源 -->\n</ResourceDictionary>\n\n```\n\n### 3. 设计时数据\n```xml\nxmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\nd:DataContext=\"{d:DesignInstance Type=local:DesignViewModel}\"\n\n<!-- 使用示例 -->\n<ListBox ItemsSource=\"{Binding Customers}\" \n         d:ItemsSource=\"{d:DesignData Source=SampleData/Customers.xaml}\"/>\n```\n\n### 4. 性能优化技巧\n```xml\n<!-- 虚拟化长列表 -->\n<ListView VirtualizingStackPanel.IsVirtualizing=\"True\"\n          VirtualizingStackPanel.VirtualizationMode=\"Recycling\">\n    <!-- ... -->\n</ListView>\n<!-- 冻结静态资源 -->\n<SolidColorBrush x:Key=\"StaticBrush\" Color=\"Blue\" PresentationOptions:Freeze=\"True\"/>\n\n<!-- 延迟滚动 -->\n<ScrollViewer IsDeferredScrollingEnabled=\"True\">\n    <ItemsControl ... />\n</ScrollViewer>\n\n```\n\n## 九、调试与问题排查\n### 1. 绑定调试\n```xml\n<!-- 启用绑定跟踪 -->\n<TextBlock Text=\"{Binding UserName, \n    diag:PresentationTraceSources.TraceLevel=High}\"/>\n```\n\n### 2. 可视化树检查\n```csharp\n// 在代码中遍历可视化树\npublic static T FindVisualChild<T>(DependencyObject obj) where T : DependencyObject\n{\n    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(obj); i++)\n    {\n        var child = VisualTreeHelper.GetChild(obj, i);\n        if (child is T result) \n            return result;\n        \n        var childResult = FindVisualChild<T>(child);\n        if (childResult != null) \n            return childResult;\n    }\n    return null;\n}\n```\n\n### 3. 常见错误解决\n1. **\"属性'Child'只能设置一次\"**：\n    - 确保容器元素只有一个直接子元素\n    - 使用布局容器（如Grid、StackPanel）包裹多个元素\n2. **\"InitializeComponent未找到\"**：\n    - 检查x:Class命名空间与代码文件一致\n    - 清理并重新生成项目\n    - 确保XAML文件生成操作为\"Page\"\n\n## 总结\nXAML是WPF的核心，掌握其各种格式和设置技巧对于构建现代桌面应用至关重要。关键要点包括：\n\n1. **声明式UI**：使用XAML清晰分离界面与逻辑\n2. **强大布局**：灵活运用Grid、StackPanel等布局容器\n3. **资源复用**：通过资源字典实现样式和模板共享\n4. **数据驱动**：利用数据绑定实现MVVM模式\n5. **视觉定制**：通过控件模板完全自定义控件外观\n6. **动画效果**：使用Storyboard创建流畅用户体验\n\n```mermaid\ngraph TD\n    A[XAML基础] --> B[布局系统]\n    A --> C[资源系统]\n    A --> D[数据绑定]\n    A --> E[样式模板]\n    B --> F[Grid/StackPanel]\n    C --> G[静态/动态资源]\n    D --> H[绑定模式]\n    E --> I[控件模板]\n    F --> J[响应式设计]\n    G --> K[主题切换]\n    H --> L[MVVM模式]\n    I --> M[完全自定义控件]\n    J --> N[自适应UI]\n    K --> O[动态换肤]\n    L --> P[关注点分离]\n    M --> Q[品牌化UI]\n```\n\n\n","source":"_posts/WPF解析教程.md","raw":"---\ntitle: WPF的XAML解析\nmermaid: true\ndate: 2025-07-14\ntags: [嵌入式, C#]\ncover: rgba(219, 138, 237, 0.47)\ncomments: true\ncategories: [嵌入式]\n---\nXAML（eXtensible Application Markup Language）是WPF的核心技术，它是一种基于XML的声明式语言，用于定义用户界面和应用程序结构。下面我将全面讲解XAML的各种格式和设置。\n\n## 一、XAML基础结构\n### 1. 基本文档结构\n```xml\n<Window x:Class=\"MyApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"Main Window\" Height=\"450\" Width=\"800\">\n    <!-- 只能有一个根子元素 -->\n    <Grid>\n        <!-- UI元素放在这里 -->\n    </Grid>\n</Window>\n\n```\n\n### 2. 核心组成部分\n+ **根元素**：Window、Page、UserControl等\n+ **命名空间声明**：\n    - `xmlns`：WPF核心命名空间\n    - `xmlns:x`：XAML语言特性命名空间\n+ **x:Class属性**：关联后台代码文件\n+ **属性设置**：直接在元素上设置属性值\n\n## 二、属性设置方式详解\n### 1. 直接属性设置\n```xml\n<Button Content=\"Click Me\" \n        Background=\"#FF4C5FF5\" \n        Foreground=\"White\"\n        Margin=\"10\" \n        Padding=\"15,5\"\n        FontSize=\"14\"/>\n```\n\n### 2. 属性元素语法\n当属性值复杂时使用：\n\n```xml\n<Button>\n    <Button.Background>\n        <LinearGradientBrush>\n            <GradientStop Color=\"#FF4C5FF5\" Offset=\"0\"/>\n            <GradientStop Color=\"#3A5BFF\" Offset=\"1\"/>\n        </LinearGradientBrush>\n    </Button.Background>\n    <Button.Content>\n        <StackPanel Orientation=\"Horizontal\">\n            <Image Source=\"icon.png\" Width=\"16\" Height=\"16\"/>\n            <TextBlock Text=\"Click Me\" Margin=\"5,0,0,0\"/>\n        </StackPanel>\n    </Button.Content>\n</Button>\n\n```\n\n### 3. 内容属性简写\n当属性被标记为内容属性时：\n\n```xml\n<!-- 标准写法 -->\n<Button>\n    <Button.Content>\n        Click Me\n    </Button.Content>\n</Button>\n<!-- 简写写法 -->\n<Button>Click Me</Button>\n\n```\n\n### 4. 标记扩展\nXAML提供多种标记扩展：\n\n```xml\n<!-- 数据绑定 -->\n<TextBlock Text=\"{Binding UserName, Mode=OneWay}\"/>\n\n<!-- 静态资源 -->\n<Button Background=\"{StaticResource PrimaryBrush}\"/>\n\n<!-- 动态资源 -->\n<Border BorderBrush=\"{DynamicResource BorderColor}\"/>\n\n<!-- 相对绑定 -->\n<TextBlock Text=\"{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}\"/>\n\n<!-- 模板绑定 -->\n<ControlTemplate TargetType=\"Button\">\n    <Border Background=\"{TemplateBinding Background}\"/>\n</ControlTemplate>\n\n```\n\n## 三、布局系统详解\n### 1. 常用布局容器\n```xml\n<!-- Grid布局 -->\n<Grid>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"Auto\"/>\n        <RowDefinition Height=\"*\"/>\n        <RowDefinition Height=\"2*\"/>\n    </Grid.RowDefinitions>\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"Auto\"/>\n        <ColumnDefinition Width=\"*\"/>\n    </Grid.ColumnDefinitions>\n    \n    <TextBlock Grid.Row=\"0\" Grid.Column=\"0\" Text=\"Name:\"/>\n    <TextBox Grid.Row=\"0\" Grid.Column=\"1\" Text=\"{Binding Name}\"/>\n    \n    <ListBox Grid.Row=\"1\" Grid.ColumnSpan=\"2\" ItemsSource=\"{Binding Items}\"/>\n</Grid>\n<!-- StackPanel布局 -->\n<StackPanel Orientation=\"Vertical\">\n    <Label Content=\"Username\"/>\n    <TextBox/>\n    <Label Content=\"Password\"/>\n    <PasswordBox/>\n    <Button Content=\"Login\" Margin=\"0,10\"/>\n</StackPanel>\n<!-- DockPanel布局 -->\n<DockPanel LastChildFill=\"True\">\n    <Menu DockPanel.Dock=\"Top\">...</Menu>\n    <StatusBar DockPanel.Dock=\"Bottom\">...</StatusBar>\n    <ToolBar DockPanel.Dock=\"Left\">...</ToolBar>\n    <ContentControl>主内容区</ContentControl>\n</DockPanel>\n\n```\n\n### 2. 布局属性\n| 属性 | 描述 | 示例 |\n| --- | --- | --- |\n| `Margin` | 外边距 | `Margin=\"10\"`、`Margin=\"5,10,5,10\"` |\n| `Padding` | 内边距 | `Padding=\"5\"` |\n| `HorizontalAlignment` | 水平对齐 | `Left`、`Center`、`Right`、`Stretch` |\n| `VerticalAlignment` | 垂直对齐 | `Top`、`Center`、`Bottom`、`Stretch` |\n| `Width/Height` | 显式尺寸 | `Width=\"100\"`、`Height=\"Auto\"` |\n\n\n## 四、资源系统\n### 1. 资源定义与引用\n```xml\n<Window.Resources>\n    <!-- 简单资源 -->\n    <SolidColorBrush x:Key=\"PrimaryBrush\" Color=\"#FF4C5FF5\"/>\n    \n    <!-- 样式资源 -->\n    <Style x:Key=\"RoundButtonStyle\" TargetType=\"Button\">\n        <Setter Property=\"Background\" Value=\"{StaticResource PrimaryBrush}\"/>\n        <Setter Property=\"Foreground\" Value=\"White\"/>\n        <Setter Property=\"Padding\" Value=\"12,6\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"Button\">\n                    <Border CornerRadius=\"8\" Background=\"{TemplateBinding Background}\">\n                        <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n                    </Border>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n    \n    <!-- 数据模板 -->\n    <DataTemplate x:Key=\"PersonTemplate\" DataType=\"local:Person\">\n        <StackPanel Orientation=\"Horizontal\">\n            <TextBlock Text=\"{Binding Name}\" FontWeight=\"Bold\"/>\n            <TextBlock Text=\" - \"/>\n            <TextBlock Text=\"{Binding Age}\"/>\n        </StackPanel>\n    </DataTemplate>\n</Window.Resources>\n<!-- 资源引用 -->\n<Button Style=\"{StaticResource RoundButtonStyle}\" Content=\"Submit\"/>\n```\n\n### 2. 资源作用域\n| 级别 | 定义位置 | 访问范围 |\n| --- | --- | --- |\n| 元素级 | 元素.Resources | 当前元素及子元素 |\n| 窗口级 | Window.Resources | 当前窗口 |\n| 应用级 | App.xaml | 全局可用 |\n| 主题级 | Themes/generic.xaml | 整个应用程序 |\n\n\n## 五、数据绑定\n### 1. 绑定基础\n```xml\n<!-- 简单绑定 -->\n<TextBlock Text=\"{Binding UserName}\"/>\n\n<!-- 带路径的绑定 -->\n<TextBlock Text=\"{Binding User.Address.City}\"/>\n\n<!-- 带转换器的绑定 -->\n<TextBlock Text=\"{Binding BirthDate, StringFormat='yyyy-MM-dd'}\"/>\n<TextBlock Text=\"{Binding Temperature, Converter={StaticResource TemperatureConverter}}\"/>\n\n<!-- 多绑定 -->\n<TextBlock>\n    <TextBlock.Text>\n        <MultiBinding StringFormat=\"{}{0} {1}\">\n            <Binding Path=\"FirstName\"/>\n            <Binding Path=\"LastName\"/>\n        </MultiBinding>\n    </TextBlock.Text>\n</TextBlock>\n\n```\n\n### 2. 绑定模式\n| 模式 | 描述 | 语法 |\n| --- | --- | --- |\n| OneWay | 源→目标 | `{Binding Path, Mode=OneWay}` |\n| TwoWay | 双向绑定 | `{Binding Path, Mode=TwoWay}` |\n| OneTime | 仅初始化 | `{Binding Path, Mode=OneTime}` |\n| OneWayToSource | 目标→源 | `{Binding Path, Mode=OneWayToSource}` |\n\n\n## 六、样式与模板\n### 1. 样式系统\n```xml\n<!-- 隐式样式（自动应用到所有匹配类型） -->\n<Style TargetType=\"TextBlock\">\n    <Setter Property=\"FontSize\" Value=\"14\"/>\n    <Setter Property=\"Margin\" Value=\"0,5\"/>\n</Style>\n<!-- 显式样式 -->\n<Style x:Key=\"HeaderText\" TargetType=\"TextBlock\" BasedOn=\"{StaticResource {x:Type TextBlock}}\">\n    <Setter Property=\"FontSize\" Value=\"18\"/>\n    <Setter Property=\"FontWeight\" Value=\"Bold\"/>\n    <Setter Property=\"Foreground\" Value=\"DarkBlue\"/>\n</Style>\n\n```\n\n### 2. 控件模板\n```xml\n<ControlTemplate x:Key=\"CustomButtonTemplate\" TargetType=\"Button\">\n    <Border x:Name=\"border\" \n            CornerRadius=\"8\"\n            Background=\"{TemplateBinding Background}\"\n            BorderBrush=\"{TemplateBinding BorderBrush}\"\n            BorderThickness=\"1\">\n        <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n    </Border>\n    <ControlTemplate.Triggers>\n        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n            <Setter TargetName=\"border\" Property=\"Background\" Value=\"#3A5BFF\"/>\n            <Setter TargetName=\"border\" Property=\"BorderBrush\" Value=\"#B0C4FF\"/>\n        </Trigger>\n    </ControlTemplate.Triggers>\n</ControlTemplate>\n\n```\n\n## 七、动画与视觉效果\n### 1. 基本动画\n```xml\n<Button Content=\"Animate\">\n    <Button.Triggers>\n        <EventTrigger RoutedEvent=\"Button.Click\">\n            <BeginStoryboard>\n                <Storyboard>\n                    <DoubleAnimation\n                        Storyboard.TargetProperty=\"Width\"\n                        From=\"100\" To=\"200\" Duration=\"0:0:0.5\"\n                        AutoReverse=\"True\"/>\n                    <ColorAnimation\n                        Storyboard.TargetProperty=\"Background.Color\"\n                        To=\"LightGreen\" Duration=\"0:0:0.5\"\n                        AutoReverse=\"True\"/>\n                </Storyboard>\n            </BeginStoryboard>\n        </EventTrigger>\n    </Button.Triggers>\n</Button>\n\n```\n\n### 2. 变换效果\n```xml\n<Button Content=\"Transform\">\n    <Button.RenderTransform>\n        <TransformGroup>\n            <RotateTransform Angle=\"0\" x:Name=\"rotate\"/>\n            <ScaleTransform ScaleX=\"1\" ScaleY=\"1\" x:Name=\"scale\"/>\n        </TransformGroup>\n    </Button.RenderTransform>\n    <Button.Triggers>\n        <EventTrigger RoutedEvent=\"Button.MouseEnter\">\n            <BeginStoryboard>\n                <Storyboard>\n                    <DoubleAnimation \n                        Storyboard.TargetName=\"rotate\"\n                        Storyboard.TargetProperty=\"Angle\"\n                        To=\"10\" Duration=\"0:0:0.2\"/>\n                    <DoubleAnimation \n                        Storyboard.TargetName=\"scale\"\n                        Storyboard.TargetProperty=\"ScaleX\"\n                        To=\"1.05\" Duration=\"0:0:0.2\"/>\n                </Storyboard>\n            </BeginStoryboard>\n        </EventTrigger>\n    </Button.Triggers>\n</Button>\n\n```\n\n## 八、高级技巧与最佳实践\n### 1. XAML命名规范\n```xml\n<!-- 使用有意义的名称 -->\n<Button x:Name=\"SubmitButton\" Content=\"Submit\"/>\n<TextBox x:Name=\"UsernameTextBox\"/>\n<ListView x:Name=\"CustomerListView\"/>\n```\n\n### 2. 资源组织策略\n```xml\n<!-- 资源字典 -->\n<ResourceDictionary>\n    <ResourceDictionary.MergedDictionaries>\n        <ResourceDictionary Source=\"Styles/Brushes.xaml\"/>\n        <ResourceDictionary Source=\"Styles/Buttons.xaml\"/>\n        <ResourceDictionary Source=\"Styles/TextStyles.xaml\"/>\n    </ResourceDictionary.MergedDictionaries>\n    \n    <!-- 本地资源 -->\n</ResourceDictionary>\n\n```\n\n### 3. 设计时数据\n```xml\nxmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\nd:DataContext=\"{d:DesignInstance Type=local:DesignViewModel}\"\n\n<!-- 使用示例 -->\n<ListBox ItemsSource=\"{Binding Customers}\" \n         d:ItemsSource=\"{d:DesignData Source=SampleData/Customers.xaml}\"/>\n```\n\n### 4. 性能优化技巧\n```xml\n<!-- 虚拟化长列表 -->\n<ListView VirtualizingStackPanel.IsVirtualizing=\"True\"\n          VirtualizingStackPanel.VirtualizationMode=\"Recycling\">\n    <!-- ... -->\n</ListView>\n<!-- 冻结静态资源 -->\n<SolidColorBrush x:Key=\"StaticBrush\" Color=\"Blue\" PresentationOptions:Freeze=\"True\"/>\n\n<!-- 延迟滚动 -->\n<ScrollViewer IsDeferredScrollingEnabled=\"True\">\n    <ItemsControl ... />\n</ScrollViewer>\n\n```\n\n## 九、调试与问题排查\n### 1. 绑定调试\n```xml\n<!-- 启用绑定跟踪 -->\n<TextBlock Text=\"{Binding UserName, \n    diag:PresentationTraceSources.TraceLevel=High}\"/>\n```\n\n### 2. 可视化树检查\n```csharp\n// 在代码中遍历可视化树\npublic static T FindVisualChild<T>(DependencyObject obj) where T : DependencyObject\n{\n    for (int i = 0; i < VisualTreeHelper.GetChildrenCount(obj); i++)\n    {\n        var child = VisualTreeHelper.GetChild(obj, i);\n        if (child is T result) \n            return result;\n        \n        var childResult = FindVisualChild<T>(child);\n        if (childResult != null) \n            return childResult;\n    }\n    return null;\n}\n```\n\n### 3. 常见错误解决\n1. **\"属性'Child'只能设置一次\"**：\n    - 确保容器元素只有一个直接子元素\n    - 使用布局容器（如Grid、StackPanel）包裹多个元素\n2. **\"InitializeComponent未找到\"**：\n    - 检查x:Class命名空间与代码文件一致\n    - 清理并重新生成项目\n    - 确保XAML文件生成操作为\"Page\"\n\n## 总结\nXAML是WPF的核心，掌握其各种格式和设置技巧对于构建现代桌面应用至关重要。关键要点包括：\n\n1. **声明式UI**：使用XAML清晰分离界面与逻辑\n2. **强大布局**：灵活运用Grid、StackPanel等布局容器\n3. **资源复用**：通过资源字典实现样式和模板共享\n4. **数据驱动**：利用数据绑定实现MVVM模式\n5. **视觉定制**：通过控件模板完全自定义控件外观\n6. **动画效果**：使用Storyboard创建流畅用户体验\n\n```mermaid\ngraph TD\n    A[XAML基础] --> B[布局系统]\n    A --> C[资源系统]\n    A --> D[数据绑定]\n    A --> E[样式模板]\n    B --> F[Grid/StackPanel]\n    C --> G[静态/动态资源]\n    D --> H[绑定模式]\n    E --> I[控件模板]\n    F --> J[响应式设计]\n    G --> K[主题切换]\n    H --> L[MVVM模式]\n    I --> M[完全自定义控件]\n    J --> N[自适应UI]\n    K --> O[动态换肤]\n    L --> P[关注点分离]\n    M --> Q[品牌化UI]\n```\n\n\n","slug":"WPF解析教程","published":1,"updated":"2025-07-16T06:38:42.697Z","layout":"post","photos":[],"_id":"cmd71t80u000m3cw6et4t4dto","content":"<p>XAML（eXtensible Application Markup Language）是WPF的核心技术，它是一种基于XML的声明式语言，用于定义用户界面和应用程序结构。下面我将全面讲解XAML的各种格式和设置。</p>\n<h2 id=\"一-xaml基础结构\"><a class=\"markdownIt-Anchor\" href=\"#一-xaml基础结构\"></a> 一、XAML基础结构</h2>\n<h3 id=\"1-基本文档结构\"><a class=\"markdownIt-Anchor\" href=\"#1-基本文档结构\"></a> 1. 基本文档结构</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;MyApp.MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">&quot;Main Window&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;450&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;800&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 只能有一个根子元素 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- UI元素放在这里 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-核心组成部分\"><a class=\"markdownIt-Anchor\" href=\"#2-核心组成部分\"></a> 2. 核心组成部分</h3>\n<ul>\n<li><strong>根元素</strong>：Window、Page、UserControl等</li>\n<li><strong>命名空间声明</strong>：\n<ul>\n<li><code>xmlns</code>：WPF核心命名空间</li>\n<li><code>xmlns:x</code>：XAML语言特性命名空间</li>\n</ul>\n</li>\n<li><strong>x:Class属性</strong>：关联后台代码文件</li>\n<li><strong>属性设置</strong>：直接在元素上设置属性值</li>\n</ul>\n<h2 id=\"二-属性设置方式详解\"><a class=\"markdownIt-Anchor\" href=\"#二-属性设置方式详解\"></a> 二、属性设置方式详解</h2>\n<h3 id=\"1-直接属性设置\"><a class=\"markdownIt-Anchor\" href=\"#1-直接属性设置\"></a> 1. 直接属性设置</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Click Me&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Background</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Foreground</span>=<span class=\"string\">&quot;White&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;10&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;15,5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-属性元素语法\"><a class=\"markdownIt-Anchor\" href=\"#2-属性元素语法\"></a> 2. 属性元素语法</h3>\n<p>当属性值复杂时使用：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span> <span class=\"attr\">Offset</span>=<span class=\"string\">&quot;0&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#3A5BFF&quot;</span> <span class=\"attr\">Offset</span>=<span class=\"string\">&quot;1&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;icon.png&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;16&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;16&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;Click Me&quot;</span> <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;5,0,0,0&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-内容属性简写\"><a class=\"markdownIt-Anchor\" href=\"#3-内容属性简写\"></a> 3. 内容属性简写</h3>\n<p>当属性被标记为内容属性时：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 标准写法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">        Click Me</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 简写写法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span>Click Me<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-标记扩展\"><a class=\"markdownIt-Anchor\" href=\"#4-标记扩展\"></a> 4. 标记扩展</h3>\n<p>XAML提供多种标记扩展：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 数据绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName, Mode=OneWay&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 静态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;StaticResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">BorderBrush</span>=<span class=\"string\">&quot;&#123;DynamicResource BorderColor&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 相对绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding RelativeSource=&#123;RelativeSource AncestorType=Window&#125;, Path=Title&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 模板绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"三-布局系统详解\"><a class=\"markdownIt-Anchor\" href=\"#三-布局系统详解\"></a> 三、布局系统详解</h2>\n<h3 id=\"1-常用布局容器\"><a class=\"markdownIt-Anchor\" href=\"#1-常用布局容器\"></a> 1. 常用布局容器</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Grid布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;Auto&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;*&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;2*&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ColumnDefinition</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;Auto&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ColumnDefinition</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;*&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;Name:&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">Grid.ColumnSpan</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">&quot;&#123;Binding Items&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- StackPanel布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Vertical&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Username&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBox</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Password&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PasswordBox</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Login&quot;</span> <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;0,10&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- DockPanel布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DockPanel</span> <span class=\"attr\">LastChildFill</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Menu</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Top&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">Menu</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StatusBar</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Bottom&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">StatusBar</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ToolBar</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Left&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">ToolBar</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ContentControl</span>&gt;</span>主内容区<span class=\"tag\">&lt;/<span class=\"name\">ContentControl</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DockPanel</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-布局属性\"><a class=\"markdownIt-Anchor\" href=\"#2-布局属性\"></a> 2. 布局属性</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Margin</code></td>\n<td>外边距</td>\n<td><code>Margin=&quot;10&quot;</code>、<code>Margin=&quot;5,10,5,10&quot;</code></td>\n</tr>\n<tr>\n<td><code>Padding</code></td>\n<td>内边距</td>\n<td><code>Padding=&quot;5&quot;</code></td>\n</tr>\n<tr>\n<td><code>HorizontalAlignment</code></td>\n<td>水平对齐</td>\n<td><code>Left</code>、<code>Center</code>、<code>Right</code>、<code>Stretch</code></td>\n</tr>\n<tr>\n<td><code>VerticalAlignment</code></td>\n<td>垂直对齐</td>\n<td><code>Top</code>、<code>Center</code>、<code>Bottom</code>、<code>Stretch</code></td>\n</tr>\n<tr>\n<td><code>Width/Height</code></td>\n<td>显式尺寸</td>\n<td><code>Width=&quot;100&quot;</code>、<code>Height=&quot;Auto&quot;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四-资源系统\"><a class=\"markdownIt-Anchor\" href=\"#四-资源系统\"></a> 四、资源系统</h2>\n<h3 id=\"1-资源定义与引用\"><a class=\"markdownIt-Anchor\" href=\"#1-资源定义与引用\"></a> 1. 资源定义与引用</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 简单资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PrimaryBrush&quot;</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 样式资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;RoundButtonStyle&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Background&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;&#123;StaticResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Foreground&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;White&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Padding&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;12,6&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Template&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                        <span class=\"tag\">&lt;<span class=\"name\">ContentPresenter</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据模板 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PersonTemplate&quot;</span> <span class=\"attr\">DataType</span>=<span class=\"string\">&quot;local:Person&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot; - &quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Age&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 资源引用 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Style</span>=<span class=\"string\">&quot;&#123;StaticResource RoundButtonStyle&#125;&quot;</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Submit&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-资源作用域\"><a class=\"markdownIt-Anchor\" href=\"#2-资源作用域\"></a> 2. 资源作用域</h3>\n<table>\n<thead>\n<tr>\n<th>级别</th>\n<th>定义位置</th>\n<th>访问范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>元素级</td>\n<td>元素.Resources</td>\n<td>当前元素及子元素</td>\n</tr>\n<tr>\n<td>窗口级</td>\n<td>Window.Resources</td>\n<td>当前窗口</td>\n</tr>\n<tr>\n<td>应用级</td>\n<td>App.xaml</td>\n<td>全局可用</td>\n</tr>\n<tr>\n<td>主题级</td>\n<td>Themes/generic.xaml</td>\n<td>整个应用程序</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"五-数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#五-数据绑定\"></a> 五、数据绑定</h2>\n<h3 id=\"1-绑定基础\"><a class=\"markdownIt-Anchor\" href=\"#1-绑定基础\"></a> 1. 绑定基础</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 简单绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 带路径的绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding User.Address.City&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 带转换器的绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding BirthDate, StringFormat=&#x27;yyyy-MM-dd&#x27;&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Temperature, Converter=&#123;StaticResource TemperatureConverter&#125;&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MultiBinding</span> <span class=\"attr\">StringFormat</span>=<span class=\"string\">&quot;&#123;&#125;&#123;0&#125; &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">&quot;FirstName&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">&quot;LastName&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">MultiBinding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-绑定模式\"><a class=\"markdownIt-Anchor\" href=\"#2-绑定模式\"></a> 2. 绑定模式</h3>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n<th>语法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OneWay</td>\n<td>源→目标</td>\n<td><code>&#123;Binding Path, Mode=OneWay&#125;</code></td>\n</tr>\n<tr>\n<td>TwoWay</td>\n<td>双向绑定</td>\n<td><code>&#123;Binding Path, Mode=TwoWay&#125;</code></td>\n</tr>\n<tr>\n<td>OneTime</td>\n<td>仅初始化</td>\n<td><code>&#123;Binding Path, Mode=OneTime&#125;</code></td>\n</tr>\n<tr>\n<td>OneWayToSource</td>\n<td>目标→源</td>\n<td><code>&#123;Binding Path, Mode=OneWayToSource&#125;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"六-样式与模板\"><a class=\"markdownIt-Anchor\" href=\"#六-样式与模板\"></a> 六、样式与模板</h2>\n<h3 id=\"1-样式系统\"><a class=\"markdownIt-Anchor\" href=\"#1-样式系统\"></a> 1. 样式系统</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 隐式样式（自动应用到所有匹配类型） --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;TextBlock&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontSize&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;14&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Margin&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;0,5&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 显式样式 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;HeaderText&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;TextBlock&quot;</span> <span class=\"attr\">BasedOn</span>=<span class=\"string\">&quot;&#123;StaticResource &#123;x:Type TextBlock&#125;&#125;&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontSize&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;18&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontWeight&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;Bold&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Foreground&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;DarkBlue&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-控件模板\"><a class=\"markdownIt-Anchor\" href=\"#2-控件模板\"></a> 2. 控件模板</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;CustomButtonTemplate&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;border&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;8&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">BorderBrush</span>=<span class=\"string\">&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">BorderThickness</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ContentPresenter</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;IsMouseOver&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">TargetName</span>=<span class=\"string\">&quot;border&quot;</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Background&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;#3A5BFF&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">TargetName</span>=<span class=\"string\">&quot;border&quot;</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;BorderBrush&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;#B0C4FF&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"七-动画与视觉效果\"><a class=\"markdownIt-Anchor\" href=\"#七-动画与视觉效果\"></a> 七、动画与视觉效果</h2>\n<h3 id=\"1-基本动画\"><a class=\"markdownIt-Anchor\" href=\"#1-基本动画\"></a> 1. 基本动画</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Animate&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">&quot;Button.Click&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Width&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">From</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">To</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">AutoReverse</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Background.Color&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;LightGreen&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">AutoReverse</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-变换效果\"><a class=\"markdownIt-Anchor\" href=\"#2-变换效果\"></a> 2. 变换效果</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Transform&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.RenderTransform</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TransformGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RotateTransform</span> <span class=\"attr\">Angle</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;rotate&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ScaleTransform</span> <span class=\"attr\">ScaleX</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">ScaleY</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;scale&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">TransformGroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.RenderTransform</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">&quot;Button.MouseEnter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> </span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetName</span>=<span class=\"string\">&quot;rotate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Angle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.2&quot;</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> </span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetName</span>=<span class=\"string\">&quot;scale&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;ScaleX&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;1.05&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.2&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"八-高级技巧与最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#八-高级技巧与最佳实践\"></a> 八、高级技巧与最佳实践</h2>\n<h3 id=\"1-xaml命名规范\"><a class=\"markdownIt-Anchor\" href=\"#1-xaml命名规范\"></a> 1. XAML命名规范</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用有意义的名称 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;SubmitButton&quot;</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Submit&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;UsernameTextBox&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListView</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;CustomerListView&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-资源组织策略\"><a class=\"markdownIt-Anchor\" href=\"#2-资源组织策略\"></a> 2. 资源组织策略</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 资源字典 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/Brushes.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/Buttons.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/TextStyles.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 本地资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-设计时数据\"><a class=\"markdownIt-Anchor\" href=\"#3-设计时数据\"></a> 3. 设计时数据</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class=\"line\">d:DataContext=&quot;&#123;d:DesignInstance Type=local:DesignViewModel&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 使用示例 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">&quot;&#123;Binding Customers&#125;&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">d:ItemsSource</span>=<span class=\"string\">&quot;&#123;d:DesignData Source=SampleData/Customers.xaml&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-性能优化技巧\"><a class=\"markdownIt-Anchor\" href=\"#4-性能优化技巧\"></a> 4. 性能优化技巧</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 虚拟化长列表 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListView</span> <span class=\"attr\">VirtualizingStackPanel.IsVirtualizing</span>=<span class=\"string\">&quot;True&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">VirtualizingStackPanel.VirtualizationMode</span>=<span class=\"string\">&quot;Recycling&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- ... --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListView</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 冻结静态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;StaticBrush&quot;</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">PresentationOptions:Freeze</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 延迟滚动 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ScrollViewer</span> <span class=\"attr\">IsDeferredScrollingEnabled</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemsControl</span> <span class=\"attr\">...</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ScrollViewer</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"九-调试与问题排查\"><a class=\"markdownIt-Anchor\" href=\"#九-调试与问题排查\"></a> 九、调试与问题排查</h2>\n<h3 id=\"1-绑定调试\"><a class=\"markdownIt-Anchor\" href=\"#1-绑定调试\"></a> 1. 绑定调试</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 启用绑定跟踪 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName, </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">    diag:PresentationTraceSources.TraceLevel=High&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-可视化树检查\"><a class=\"markdownIt-Anchor\" href=\"#2-可视化树检查\"></a> 2. 可视化树检查</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在代码中遍历可视化树</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> T <span class=\"title\">FindVisualChild</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">DependencyObject obj</span>) <span class=\"keyword\">where</span> T : DependencyObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; VisualTreeHelper.GetChildrenCount(obj); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> child = VisualTreeHelper.GetChild(obj, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (child <span class=\"keyword\">is</span> T result) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> childResult = FindVisualChild&lt;T&gt;(child);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (childResult != <span class=\"literal\">null</span>) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> childResult;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-常见错误解决\"><a class=\"markdownIt-Anchor\" href=\"#3-常见错误解决\"></a> 3. 常见错误解决</h3>\n<ol>\n<li><strong>“属性’Child’只能设置一次”</strong>：\n<ul>\n<li>确保容器元素只有一个直接子元素</li>\n<li>使用布局容器（如Grid、StackPanel）包裹多个元素</li>\n</ul>\n</li>\n<li><strong>“InitializeComponent未找到”</strong>：\n<ul>\n<li>检查x:Class命名空间与代码文件一致</li>\n<li>清理并重新生成项目</li>\n<li>确保XAML文件生成操作为&quot;Page&quot;</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>XAML是WPF的核心，掌握其各种格式和设置技巧对于构建现代桌面应用至关重要。关键要点包括：</p>\n<ol>\n<li><strong>声明式UI</strong>：使用XAML清晰分离界面与逻辑</li>\n<li><strong>强大布局</strong>：灵活运用Grid、StackPanel等布局容器</li>\n<li><strong>资源复用</strong>：通过资源字典实现样式和模板共享</li>\n<li><strong>数据驱动</strong>：利用数据绑定实现MVVM模式</li>\n<li><strong>视觉定制</strong>：通过控件模板完全自定义控件外观</li>\n<li><strong>动画效果</strong>：使用Storyboard创建流畅用户体验</li>\n</ol>\n<pre class=\"mermaid\">graph TD\n    A[XAML基础] --> B[布局系统]\n    A --> C[资源系统]\n    A --> D[数据绑定]\n    A --> E[样式模板]\n    B --> F[Grid/StackPanel]\n    C --> G[静态/动态资源]\n    D --> H[绑定模式]\n    E --> I[控件模板]\n    F --> J[响应式设计]\n    G --> K[主题切换]\n    H --> L[MVVM模式]\n    I --> M[完全自定义控件]\n    J --> N[自适应UI]\n    K --> O[动态换肤]\n    L --> P[关注点分离]\n    M --> Q[品牌化UI]</pre>\n","excerpt":"","more":"<p>XAML（eXtensible Application Markup Language）是WPF的核心技术，它是一种基于XML的声明式语言，用于定义用户界面和应用程序结构。下面我将全面讲解XAML的各种格式和设置。</p>\n<h2 id=\"一-xaml基础结构\"><a class=\"markdownIt-Anchor\" href=\"#一-xaml基础结构\"></a> 一、XAML基础结构</h2>\n<h3 id=\"1-基本文档结构\"><a class=\"markdownIt-Anchor\" href=\"#1-基本文档结构\"></a> 1. 基本文档结构</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">&quot;MyApp.MainWindow&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">&quot;Main Window&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;450&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;800&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 只能有一个根子元素 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- UI元素放在这里 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-核心组成部分\"><a class=\"markdownIt-Anchor\" href=\"#2-核心组成部分\"></a> 2. 核心组成部分</h3>\n<ul>\n<li><strong>根元素</strong>：Window、Page、UserControl等</li>\n<li><strong>命名空间声明</strong>：\n<ul>\n<li><code>xmlns</code>：WPF核心命名空间</li>\n<li><code>xmlns:x</code>：XAML语言特性命名空间</li>\n</ul>\n</li>\n<li><strong>x:Class属性</strong>：关联后台代码文件</li>\n<li><strong>属性设置</strong>：直接在元素上设置属性值</li>\n</ul>\n<h2 id=\"二-属性设置方式详解\"><a class=\"markdownIt-Anchor\" href=\"#二-属性设置方式详解\"></a> 二、属性设置方式详解</h2>\n<h3 id=\"1-直接属性设置\"><a class=\"markdownIt-Anchor\" href=\"#1-直接属性设置\"></a> 1. 直接属性设置</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Click Me&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Background</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Foreground</span>=<span class=\"string\">&quot;White&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;10&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;15,5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-属性元素语法\"><a class=\"markdownIt-Anchor\" href=\"#2-属性元素语法\"></a> 2. 属性元素语法</h3>\n<p>当属性值复杂时使用：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span> <span class=\"attr\">Offset</span>=<span class=\"string\">&quot;0&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#3A5BFF&quot;</span> <span class=\"attr\">Offset</span>=<span class=\"string\">&quot;1&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Background</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;icon.png&quot;</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;16&quot;</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;16&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;Click Me&quot;</span> <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;5,0,0,0&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-内容属性简写\"><a class=\"markdownIt-Anchor\" href=\"#3-内容属性简写\"></a> 3. 内容属性简写</h3>\n<p>当属性被标记为内容属性时：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 标准写法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\">        Click Me</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 简写写法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span>Click Me<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-标记扩展\"><a class=\"markdownIt-Anchor\" href=\"#4-标记扩展\"></a> 4. 标记扩展</h3>\n<p>XAML提供多种标记扩展：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 数据绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName, Mode=OneWay&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 静态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;StaticResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">BorderBrush</span>=<span class=\"string\">&quot;&#123;DynamicResource BorderColor&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 相对绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding RelativeSource=&#123;RelativeSource AncestorType=Window&#125;, Path=Title&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 模板绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"三-布局系统详解\"><a class=\"markdownIt-Anchor\" href=\"#三-布局系统详解\"></a> 三、布局系统详解</h2>\n<h3 id=\"1-常用布局容器\"><a class=\"markdownIt-Anchor\" href=\"#1-常用布局容器\"></a> 1. 常用布局容器</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Grid布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;Auto&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;*&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">&quot;2*&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ColumnDefinition</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;Auto&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ColumnDefinition</span> <span class=\"attr\">Width</span>=<span class=\"string\">&quot;*&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;Name:&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">Grid.ColumnSpan</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">&quot;&#123;Binding Items&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- StackPanel布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Vertical&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Username&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBox</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Password&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">PasswordBox</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Login&quot;</span> <span class=\"attr\">Margin</span>=<span class=\"string\">&quot;0,10&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- DockPanel布局 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DockPanel</span> <span class=\"attr\">LastChildFill</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Menu</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Top&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">Menu</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StatusBar</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Bottom&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">StatusBar</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ToolBar</span> <span class=\"attr\">DockPanel.Dock</span>=<span class=\"string\">&quot;Left&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">ToolBar</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ContentControl</span>&gt;</span>主内容区<span class=\"tag\">&lt;/<span class=\"name\">ContentControl</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DockPanel</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-布局属性\"><a class=\"markdownIt-Anchor\" href=\"#2-布局属性\"></a> 2. 布局属性</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Margin</code></td>\n<td>外边距</td>\n<td><code>Margin=&quot;10&quot;</code>、<code>Margin=&quot;5,10,5,10&quot;</code></td>\n</tr>\n<tr>\n<td><code>Padding</code></td>\n<td>内边距</td>\n<td><code>Padding=&quot;5&quot;</code></td>\n</tr>\n<tr>\n<td><code>HorizontalAlignment</code></td>\n<td>水平对齐</td>\n<td><code>Left</code>、<code>Center</code>、<code>Right</code>、<code>Stretch</code></td>\n</tr>\n<tr>\n<td><code>VerticalAlignment</code></td>\n<td>垂直对齐</td>\n<td><code>Top</code>、<code>Center</code>、<code>Bottom</code>、<code>Stretch</code></td>\n</tr>\n<tr>\n<td><code>Width/Height</code></td>\n<td>显式尺寸</td>\n<td><code>Width=&quot;100&quot;</code>、<code>Height=&quot;Auto&quot;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四-资源系统\"><a class=\"markdownIt-Anchor\" href=\"#四-资源系统\"></a> 四、资源系统</h2>\n<h3 id=\"1-资源定义与引用\"><a class=\"markdownIt-Anchor\" href=\"#1-资源定义与引用\"></a> 1. 资源定义与引用</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 简单资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PrimaryBrush&quot;</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;#FF4C5FF5&quot;</span>/&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 样式资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;RoundButtonStyle&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Background&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;&#123;StaticResource PrimaryBrush&#125;&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Foreground&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;White&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Padding&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;12,6&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Template&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                        <span class=\"tag\">&lt;<span class=\"name\">ContentPresenter</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据模板 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PersonTemplate&quot;</span> <span class=\"attr\">DataType</span>=<span class=\"string\">&quot;local:Person&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Name&#125;&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot; - &quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Age&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 资源引用 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Style</span>=<span class=\"string\">&quot;&#123;StaticResource RoundButtonStyle&#125;&quot;</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Submit&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-资源作用域\"><a class=\"markdownIt-Anchor\" href=\"#2-资源作用域\"></a> 2. 资源作用域</h3>\n<table>\n<thead>\n<tr>\n<th>级别</th>\n<th>定义位置</th>\n<th>访问范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>元素级</td>\n<td>元素.Resources</td>\n<td>当前元素及子元素</td>\n</tr>\n<tr>\n<td>窗口级</td>\n<td>Window.Resources</td>\n<td>当前窗口</td>\n</tr>\n<tr>\n<td>应用级</td>\n<td>App.xaml</td>\n<td>全局可用</td>\n</tr>\n<tr>\n<td>主题级</td>\n<td>Themes/generic.xaml</td>\n<td>整个应用程序</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"五-数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#五-数据绑定\"></a> 五、数据绑定</h2>\n<h3 id=\"1-绑定基础\"><a class=\"markdownIt-Anchor\" href=\"#1-绑定基础\"></a> 1. 绑定基础</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 简单绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 带路径的绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding User.Address.City&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 带转换器的绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding BirthDate, StringFormat=&#x27;yyyy-MM-dd&#x27;&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding Temperature, Converter=&#123;StaticResource TemperatureConverter&#125;&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MultiBinding</span> <span class=\"attr\">StringFormat</span>=<span class=\"string\">&quot;&#123;&#125;&#123;0&#125; &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">&quot;FirstName&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">&quot;LastName&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">MultiBinding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-绑定模式\"><a class=\"markdownIt-Anchor\" href=\"#2-绑定模式\"></a> 2. 绑定模式</h3>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n<th>语法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OneWay</td>\n<td>源→目标</td>\n<td><code>&#123;Binding Path, Mode=OneWay&#125;</code></td>\n</tr>\n<tr>\n<td>TwoWay</td>\n<td>双向绑定</td>\n<td><code>&#123;Binding Path, Mode=TwoWay&#125;</code></td>\n</tr>\n<tr>\n<td>OneTime</td>\n<td>仅初始化</td>\n<td><code>&#123;Binding Path, Mode=OneTime&#125;</code></td>\n</tr>\n<tr>\n<td>OneWayToSource</td>\n<td>目标→源</td>\n<td><code>&#123;Binding Path, Mode=OneWayToSource&#125;</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"六-样式与模板\"><a class=\"markdownIt-Anchor\" href=\"#六-样式与模板\"></a> 六、样式与模板</h2>\n<h3 id=\"1-样式系统\"><a class=\"markdownIt-Anchor\" href=\"#1-样式系统\"></a> 1. 样式系统</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 隐式样式（自动应用到所有匹配类型） --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;TextBlock&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontSize&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;14&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Margin&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;0,5&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 显式样式 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;HeaderText&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;TextBlock&quot;</span> <span class=\"attr\">BasedOn</span>=<span class=\"string\">&quot;&#123;StaticResource &#123;x:Type TextBlock&#125;&#125;&quot;</span>&gt;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontSize&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;18&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;FontWeight&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;Bold&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Foreground&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;DarkBlue&quot;</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-控件模板\"><a class=\"markdownIt-Anchor\" href=\"#2-控件模板\"></a> 2. 控件模板</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;CustomButtonTemplate&quot;</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">&quot;Button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;border&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">CornerRadius</span>=<span class=\"string\">&quot;8&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">Background</span>=<span class=\"string\">&quot;&#123;TemplateBinding Background&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">BorderBrush</span>=<span class=\"string\">&quot;&#123;TemplateBinding BorderBrush&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">BorderThickness</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ContentPresenter</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">&quot;Center&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;IsMouseOver&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">TargetName</span>=<span class=\"string\">&quot;border&quot;</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;Background&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;#3A5BFF&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">TargetName</span>=<span class=\"string\">&quot;border&quot;</span> <span class=\"attr\">Property</span>=<span class=\"string\">&quot;BorderBrush&quot;</span> <span class=\"attr\">Value</span>=<span class=\"string\">&quot;#B0C4FF&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"七-动画与视觉效果\"><a class=\"markdownIt-Anchor\" href=\"#七-动画与视觉效果\"></a> 七、动画与视觉效果</h2>\n<h3 id=\"1-基本动画\"><a class=\"markdownIt-Anchor\" href=\"#1-基本动画\"></a> 1. 基本动画</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Animate&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">&quot;Button.Click&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Width&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">From</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">To</span>=<span class=\"string\">&quot;200&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">AutoReverse</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Background.Color&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;LightGreen&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">AutoReverse</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-变换效果\"><a class=\"markdownIt-Anchor\" href=\"#2-变换效果\"></a> 2. 变换效果</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Transform&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.RenderTransform</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TransformGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RotateTransform</span> <span class=\"attr\">Angle</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;rotate&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ScaleTransform</span> <span class=\"attr\">ScaleX</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">ScaleY</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;scale&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">TransformGroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.RenderTransform</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">&quot;Button.MouseEnter&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> </span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetName</span>=<span class=\"string\">&quot;rotate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;Angle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.2&quot;</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> </span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetName</span>=<span class=\"string\">&quot;scale&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">&quot;ScaleX&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">To</span>=<span class=\"string\">&quot;1.05&quot;</span> <span class=\"attr\">Duration</span>=<span class=\"string\">&quot;0:0:0.2&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Button.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"八-高级技巧与最佳实践\"><a class=\"markdownIt-Anchor\" href=\"#八-高级技巧与最佳实践\"></a> 八、高级技巧与最佳实践</h2>\n<h3 id=\"1-xaml命名规范\"><a class=\"markdownIt-Anchor\" href=\"#1-xaml命名规范\"></a> 1. XAML命名规范</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 使用有意义的名称 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;SubmitButton&quot;</span> <span class=\"attr\">Content</span>=<span class=\"string\">&quot;Submit&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;UsernameTextBox&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListView</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">&quot;CustomerListView&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-资源组织策略\"><a class=\"markdownIt-Anchor\" href=\"#2-资源组织策略\"></a> 2. 资源组织策略</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 资源字典 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/Brushes.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/Buttons.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Styles/TextStyles.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 本地资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-设计时数据\"><a class=\"markdownIt-Anchor\" href=\"#3-设计时数据\"></a> 3. 设计时数据</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class=\"line\">d:DataContext=&quot;&#123;d:DesignInstance Type=local:DesignViewModel&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 使用示例 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">&quot;&#123;Binding Customers&#125;&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">d:ItemsSource</span>=<span class=\"string\">&quot;&#123;d:DesignData Source=SampleData/Customers.xaml&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-性能优化技巧\"><a class=\"markdownIt-Anchor\" href=\"#4-性能优化技巧\"></a> 4. 性能优化技巧</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 虚拟化长列表 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ListView</span> <span class=\"attr\">VirtualizingStackPanel.IsVirtualizing</span>=<span class=\"string\">&quot;True&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">VirtualizingStackPanel.VirtualizationMode</span>=<span class=\"string\">&quot;Recycling&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- ... --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ListView</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 冻结静态资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;StaticBrush&quot;</span> <span class=\"attr\">Color</span>=<span class=\"string\">&quot;Blue&quot;</span> <span class=\"attr\">PresentationOptions:Freeze</span>=<span class=\"string\">&quot;True&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 延迟滚动 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ScrollViewer</span> <span class=\"attr\">IsDeferredScrollingEnabled</span>=<span class=\"string\">&quot;True&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemsControl</span> <span class=\"attr\">...</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ScrollViewer</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"九-调试与问题排查\"><a class=\"markdownIt-Anchor\" href=\"#九-调试与问题排查\"></a> 九、调试与问题排查</h2>\n<h3 id=\"1-绑定调试\"><a class=\"markdownIt-Anchor\" href=\"#1-绑定调试\"></a> 1. 绑定调试</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 启用绑定跟踪 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&quot;&#123;Binding UserName, </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">    diag:PresentationTraceSources.TraceLevel=High&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-可视化树检查\"><a class=\"markdownIt-Anchor\" href=\"#2-可视化树检查\"></a> 2. 可视化树检查</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在代码中遍历可视化树</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> T <span class=\"title\">FindVisualChild</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">DependencyObject obj</span>) <span class=\"keyword\">where</span> T : DependencyObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; VisualTreeHelper.GetChildrenCount(obj); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> child = VisualTreeHelper.GetChild(obj, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (child <span class=\"keyword\">is</span> T result) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">var</span> childResult = FindVisualChild&lt;T&gt;(child);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (childResult != <span class=\"literal\">null</span>) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> childResult;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-常见错误解决\"><a class=\"markdownIt-Anchor\" href=\"#3-常见错误解决\"></a> 3. 常见错误解决</h3>\n<ol>\n<li><strong>“属性’Child’只能设置一次”</strong>：\n<ul>\n<li>确保容器元素只有一个直接子元素</li>\n<li>使用布局容器（如Grid、StackPanel）包裹多个元素</li>\n</ul>\n</li>\n<li><strong>“InitializeComponent未找到”</strong>：\n<ul>\n<li>检查x:Class命名空间与代码文件一致</li>\n<li>清理并重新生成项目</li>\n<li>确保XAML文件生成操作为&quot;Page&quot;</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>XAML是WPF的核心，掌握其各种格式和设置技巧对于构建现代桌面应用至关重要。关键要点包括：</p>\n<ol>\n<li><strong>声明式UI</strong>：使用XAML清晰分离界面与逻辑</li>\n<li><strong>强大布局</strong>：灵活运用Grid、StackPanel等布局容器</li>\n<li><strong>资源复用</strong>：通过资源字典实现样式和模板共享</li>\n<li><strong>数据驱动</strong>：利用数据绑定实现MVVM模式</li>\n<li><strong>视觉定制</strong>：通过控件模板完全自定义控件外观</li>\n<li><strong>动画效果</strong>：使用Storyboard创建流畅用户体验</li>\n</ol>\n<pre class=\"mermaid\">graph TD\n    A[XAML基础] --> B[布局系统]\n    A --> C[资源系统]\n    A --> D[数据绑定]\n    A --> E[样式模板]\n    B --> F[Grid/StackPanel]\n    C --> G[静态/动态资源]\n    D --> H[绑定模式]\n    E --> I[控件模板]\n    F --> J[响应式设计]\n    G --> K[主题切换]\n    H --> L[MVVM模式]\n    I --> M[完全自定义控件]\n    J --> N[自适应UI]\n    K --> O[动态换肤]\n    L --> P[关注点分离]\n    M --> Q[品牌化UI]</pre>\n"},{"title":"Hello World","mermaid":true,"date":"2013-12-24T09:49:32.000Z","cover":"https://pic4.zhimg.com/v2-b96eb3d286b92f5e388a7e1e94fb19f3_1440w.jpg","sponsor":false,"_content":"\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n\n\n::: info\nThis is an info box.\n:::\n\n::: tip\nThis is a tip.\n:::\n\n::: warning\nThis is a warning.\n:::\n\n::: danger\nThis is a dangerous warning.\n:::\n\n::: danger STOP\nDanger zone, do not proceed\n:::\n\n::: details\nThis is a details block.\n:::\n\n---\n![心海元素爆发](https://upload-bbs.miyoushe.com/upload/2023/07/14/79695828/e4ea64c7a7ed5674a1521e5a7379189f_8744269808192540895.png)\n\n{% pullquote  left %}\n珊瑚宫心海作为海祇岛的\"现人神巫女\"，不仅是反抗军的领袖，更是一位精通兵法与治愈之术的智者\n{% endpullquote %}\n珊瑚宫心海曾言：\"战争不是目的，而是手段。真正的胜利不在于击败敌人，而在于守护人民的笑容。\"这份理念让她在领导反抗军时始终保持清醒的头脑。在《原神》的故事中，珊瑚宫心海展现了非凡的领导才能。\n{% pullquote right %}\n她以\"深海舌鲆鱼\"为代号制定的作战计划精妙绝伦，连天领奉行的将领都为之惊叹。\n{% endpullquote %}\n这种将军事才能与人文关怀结合的特质，使她成为稻妻最受尊敬的人物之一。\n**心海的元素爆发\"海人化羽\"** 不仅能治愈全队，还能召唤 *化海月* 持续恢复生命，体现了她<mark>既是军师也是医者</mark>的双重身份。珊瑚宫心海的神之眼是水系，这象征着她如水般柔韧而不可摧的特质——既能以智慧化解冲突，又能以坚韧抵御压迫心海的命之座\"眠龙座\"暗示着她体内沉睡的龙族血脉，这也是她能同时掌控治愈与破坏两种力量的原因\n{% pullquote left %}\n\"兵无常势，水无常形\"——这是珊瑚宫心海最常引用的兵法精髓，也是她应对眼狩令危机的核心策略\n> 在稻妻内战期间，珊瑚宫心海面临巨大压力：\n既要抵御幕府军的进攻，又要防止愚人众的渗透，同时还要维持海祇岛民众的生计\n> 这种复杂局面下，她展现了超越年龄的政治智慧和战略眼光\n![珊瑚宫心海](/images/taichi.svg)\n\"真正的领袖不在于力量强弱，而在于能否在黑暗中为子民点亮希望的灯火\"\n{% endpullquote %}\n\n{% pullquote right %}\n珊瑚宫心海的战术风格：\n```python\ndef kokomi_strategy(situation):\n    if situation.threat_level > 7:\n        return \"退守+治疗\"\n    elif resources_adequate(situation):\n        return \"水母部署+游击战\"\n    else:\n        return \"祈雨+谈判\"\n```\n{% endpullquote %}\n\n分析元素战技「海月之誓」：\n召唤化海月持续治疗领域内角色  \n治疗量基于心海的生命值上限，每2秒恢复一次，持续12秒——这稳定的治疗节奏正如 Pull Quote 在长文中提供的视觉呼吸点探讨「现人神巫女」的宗教含义：海祇大御神奥罗巴斯陨落后，心海作为人神沟通的桥梁，其服饰上的「逆鳞」纹样象征牺牲精神，这与 Pull Quote 自我聚焦以服务全文的定位异曲同工\n\n# H1 珊瑚宫心海\n### H3 珊瑚宫心海\n#### H4 珊瑚宫心海\n##### H5 珊瑚宫心海\n###### H6 珊瑚宫心海\n> \n>       \n>    \n> \n>\n> \n\n**加粗文本** 和 *斜体文本*  \n~~删除线~~ 和 ++下划线++  \n`行内代码` 和 [链接](https://hexo.io)\n\n---\n\n\n## 列表类型\n### 无序列表\n- Item 1\n- Item 2\n  - 子项目 2.1\n  - 子项目 2.2\n\n### 有序列表\n1. 第一项\n2. 第二项\n   1. 嵌套项 2.1\n   2. 嵌套项 2.2\n\n### 定义列表\nHTML\n: 超文本标记语言\n\nCSS\n: 层叠样式表\n\n---\n## 流程图 \n\n```mermaid\ngraph TD\n    subgraph 海祇岛作战指挥系统\n        style 珊瑚宫心海 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n        style 前线将士 fill:#e6d1ff,stroke:#b56dff\n        style 军情回报 fill:#ffd6f0,stroke:#ff7bac\n        style 海祇岛作战指挥系统 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n\n        珊瑚宫心海[\"🐚 珊瑚宫心海\"] -->|\"💧 作战指令\"| 战区部署[\"🎌 战区部署\"]\n        战区部署 --> 战区循环[\"🔁 战区循环\"]\n        \n        subgraph 战区循环\n            style 战区循环 fill:#f5e6ff,stroke:#d9a0ff\n            指令传达[\"✉️ 指令传达\"] --> 情报传递[\"✨ 情报传递\"]\n            subgraph 情报传递[128次加密]\n                style 情报传递 fill:#f0d9ff,stroke:#c97bff\n                情报加密[\"📜 情报加密\"] --> 信鸽传送[\"🕊️ 信鸽传送\"]\n            end\n            战况查询[\"🔍 战况查询\"] --> 军情回报[\"📋 军情回报\"]\n        end\n        \n        军情回报 -->|\"🌸 战果回报\"| 珊瑚宫心海\n    end\n    \n    珊瑚宫心海 --> 作战总结[\"🌊 战术总结\"]\n    \n    classDef coral fill:#ffc6e2,stroke:#c38fff;\n    classDef pink fill:#ffd6f0,stroke:#ff7bac;\n    classDef lavender fill:#e6d1ff,stroke:#b56dff;\n    classDef command fill:#f0e6ff,stroke:#d9a0ff;\n    \n    class 珊瑚宫心海,作战总结 coral;\n    class 军情回报 pink;\n    class 前线将士 lavender;\n    class 战区部署,指令传达,情报传递,战况查询 command;\n    \n    linkStyle 0 stroke:#c38fff,stroke-width:2px;\n    linkStyle 1 stroke:#d9a0ff,stroke-width:2px;\n    linkStyle 2 stroke:#ff7bac,stroke-width:2px;\n```\n\n\n---\n\n## 表格示例\n\n| 心海特质          | Pull Quote 原则         | 实现效果                     |\n|-------------------|------------------------|----------------------------|\n| 水系柔韧💧         | 响应式布局             | 自动适应移动端与桌面端       |\n| 兵法典籍📚         | 结构化提取             | 精准定位核心内容             |\n| 龙族血脉🐉         | CSS 深度定制           | 支持主题化样式扩展           |\n\n\n\n> **测试结论**：该插件完美实现了：\n> - 复杂内容的优雅呈现\n> - 多场景的样式适配\n> - 深度定制的扩展能力\n> - 情感共鸣的视觉强化\n\n---\n\n## 其他元素\n- 缩写：<abbr title=\"HyperText Markup Language\">HTML</abbr>\n- 下标：H<sub>2</sub>O\n- 上标：E = mc<sup>2</sup>\n- 键盘输入：<kbd>Ctrl</kbd>+<kbd>C</kbd>\n\n---\n\n## 美图\n![Hexo Logo](/images/banner.webp)\n\n### 分隔线\n***\n\n\n---\n\n## 代码块\n```js\n// JavaScript 代码示例\nconst hexo = require('hexo');\nconsole.log(`Hexo version: ${hexo.version}`);\n```\n\n```python\n# Python 代码示例\ndef hello_hexo():\n    print(\"Hello Hexo!\")\n```\n\n---\n\n## 引用块\n> 这是一个引用块  \n> 第二行引用内容  \n> — *引用来源*\n\n---\n\n## 数学公式 \n$$\nf(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi\n$$\n\n行内公式：$E = mc^2$\n\n---\n\n## 标签插件\n\n> \"真正的排版艺术如同心海的兵法——看似云淡风轻，实则每一步都经过精密推演\"\n\n\n---\n\n{% post_link \"hello-world\" auto %}\n\n{% heatMapCard %}\n\n{% asset_img avatar.webp 个人头像 %}\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nmermaid: true\ndate: 2013-12-24 17:49:32\ntags:\n\ncover: https://pic4.zhimg.com/v2-b96eb3d286b92f5e388a7e1e94fb19f3_1440w.jpg\nsponsor: false # 是否展示赞助二维码？\n---\n\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n\n\n::: info\nThis is an info box.\n:::\n\n::: tip\nThis is a tip.\n:::\n\n::: warning\nThis is a warning.\n:::\n\n::: danger\nThis is a dangerous warning.\n:::\n\n::: danger STOP\nDanger zone, do not proceed\n:::\n\n::: details\nThis is a details block.\n:::\n\n---\n![心海元素爆发](https://upload-bbs.miyoushe.com/upload/2023/07/14/79695828/e4ea64c7a7ed5674a1521e5a7379189f_8744269808192540895.png)\n\n{% pullquote  left %}\n珊瑚宫心海作为海祇岛的\"现人神巫女\"，不仅是反抗军的领袖，更是一位精通兵法与治愈之术的智者\n{% endpullquote %}\n珊瑚宫心海曾言：\"战争不是目的，而是手段。真正的胜利不在于击败敌人，而在于守护人民的笑容。\"这份理念让她在领导反抗军时始终保持清醒的头脑。在《原神》的故事中，珊瑚宫心海展现了非凡的领导才能。\n{% pullquote right %}\n她以\"深海舌鲆鱼\"为代号制定的作战计划精妙绝伦，连天领奉行的将领都为之惊叹。\n{% endpullquote %}\n这种将军事才能与人文关怀结合的特质，使她成为稻妻最受尊敬的人物之一。\n**心海的元素爆发\"海人化羽\"** 不仅能治愈全队，还能召唤 *化海月* 持续恢复生命，体现了她<mark>既是军师也是医者</mark>的双重身份。珊瑚宫心海的神之眼是水系，这象征着她如水般柔韧而不可摧的特质——既能以智慧化解冲突，又能以坚韧抵御压迫心海的命之座\"眠龙座\"暗示着她体内沉睡的龙族血脉，这也是她能同时掌控治愈与破坏两种力量的原因\n{% pullquote left %}\n\"兵无常势，水无常形\"——这是珊瑚宫心海最常引用的兵法精髓，也是她应对眼狩令危机的核心策略\n> 在稻妻内战期间，珊瑚宫心海面临巨大压力：\n既要抵御幕府军的进攻，又要防止愚人众的渗透，同时还要维持海祇岛民众的生计\n> 这种复杂局面下，她展现了超越年龄的政治智慧和战略眼光\n![珊瑚宫心海](/images/taichi.svg)\n\"真正的领袖不在于力量强弱，而在于能否在黑暗中为子民点亮希望的灯火\"\n{% endpullquote %}\n\n{% pullquote right %}\n珊瑚宫心海的战术风格：\n```python\ndef kokomi_strategy(situation):\n    if situation.threat_level > 7:\n        return \"退守+治疗\"\n    elif resources_adequate(situation):\n        return \"水母部署+游击战\"\n    else:\n        return \"祈雨+谈判\"\n```\n{% endpullquote %}\n\n分析元素战技「海月之誓」：\n召唤化海月持续治疗领域内角色  \n治疗量基于心海的生命值上限，每2秒恢复一次，持续12秒——这稳定的治疗节奏正如 Pull Quote 在长文中提供的视觉呼吸点探讨「现人神巫女」的宗教含义：海祇大御神奥罗巴斯陨落后，心海作为人神沟通的桥梁，其服饰上的「逆鳞」纹样象征牺牲精神，这与 Pull Quote 自我聚焦以服务全文的定位异曲同工\n\n# H1 珊瑚宫心海\n### H3 珊瑚宫心海\n#### H4 珊瑚宫心海\n##### H5 珊瑚宫心海\n###### H6 珊瑚宫心海\n> \n>       \n>    \n> \n>\n> \n\n**加粗文本** 和 *斜体文本*  \n~~删除线~~ 和 ++下划线++  \n`行内代码` 和 [链接](https://hexo.io)\n\n---\n\n\n## 列表类型\n### 无序列表\n- Item 1\n- Item 2\n  - 子项目 2.1\n  - 子项目 2.2\n\n### 有序列表\n1. 第一项\n2. 第二项\n   1. 嵌套项 2.1\n   2. 嵌套项 2.2\n\n### 定义列表\nHTML\n: 超文本标记语言\n\nCSS\n: 层叠样式表\n\n---\n## 流程图 \n\n```mermaid\ngraph TD\n    subgraph 海祇岛作战指挥系统\n        style 珊瑚宫心海 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n        style 前线将士 fill:#e6d1ff,stroke:#b56dff\n        style 军情回报 fill:#ffd6f0,stroke:#ff7bac\n        style 海祇岛作战指挥系统 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n\n        珊瑚宫心海[\"🐚 珊瑚宫心海\"] -->|\"💧 作战指令\"| 战区部署[\"🎌 战区部署\"]\n        战区部署 --> 战区循环[\"🔁 战区循环\"]\n        \n        subgraph 战区循环\n            style 战区循环 fill:#f5e6ff,stroke:#d9a0ff\n            指令传达[\"✉️ 指令传达\"] --> 情报传递[\"✨ 情报传递\"]\n            subgraph 情报传递[128次加密]\n                style 情报传递 fill:#f0d9ff,stroke:#c97bff\n                情报加密[\"📜 情报加密\"] --> 信鸽传送[\"🕊️ 信鸽传送\"]\n            end\n            战况查询[\"🔍 战况查询\"] --> 军情回报[\"📋 军情回报\"]\n        end\n        \n        军情回报 -->|\"🌸 战果回报\"| 珊瑚宫心海\n    end\n    \n    珊瑚宫心海 --> 作战总结[\"🌊 战术总结\"]\n    \n    classDef coral fill:#ffc6e2,stroke:#c38fff;\n    classDef pink fill:#ffd6f0,stroke:#ff7bac;\n    classDef lavender fill:#e6d1ff,stroke:#b56dff;\n    classDef command fill:#f0e6ff,stroke:#d9a0ff;\n    \n    class 珊瑚宫心海,作战总结 coral;\n    class 军情回报 pink;\n    class 前线将士 lavender;\n    class 战区部署,指令传达,情报传递,战况查询 command;\n    \n    linkStyle 0 stroke:#c38fff,stroke-width:2px;\n    linkStyle 1 stroke:#d9a0ff,stroke-width:2px;\n    linkStyle 2 stroke:#ff7bac,stroke-width:2px;\n```\n\n\n---\n\n## 表格示例\n\n| 心海特质          | Pull Quote 原则         | 实现效果                     |\n|-------------------|------------------------|----------------------------|\n| 水系柔韧💧         | 响应式布局             | 自动适应移动端与桌面端       |\n| 兵法典籍📚         | 结构化提取             | 精准定位核心内容             |\n| 龙族血脉🐉         | CSS 深度定制           | 支持主题化样式扩展           |\n\n\n\n> **测试结论**：该插件完美实现了：\n> - 复杂内容的优雅呈现\n> - 多场景的样式适配\n> - 深度定制的扩展能力\n> - 情感共鸣的视觉强化\n\n---\n\n## 其他元素\n- 缩写：<abbr title=\"HyperText Markup Language\">HTML</abbr>\n- 下标：H<sub>2</sub>O\n- 上标：E = mc<sup>2</sup>\n- 键盘输入：<kbd>Ctrl</kbd>+<kbd>C</kbd>\n\n---\n\n## 美图\n![Hexo Logo](/images/banner.webp)\n\n### 分隔线\n***\n\n\n---\n\n## 代码块\n```js\n// JavaScript 代码示例\nconst hexo = require('hexo');\nconsole.log(`Hexo version: ${hexo.version}`);\n```\n\n```python\n# Python 代码示例\ndef hello_hexo():\n    print(\"Hello Hexo!\")\n```\n\n---\n\n## 引用块\n> 这是一个引用块  \n> 第二行引用内容  \n> — *引用来源*\n\n---\n\n## 数学公式 \n$$\nf(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi\n$$\n\n行内公式：$E = mc^2$\n\n---\n\n## 标签插件\n\n> \"真正的排版艺术如同心海的兵法——看似云淡风轻，实则每一步都经过精密推演\"\n\n\n---\n\n{% post_link \"hello-world\" auto %}\n\n{% heatMapCard %}\n\n{% asset_img avatar.webp 个人头像 %}\n\n","slug":"hello-world","published":1,"updated":"2025-07-17T07:07:30.477Z","comments":1,"layout":"post","photos":[],"_id":"cmd71t80v000p3cw6av27bihp","content":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n<div class=\"info custom-block\"><p class=\"custom-block-title\">INFO</p>\n<p>This is an info box.</p>\n</div>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p>This is a tip.</p>\n</div>\n<div class=\"warning custom-block\"><p class=\"custom-block-title\">WARNING</p>\n<p>This is a warning.</p>\n</div>\n<div class=\"danger custom-block\"><p class=\"custom-block-title\">DANGER</p>\n<p>This is a dangerous warning.</p>\n</div>\n<div class=\"danger custom-block\"><p class=\"custom-block-title\">STOP</p>\n<p>Danger zone, do not proceed</p>\n</div>\n<details class=\"details custom-block\"><summary>Details</summary>\n<p>This is a details block.</p>\n</details>\n<hr />\n<p><img src=\"https://upload-bbs.miyoushe.com/upload/2023/07/14/79695828/e4ea64c7a7ed5674a1521e5a7379189f_8744269808192540895.png\" alt=\"心海元素爆发\" /></p>\n<blockquote class=\"pullquote left\"><p>珊瑚宫心海作为海祇岛的&quot;现人神巫女&quot;，不仅是反抗军的领袖，更是一位精通兵法与治愈之术的智者</p>\n</blockquote>\n<p>珊瑚宫心海曾言：&quot;战争不是目的，而是手段。真正的胜利不在于击败敌人，而在于守护人民的笑容。&quot;这份理念让她在领导反抗军时始终保持清醒的头脑。在《原神》的故事中，珊瑚宫心海展现了非凡的领导才能。</p>\n<blockquote class=\"pullquote right\"><p>她以&quot;深海舌鲆鱼&quot;为代号制定的作战计划精妙绝伦，连天领奉行的将领都为之惊叹。</p>\n</blockquote>\n<p>这种将军事才能与人文关怀结合的特质，使她成为稻妻最受尊敬的人物之一。<br />\n<strong>心海的元素爆发&quot;海人化羽&quot;</strong> 不仅能治愈全队，还能召唤 <em>化海月</em> 持续恢复生命，体现了她<mark>既是军师也是医者</mark>的双重身份。珊瑚宫心海的神之眼是水系，这象征着她如水般柔韧而不可摧的特质——既能以智慧化解冲突，又能以坚韧抵御压迫心海的命之座&quot;眠龙座&quot;暗示着她体内沉睡的龙族血脉，这也是她能同时掌控治愈与破坏两种力量的原因</p>\n<blockquote class=\"pullquote left\"><p>“兵无常势，水无常形”——这是珊瑚宫心海最常引用的兵法精髓，也是她应对眼狩令危机的核心策略</p>\n<blockquote>\n<p>在稻妻内战期间，珊瑚宫心海面临巨大压力：<br />\n既要抵御幕府军的进攻，又要防止愚人众的渗透，同时还要维持海祇岛民众的生计<br />\n这种复杂局面下，她展现了超越年龄的政治智慧和战略眼光<br />\n<img src=\"/images/taichi.svg\" alt=\"珊瑚宫心海\" /><br />\n“真正的领袖不在于力量强弱，而在于能否在黑暗中为子民点亮希望的灯火”</p>\n</blockquote>\n</blockquote>\n<blockquote class=\"pullquote right\"><p>珊瑚宫心海的战术风格：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kokomi_strategy</span>(<span class=\"params\">situation</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> situation.threat_level &gt; <span class=\"number\">7</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;退守+治疗&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> resources_adequate(situation):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;水母部署+游击战&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;祈雨+谈判&quot;</span></span><br></pre></td></tr></table></figure></blockquote>\n<p>分析元素战技「海月之誓」：<br />\n召唤化海月持续治疗领域内角色<br />\n治疗量基于心海的生命值上限，每2秒恢复一次，持续12秒——这稳定的治疗节奏正如 Pull Quote 在长文中提供的视觉呼吸点探讨「现人神巫女」的宗教含义：海祇大御神奥罗巴斯陨落后，心海作为人神沟通的桥梁，其服饰上的「逆鳞」纹样象征牺牲精神，这与 Pull Quote 自我聚焦以服务全文的定位异曲同工</p>\n<h1 id=\"h1-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h1-珊瑚宫心海\"></a> H1 珊瑚宫心海</h1>\n<h3 id=\"h3-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h3-珊瑚宫心海\"></a> H3 珊瑚宫心海</h3>\n<h4 id=\"h4-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h4-珊瑚宫心海\"></a> H4 珊瑚宫心海</h4>\n<h5 id=\"h5-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h5-珊瑚宫心海\"></a> H5 珊瑚宫心海</h5>\n<h6 id=\"h6-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h6-珊瑚宫心海\"></a> H6 珊瑚宫心海</h6>\n<blockquote></blockquote>\n<p><strong>加粗文本</strong> 和 <em>斜体文本</em><br />\n<s>删除线</s> 和 <ins>下划线</ins><br />\n<code>行内代码</code> 和 <a href=\"https://hexo.io\">链接</a></p>\n<hr />\n<h2 id=\"列表类型\"><a class=\"markdownIt-Anchor\" href=\"#列表类型\"></a> 列表类型</h2>\n<h3 id=\"无序列表\"><a class=\"markdownIt-Anchor\" href=\"#无序列表\"></a> 无序列表</h3>\n<ul>\n<li>Item 1</li>\n<li>Item 2\n<ul>\n<li>子项目 2.1</li>\n<li>子项目 2.2</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"有序列表\"><a class=\"markdownIt-Anchor\" href=\"#有序列表\"></a> 有序列表</h3>\n<ol>\n<li>第一项</li>\n<li>第二项\n<ol>\n<li>嵌套项 2.1</li>\n<li>嵌套项 2.2</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"定义列表\"><a class=\"markdownIt-Anchor\" href=\"#定义列表\"></a> 定义列表</h3>\n<dl>\n<dt>HTML</dt>\n<dd>超文本标记语言</dd>\n<dt>CSS</dt>\n<dd>层叠样式表</dd>\n</dl>\n<hr />\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<pre class=\"mermaid\">graph TD\n    subgraph 海祇岛作战指挥系统\n        style 珊瑚宫心海 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n        style 前线将士 fill:#e6d1ff,stroke:#b56dff\n        style 军情回报 fill:#ffd6f0,stroke:#ff7bac\n        style 海祇岛作战指挥系统 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n\n        珊瑚宫心海[\"🐚 珊瑚宫心海\"] -->|\"💧 作战指令\"| 战区部署[\"🎌 战区部署\"]\n        战区部署 --> 战区循环[\"🔁 战区循环\"]\n        \n        subgraph 战区循环\n            style 战区循环 fill:#f5e6ff,stroke:#d9a0ff\n            指令传达[\"✉️ 指令传达\"] --> 情报传递[\"✨ 情报传递\"]\n            subgraph 情报传递[128次加密]\n                style 情报传递 fill:#f0d9ff,stroke:#c97bff\n                情报加密[\"📜 情报加密\"] --> 信鸽传送[\"🕊️ 信鸽传送\"]\n            end\n            战况查询[\"🔍 战况查询\"] --> 军情回报[\"📋 军情回报\"]\n        end\n        \n        军情回报 -->|\"🌸 战果回报\"| 珊瑚宫心海\n    end\n    \n    珊瑚宫心海 --> 作战总结[\"🌊 战术总结\"]\n    \n    classDef coral fill:#ffc6e2,stroke:#c38fff;\n    classDef pink fill:#ffd6f0,stroke:#ff7bac;\n    classDef lavender fill:#e6d1ff,stroke:#b56dff;\n    classDef command fill:#f0e6ff,stroke:#d9a0ff;\n    \n    class 珊瑚宫心海,作战总结 coral;\n    class 军情回报 pink;\n    class 前线将士 lavender;\n    class 战区部署,指令传达,情报传递,战况查询 command;\n    \n    linkStyle 0 stroke:#c38fff,stroke-width:2px;\n    linkStyle 1 stroke:#d9a0ff,stroke-width:2px;\n    linkStyle 2 stroke:#ff7bac,stroke-width:2px;</pre>\n<hr />\n<h2 id=\"表格示例\"><a class=\"markdownIt-Anchor\" href=\"#表格示例\"></a> 表格示例</h2>\n<table>\n<thead>\n<tr>\n<th>心海特质</th>\n<th>Pull Quote 原则</th>\n<th>实现效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>水系柔韧💧</td>\n<td>响应式布局</td>\n<td>自动适应移动端与桌面端</td>\n</tr>\n<tr>\n<td>兵法典籍📚</td>\n<td>结构化提取</td>\n<td>精准定位核心内容</td>\n</tr>\n<tr>\n<td>龙族血脉🐉</td>\n<td>CSS 深度定制</td>\n<td>支持主题化样式扩展</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>测试结论</strong>：该插件完美实现了：</p>\n<ul>\n<li>复杂内容的优雅呈现</li>\n<li>多场景的样式适配</li>\n<li>深度定制的扩展能力</li>\n<li>情感共鸣的视觉强化</li>\n</ul>\n</blockquote>\n<hr />\n<h2 id=\"其他元素\"><a class=\"markdownIt-Anchor\" href=\"#其他元素\"></a> 其他元素</h2>\n<ul>\n<li>缩写：<abbr title=\"HyperText Markup Language\">HTML</abbr></li>\n<li>下标：H<sub>2</sub>O</li>\n<li>上标：E = mc<sup>2</sup></li>\n<li>键盘输入：<kbd>Ctrl</kbd>+<kbd>C</kbd></li>\n</ul>\n<hr />\n<h2 id=\"美图\"><a class=\"markdownIt-Anchor\" href=\"#美图\"></a> 美图</h2>\n<p><img src=\"/images/banner.webp\" alt=\"Hexo Logo\" /></p>\n<h3 id=\"分隔线\"><a class=\"markdownIt-Anchor\" href=\"#分隔线\"></a> 分隔线</h3>\n<hr />\n<hr />\n<h2 id=\"代码块\"><a class=\"markdownIt-Anchor\" href=\"#代码块\"></a> 代码块</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JavaScript 代码示例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> hexo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Hexo version: <span class=\"subst\">$&#123;hexo.version&#125;</span>`</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Python 代码示例</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_hexo</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello Hexo!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<hr />\n<h2 id=\"引用块\"><a class=\"markdownIt-Anchor\" href=\"#引用块\"></a> 引用块</h2>\n<blockquote>\n<p>这是一个引用块<br />\n第二行引用内容<br />\n— <em>引用来源</em></p>\n</blockquote>\n<hr />\n<h2 id=\"数学公式\"><a class=\"markdownIt-Anchor\" href=\"#数学公式\"></a> 数学公式</h2>\n<p>$$f(x) &#x3D; \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi\n$$</p><p>行内公式：$E &#x3D; mc^2$</p>\n<hr />\n<h2 id=\"标签插件\"><a class=\"markdownIt-Anchor\" href=\"#标签插件\"></a> 标签插件</h2>\n<blockquote>\n<p>“真正的排版艺术如同心海的兵法——看似云淡风轻，实则每一步都经过精密推演”</p>\n</blockquote>\n<hr />\n<a href=\"/2013/12/24/hello-world/\" title=\"Hello World\">auto</a>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n","excerpt":"","more":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n<div class=\"info custom-block\"><p class=\"custom-block-title\">INFO</p>\n<p>This is an info box.</p>\n</div>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p>This is a tip.</p>\n</div>\n<div class=\"warning custom-block\"><p class=\"custom-block-title\">WARNING</p>\n<p>This is a warning.</p>\n</div>\n<div class=\"danger custom-block\"><p class=\"custom-block-title\">DANGER</p>\n<p>This is a dangerous warning.</p>\n</div>\n<div class=\"danger custom-block\"><p class=\"custom-block-title\">STOP</p>\n<p>Danger zone, do not proceed</p>\n</div>\n<details class=\"details custom-block\"><summary>Details</summary>\n<p>This is a details block.</p>\n</details>\n<hr />\n<p><img src=\"https://upload-bbs.miyoushe.com/upload/2023/07/14/79695828/e4ea64c7a7ed5674a1521e5a7379189f_8744269808192540895.png\" alt=\"心海元素爆发\" /></p>\n<blockquote class=\"pullquote left\"><p>珊瑚宫心海作为海祇岛的&quot;现人神巫女&quot;，不仅是反抗军的领袖，更是一位精通兵法与治愈之术的智者</p>\n</blockquote>\n<p>珊瑚宫心海曾言：&quot;战争不是目的，而是手段。真正的胜利不在于击败敌人，而在于守护人民的笑容。&quot;这份理念让她在领导反抗军时始终保持清醒的头脑。在《原神》的故事中，珊瑚宫心海展现了非凡的领导才能。</p>\n<blockquote class=\"pullquote right\"><p>她以&quot;深海舌鲆鱼&quot;为代号制定的作战计划精妙绝伦，连天领奉行的将领都为之惊叹。</p>\n</blockquote>\n<p>这种将军事才能与人文关怀结合的特质，使她成为稻妻最受尊敬的人物之一。<br />\n<strong>心海的元素爆发&quot;海人化羽&quot;</strong> 不仅能治愈全队，还能召唤 <em>化海月</em> 持续恢复生命，体现了她<mark>既是军师也是医者</mark>的双重身份。珊瑚宫心海的神之眼是水系，这象征着她如水般柔韧而不可摧的特质——既能以智慧化解冲突，又能以坚韧抵御压迫心海的命之座&quot;眠龙座&quot;暗示着她体内沉睡的龙族血脉，这也是她能同时掌控治愈与破坏两种力量的原因</p>\n<blockquote class=\"pullquote left\"><p>“兵无常势，水无常形”——这是珊瑚宫心海最常引用的兵法精髓，也是她应对眼狩令危机的核心策略</p>\n<blockquote>\n<p>在稻妻内战期间，珊瑚宫心海面临巨大压力：<br />\n既要抵御幕府军的进攻，又要防止愚人众的渗透，同时还要维持海祇岛民众的生计<br />\n这种复杂局面下，她展现了超越年龄的政治智慧和战略眼光<br />\n<img src=\"/images/taichi.svg\" alt=\"珊瑚宫心海\" /><br />\n“真正的领袖不在于力量强弱，而在于能否在黑暗中为子民点亮希望的灯火”</p>\n</blockquote>\n</blockquote>\n<blockquote class=\"pullquote right\"><p>珊瑚宫心海的战术风格：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kokomi_strategy</span>(<span class=\"params\">situation</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> situation.threat_level &gt; <span class=\"number\">7</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;退守+治疗&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> resources_adequate(situation):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;水母部署+游击战&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;祈雨+谈判&quot;</span></span><br></pre></td></tr></table></figure></blockquote>\n<p>分析元素战技「海月之誓」：<br />\n召唤化海月持续治疗领域内角色<br />\n治疗量基于心海的生命值上限，每2秒恢复一次，持续12秒——这稳定的治疗节奏正如 Pull Quote 在长文中提供的视觉呼吸点探讨「现人神巫女」的宗教含义：海祇大御神奥罗巴斯陨落后，心海作为人神沟通的桥梁，其服饰上的「逆鳞」纹样象征牺牲精神，这与 Pull Quote 自我聚焦以服务全文的定位异曲同工</p>\n<h1 id=\"h1-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h1-珊瑚宫心海\"></a> H1 珊瑚宫心海</h1>\n<h3 id=\"h3-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h3-珊瑚宫心海\"></a> H3 珊瑚宫心海</h3>\n<h4 id=\"h4-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h4-珊瑚宫心海\"></a> H4 珊瑚宫心海</h4>\n<h5 id=\"h5-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h5-珊瑚宫心海\"></a> H5 珊瑚宫心海</h5>\n<h6 id=\"h6-珊瑚宫心海\"><a class=\"markdownIt-Anchor\" href=\"#h6-珊瑚宫心海\"></a> H6 珊瑚宫心海</h6>\n<blockquote></blockquote>\n<p><strong>加粗文本</strong> 和 <em>斜体文本</em><br />\n<s>删除线</s> 和 <ins>下划线</ins><br />\n<code>行内代码</code> 和 <a href=\"https://hexo.io\">链接</a></p>\n<hr />\n<h2 id=\"列表类型\"><a class=\"markdownIt-Anchor\" href=\"#列表类型\"></a> 列表类型</h2>\n<h3 id=\"无序列表\"><a class=\"markdownIt-Anchor\" href=\"#无序列表\"></a> 无序列表</h3>\n<ul>\n<li>Item 1</li>\n<li>Item 2\n<ul>\n<li>子项目 2.1</li>\n<li>子项目 2.2</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"有序列表\"><a class=\"markdownIt-Anchor\" href=\"#有序列表\"></a> 有序列表</h3>\n<ol>\n<li>第一项</li>\n<li>第二项\n<ol>\n<li>嵌套项 2.1</li>\n<li>嵌套项 2.2</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"定义列表\"><a class=\"markdownIt-Anchor\" href=\"#定义列表\"></a> 定义列表</h3>\n<dl>\n<dt>HTML</dt>\n<dd>超文本标记语言</dd>\n<dt>CSS</dt>\n<dd>层叠样式表</dd>\n</dl>\n<hr />\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<pre class=\"mermaid\">graph TD\n    subgraph 海祇岛作战指挥系统\n        style 珊瑚宫心海 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n        style 前线将士 fill:#e6d1ff,stroke:#b56dff\n        style 军情回报 fill:#ffd6f0,stroke:#ff7bac\n        style 海祇岛作战指挥系统 fill:#ffc6e2,stroke:#c38fff,stroke-width:3px,color:#8a2f8f\n\n        珊瑚宫心海[\"🐚 珊瑚宫心海\"] -->|\"💧 作战指令\"| 战区部署[\"🎌 战区部署\"]\n        战区部署 --> 战区循环[\"🔁 战区循环\"]\n        \n        subgraph 战区循环\n            style 战区循环 fill:#f5e6ff,stroke:#d9a0ff\n            指令传达[\"✉️ 指令传达\"] --> 情报传递[\"✨ 情报传递\"]\n            subgraph 情报传递[128次加密]\n                style 情报传递 fill:#f0d9ff,stroke:#c97bff\n                情报加密[\"📜 情报加密\"] --> 信鸽传送[\"🕊️ 信鸽传送\"]\n            end\n            战况查询[\"🔍 战况查询\"] --> 军情回报[\"📋 军情回报\"]\n        end\n        \n        军情回报 -->|\"🌸 战果回报\"| 珊瑚宫心海\n    end\n    \n    珊瑚宫心海 --> 作战总结[\"🌊 战术总结\"]\n    \n    classDef coral fill:#ffc6e2,stroke:#c38fff;\n    classDef pink fill:#ffd6f0,stroke:#ff7bac;\n    classDef lavender fill:#e6d1ff,stroke:#b56dff;\n    classDef command fill:#f0e6ff,stroke:#d9a0ff;\n    \n    class 珊瑚宫心海,作战总结 coral;\n    class 军情回报 pink;\n    class 前线将士 lavender;\n    class 战区部署,指令传达,情报传递,战况查询 command;\n    \n    linkStyle 0 stroke:#c38fff,stroke-width:2px;\n    linkStyle 1 stroke:#d9a0ff,stroke-width:2px;\n    linkStyle 2 stroke:#ff7bac,stroke-width:2px;</pre>\n<hr />\n<h2 id=\"表格示例\"><a class=\"markdownIt-Anchor\" href=\"#表格示例\"></a> 表格示例</h2>\n<table>\n<thead>\n<tr>\n<th>心海特质</th>\n<th>Pull Quote 原则</th>\n<th>实现效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>水系柔韧💧</td>\n<td>响应式布局</td>\n<td>自动适应移动端与桌面端</td>\n</tr>\n<tr>\n<td>兵法典籍📚</td>\n<td>结构化提取</td>\n<td>精准定位核心内容</td>\n</tr>\n<tr>\n<td>龙族血脉🐉</td>\n<td>CSS 深度定制</td>\n<td>支持主题化样式扩展</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>测试结论</strong>：该插件完美实现了：</p>\n<ul>\n<li>复杂内容的优雅呈现</li>\n<li>多场景的样式适配</li>\n<li>深度定制的扩展能力</li>\n<li>情感共鸣的视觉强化</li>\n</ul>\n</blockquote>\n<hr />\n<h2 id=\"其他元素\"><a class=\"markdownIt-Anchor\" href=\"#其他元素\"></a> 其他元素</h2>\n<ul>\n<li>缩写：<abbr title=\"HyperText Markup Language\">HTML</abbr></li>\n<li>下标：H<sub>2</sub>O</li>\n<li>上标：E = mc<sup>2</sup></li>\n<li>键盘输入：<kbd>Ctrl</kbd>+<kbd>C</kbd></li>\n</ul>\n<hr />\n<h2 id=\"美图\"><a class=\"markdownIt-Anchor\" href=\"#美图\"></a> 美图</h2>\n<p><img src=\"/images/banner.webp\" alt=\"Hexo Logo\" /></p>\n<h3 id=\"分隔线\"><a class=\"markdownIt-Anchor\" href=\"#分隔线\"></a> 分隔线</h3>\n<hr />\n<hr />\n<h2 id=\"代码块\"><a class=\"markdownIt-Anchor\" href=\"#代码块\"></a> 代码块</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JavaScript 代码示例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> hexo = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Hexo version: <span class=\"subst\">$&#123;hexo.version&#125;</span>`</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Python 代码示例</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_hexo</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello Hexo!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<hr />\n<h2 id=\"引用块\"><a class=\"markdownIt-Anchor\" href=\"#引用块\"></a> 引用块</h2>\n<blockquote>\n<p>这是一个引用块<br />\n第二行引用内容<br />\n— <em>引用来源</em></p>\n</blockquote>\n<hr />\n<h2 id=\"数学公式\"><a class=\"markdownIt-Anchor\" href=\"#数学公式\"></a> 数学公式</h2>\n<p>$$f(x) &#x3D; \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi\n$$</p><p>行内公式：$E &#x3D; mc^2$</p>\n<hr />\n<h2 id=\"标签插件\"><a class=\"markdownIt-Anchor\" href=\"#标签插件\"></a> 标签插件</h2>\n<blockquote>\n<p>“真正的排版艺术如同心海的兵法——看似云淡风轻，实则每一步都经过精密推演”</p>\n</blockquote>\n<hr />\n<a href=\"/2013/12/24/hello-world/\" title=\"Hello World\">auto</a>\n<script>var REIMU_HEATMAP_CONFIG = {articleStats: [{\"title\":\"WPF学习之旅\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:59:04.030Z\",\"wordcount\":3106,\"url\":\"/2025/07/14/Csharp%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/\"},{\"title\":\"C语言函数指针作为结构体成员实现成员操作\",\"date\":\"2022-11-15T16:00:00.000Z\",\"updated\":\"2025-07-16T08:23:52.050Z\",\"wordcount\":943,\"url\":\"/2022/11/16/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E4%BD%9C%E4%B8%BA%E7%BB%93%E6%9E%84%E4%BD%93%E6%88%90%E5%91%98%E5%AE%9E%E7%8E%B0%E6%88%90%E5%91%98%E6%93%8D%E4%BD%9C/\"},{\"title\":\"ESP32-IDF新建工程和创建分区\",\"date\":\"2025-06-05T16:00:00.000Z\",\"updated\":\"2025-07-16T07:26:21.906Z\",\"wordcount\":663,\"url\":\"/2025/06/06/ESP32-IDF%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/\"},{\"title\":\"LIN总线OTA升级协议定义\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:37:44.053Z\",\"wordcount\":1366,\"url\":\"/2025/07/14/LIN%E6%80%BB%E7%BA%BFOTA%E5%8D%87%E7%BA%A7%E5%8D%8F%E8%AE%AE%E5%AE%9A%E4%B9%89/\"},{\"title\":\"QML Fluid Element 动态元素\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T08:01:18.199Z\",\"wordcount\":5229,\"url\":\"/2024/03/22/QML_Fluid_Element%E5%8A%A8%E6%80%81%E5%85%83%E7%B4%A0/\"},{\"title\":\"ROS学习\",\"date\":\"2024-03-21T16:00:00.000Z\",\"updated\":\"2025-07-16T09:38:39.484Z\",\"wordcount\":1758,\"url\":\"/2024/03/22/ROS%E5%AD%A6%E4%B9%A0/\"},{\"title\":\"STM32单片机外设初始化例程\",\"date\":\"2023-01-17T16:00:00.000Z\",\"updated\":\"2025-07-16T09:01:59.164Z\",\"wordcount\":4848,\"url\":\"/2023/01/18/STM32%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BE%8B%E7%A8%8B/\"},{\"title\":\"WPF的XAML解析\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T06:38:42.697Z\",\"wordcount\":920,\"url\":\"/2025/07/14/WPF%E8%A7%A3%E6%9E%90%E6%95%99%E7%A8%8B/\"},{\"title\":\"Hello World\",\"date\":\"2013-12-24T09:49:32.000Z\",\"updated\":\"2025-07-17T07:07:30.477Z\",\"wordcount\":1446,\"url\":\"/2013/12/24/hello-world/\"},{\"title\":\"恋爱倒计时\",\"date\":\"2023-09-15T04:15:02.000Z\",\"updated\":\"2025-07-16T03:57:41.263Z\",\"wordcount\":2034,\"url\":\"/2023/09/15/longtimelove/\"},{\"title\":\"号码归属地查询\",\"date\":\"2025-07-04T04:19:00.000Z\",\"updated\":\"2025-07-16T06:59:59.505Z\",\"wordcount\":1586,\"url\":\"/2025/07/04/shearchphone/\"},{\"title\":\"情侣小游戏\",\"date\":\"2025-07-13T09:49:32.000Z\",\"updated\":\"2025-07-16T06:05:15.896Z\",\"wordcount\":4038,\"url\":\"/2025/07/13/love/\"},{\"title\":\"基于Cortex-M0内核的Bootloader开发指南\",\"date\":\"2025-03-27T16:00:00.000Z\",\"updated\":\"2025-07-16T07:36:21.575Z\",\"wordcount\":2004,\"url\":\"/2025/03/28/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/\"},{\"title\":\"基于Modbus-RTU协议的Bootloader升级系统设计\",\"date\":\"2025-03-23T16:00:00.000Z\",\"updated\":\"2025-07-16T07:38:11.649Z\",\"wordcount\":1268,\"url\":\"/2025/03/24/%E5%9F%BA%E4%BA%8EModbus-RTU%E5%8D%8F%E8%AE%AE%E7%9A%84Bootloader%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/\"},{\"title\":\"汽车电子固件升级（OTA）实现详解\",\"date\":\"2025-07-13T16:00:00.000Z\",\"updated\":\"2025-07-16T07:42:32.203Z\",\"wordcount\":2586,\"url\":\"/2025/07/14/%E6%B1%BD%E8%BD%A6%E7%94%B5%E5%AD%90%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7%EF%BC%88OTA%EF%BC%89%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3/\"}], i18n: {\"en\":{\"no_articles\":\"No articles\",\"words\":\"word(s)\",\"total_articles\":\"$1 article(s), $2 word(s)\"},\"ja\":{\"no_articles\":\"記事がありません\",\"words\":\"文字\",\"total_articles\":\"$1 記事, $2 文字\"},\"zh-CN\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"},\"zh-TW\":{\"no_articles\":\"没有文章\",\"words\":\"字\",\"total_articles\":\"共 $1 篇文章, $2 字\"}}, levelStandard: \"1000,5000,10000\"};</script>\n<link rel=\"stylesheet\" href=\"/css/heat-map.css\">\n<div id=\"heatmap\"></div>\n<script src=\"/js/heat_map.js\"></script>\n\n\n"},{"title":"恋爱倒计时","date":"2023-09-15T04:15:02.000Z","cover":"https://upload-bbs.miyoushe.com/upload/2024/02/14/292762008/f0cb3676199b75980959b7d972a0771f_384819317620854048.jpg?x-oss-process=image/resize,s_600/quality,q_80/auto-orient,0/interlace,1/format,jpg","sponsor":false,"_content":"\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>❤️ 恋爱时光 ❤️</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n        }\n        \n        /* 装饰元素 */\n        .heart, .snowflake, .star {\n            position: absolute;\n            font-size: 24px;\n            animation: float 8s infinite ease-in-out;\n            z-index: 0;\n        }\n        \n        .heart { color: rgba(255, 0, 0, 0.5); }\n        .snowflake { color: rgba(173, 216, 230, 0.7); }\n        .star { color: rgba(255, 255, 0, 0.7); }\n        \n        /* 动画 */\n        @keyframes float {\n            0% { transform: translateY(0) rotate(0deg); opacity: 0; }\n            10% { opacity: 1; }\n            90% { opacity: 1; }\n            100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }\n        }\n        \n        @keyframes twinkle {\n            0% { opacity: 0.3; transform: scale(0.8); }\n            100% { opacity: 1; transform: scale(1.2); }\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes slideIn {\n            from { transform: translateY(50px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n        \n        /* 密码保护容器 */\n        .password-container {\n            background: rgba(255, 255, 255, 0.95);\n            padding: 50px;\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            max-width: 500px;\n            width: 90%;\n            z-index: 10;\n            position: relative;\n            animation: slideIn 1s ease-out;\n            backdrop-filter: blur(10px);\n        }\n        \n        .password-container h1 {\n            color: #e84393;\n            margin-bottom: 25px;\n            font-size: 2.8rem;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .password-container p {\n            color: #6c5ce7;\n            margin-bottom: 30px;\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .couple-names {\n            font-size: 1.8rem;\n            color: #ff6b6b;\n            font-weight: bold;\n            margin: 20px 0;\n            letter-spacing: 2px;\n        }\n        \n        .password-input {\n            position: relative;\n            margin: 30px 0;\n        }\n        \n        .password-input input {\n            width: 100%;\n            padding: 18px 20px;\n            border: 2px solid #e0e0e0;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            outline: none;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .password-input input:focus {\n            border-color: #6c5ce7;\n            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.2);\n        }\n        \n        .password-input i {\n            position: absolute;\n            right: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a29bfe;\n            cursor: pointer;\n        }\n        \n        .submit-btn {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border: none;\n            padding: 18px 40px;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            width: 100%;\n            margin-top: 10px;\n        }\n        \n        .submit-btn:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);\n        }\n        \n        .hint {\n            margin-top: 25px;\n            color: #00b894;\n            font-size: 0.95rem;\n            font-style: italic;\n        }\n        \n        .error-message {\n            color: #ff7675;\n            margin-top: 15px;\n            font-weight: 500;\n            height: 20px;\n        }\n        \n        /* 主内容容器 */\n        .container {\n            max-width: 1200px;\n            margin: 40px auto;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            backdrop-filter: blur(10px);\n            position: relative;\n            overflow: hidden;\n            display: none;\n            animation: fadeIn 1s ease-out;\n        }\n        \n        .header {\n            text-align: center;\n            padding: 30px 20px;\n            margin-bottom: 30px;\n            position: relative;\n        }\n        \n        .header::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80%;\n            height: 2px;\n            background: linear-gradient(90deg, transparent, #ff6b6b, transparent);\n        }\n        \n        .title {\n            font-size: 3.5rem;\n            margin-bottom: 15px;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6c5ce7;\n            font-weight: 500;\n        }\n        \n        .start-date {\n            font-size: 1.1rem;\n            color: #00b894;\n            margin-top: 10px;\n            font-weight: 500;\n        }\n        \n        .counter-container {\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n            gap: 15px;\n            margin: 40px 0;\n            animation: pulse 2s infinite;\n        }\n        \n        .counter-box {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border-radius: 15px;\n            padding: 20px 15px;\n            min-width: 130px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            transition: transform 0.3s ease;\n        }\n        \n        .counter-box:hover {\n            transform: translateY(-10px);\n        }\n        \n        .counter-value {\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin-bottom: 5px;\n            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n        }\n        \n        .counter-label {\n            font-size: 1rem;\n            opacity: 0.9;\n        }\n        \n        .events-section {\n            margin-top: 50px;\n            padding: 20px;\n        }\n        \n        .section-title {\n            text-align: center;\n            font-size: 2.2rem;\n            margin-bottom: 30px;\n            color: #e84393;\n            position: relative;\n            display: inline-block;\n            left: 50%;\n            transform: translateX(-50%);\n            padding: 0 20px;\n        }\n        \n        .section-title::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 100%;\n            height: 3px;\n            background: linear-gradient(90deg, #fd79a8, #a29bfe, #55efc4);\n            border-radius: 3px;\n        }\n        \n        .lovetimeline {\n            position: relative;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 40px 0;\n        }\n        \n        .lovetimeline::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            width: 4px;\n            background: linear-gradient(to bottom, #fd79a8, #a29bfe, #55efc4);\n            left: 50%;\n            margin-left: -2px;\n            border-radius: 10px;\n        }\n        \n        .lovetimeline-item {\n            position: relative;\n            margin-bottom: 50px;\n            width: 50%;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        .lovetimeline-item:nth-child(odd) {\n            left: 0;\n            padding-right: 70px;\n            text-align: right;\n        }\n        \n        .lovetimeline-item:nth-child(even) {\n            left: 50%;\n            padding-left: 70px;\n        }\n        \n        .lovetimeline-content {\n            background: white;\n            padding: 25px;\n            border-radius: 15px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            position: relative;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .lovetimeline-content:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            right: -15px;\n            border-style: solid;\n            border-width: 10px 0 10px 15px;\n            border-color: transparent transparent transparent white;\n        }\n        \n        .lovetimeline-item:nth-child(even) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            left: -15px;\n            border-style: solid;\n            border-width: 10px 15px 10px 0;\n            border-color: transparent white transparent transparent;\n        }\n        \n        .lovetimeline-date {\n            font-weight: 600;\n            color: #6c5ce7;\n            margin-bottom: 10px;\n            display: block;\n            font-size: 1.1rem;\n        }\n        \n        .lovetimeline-title {\n            font-size: 1.4rem;\n            margin-bottom: 10px;\n            color: #e84393;\n        }\n        \n        .days-after {\n            font-size: 0.95rem;\n            color: #00b894;\n            font-weight: 500;\n        }\n        \n        .icon2 {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #fd79a8, #a29bfe);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .icon2 {\n            right: -25px;\n            top: 0;\n        }\n        \n        .lovetimeline-item:nth-child(even) .icon2 {\n            left: -25px;\n            top: 0;\n        }\n        \n        .footer {\n            text-align: center;\n            padding: 30px;\n            margin-top: 30px;\n            color: #6c5ce7;\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .password-container {\n                padding: 30px;\n            }\n            \n            .password-container h1 {\n                font-size: 2.2rem;\n            }\n            \n            .title {\n                font-size: 2.5rem;\n            }\n            \n            .counter-box {\n                min-width: 100px;\n                padding: 15px 10px;\n            }\n            \n            .counter-value {\n                font-size: 2rem;\n            }\n            \n            .lovetimeline::before {\n                left: 30px;\n            }\n            \n            .lovetimeline-item {\n                width: 100%;\n                padding-left: 80px !important;\n                padding-right: 20px !important;\n                left: 0 !important;\n                text-align: left !important;\n            }\n            \n            .lovetimeline-item:nth-child(even) .icon2,\n            .lovetimeline-item:nth-child(odd) .icon2 {\n                left: 5px;\n                right: auto;\n            }\n            \n            .lovetimeline-item:nth-child(even) .lovetimeline-content::after,\n            .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n                left: -15px;\n                right: auto;\n                border-width: 10px 15px 10px 0;\n                border-color: transparent white transparent transparent;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .password-container {\n                padding: 20px;\n            }\n            \n            .password-container h1 {\n                font-size: 1.8rem;\n            }\n            \n            .couple-names {\n                font-size: 1.4rem;\n            }\n            \n            .title {\n                font-size: 2rem;\n            }\n            \n            .counter-box {\n                min-width: 80px;\n                padding: 12px 8px;\n            }\n            \n            .counter-value {\n                font-size: 1.6rem;\n            }\n            \n            .counter-label {\n                font-size: 0.85rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 密码保护界面 -->\n    <div class=\"password-container\" id=\"password-container\">\n        <h1>❤️ 恋爱时光 ❤️</h1>\n        <p>这是一份特别的恋爱记录，只属于我们两个人</p>\n        \n        <div class=\"couple-names\">\n            ❄️ 冯笑一 & 韩思宇 🌟\n        </div>\n        \n        <p>请输入密码查看我们的恋爱时光记录</p>\n        \n        <div class=\"password-input\">\n            <input type=\"password\" id=\"password\" placeholder=\"请输入我们的密码\" autocomplete=\"off\">\n            <i class=\"fas fa-lock\"></i>\n        </div>\n        \n        <button class=\"submit-btn\" onclick=\"checkPassword()\">\n            <i class=\"fas fa-heart\"></i> 进入恋爱时光\n        </button>\n        \n        <div class=\"error-message\" id=\"error-message\"></div>\n        \n        <div class=\"hint\">\n            提示：密码是(8位数字)\n        </div>\n    </div>\n    \n    <!-- 主内容容器 -->\n    <div class=\"container\" id=\"main-content\">\n        <div class=\"header\">\n            <h1 class=\"title\">❄️ 冯笑一 ❤️ 韩思宇 🌟</h1>\n            <p class=\"subtitle\">记录我们的美好时光</p>\n            <p class=\"start-date\">起始时间: 2023年9月15日</p>\n        </div>\n        \n        <div class=\"counter-container\">\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"years\">0</div>\n                <div class=\"counter-label\">年</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"months\">0</div>\n                <div class=\"counter-label\">月</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"days\">0</div>\n                <div class=\"counter-label\">天</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"hours\">0</div>\n                <div class=\"counter-label\">小时</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"minutes\">0</div>\n                <div class=\"counter-label\">分钟</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"seconds\">0</div>\n                <div class=\"counter-label\">秒</div>\n            </div>\n        </div>\n        \n        <div class=\"events-section\">\n            <h2 class=\"section-title\">我们的美好回忆</h2>\n            \n            <div class=\"lovetimeline\" id=\"lovetimeline\">\n                <!-- 时间轴内容将通过JS动态生成 -->\n            </div>\n        </div>\n        \n        <div class=\"footer\">\n            ❤️ 每一天都比前一天更爱你 ❤️\n        </div>\n    </div>\n\n    <script>\n        // 创建装饰元素\n        function createDecorations() {\n            const body = document.querySelector('body');\n            const types = ['heart', 'snowflake', 'star'];\n            const emojis = {\n                heart: ['❤️', '💖', '💗', '💘', '💝'],\n                snowflake: ['❄️', '🌨️', '🌬️'],\n                star: ['🌟', '⭐', '✨', '💫']\n            };\n            \n            for (let i = 0; i < 30; i++) {\n                const type = types[Math.floor(Math.random() * types.length)];\n                const deco = document.createElement('div');\n                deco.className = type;\n                \n                const emojiSet = emojis[type];\n                deco.textContent = emojiSet[Math.floor(Math.random() * emojiSet.length)];\n                \n                deco.style.left = `${Math.random() * 100}vw`;\n                deco.style.top = `${Math.random() * 100}vh`;\n                deco.style.animationDelay = `${Math.random() * 5}s`;\n                deco.style.fontSize = `${Math.random() * 20 + 15}px`;\n                \n                body.appendChild(deco);\n            }\n        }\n        \n        // 更新恋爱计时器\n        function updateTimer() {\n            const startDate = new Date('2023-09-15T00:00:00');\n            const now = new Date();\n            \n            const diff = now - startDate;\n            \n            const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n            const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30.44)) % 12;\n            const days = Math.floor(diff / (1000 * 60 * 60 * 24)) % 30;\n            const hours = Math.floor(diff / (1000 * 60 * 60)) % 24;\n            const minutes = Math.floor(diff / (1000 * 60)) % 60;\n            const seconds = Math.floor(diff / 1000) % 60;\n            \n            document.getElementById('years').textContent = years;\n            document.getElementById('months').textContent = months;\n            document.getElementById('days').textContent = days;\n            document.getElementById('hours').textContent = hours.toString().padStart(2, '0');\n            document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');\n            document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');\n        }\n        \n        // 渲染时间轴事件\n        function renderlovetimeline() {\n            const events = [\n                { title: '第1次表白👩‍❤️‍👨', start: '2023-09-15' },\n                { title: '第1次牵手🤝&拥抱💏', start: '2023-10-01' },\n                { title: '第1次约会🎉', start: '2023-10-01' },\n                { title: '第1次去海边🏖', start: '2023-10-02' },\n                { title: '第1次一起睡觉💤', start: '2023-10-28' },\n                { title: '一起逛街🛒', start: '2023-12-03' },\n                { title: '第1次一起过生日🎂', start: '2023-12-31' },\n                { title: '一起跨年💏', start: '2024-01-01' },\n                { title: '一起看电影🎞🎞', start: '2024-12-30' }\n            ];\n            \n            const lovetimeline = document.getElementById('lovetimeline');\n            const startDate = new Date('2023-09-15');\n            \n            // 按日期排序\n            events.sort((a, b) => new Date(a.start) - new Date(b.start));\n            \n            events.forEach((event, index) => {\n                const eventDate = new Date(event.start);\n                const diffTime = eventDate - startDate;\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n                \n                const lovetimelineItem = document.createElement('div');\n                lovetimelineItem.className = 'lovetimeline-item';\n                \n                const icon = document.createElement('div');\n                icon.className = 'icon2';\n                icon.innerHTML = getEventIcon(event.title);\n                \n                const content = document.createElement('div');\n                content.className = 'lovetimeline-content';\n                \n                const date = document.createElement('span');\n                date.className = 'lovetimeline-date';\n                date.textContent = formatDate(eventDate);\n                \n                const title = document.createElement('h3');\n                title.className = 'lovetimeline-title';\n                title.textContent = event.title;\n                \n                const daysAfter = document.createElement('p');\n                daysAfter.className = 'days-after';\n                daysAfter.textContent = `恋爱第 ${diffDays} 天`;\n                \n                content.appendChild(date);\n                content.appendChild(title);\n                content.appendChild(daysAfter);\n                \n                lovetimelineItem.appendChild(icon);\n                lovetimelineItem.appendChild(content);\n                \n                lovetimeline.appendChild(lovetimelineItem);\n            });\n        }\n        \n        // 根据事件标题获取图标\n        function getEventIcon(title) {\n            if (title.includes('表白')) return '💘';\n            if (title.includes('牵手') || title.includes('拥抱')) return '💑';\n            if (title.includes('约会')) return '💞';\n            if (title.includes('海边')) return '🌊';\n            if (title.includes('睡觉')) return '🛌';\n            if (title.includes('逛街')) return '👫';\n            if (title.includes('电影')) return '🎬';\n            if (title.includes('生日')) return '🎂';\n            if (title.includes('跨年')) return '🎆';\n            return '❤️';\n        }\n        \n        // 格式化日期\n        function formatDate(date) {\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            return `${year}年${month}月${day}日`;\n        }\n        \n        // 检查密码\n        function checkPassword() {\n            const password = document.getElementById('password').value;\n            const errorMessage = document.getElementById('error-message');\n            \n            // 正确密码是恋爱纪念日 20230915\n            if (password === '20230915') {\n                // 隐藏密码容器\n                document.getElementById('password-container').style.display = 'none';\n                // 显示主内容\n                document.getElementById('main-content').style.display = 'block';\n                // 创建装饰元素\n                createDecorations();\n                // 开始计时器\n                setInterval(updateTimer, 1000);\n            } else {\n                errorMessage.textContent = '密码错误，请再试一次！';\n                // 添加抖动效果\n                document.getElementById('password').classList.add('shake');\n                setTimeout(() => {\n                    document.getElementById('password').classList.remove('shake');\n                }, 500);\n            }\n        }\n        \n        // 初始化\n        document.addEventListener('DOMContentLoaded', () => {\n            // 添加输入框的回车事件\n            document.getElementById('password').addEventListener('keypress', (e) => {\n                if (e.key === 'Enter') {\n                    checkPassword();\n                }\n            });\n            \n            // 渲染时间轴\n            renderlovetimeline();\n            \n            // 添加抖动动画\n            const style = document.createElement('style');\n            style.textContent = `\n                .shake {\n                    animation: shake 0.5s;\n                    border-color: #ff7675 !important;\n                }\n                \n                @keyframes shake {\n                    0% { transform: translateX(0); }\n                    25% { transform: translateX(-10px); }\n                    50% { transform: translateX(10px); }\n                    75% { transform: translateX(-10px); }\n                    100% { transform: translateX(0); }\n                }\n            `;\n            document.head.appendChild(style);\n        });\n    </script>\n</body>\n</html>\n{% endraw %}","source":"_posts/longtimelove.md","raw":"---\ntitle: 恋爱倒计时\ndate: 2023-09-15 12:15:02\ncover: https://upload-bbs.miyoushe.com/upload/2024/02/14/292762008/f0cb3676199b75980959b7d972a0771f_384819317620854048.jpg?x-oss-process=image/resize,s_600/quality,q_80/auto-orient,0/interlace,1/format,jpg\nsponsor: false # 是否展示赞助二维码？\n---\n\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>❤️ 恋爱时光 ❤️</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n        }\n        \n        /* 装饰元素 */\n        .heart, .snowflake, .star {\n            position: absolute;\n            font-size: 24px;\n            animation: float 8s infinite ease-in-out;\n            z-index: 0;\n        }\n        \n        .heart { color: rgba(255, 0, 0, 0.5); }\n        .snowflake { color: rgba(173, 216, 230, 0.7); }\n        .star { color: rgba(255, 255, 0, 0.7); }\n        \n        /* 动画 */\n        @keyframes float {\n            0% { transform: translateY(0) rotate(0deg); opacity: 0; }\n            10% { opacity: 1; }\n            90% { opacity: 1; }\n            100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }\n        }\n        \n        @keyframes twinkle {\n            0% { opacity: 0.3; transform: scale(0.8); }\n            100% { opacity: 1; transform: scale(1.2); }\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes slideIn {\n            from { transform: translateY(50px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n        \n        /* 密码保护容器 */\n        .password-container {\n            background: rgba(255, 255, 255, 0.95);\n            padding: 50px;\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            max-width: 500px;\n            width: 90%;\n            z-index: 10;\n            position: relative;\n            animation: slideIn 1s ease-out;\n            backdrop-filter: blur(10px);\n        }\n        \n        .password-container h1 {\n            color: #e84393;\n            margin-bottom: 25px;\n            font-size: 2.8rem;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .password-container p {\n            color: #6c5ce7;\n            margin-bottom: 30px;\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .couple-names {\n            font-size: 1.8rem;\n            color: #ff6b6b;\n            font-weight: bold;\n            margin: 20px 0;\n            letter-spacing: 2px;\n        }\n        \n        .password-input {\n            position: relative;\n            margin: 30px 0;\n        }\n        \n        .password-input input {\n            width: 100%;\n            padding: 18px 20px;\n            border: 2px solid #e0e0e0;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            outline: none;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .password-input input:focus {\n            border-color: #6c5ce7;\n            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.2);\n        }\n        \n        .password-input i {\n            position: absolute;\n            right: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a29bfe;\n            cursor: pointer;\n        }\n        \n        .submit-btn {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border: none;\n            padding: 18px 40px;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            width: 100%;\n            margin-top: 10px;\n        }\n        \n        .submit-btn:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);\n        }\n        \n        .hint {\n            margin-top: 25px;\n            color: #00b894;\n            font-size: 0.95rem;\n            font-style: italic;\n        }\n        \n        .error-message {\n            color: #ff7675;\n            margin-top: 15px;\n            font-weight: 500;\n            height: 20px;\n        }\n        \n        /* 主内容容器 */\n        .container {\n            max-width: 1200px;\n            margin: 40px auto;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            backdrop-filter: blur(10px);\n            position: relative;\n            overflow: hidden;\n            display: none;\n            animation: fadeIn 1s ease-out;\n        }\n        \n        .header {\n            text-align: center;\n            padding: 30px 20px;\n            margin-bottom: 30px;\n            position: relative;\n        }\n        \n        .header::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80%;\n            height: 2px;\n            background: linear-gradient(90deg, transparent, #ff6b6b, transparent);\n        }\n        \n        .title {\n            font-size: 3.5rem;\n            margin-bottom: 15px;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6c5ce7;\n            font-weight: 500;\n        }\n        \n        .start-date {\n            font-size: 1.1rem;\n            color: #00b894;\n            margin-top: 10px;\n            font-weight: 500;\n        }\n        \n        .counter-container {\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n            gap: 15px;\n            margin: 40px 0;\n            animation: pulse 2s infinite;\n        }\n        \n        .counter-box {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border-radius: 15px;\n            padding: 20px 15px;\n            min-width: 130px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            transition: transform 0.3s ease;\n        }\n        \n        .counter-box:hover {\n            transform: translateY(-10px);\n        }\n        \n        .counter-value {\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin-bottom: 5px;\n            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n        }\n        \n        .counter-label {\n            font-size: 1rem;\n            opacity: 0.9;\n        }\n        \n        .events-section {\n            margin-top: 50px;\n            padding: 20px;\n        }\n        \n        .section-title {\n            text-align: center;\n            font-size: 2.2rem;\n            margin-bottom: 30px;\n            color: #e84393;\n            position: relative;\n            display: inline-block;\n            left: 50%;\n            transform: translateX(-50%);\n            padding: 0 20px;\n        }\n        \n        .section-title::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 100%;\n            height: 3px;\n            background: linear-gradient(90deg, #fd79a8, #a29bfe, #55efc4);\n            border-radius: 3px;\n        }\n        \n        .lovetimeline {\n            position: relative;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 40px 0;\n        }\n        \n        .lovetimeline::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            width: 4px;\n            background: linear-gradient(to bottom, #fd79a8, #a29bfe, #55efc4);\n            left: 50%;\n            margin-left: -2px;\n            border-radius: 10px;\n        }\n        \n        .lovetimeline-item {\n            position: relative;\n            margin-bottom: 50px;\n            width: 50%;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        .lovetimeline-item:nth-child(odd) {\n            left: 0;\n            padding-right: 70px;\n            text-align: right;\n        }\n        \n        .lovetimeline-item:nth-child(even) {\n            left: 50%;\n            padding-left: 70px;\n        }\n        \n        .lovetimeline-content {\n            background: white;\n            padding: 25px;\n            border-radius: 15px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            position: relative;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .lovetimeline-content:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            right: -15px;\n            border-style: solid;\n            border-width: 10px 0 10px 15px;\n            border-color: transparent transparent transparent white;\n        }\n        \n        .lovetimeline-item:nth-child(even) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            left: -15px;\n            border-style: solid;\n            border-width: 10px 15px 10px 0;\n            border-color: transparent white transparent transparent;\n        }\n        \n        .lovetimeline-date {\n            font-weight: 600;\n            color: #6c5ce7;\n            margin-bottom: 10px;\n            display: block;\n            font-size: 1.1rem;\n        }\n        \n        .lovetimeline-title {\n            font-size: 1.4rem;\n            margin-bottom: 10px;\n            color: #e84393;\n        }\n        \n        .days-after {\n            font-size: 0.95rem;\n            color: #00b894;\n            font-weight: 500;\n        }\n        \n        .icon2 {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #fd79a8, #a29bfe);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .icon2 {\n            right: -25px;\n            top: 0;\n        }\n        \n        .lovetimeline-item:nth-child(even) .icon2 {\n            left: -25px;\n            top: 0;\n        }\n        \n        .footer {\n            text-align: center;\n            padding: 30px;\n            margin-top: 30px;\n            color: #6c5ce7;\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .password-container {\n                padding: 30px;\n            }\n            \n            .password-container h1 {\n                font-size: 2.2rem;\n            }\n            \n            .title {\n                font-size: 2.5rem;\n            }\n            \n            .counter-box {\n                min-width: 100px;\n                padding: 15px 10px;\n            }\n            \n            .counter-value {\n                font-size: 2rem;\n            }\n            \n            .lovetimeline::before {\n                left: 30px;\n            }\n            \n            .lovetimeline-item {\n                width: 100%;\n                padding-left: 80px !important;\n                padding-right: 20px !important;\n                left: 0 !important;\n                text-align: left !important;\n            }\n            \n            .lovetimeline-item:nth-child(even) .icon2,\n            .lovetimeline-item:nth-child(odd) .icon2 {\n                left: 5px;\n                right: auto;\n            }\n            \n            .lovetimeline-item:nth-child(even) .lovetimeline-content::after,\n            .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n                left: -15px;\n                right: auto;\n                border-width: 10px 15px 10px 0;\n                border-color: transparent white transparent transparent;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .password-container {\n                padding: 20px;\n            }\n            \n            .password-container h1 {\n                font-size: 1.8rem;\n            }\n            \n            .couple-names {\n                font-size: 1.4rem;\n            }\n            \n            .title {\n                font-size: 2rem;\n            }\n            \n            .counter-box {\n                min-width: 80px;\n                padding: 12px 8px;\n            }\n            \n            .counter-value {\n                font-size: 1.6rem;\n            }\n            \n            .counter-label {\n                font-size: 0.85rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 密码保护界面 -->\n    <div class=\"password-container\" id=\"password-container\">\n        <h1>❤️ 恋爱时光 ❤️</h1>\n        <p>这是一份特别的恋爱记录，只属于我们两个人</p>\n        \n        <div class=\"couple-names\">\n            ❄️ 冯笑一 & 韩思宇 🌟\n        </div>\n        \n        <p>请输入密码查看我们的恋爱时光记录</p>\n        \n        <div class=\"password-input\">\n            <input type=\"password\" id=\"password\" placeholder=\"请输入我们的密码\" autocomplete=\"off\">\n            <i class=\"fas fa-lock\"></i>\n        </div>\n        \n        <button class=\"submit-btn\" onclick=\"checkPassword()\">\n            <i class=\"fas fa-heart\"></i> 进入恋爱时光\n        </button>\n        \n        <div class=\"error-message\" id=\"error-message\"></div>\n        \n        <div class=\"hint\">\n            提示：密码是(8位数字)\n        </div>\n    </div>\n    \n    <!-- 主内容容器 -->\n    <div class=\"container\" id=\"main-content\">\n        <div class=\"header\">\n            <h1 class=\"title\">❄️ 冯笑一 ❤️ 韩思宇 🌟</h1>\n            <p class=\"subtitle\">记录我们的美好时光</p>\n            <p class=\"start-date\">起始时间: 2023年9月15日</p>\n        </div>\n        \n        <div class=\"counter-container\">\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"years\">0</div>\n                <div class=\"counter-label\">年</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"months\">0</div>\n                <div class=\"counter-label\">月</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"days\">0</div>\n                <div class=\"counter-label\">天</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"hours\">0</div>\n                <div class=\"counter-label\">小时</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"minutes\">0</div>\n                <div class=\"counter-label\">分钟</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"seconds\">0</div>\n                <div class=\"counter-label\">秒</div>\n            </div>\n        </div>\n        \n        <div class=\"events-section\">\n            <h2 class=\"section-title\">我们的美好回忆</h2>\n            \n            <div class=\"lovetimeline\" id=\"lovetimeline\">\n                <!-- 时间轴内容将通过JS动态生成 -->\n            </div>\n        </div>\n        \n        <div class=\"footer\">\n            ❤️ 每一天都比前一天更爱你 ❤️\n        </div>\n    </div>\n\n    <script>\n        // 创建装饰元素\n        function createDecorations() {\n            const body = document.querySelector('body');\n            const types = ['heart', 'snowflake', 'star'];\n            const emojis = {\n                heart: ['❤️', '💖', '💗', '💘', '💝'],\n                snowflake: ['❄️', '🌨️', '🌬️'],\n                star: ['🌟', '⭐', '✨', '💫']\n            };\n            \n            for (let i = 0; i < 30; i++) {\n                const type = types[Math.floor(Math.random() * types.length)];\n                const deco = document.createElement('div');\n                deco.className = type;\n                \n                const emojiSet = emojis[type];\n                deco.textContent = emojiSet[Math.floor(Math.random() * emojiSet.length)];\n                \n                deco.style.left = `${Math.random() * 100}vw`;\n                deco.style.top = `${Math.random() * 100}vh`;\n                deco.style.animationDelay = `${Math.random() * 5}s`;\n                deco.style.fontSize = `${Math.random() * 20 + 15}px`;\n                \n                body.appendChild(deco);\n            }\n        }\n        \n        // 更新恋爱计时器\n        function updateTimer() {\n            const startDate = new Date('2023-09-15T00:00:00');\n            const now = new Date();\n            \n            const diff = now - startDate;\n            \n            const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n            const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30.44)) % 12;\n            const days = Math.floor(diff / (1000 * 60 * 60 * 24)) % 30;\n            const hours = Math.floor(diff / (1000 * 60 * 60)) % 24;\n            const minutes = Math.floor(diff / (1000 * 60)) % 60;\n            const seconds = Math.floor(diff / 1000) % 60;\n            \n            document.getElementById('years').textContent = years;\n            document.getElementById('months').textContent = months;\n            document.getElementById('days').textContent = days;\n            document.getElementById('hours').textContent = hours.toString().padStart(2, '0');\n            document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');\n            document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');\n        }\n        \n        // 渲染时间轴事件\n        function renderlovetimeline() {\n            const events = [\n                { title: '第1次表白👩‍❤️‍👨', start: '2023-09-15' },\n                { title: '第1次牵手🤝&拥抱💏', start: '2023-10-01' },\n                { title: '第1次约会🎉', start: '2023-10-01' },\n                { title: '第1次去海边🏖', start: '2023-10-02' },\n                { title: '第1次一起睡觉💤', start: '2023-10-28' },\n                { title: '一起逛街🛒', start: '2023-12-03' },\n                { title: '第1次一起过生日🎂', start: '2023-12-31' },\n                { title: '一起跨年💏', start: '2024-01-01' },\n                { title: '一起看电影🎞🎞', start: '2024-12-30' }\n            ];\n            \n            const lovetimeline = document.getElementById('lovetimeline');\n            const startDate = new Date('2023-09-15');\n            \n            // 按日期排序\n            events.sort((a, b) => new Date(a.start) - new Date(b.start));\n            \n            events.forEach((event, index) => {\n                const eventDate = new Date(event.start);\n                const diffTime = eventDate - startDate;\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n                \n                const lovetimelineItem = document.createElement('div');\n                lovetimelineItem.className = 'lovetimeline-item';\n                \n                const icon = document.createElement('div');\n                icon.className = 'icon2';\n                icon.innerHTML = getEventIcon(event.title);\n                \n                const content = document.createElement('div');\n                content.className = 'lovetimeline-content';\n                \n                const date = document.createElement('span');\n                date.className = 'lovetimeline-date';\n                date.textContent = formatDate(eventDate);\n                \n                const title = document.createElement('h3');\n                title.className = 'lovetimeline-title';\n                title.textContent = event.title;\n                \n                const daysAfter = document.createElement('p');\n                daysAfter.className = 'days-after';\n                daysAfter.textContent = `恋爱第 ${diffDays} 天`;\n                \n                content.appendChild(date);\n                content.appendChild(title);\n                content.appendChild(daysAfter);\n                \n                lovetimelineItem.appendChild(icon);\n                lovetimelineItem.appendChild(content);\n                \n                lovetimeline.appendChild(lovetimelineItem);\n            });\n        }\n        \n        // 根据事件标题获取图标\n        function getEventIcon(title) {\n            if (title.includes('表白')) return '💘';\n            if (title.includes('牵手') || title.includes('拥抱')) return '💑';\n            if (title.includes('约会')) return '💞';\n            if (title.includes('海边')) return '🌊';\n            if (title.includes('睡觉')) return '🛌';\n            if (title.includes('逛街')) return '👫';\n            if (title.includes('电影')) return '🎬';\n            if (title.includes('生日')) return '🎂';\n            if (title.includes('跨年')) return '🎆';\n            return '❤️';\n        }\n        \n        // 格式化日期\n        function formatDate(date) {\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            return `${year}年${month}月${day}日`;\n        }\n        \n        // 检查密码\n        function checkPassword() {\n            const password = document.getElementById('password').value;\n            const errorMessage = document.getElementById('error-message');\n            \n            // 正确密码是恋爱纪念日 20230915\n            if (password === '20230915') {\n                // 隐藏密码容器\n                document.getElementById('password-container').style.display = 'none';\n                // 显示主内容\n                document.getElementById('main-content').style.display = 'block';\n                // 创建装饰元素\n                createDecorations();\n                // 开始计时器\n                setInterval(updateTimer, 1000);\n            } else {\n                errorMessage.textContent = '密码错误，请再试一次！';\n                // 添加抖动效果\n                document.getElementById('password').classList.add('shake');\n                setTimeout(() => {\n                    document.getElementById('password').classList.remove('shake');\n                }, 500);\n            }\n        }\n        \n        // 初始化\n        document.addEventListener('DOMContentLoaded', () => {\n            // 添加输入框的回车事件\n            document.getElementById('password').addEventListener('keypress', (e) => {\n                if (e.key === 'Enter') {\n                    checkPassword();\n                }\n            });\n            \n            // 渲染时间轴\n            renderlovetimeline();\n            \n            // 添加抖动动画\n            const style = document.createElement('style');\n            style.textContent = `\n                .shake {\n                    animation: shake 0.5s;\n                    border-color: #ff7675 !important;\n                }\n                \n                @keyframes shake {\n                    0% { transform: translateX(0); }\n                    25% { transform: translateX(-10px); }\n                    50% { transform: translateX(10px); }\n                    75% { transform: translateX(-10px); }\n                    100% { transform: translateX(0); }\n                }\n            `;\n            document.head.appendChild(style);\n        });\n    </script>\n</body>\n</html>\n{% endraw %}","slug":"longtimelove","published":1,"updated":"2025-07-16T03:57:41.263Z","comments":1,"layout":"post","photos":[],"_id":"cmd71t80w000t3cw6hb9157ni","content":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>❤️ 恋爱时光 ❤️</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n        }\n        \n        /* 装饰元素 */\n        .heart, .snowflake, .star {\n            position: absolute;\n            font-size: 24px;\n            animation: float 8s infinite ease-in-out;\n            z-index: 0;\n        }\n        \n        .heart { color: rgba(255, 0, 0, 0.5); }\n        .snowflake { color: rgba(173, 216, 230, 0.7); }\n        .star { color: rgba(255, 255, 0, 0.7); }\n        \n        /* 动画 */\n        @keyframes float {\n            0% { transform: translateY(0) rotate(0deg); opacity: 0; }\n            10% { opacity: 1; }\n            90% { opacity: 1; }\n            100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }\n        }\n        \n        @keyframes twinkle {\n            0% { opacity: 0.3; transform: scale(0.8); }\n            100% { opacity: 1; transform: scale(1.2); }\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes slideIn {\n            from { transform: translateY(50px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n        \n        /* 密码保护容器 */\n        .password-container {\n            background: rgba(255, 255, 255, 0.95);\n            padding: 50px;\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            max-width: 500px;\n            width: 90%;\n            z-index: 10;\n            position: relative;\n            animation: slideIn 1s ease-out;\n            backdrop-filter: blur(10px);\n        }\n        \n        .password-container h1 {\n            color: #e84393;\n            margin-bottom: 25px;\n            font-size: 2.8rem;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .password-container p {\n            color: #6c5ce7;\n            margin-bottom: 30px;\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .couple-names {\n            font-size: 1.8rem;\n            color: #ff6b6b;\n            font-weight: bold;\n            margin: 20px 0;\n            letter-spacing: 2px;\n        }\n        \n        .password-input {\n            position: relative;\n            margin: 30px 0;\n        }\n        \n        .password-input input {\n            width: 100%;\n            padding: 18px 20px;\n            border: 2px solid #e0e0e0;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            outline: none;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .password-input input:focus {\n            border-color: #6c5ce7;\n            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.2);\n        }\n        \n        .password-input i {\n            position: absolute;\n            right: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a29bfe;\n            cursor: pointer;\n        }\n        \n        .submit-btn {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border: none;\n            padding: 18px 40px;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            width: 100%;\n            margin-top: 10px;\n        }\n        \n        .submit-btn:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);\n        }\n        \n        .hint {\n            margin-top: 25px;\n            color: #00b894;\n            font-size: 0.95rem;\n            font-style: italic;\n        }\n        \n        .error-message {\n            color: #ff7675;\n            margin-top: 15px;\n            font-weight: 500;\n            height: 20px;\n        }\n        \n        /* 主内容容器 */\n        .container {\n            max-width: 1200px;\n            margin: 40px auto;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            backdrop-filter: blur(10px);\n            position: relative;\n            overflow: hidden;\n            display: none;\n            animation: fadeIn 1s ease-out;\n        }\n        \n        .header {\n            text-align: center;\n            padding: 30px 20px;\n            margin-bottom: 30px;\n            position: relative;\n        }\n        \n        .header::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80%;\n            height: 2px;\n            background: linear-gradient(90deg, transparent, #ff6b6b, transparent);\n        }\n        \n        .title {\n            font-size: 3.5rem;\n            margin-bottom: 15px;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6c5ce7;\n            font-weight: 500;\n        }\n        \n        .start-date {\n            font-size: 1.1rem;\n            color: #00b894;\n            margin-top: 10px;\n            font-weight: 500;\n        }\n        \n        .counter-container {\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n            gap: 15px;\n            margin: 40px 0;\n            animation: pulse 2s infinite;\n        }\n        \n        .counter-box {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border-radius: 15px;\n            padding: 20px 15px;\n            min-width: 130px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            transition: transform 0.3s ease;\n        }\n        \n        .counter-box:hover {\n            transform: translateY(-10px);\n        }\n        \n        .counter-value {\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin-bottom: 5px;\n            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n        }\n        \n        .counter-label {\n            font-size: 1rem;\n            opacity: 0.9;\n        }\n        \n        .events-section {\n            margin-top: 50px;\n            padding: 20px;\n        }\n        \n        .section-title {\n            text-align: center;\n            font-size: 2.2rem;\n            margin-bottom: 30px;\n            color: #e84393;\n            position: relative;\n            display: inline-block;\n            left: 50%;\n            transform: translateX(-50%);\n            padding: 0 20px;\n        }\n        \n        .section-title::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 100%;\n            height: 3px;\n            background: linear-gradient(90deg, #fd79a8, #a29bfe, #55efc4);\n            border-radius: 3px;\n        }\n        \n        .lovetimeline {\n            position: relative;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 40px 0;\n        }\n        \n        .lovetimeline::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            width: 4px;\n            background: linear-gradient(to bottom, #fd79a8, #a29bfe, #55efc4);\n            left: 50%;\n            margin-left: -2px;\n            border-radius: 10px;\n        }\n        \n        .lovetimeline-item {\n            position: relative;\n            margin-bottom: 50px;\n            width: 50%;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        .lovetimeline-item:nth-child(odd) {\n            left: 0;\n            padding-right: 70px;\n            text-align: right;\n        }\n        \n        .lovetimeline-item:nth-child(even) {\n            left: 50%;\n            padding-left: 70px;\n        }\n        \n        .lovetimeline-content {\n            background: white;\n            padding: 25px;\n            border-radius: 15px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            position: relative;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .lovetimeline-content:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            right: -15px;\n            border-style: solid;\n            border-width: 10px 0 10px 15px;\n            border-color: transparent transparent transparent white;\n        }\n        \n        .lovetimeline-item:nth-child(even) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            left: -15px;\n            border-style: solid;\n            border-width: 10px 15px 10px 0;\n            border-color: transparent white transparent transparent;\n        }\n        \n        .lovetimeline-date {\n            font-weight: 600;\n            color: #6c5ce7;\n            margin-bottom: 10px;\n            display: block;\n            font-size: 1.1rem;\n        }\n        \n        .lovetimeline-title {\n            font-size: 1.4rem;\n            margin-bottom: 10px;\n            color: #e84393;\n        }\n        \n        .days-after {\n            font-size: 0.95rem;\n            color: #00b894;\n            font-weight: 500;\n        }\n        \n        .icon2 {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #fd79a8, #a29bfe);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .icon2 {\n            right: -25px;\n            top: 0;\n        }\n        \n        .lovetimeline-item:nth-child(even) .icon2 {\n            left: -25px;\n            top: 0;\n        }\n        \n        .footer {\n            text-align: center;\n            padding: 30px;\n            margin-top: 30px;\n            color: #6c5ce7;\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .password-container {\n                padding: 30px;\n            }\n            \n            .password-container h1 {\n                font-size: 2.2rem;\n            }\n            \n            .title {\n                font-size: 2.5rem;\n            }\n            \n            .counter-box {\n                min-width: 100px;\n                padding: 15px 10px;\n            }\n            \n            .counter-value {\n                font-size: 2rem;\n            }\n            \n            .lovetimeline::before {\n                left: 30px;\n            }\n            \n            .lovetimeline-item {\n                width: 100%;\n                padding-left: 80px !important;\n                padding-right: 20px !important;\n                left: 0 !important;\n                text-align: left !important;\n            }\n            \n            .lovetimeline-item:nth-child(even) .icon2,\n            .lovetimeline-item:nth-child(odd) .icon2 {\n                left: 5px;\n                right: auto;\n            }\n            \n            .lovetimeline-item:nth-child(even) .lovetimeline-content::after,\n            .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n                left: -15px;\n                right: auto;\n                border-width: 10px 15px 10px 0;\n                border-color: transparent white transparent transparent;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .password-container {\n                padding: 20px;\n            }\n            \n            .password-container h1 {\n                font-size: 1.8rem;\n            }\n            \n            .couple-names {\n                font-size: 1.4rem;\n            }\n            \n            .title {\n                font-size: 2rem;\n            }\n            \n            .counter-box {\n                min-width: 80px;\n                padding: 12px 8px;\n            }\n            \n            .counter-value {\n                font-size: 1.6rem;\n            }\n            \n            .counter-label {\n                font-size: 0.85rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 密码保护界面 -->\n    <div class=\"password-container\" id=\"password-container\">\n        <h1>❤️ 恋爱时光 ❤️</h1>\n        <p>这是一份特别的恋爱记录，只属于我们两个人</p>\n        \n        <div class=\"couple-names\">\n            ❄️ 冯笑一 & 韩思宇 🌟\n        </div>\n        \n        <p>请输入密码查看我们的恋爱时光记录</p>\n        \n        <div class=\"password-input\">\n            <input type=\"password\" id=\"password\" placeholder=\"请输入我们的密码\" autocomplete=\"off\">\n            <i class=\"fas fa-lock\"></i>\n        </div>\n        \n        <button class=\"submit-btn\" onclick=\"checkPassword()\">\n            <i class=\"fas fa-heart\"></i> 进入恋爱时光\n        </button>\n        \n        <div class=\"error-message\" id=\"error-message\"></div>\n        \n        <div class=\"hint\">\n            提示：密码是(8位数字)\n        </div>\n    </div>\n    \n    <!-- 主内容容器 -->\n    <div class=\"container\" id=\"main-content\">\n        <div class=\"header\">\n            <h1 class=\"title\">❄️ 冯笑一 ❤️ 韩思宇 🌟</h1>\n            <p class=\"subtitle\">记录我们的美好时光</p>\n            <p class=\"start-date\">起始时间: 2023年9月15日</p>\n        </div>\n        \n        <div class=\"counter-container\">\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"years\">0</div>\n                <div class=\"counter-label\">年</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"months\">0</div>\n                <div class=\"counter-label\">月</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"days\">0</div>\n                <div class=\"counter-label\">天</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"hours\">0</div>\n                <div class=\"counter-label\">小时</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"minutes\">0</div>\n                <div class=\"counter-label\">分钟</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"seconds\">0</div>\n                <div class=\"counter-label\">秒</div>\n            </div>\n        </div>\n        \n        <div class=\"events-section\">\n            <h2 class=\"section-title\">我们的美好回忆</h2>\n            \n            <div class=\"lovetimeline\" id=\"lovetimeline\">\n                <!-- 时间轴内容将通过JS动态生成 -->\n            </div>\n        </div>\n        \n        <div class=\"footer\">\n            ❤️ 每一天都比前一天更爱你 ❤️\n        </div>\n    </div>\n\n    <script>\n        // 创建装饰元素\n        function createDecorations() {\n            const body = document.querySelector('body');\n            const types = ['heart', 'snowflake', 'star'];\n            const emojis = {\n                heart: ['❤️', '💖', '💗', '💘', '💝'],\n                snowflake: ['❄️', '🌨️', '🌬️'],\n                star: ['🌟', '⭐', '✨', '💫']\n            };\n            \n            for (let i = 0; i < 30; i++) {\n                const type = types[Math.floor(Math.random() * types.length)];\n                const deco = document.createElement('div');\n                deco.className = type;\n                \n                const emojiSet = emojis[type];\n                deco.textContent = emojiSet[Math.floor(Math.random() * emojiSet.length)];\n                \n                deco.style.left = `${Math.random() * 100}vw`;\n                deco.style.top = `${Math.random() * 100}vh`;\n                deco.style.animationDelay = `${Math.random() * 5}s`;\n                deco.style.fontSize = `${Math.random() * 20 + 15}px`;\n                \n                body.appendChild(deco);\n            }\n        }\n        \n        // 更新恋爱计时器\n        function updateTimer() {\n            const startDate = new Date('2023-09-15T00:00:00');\n            const now = new Date();\n            \n            const diff = now - startDate;\n            \n            const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n            const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30.44)) % 12;\n            const days = Math.floor(diff / (1000 * 60 * 60 * 24)) % 30;\n            const hours = Math.floor(diff / (1000 * 60 * 60)) % 24;\n            const minutes = Math.floor(diff / (1000 * 60)) % 60;\n            const seconds = Math.floor(diff / 1000) % 60;\n            \n            document.getElementById('years').textContent = years;\n            document.getElementById('months').textContent = months;\n            document.getElementById('days').textContent = days;\n            document.getElementById('hours').textContent = hours.toString().padStart(2, '0');\n            document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');\n            document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');\n        }\n        \n        // 渲染时间轴事件\n        function renderlovetimeline() {\n            const events = [\n                { title: '第1次表白👩‍❤️‍👨', start: '2023-09-15' },\n                { title: '第1次牵手🤝&拥抱💏', start: '2023-10-01' },\n                { title: '第1次约会🎉', start: '2023-10-01' },\n                { title: '第1次去海边🏖', start: '2023-10-02' },\n                { title: '第1次一起睡觉💤', start: '2023-10-28' },\n                { title: '一起逛街🛒', start: '2023-12-03' },\n                { title: '第1次一起过生日🎂', start: '2023-12-31' },\n                { title: '一起跨年💏', start: '2024-01-01' },\n                { title: '一起看电影🎞🎞', start: '2024-12-30' }\n            ];\n            \n            const lovetimeline = document.getElementById('lovetimeline');\n            const startDate = new Date('2023-09-15');\n            \n            // 按日期排序\n            events.sort((a, b) => new Date(a.start) - new Date(b.start));\n            \n            events.forEach((event, index) => {\n                const eventDate = new Date(event.start);\n                const diffTime = eventDate - startDate;\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n                \n                const lovetimelineItem = document.createElement('div');\n                lovetimelineItem.className = 'lovetimeline-item';\n                \n                const icon = document.createElement('div');\n                icon.className = 'icon2';\n                icon.innerHTML = getEventIcon(event.title);\n                \n                const content = document.createElement('div');\n                content.className = 'lovetimeline-content';\n                \n                const date = document.createElement('span');\n                date.className = 'lovetimeline-date';\n                date.textContent = formatDate(eventDate);\n                \n                const title = document.createElement('h3');\n                title.className = 'lovetimeline-title';\n                title.textContent = event.title;\n                \n                const daysAfter = document.createElement('p');\n                daysAfter.className = 'days-after';\n                daysAfter.textContent = `恋爱第 ${diffDays} 天`;\n                \n                content.appendChild(date);\n                content.appendChild(title);\n                content.appendChild(daysAfter);\n                \n                lovetimelineItem.appendChild(icon);\n                lovetimelineItem.appendChild(content);\n                \n                lovetimeline.appendChild(lovetimelineItem);\n            });\n        }\n        \n        // 根据事件标题获取图标\n        function getEventIcon(title) {\n            if (title.includes('表白')) return '💘';\n            if (title.includes('牵手') || title.includes('拥抱')) return '💑';\n            if (title.includes('约会')) return '💞';\n            if (title.includes('海边')) return '🌊';\n            if (title.includes('睡觉')) return '🛌';\n            if (title.includes('逛街')) return '👫';\n            if (title.includes('电影')) return '🎬';\n            if (title.includes('生日')) return '🎂';\n            if (title.includes('跨年')) return '🎆';\n            return '❤️';\n        }\n        \n        // 格式化日期\n        function formatDate(date) {\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            return `${year}年${month}月${day}日`;\n        }\n        \n        // 检查密码\n        function checkPassword() {\n            const password = document.getElementById('password').value;\n            const errorMessage = document.getElementById('error-message');\n            \n            // 正确密码是恋爱纪念日 20230915\n            if (password === '20230915') {\n                // 隐藏密码容器\n                document.getElementById('password-container').style.display = 'none';\n                // 显示主内容\n                document.getElementById('main-content').style.display = 'block';\n                // 创建装饰元素\n                createDecorations();\n                // 开始计时器\n                setInterval(updateTimer, 1000);\n            } else {\n                errorMessage.textContent = '密码错误，请再试一次！';\n                // 添加抖动效果\n                document.getElementById('password').classList.add('shake');\n                setTimeout(() => {\n                    document.getElementById('password').classList.remove('shake');\n                }, 500);\n            }\n        }\n        \n        // 初始化\n        document.addEventListener('DOMContentLoaded', () => {\n            // 添加输入框的回车事件\n            document.getElementById('password').addEventListener('keypress', (e) => {\n                if (e.key === 'Enter') {\n                    checkPassword();\n                }\n            });\n            \n            // 渲染时间轴\n            renderlovetimeline();\n            \n            // 添加抖动动画\n            const style = document.createElement('style');\n            style.textContent = `\n                .shake {\n                    animation: shake 0.5s;\n                    border-color: #ff7675 !important;\n                }\n                \n                @keyframes shake {\n                    0% { transform: translateX(0); }\n                    25% { transform: translateX(-10px); }\n                    50% { transform: translateX(10px); }\n                    75% { transform: translateX(-10px); }\n                    100% { transform: translateX(0); }\n                }\n            `;\n            document.head.appendChild(style);\n        });\n    </script>\n</body>\n</html>\n","excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>❤️ 恋爱时光 ❤️</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n        }\n        \n        /* 装饰元素 */\n        .heart, .snowflake, .star {\n            position: absolute;\n            font-size: 24px;\n            animation: float 8s infinite ease-in-out;\n            z-index: 0;\n        }\n        \n        .heart { color: rgba(255, 0, 0, 0.5); }\n        .snowflake { color: rgba(173, 216, 230, 0.7); }\n        .star { color: rgba(255, 255, 0, 0.7); }\n        \n        /* 动画 */\n        @keyframes float {\n            0% { transform: translateY(0) rotate(0deg); opacity: 0; }\n            10% { opacity: 1; }\n            90% { opacity: 1; }\n            100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }\n        }\n        \n        @keyframes twinkle {\n            0% { opacity: 0.3; transform: scale(0.8); }\n            100% { opacity: 1; transform: scale(1.2); }\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes slideIn {\n            from { transform: translateY(50px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n        \n        /* 密码保护容器 */\n        .password-container {\n            background: rgba(255, 255, 255, 0.95);\n            padding: 50px;\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            max-width: 500px;\n            width: 90%;\n            z-index: 10;\n            position: relative;\n            animation: slideIn 1s ease-out;\n            backdrop-filter: blur(10px);\n        }\n        \n        .password-container h1 {\n            color: #e84393;\n            margin-bottom: 25px;\n            font-size: 2.8rem;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .password-container p {\n            color: #6c5ce7;\n            margin-bottom: 30px;\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .couple-names {\n            font-size: 1.8rem;\n            color: #ff6b6b;\n            font-weight: bold;\n            margin: 20px 0;\n            letter-spacing: 2px;\n        }\n        \n        .password-input {\n            position: relative;\n            margin: 30px 0;\n        }\n        \n        .password-input input {\n            width: 100%;\n            padding: 18px 20px;\n            border: 2px solid #e0e0e0;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            outline: none;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .password-input input:focus {\n            border-color: #6c5ce7;\n            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.2);\n        }\n        \n        .password-input i {\n            position: absolute;\n            right: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a29bfe;\n            cursor: pointer;\n        }\n        \n        .submit-btn {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border: none;\n            padding: 18px 40px;\n            border-radius: 15px;\n            font-size: 1.1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            width: 100%;\n            margin-top: 10px;\n        }\n        \n        .submit-btn:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);\n        }\n        \n        .hint {\n            margin-top: 25px;\n            color: #00b894;\n            font-size: 0.95rem;\n            font-style: italic;\n        }\n        \n        .error-message {\n            color: #ff7675;\n            margin-top: 15px;\n            font-weight: 500;\n            height: 20px;\n        }\n        \n        /* 主内容容器 */\n        .container {\n            max-width: 1200px;\n            margin: 40px auto;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            backdrop-filter: blur(10px);\n            position: relative;\n            overflow: hidden;\n            display: none;\n            animation: fadeIn 1s ease-out;\n        }\n        \n        .header {\n            text-align: center;\n            padding: 30px 20px;\n            margin-bottom: 30px;\n            position: relative;\n        }\n        \n        .header::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80%;\n            height: 2px;\n            background: linear-gradient(90deg, transparent, #ff6b6b, transparent);\n        }\n        \n        .title {\n            font-size: 3.5rem;\n            margin-bottom: 15px;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6c5ce7;\n            font-weight: 500;\n        }\n        \n        .start-date {\n            font-size: 1.1rem;\n            color: #00b894;\n            margin-top: 10px;\n            font-weight: 500;\n        }\n        \n        .counter-container {\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n            gap: 15px;\n            margin: 40px 0;\n            animation: pulse 2s infinite;\n        }\n        \n        .counter-box {\n            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n            color: white;\n            border-radius: 15px;\n            padding: 20px 15px;\n            min-width: 130px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n            transition: transform 0.3s ease;\n        }\n        \n        .counter-box:hover {\n            transform: translateY(-10px);\n        }\n        \n        .counter-value {\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin-bottom: 5px;\n            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n        }\n        \n        .counter-label {\n            font-size: 1rem;\n            opacity: 0.9;\n        }\n        \n        .events-section {\n            margin-top: 50px;\n            padding: 20px;\n        }\n        \n        .section-title {\n            text-align: center;\n            font-size: 2.2rem;\n            margin-bottom: 30px;\n            color: #e84393;\n            position: relative;\n            display: inline-block;\n            left: 50%;\n            transform: translateX(-50%);\n            padding: 0 20px;\n        }\n        \n        .section-title::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 100%;\n            height: 3px;\n            background: linear-gradient(90deg, #fd79a8, #a29bfe, #55efc4);\n            border-radius: 3px;\n        }\n        \n        .lovetimeline {\n            position: relative;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 40px 0;\n        }\n        \n        .lovetimeline::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            width: 4px;\n            background: linear-gradient(to bottom, #fd79a8, #a29bfe, #55efc4);\n            left: 50%;\n            margin-left: -2px;\n            border-radius: 10px;\n        }\n        \n        .lovetimeline-item {\n            position: relative;\n            margin-bottom: 50px;\n            width: 50%;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        .lovetimeline-item:nth-child(odd) {\n            left: 0;\n            padding-right: 70px;\n            text-align: right;\n        }\n        \n        .lovetimeline-item:nth-child(even) {\n            left: 50%;\n            padding-left: 70px;\n        }\n        \n        .lovetimeline-content {\n            background: white;\n            padding: 25px;\n            border-radius: 15px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            position: relative;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .lovetimeline-content:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            right: -15px;\n            border-style: solid;\n            border-width: 10px 0 10px 15px;\n            border-color: transparent transparent transparent white;\n        }\n        \n        .lovetimeline-item:nth-child(even) .lovetimeline-content::after {\n            content: '';\n            position: absolute;\n            top: 20px;\n            left: -15px;\n            border-style: solid;\n            border-width: 10px 15px 10px 0;\n            border-color: transparent white transparent transparent;\n        }\n        \n        .lovetimeline-date {\n            font-weight: 600;\n            color: #6c5ce7;\n            margin-bottom: 10px;\n            display: block;\n            font-size: 1.1rem;\n        }\n        \n        .lovetimeline-title {\n            font-size: 1.4rem;\n            margin-bottom: 10px;\n            color: #e84393;\n        }\n        \n        .days-after {\n            font-size: 0.95rem;\n            color: #00b894;\n            font-weight: 500;\n        }\n        \n        .icon2 {\n            position: absolute;\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(135deg, #fd79a8, #a29bfe);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        .lovetimeline-item:nth-child(odd) .icon2 {\n            right: -25px;\n            top: 0;\n        }\n        \n        .lovetimeline-item:nth-child(even) .icon2 {\n            left: -25px;\n            top: 0;\n        }\n        \n        .footer {\n            text-align: center;\n            padding: 30px;\n            margin-top: 30px;\n            color: #6c5ce7;\n            font-size: 1.1rem;\n            font-weight: 500;\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .password-container {\n                padding: 30px;\n            }\n            \n            .password-container h1 {\n                font-size: 2.2rem;\n            }\n            \n            .title {\n                font-size: 2.5rem;\n            }\n            \n            .counter-box {\n                min-width: 100px;\n                padding: 15px 10px;\n            }\n            \n            .counter-value {\n                font-size: 2rem;\n            }\n            \n            .lovetimeline::before {\n                left: 30px;\n            }\n            \n            .lovetimeline-item {\n                width: 100%;\n                padding-left: 80px !important;\n                padding-right: 20px !important;\n                left: 0 !important;\n                text-align: left !important;\n            }\n            \n            .lovetimeline-item:nth-child(even) .icon2,\n            .lovetimeline-item:nth-child(odd) .icon2 {\n                left: 5px;\n                right: auto;\n            }\n            \n            .lovetimeline-item:nth-child(even) .lovetimeline-content::after,\n            .lovetimeline-item:nth-child(odd) .lovetimeline-content::after {\n                left: -15px;\n                right: auto;\n                border-width: 10px 15px 10px 0;\n                border-color: transparent white transparent transparent;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .password-container {\n                padding: 20px;\n            }\n            \n            .password-container h1 {\n                font-size: 1.8rem;\n            }\n            \n            .couple-names {\n                font-size: 1.4rem;\n            }\n            \n            .title {\n                font-size: 2rem;\n            }\n            \n            .counter-box {\n                min-width: 80px;\n                padding: 12px 8px;\n            }\n            \n            .counter-value {\n                font-size: 1.6rem;\n            }\n            \n            .counter-label {\n                font-size: 0.85rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 密码保护界面 -->\n    <div class=\"password-container\" id=\"password-container\">\n        <h1>❤️ 恋爱时光 ❤️</h1>\n        <p>这是一份特别的恋爱记录，只属于我们两个人</p>\n        \n        <div class=\"couple-names\">\n            ❄️ 冯笑一 & 韩思宇 🌟\n        </div>\n        \n        <p>请输入密码查看我们的恋爱时光记录</p>\n        \n        <div class=\"password-input\">\n            <input type=\"password\" id=\"password\" placeholder=\"请输入我们的密码\" autocomplete=\"off\">\n            <i class=\"fas fa-lock\"></i>\n        </div>\n        \n        <button class=\"submit-btn\" onclick=\"checkPassword()\">\n            <i class=\"fas fa-heart\"></i> 进入恋爱时光\n        </button>\n        \n        <div class=\"error-message\" id=\"error-message\"></div>\n        \n        <div class=\"hint\">\n            提示：密码是(8位数字)\n        </div>\n    </div>\n    \n    <!-- 主内容容器 -->\n    <div class=\"container\" id=\"main-content\">\n        <div class=\"header\">\n            <h1 class=\"title\">❄️ 冯笑一 ❤️ 韩思宇 🌟</h1>\n            <p class=\"subtitle\">记录我们的美好时光</p>\n            <p class=\"start-date\">起始时间: 2023年9月15日</p>\n        </div>\n        \n        <div class=\"counter-container\">\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"years\">0</div>\n                <div class=\"counter-label\">年</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"months\">0</div>\n                <div class=\"counter-label\">月</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"days\">0</div>\n                <div class=\"counter-label\">天</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"hours\">0</div>\n                <div class=\"counter-label\">小时</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"minutes\">0</div>\n                <div class=\"counter-label\">分钟</div>\n            </div>\n            <div class=\"counter-box\">\n                <div class=\"counter-value\" id=\"seconds\">0</div>\n                <div class=\"counter-label\">秒</div>\n            </div>\n        </div>\n        \n        <div class=\"events-section\">\n            <h2 class=\"section-title\">我们的美好回忆</h2>\n            \n            <div class=\"lovetimeline\" id=\"lovetimeline\">\n                <!-- 时间轴内容将通过JS动态生成 -->\n            </div>\n        </div>\n        \n        <div class=\"footer\">\n            ❤️ 每一天都比前一天更爱你 ❤️\n        </div>\n    </div>\n\n    <script>\n        // 创建装饰元素\n        function createDecorations() {\n            const body = document.querySelector('body');\n            const types = ['heart', 'snowflake', 'star'];\n            const emojis = {\n                heart: ['❤️', '💖', '💗', '💘', '💝'],\n                snowflake: ['❄️', '🌨️', '🌬️'],\n                star: ['🌟', '⭐', '✨', '💫']\n            };\n            \n            for (let i = 0; i < 30; i++) {\n                const type = types[Math.floor(Math.random() * types.length)];\n                const deco = document.createElement('div');\n                deco.className = type;\n                \n                const emojiSet = emojis[type];\n                deco.textContent = emojiSet[Math.floor(Math.random() * emojiSet.length)];\n                \n                deco.style.left = `${Math.random() * 100}vw`;\n                deco.style.top = `${Math.random() * 100}vh`;\n                deco.style.animationDelay = `${Math.random() * 5}s`;\n                deco.style.fontSize = `${Math.random() * 20 + 15}px`;\n                \n                body.appendChild(deco);\n            }\n        }\n        \n        // 更新恋爱计时器\n        function updateTimer() {\n            const startDate = new Date('2023-09-15T00:00:00');\n            const now = new Date();\n            \n            const diff = now - startDate;\n            \n            const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n            const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30.44)) % 12;\n            const days = Math.floor(diff / (1000 * 60 * 60 * 24)) % 30;\n            const hours = Math.floor(diff / (1000 * 60 * 60)) % 24;\n            const minutes = Math.floor(diff / (1000 * 60)) % 60;\n            const seconds = Math.floor(diff / 1000) % 60;\n            \n            document.getElementById('years').textContent = years;\n            document.getElementById('months').textContent = months;\n            document.getElementById('days').textContent = days;\n            document.getElementById('hours').textContent = hours.toString().padStart(2, '0');\n            document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');\n            document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');\n        }\n        \n        // 渲染时间轴事件\n        function renderlovetimeline() {\n            const events = [\n                { title: '第1次表白👩‍❤️‍👨', start: '2023-09-15' },\n                { title: '第1次牵手🤝&拥抱💏', start: '2023-10-01' },\n                { title: '第1次约会🎉', start: '2023-10-01' },\n                { title: '第1次去海边🏖', start: '2023-10-02' },\n                { title: '第1次一起睡觉💤', start: '2023-10-28' },\n                { title: '一起逛街🛒', start: '2023-12-03' },\n                { title: '第1次一起过生日🎂', start: '2023-12-31' },\n                { title: '一起跨年💏', start: '2024-01-01' },\n                { title: '一起看电影🎞🎞', start: '2024-12-30' }\n            ];\n            \n            const lovetimeline = document.getElementById('lovetimeline');\n            const startDate = new Date('2023-09-15');\n            \n            // 按日期排序\n            events.sort((a, b) => new Date(a.start) - new Date(b.start));\n            \n            events.forEach((event, index) => {\n                const eventDate = new Date(event.start);\n                const diffTime = eventDate - startDate;\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n                \n                const lovetimelineItem = document.createElement('div');\n                lovetimelineItem.className = 'lovetimeline-item';\n                \n                const icon = document.createElement('div');\n                icon.className = 'icon2';\n                icon.innerHTML = getEventIcon(event.title);\n                \n                const content = document.createElement('div');\n                content.className = 'lovetimeline-content';\n                \n                const date = document.createElement('span');\n                date.className = 'lovetimeline-date';\n                date.textContent = formatDate(eventDate);\n                \n                const title = document.createElement('h3');\n                title.className = 'lovetimeline-title';\n                title.textContent = event.title;\n                \n                const daysAfter = document.createElement('p');\n                daysAfter.className = 'days-after';\n                daysAfter.textContent = `恋爱第 ${diffDays} 天`;\n                \n                content.appendChild(date);\n                content.appendChild(title);\n                content.appendChild(daysAfter);\n                \n                lovetimelineItem.appendChild(icon);\n                lovetimelineItem.appendChild(content);\n                \n                lovetimeline.appendChild(lovetimelineItem);\n            });\n        }\n        \n        // 根据事件标题获取图标\n        function getEventIcon(title) {\n            if (title.includes('表白')) return '💘';\n            if (title.includes('牵手') || title.includes('拥抱')) return '💑';\n            if (title.includes('约会')) return '💞';\n            if (title.includes('海边')) return '🌊';\n            if (title.includes('睡觉')) return '🛌';\n            if (title.includes('逛街')) return '👫';\n            if (title.includes('电影')) return '🎬';\n            if (title.includes('生日')) return '🎂';\n            if (title.includes('跨年')) return '🎆';\n            return '❤️';\n        }\n        \n        // 格式化日期\n        function formatDate(date) {\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            return `${year}年${month}月${day}日`;\n        }\n        \n        // 检查密码\n        function checkPassword() {\n            const password = document.getElementById('password').value;\n            const errorMessage = document.getElementById('error-message');\n            \n            // 正确密码是恋爱纪念日 20230915\n            if (password === '20230915') {\n                // 隐藏密码容器\n                document.getElementById('password-container').style.display = 'none';\n                // 显示主内容\n                document.getElementById('main-content').style.display = 'block';\n                // 创建装饰元素\n                createDecorations();\n                // 开始计时器\n                setInterval(updateTimer, 1000);\n            } else {\n                errorMessage.textContent = '密码错误，请再试一次！';\n                // 添加抖动效果\n                document.getElementById('password').classList.add('shake');\n                setTimeout(() => {\n                    document.getElementById('password').classList.remove('shake');\n                }, 500);\n            }\n        }\n        \n        // 初始化\n        document.addEventListener('DOMContentLoaded', () => {\n            // 添加输入框的回车事件\n            document.getElementById('password').addEventListener('keypress', (e) => {\n                if (e.key === 'Enter') {\n                    checkPassword();\n                }\n            });\n            \n            // 渲染时间轴\n            renderlovetimeline();\n            \n            // 添加抖动动画\n            const style = document.createElement('style');\n            style.textContent = `\n                .shake {\n                    animation: shake 0.5s;\n                    border-color: #ff7675 !important;\n                }\n                \n                @keyframes shake {\n                    0% { transform: translateX(0); }\n                    25% { transform: translateX(-10px); }\n                    50% { transform: translateX(10px); }\n                    75% { transform: translateX(-10px); }\n                    100% { transform: translateX(0); }\n                }\n            `;\n            document.head.appendChild(style);\n        });\n    </script>\n</body>\n</html>\n"},{"title":"号码归属地查询","date":"2025-07-04T04:19:00.000Z","cover":"https://pic4.zhimg.com/v2-b96eb3d286b92f5e388a7e1e94fb19f3_1440w.jpg","sponsor":true,"_content":"\n{% raw %}\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>手机归属地查询工具</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    \n    <style>\n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n            background: linear-gradient(135deg, #ff4b5c 0%, #ff9a9e 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            width: 100%;\n            margin: 0 auto;\n            display: flex;\n            flex-direction: column;\n            gap: 30px;\n        }\n        \n        header {\n            text-align: center;\n            padding: 20px;\n            color: white;\n            animation: fadeInDown 0.8s ease;\n        }\n        \n        header h1 {\n            font-size: 2.8rem;\n            margin-bottom: 10px;\n            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        header p {\n            font-size: 1.2rem;\n            max-width: 600px;\n            margin: 0 auto;\n            opacity: 0.9;\n        }\n        \n        .main-content {\n            display: flex;\n            gap: 30px;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        \n        .query-card {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInLeft 0.8s ease;\n            transition: transform 0.3s ease;\n        }\n        \n        .query-card:hover {\n            transform: translateY(-10px);\n        }\n        \n        .card-title {\n            text-align: center;\n            margin-bottom: 30px;\n            color: #e91e63;\n            font-size: 1.8rem;\n            position: relative;\n            padding-bottom: 15px;\n        }\n        \n        .card-title::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(to right, #ff4b5c, #e91e63);\n            border-radius: 2px;\n        }\n        \n        .input-group {\n            position: relative;\n            margin-bottom: 30px;\n            /* 确保父容器宽度设置正确，例如设置一个宽度或者继承父级宽度 */\n            width: 100%; /* 添加这一行确保宽度约束 */\n        }\n\n        .input-group i {\n            position: absolute;\n            left: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #e91e63;\n            font-size: 22px;\n            z-index: 1; /* 确保图标在输入框之上 */\n        }\n\n        .input-group input {\n            box-sizing: border-box; /* 关键修复 */\n            width: 100%;\n            padding: 18px 18px 18px 50px; /* 上 右 下 左，左侧内边距调整为50px */\n            cursor: pointer;\n            letter-spacing: 1px;\n            position: relative;\n            overflow: hidden;\n            font-size: 18px;\n            border: 2px solid #f8bbd0;\n            border-radius: 12px;\n            outline: none;\n            transition: all 0.3s ease;\n            background: #fff;\n            color: #333;\n        }\n\n        .input-group input:focus {\n            border-color: #e91e63;\n            box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.2);\n        }\n        \n        .btn-query {\n            width: 100%;\n            padding: 18px;\n            background: linear-gradient(to right, #e91e63, #ff4b5c);\n            border: none;\n            border-radius: 12px;\n            color: white;\n            font-size: 18px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            letter-spacing: 1px;\n            box-shadow: 0 5px 15px rgba(233, 30, 99, 0.4);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .btn-query:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(233, 30, 99, 0.6);\n        }\n        \n        .btn-query:active {\n            transform: translateY(1px);\n        }\n        \n        .btn-query::after {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -60%;\n            width: 40%;\n            height: 200%;\n            background: rgba(255, 255, 255, 0.2);\n            transform: rotate(30deg);\n            transition: all 0.6s;\n        }\n        \n        .btn-query:hover::after {\n            left: 120%;\n        }\n        \n        .result-container {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInRight 0.8s ease;\n            display: none;\n        }\n        \n        .result-container.active {\n            display: block;\n        }\n        \n        .result-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #f8bbd0;\n        }\n        \n        .result-header i {\n            font-size: 28px;\n            color: #e91e63;\n            margin-right: 15px;\n        }\n        \n        .result-header h2 {\n            color: #e91e63;\n            font-size: 1.8rem;\n            font-weight: 600;\n        }\n        \n        .result-details {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .info-card {\n            background: linear-gradient(135deg, #fff0f5 0%, #ffeef3 100%);\n            border-radius: 15px;\n            padding: 25px 20px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n            transition: all 0.3s ease;\n            border: 1px solid #ffdbe6;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .info-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);\n        }\n        \n        .info-card::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 5px;\n            height: 100%;\n            background: linear-gradient(to bottom, #e91e63, #ff4b5c);\n        }\n        \n        .info-card h3 {\n            color: #e91e63;\n            font-size: 16px;\n            margin-bottom: 10px;\n            font-weight: 600;\n            opacity: 0.8;\n        }\n        \n        .info-card p {\n            color: #d81b60;\n            font-size: 20px;\n            font-weight: 700;\n        }\n        \n        .spinner {\n            display: none;\n            text-align: center;\n            margin: 30px 0;\n        }\n        \n        .spinner i {\n            font-size: 50px;\n            color: #e91e63;\n            animation: spin 1.5s linear infinite;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        .error-message {\n            display: none;\n            background: #ffebee;\n            color: #c62828;\n            padding: 18px;\n            border-radius: 12px;\n            margin-top: 20px;\n            text-align: center;\n            font-weight: 600;\n            border-left: 4px solid #c62828;\n        }\n        \n        .history-section {\n            margin-top: 30px;\n            padding-top: 25px;\n            border-top: 2px dashed #f8bbd0;\n        }\n        \n        .history-section h3 {\n            color: #e91e63;\n            margin-bottom: 15px;\n            font-size: 1.3rem;\n        }\n        \n        .history-list {\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        \n        .history-item {\n            background: #fff0f5;\n            padding: 12px 15px;\n            border-radius: 10px;\n            margin-bottom: 10px;\n            display: flex;\n            justify-content: space-between;\n            border: 1px solid #ffdbe6;\n        }\n        \n        .history-phone {\n            font-weight: 600;\n            color: #e91e63;\n        }\n        \n        .history-location {\n            color: #d81b60;\n        }\n        \n        footer {\n            text-align: center;\n            color: rgba(255, 255, 255, 0.85);\n            padding: 20px;\n            font-size: 1rem;\n            animation: fadeInUp 0.8s ease;\n        }\n        \n        /* 动画效果 */\n        @keyframes fadeInDown {\n            from {\n                opacity: 0;\n                transform: translateY(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInUp {\n            from {\n                opacity: 0;\n                transform: translateY(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInLeft {\n            from {\n                opacity: 0;\n                transform: translateX(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        @keyframes fadeInRight {\n            from {\n                opacity: 0;\n                transform: translateX(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .main-content {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .query-card, .result-container {\n                max-width: 100%;\n                padding: 30px 20px;\n            }\n            \n            header h1 {\n                font-size: 2.2rem;\n            }\n            \n            .result-details {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<bodydiv>\n    <div class=\"container\">\n        <header>\n            <h1><i class=\"fas fa-mobile-alt\"></i> 手机归属地查询</h1>\n            <p>精准查询手机号码归属地、运营商及地理位置信息</p>\n        </header>\n        \n        <div class=\"main-content\">\n            <div class=\"query-card\">\n                <h2 class=\"card-title\">查询手机归属地</h2>\n                \n                <div class=\"input-group\">\n                    <i class=\"fas fa-phone\"></i>\n                    <input type=\"tel\" id=\"phone-input\" placeholder=\"请输入11位手机号码\" maxlength=\"11\">\n                </div>\n                \n                <button class=\"btn-query\" id=\"query-btn\">\n                    <i class=\"fas fa-search\"></i> 立即查询\n                </button>\n                \n                <div class=\"spinner\" id=\"spinner\">\n                    <i class=\"fas fa-spinner\"></i>\n                </div>\n                \n                <div class=\"error-message\" id=\"error-msg\"></div>\n            </div>\n            \n            <div class=\"result-container\" id=\"result-container\">\n                <div class=\"result-header\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <h2>查询结果</h2>\n                </div>\n                \n                <div class=\"result-details\">\n                    <div class=\"info-card\">\n                        <h3>手机号码</h3>\n                        <p id=\"result-phone\">138****3800</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>运营商</h3>\n                        <p id=\"result-operator\">中国移动</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>省份</h3>\n                        <p id=\"result-province\">北京市</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>城市</h3>\n                        <p id=\"result-city\">北京市</p>\n                    </div>\n                </div>\n                \n                <div class=\"history-section\">\n                    <h3><i class=\"fas fa-history\"></i> 最近查询记录</h3>\n                    <div class=\"history-list\" id=\"history-list\">\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">138****5678</span>\n                            <span class=\"history-location\">北京·移动</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">159****1234</span>\n                            <span class=\"history-location\">上海·联通</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">186****9876</span>\n                            <span class=\"history-location\">广州·电信</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>© 2023 手机归属地查询工具 | 数据来源于360手机归属地API | 仅供查询参考</p>\n        </footer>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const phoneInput = document.getElementById('phone-input');\n            const queryBtn = document.getElementById('query-btn');\n            const resultContainer = document.getElementById('result-container');\n            const spinner = document.getElementById('spinner');\n            const errorMsg = document.getElementById('error-msg');\n            const resultPhone = document.getElementById('result-phone');\n            const resultOperator = document.getElementById('result-operator');\n            const resultProvince = document.getElementById('result-province');\n            const resultCity = document.getElementById('result-city');\n            const historyList = document.getElementById('history-list');\n            \n            // 存储查询历史\n            let queryHistory = [];\n            \n            // 输入框自动格式化\n            phoneInput.addEventListener('input', function() {\n                this.value = this.value.replace(/\\D/g, '');\n                if (this.value.length > 11) {\n                    this.value = this.value.slice(0, 11);\n                }\n            });\n            \n            // 查询按钮点击事件\n            queryBtn.addEventListener('click', function() {\n                const phone = phoneInput.value.trim();\n                \n                // 验证手机号\n                if (!phone) {\n                    showError('请输入手机号码');\n                    return;\n                }\n                \n                if (!/^1[3-9]\\d{9}$/.test(phone)) {\n                    showError('请输入有效的11位手机号码');\n                    return;\n                }\n                \n                // 开始查询\n                startQuery(phone);\n            });\n            \n            // 按Enter键查询\n            phoneInput.addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    queryBtn.click();\n                }\n            });\n            \n            // 开始查询\n            function startQuery(phone) {\n                // 显示加载动画\n                spinner.style.display = 'block';\n                resultContainer.classList.remove('active');\n                errorMsg.style.display = 'none';\n                \n                // JSONP 回调函数名（确保唯一性）\n                const callbackName = `jsonpCallback_${Date.now()}`;\n                \n                // 创建 script 元素\n                const script = document.createElement('script');\n                \n                // 设置 JSONP 请求\n                script.src = `https://cx.shouji.360.cn/phonearea.php?number=${phone}&callback=${callbackName}`;\n                \n                // 处理 JSONP 响应\n                window[callbackName] = function(data) {\n                    // 清理\n                    document.body.removeChild(script);\n                    delete window[callbackName];\n                    \n                    spinner.style.display = 'none';\n                    \n                    if (data.code === 0) {\n                        // 更新结果\n                        resultPhone.textContent = formatPhoneNumber(phone);\n                        \n                        const province = data.data.province || '未知';\n                        const city = data.data.city || '未知';\n                        let operator = data.data.sp || '未知';\n                        \n                        // 标准化运营商名称\n                        operator = operator.replace('中国', '');\n                        \n                        resultOperator.textContent = operator;\n                        resultProvince.textContent = province;\n                        resultCity.textContent = city;\n                        \n                        // 添加到查询历史\n                        addToHistory(phone, `${province}·${operator}`);\n                        \n                        // 显示结果\n                        resultContainer.classList.add('active');\n                    } else {\n                        showError('未查询到该号码信息，请重试');\n                    }\n                };\n            \n            // 显示错误信息\n            function showError(message) {\n                errorMsg.textContent = message;\n                errorMsg.style.display = 'block';\n                \n                // 3秒后自动隐藏错误信息\n                setTimeout(() => {\n                    errorMsg.style.display = 'none';\n                }, 3000);\n            }\n            \n            // 格式化手机号显示\n            function formatPhoneNumber(phone) {\n                return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1****$3');\n            }\n            \n            // 添加到查询历史\n            function addToHistory(phone, location) {\n                // 添加到历史数组\n                queryHistory.unshift({\n                    phone: phone,\n                    location: location,\n                    timestamp: new Date()\n                });\n                \n                // 只保留最近的5条记录\n                if (queryHistory.length > 5) {\n                    queryHistory.pop();\n                }\n                \n                // 更新历史列表\n                updateHistoryList();\n            }\n            \n            // 更新历史列表\n            function updateHistoryList() {\n                historyList.innerHTML = '';\n                \n                queryHistory.forEach(item => {\n                    const historyItem = document.createElement('div');\n                    historyItem.className = 'history-item';\n                    historyItem.innerHTML = `\n                        <span class=\"history-phone\">${formatPhoneNumber(item.phone)}</span>\n                        <span class=\"history-location\">${item.location}</span>\n                    `;\n                    historyList.appendChild(historyItem);\n                });\n            }\n            \n            // 页面加载时自动聚焦输入框\n            phoneInput.focus();\n            \n            // 添加一些示例历史记录\n            addToHistory('13800138000', '北京·移动');\n            addToHistory('15912345678', '上海·联通');\n            addToHistory('18698765432', '广州·电信');\n        });\n    </script>\n</bodydiv>\n</html>\n\n{% endraw %}","source":"_posts/shearchphone.md","raw":"title: 号码归属地查询\ndate: 2025-7-04 12:19:00\ntags:  [小程序, 工具, 应用]\ncover: https://pic4.zhimg.com/v2-b96eb3d286b92f5e388a7e1e94fb19f3_1440w.jpg\nsponsor: true # 是否展示赞助二维码？\ncategories: 技术分享,开源项目,工具\n---\n\n{% raw %}\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>手机归属地查询工具</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    \n    <style>\n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n            background: linear-gradient(135deg, #ff4b5c 0%, #ff9a9e 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            width: 100%;\n            margin: 0 auto;\n            display: flex;\n            flex-direction: column;\n            gap: 30px;\n        }\n        \n        header {\n            text-align: center;\n            padding: 20px;\n            color: white;\n            animation: fadeInDown 0.8s ease;\n        }\n        \n        header h1 {\n            font-size: 2.8rem;\n            margin-bottom: 10px;\n            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        header p {\n            font-size: 1.2rem;\n            max-width: 600px;\n            margin: 0 auto;\n            opacity: 0.9;\n        }\n        \n        .main-content {\n            display: flex;\n            gap: 30px;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        \n        .query-card {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInLeft 0.8s ease;\n            transition: transform 0.3s ease;\n        }\n        \n        .query-card:hover {\n            transform: translateY(-10px);\n        }\n        \n        .card-title {\n            text-align: center;\n            margin-bottom: 30px;\n            color: #e91e63;\n            font-size: 1.8rem;\n            position: relative;\n            padding-bottom: 15px;\n        }\n        \n        .card-title::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(to right, #ff4b5c, #e91e63);\n            border-radius: 2px;\n        }\n        \n        .input-group {\n            position: relative;\n            margin-bottom: 30px;\n            /* 确保父容器宽度设置正确，例如设置一个宽度或者继承父级宽度 */\n            width: 100%; /* 添加这一行确保宽度约束 */\n        }\n\n        .input-group i {\n            position: absolute;\n            left: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #e91e63;\n            font-size: 22px;\n            z-index: 1; /* 确保图标在输入框之上 */\n        }\n\n        .input-group input {\n            box-sizing: border-box; /* 关键修复 */\n            width: 100%;\n            padding: 18px 18px 18px 50px; /* 上 右 下 左，左侧内边距调整为50px */\n            cursor: pointer;\n            letter-spacing: 1px;\n            position: relative;\n            overflow: hidden;\n            font-size: 18px;\n            border: 2px solid #f8bbd0;\n            border-radius: 12px;\n            outline: none;\n            transition: all 0.3s ease;\n            background: #fff;\n            color: #333;\n        }\n\n        .input-group input:focus {\n            border-color: #e91e63;\n            box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.2);\n        }\n        \n        .btn-query {\n            width: 100%;\n            padding: 18px;\n            background: linear-gradient(to right, #e91e63, #ff4b5c);\n            border: none;\n            border-radius: 12px;\n            color: white;\n            font-size: 18px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            letter-spacing: 1px;\n            box-shadow: 0 5px 15px rgba(233, 30, 99, 0.4);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .btn-query:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(233, 30, 99, 0.6);\n        }\n        \n        .btn-query:active {\n            transform: translateY(1px);\n        }\n        \n        .btn-query::after {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -60%;\n            width: 40%;\n            height: 200%;\n            background: rgba(255, 255, 255, 0.2);\n            transform: rotate(30deg);\n            transition: all 0.6s;\n        }\n        \n        .btn-query:hover::after {\n            left: 120%;\n        }\n        \n        .result-container {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInRight 0.8s ease;\n            display: none;\n        }\n        \n        .result-container.active {\n            display: block;\n        }\n        \n        .result-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #f8bbd0;\n        }\n        \n        .result-header i {\n            font-size: 28px;\n            color: #e91e63;\n            margin-right: 15px;\n        }\n        \n        .result-header h2 {\n            color: #e91e63;\n            font-size: 1.8rem;\n            font-weight: 600;\n        }\n        \n        .result-details {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .info-card {\n            background: linear-gradient(135deg, #fff0f5 0%, #ffeef3 100%);\n            border-radius: 15px;\n            padding: 25px 20px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n            transition: all 0.3s ease;\n            border: 1px solid #ffdbe6;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .info-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);\n        }\n        \n        .info-card::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 5px;\n            height: 100%;\n            background: linear-gradient(to bottom, #e91e63, #ff4b5c);\n        }\n        \n        .info-card h3 {\n            color: #e91e63;\n            font-size: 16px;\n            margin-bottom: 10px;\n            font-weight: 600;\n            opacity: 0.8;\n        }\n        \n        .info-card p {\n            color: #d81b60;\n            font-size: 20px;\n            font-weight: 700;\n        }\n        \n        .spinner {\n            display: none;\n            text-align: center;\n            margin: 30px 0;\n        }\n        \n        .spinner i {\n            font-size: 50px;\n            color: #e91e63;\n            animation: spin 1.5s linear infinite;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        .error-message {\n            display: none;\n            background: #ffebee;\n            color: #c62828;\n            padding: 18px;\n            border-radius: 12px;\n            margin-top: 20px;\n            text-align: center;\n            font-weight: 600;\n            border-left: 4px solid #c62828;\n        }\n        \n        .history-section {\n            margin-top: 30px;\n            padding-top: 25px;\n            border-top: 2px dashed #f8bbd0;\n        }\n        \n        .history-section h3 {\n            color: #e91e63;\n            margin-bottom: 15px;\n            font-size: 1.3rem;\n        }\n        \n        .history-list {\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        \n        .history-item {\n            background: #fff0f5;\n            padding: 12px 15px;\n            border-radius: 10px;\n            margin-bottom: 10px;\n            display: flex;\n            justify-content: space-between;\n            border: 1px solid #ffdbe6;\n        }\n        \n        .history-phone {\n            font-weight: 600;\n            color: #e91e63;\n        }\n        \n        .history-location {\n            color: #d81b60;\n        }\n        \n        footer {\n            text-align: center;\n            color: rgba(255, 255, 255, 0.85);\n            padding: 20px;\n            font-size: 1rem;\n            animation: fadeInUp 0.8s ease;\n        }\n        \n        /* 动画效果 */\n        @keyframes fadeInDown {\n            from {\n                opacity: 0;\n                transform: translateY(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInUp {\n            from {\n                opacity: 0;\n                transform: translateY(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInLeft {\n            from {\n                opacity: 0;\n                transform: translateX(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        @keyframes fadeInRight {\n            from {\n                opacity: 0;\n                transform: translateX(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .main-content {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .query-card, .result-container {\n                max-width: 100%;\n                padding: 30px 20px;\n            }\n            \n            header h1 {\n                font-size: 2.2rem;\n            }\n            \n            .result-details {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<bodydiv>\n    <div class=\"container\">\n        <header>\n            <h1><i class=\"fas fa-mobile-alt\"></i> 手机归属地查询</h1>\n            <p>精准查询手机号码归属地、运营商及地理位置信息</p>\n        </header>\n        \n        <div class=\"main-content\">\n            <div class=\"query-card\">\n                <h2 class=\"card-title\">查询手机归属地</h2>\n                \n                <div class=\"input-group\">\n                    <i class=\"fas fa-phone\"></i>\n                    <input type=\"tel\" id=\"phone-input\" placeholder=\"请输入11位手机号码\" maxlength=\"11\">\n                </div>\n                \n                <button class=\"btn-query\" id=\"query-btn\">\n                    <i class=\"fas fa-search\"></i> 立即查询\n                </button>\n                \n                <div class=\"spinner\" id=\"spinner\">\n                    <i class=\"fas fa-spinner\"></i>\n                </div>\n                \n                <div class=\"error-message\" id=\"error-msg\"></div>\n            </div>\n            \n            <div class=\"result-container\" id=\"result-container\">\n                <div class=\"result-header\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <h2>查询结果</h2>\n                </div>\n                \n                <div class=\"result-details\">\n                    <div class=\"info-card\">\n                        <h3>手机号码</h3>\n                        <p id=\"result-phone\">138****3800</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>运营商</h3>\n                        <p id=\"result-operator\">中国移动</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>省份</h3>\n                        <p id=\"result-province\">北京市</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>城市</h3>\n                        <p id=\"result-city\">北京市</p>\n                    </div>\n                </div>\n                \n                <div class=\"history-section\">\n                    <h3><i class=\"fas fa-history\"></i> 最近查询记录</h3>\n                    <div class=\"history-list\" id=\"history-list\">\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">138****5678</span>\n                            <span class=\"history-location\">北京·移动</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">159****1234</span>\n                            <span class=\"history-location\">上海·联通</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">186****9876</span>\n                            <span class=\"history-location\">广州·电信</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>© 2023 手机归属地查询工具 | 数据来源于360手机归属地API | 仅供查询参考</p>\n        </footer>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const phoneInput = document.getElementById('phone-input');\n            const queryBtn = document.getElementById('query-btn');\n            const resultContainer = document.getElementById('result-container');\n            const spinner = document.getElementById('spinner');\n            const errorMsg = document.getElementById('error-msg');\n            const resultPhone = document.getElementById('result-phone');\n            const resultOperator = document.getElementById('result-operator');\n            const resultProvince = document.getElementById('result-province');\n            const resultCity = document.getElementById('result-city');\n            const historyList = document.getElementById('history-list');\n            \n            // 存储查询历史\n            let queryHistory = [];\n            \n            // 输入框自动格式化\n            phoneInput.addEventListener('input', function() {\n                this.value = this.value.replace(/\\D/g, '');\n                if (this.value.length > 11) {\n                    this.value = this.value.slice(0, 11);\n                }\n            });\n            \n            // 查询按钮点击事件\n            queryBtn.addEventListener('click', function() {\n                const phone = phoneInput.value.trim();\n                \n                // 验证手机号\n                if (!phone) {\n                    showError('请输入手机号码');\n                    return;\n                }\n                \n                if (!/^1[3-9]\\d{9}$/.test(phone)) {\n                    showError('请输入有效的11位手机号码');\n                    return;\n                }\n                \n                // 开始查询\n                startQuery(phone);\n            });\n            \n            // 按Enter键查询\n            phoneInput.addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    queryBtn.click();\n                }\n            });\n            \n            // 开始查询\n            function startQuery(phone) {\n                // 显示加载动画\n                spinner.style.display = 'block';\n                resultContainer.classList.remove('active');\n                errorMsg.style.display = 'none';\n                \n                // JSONP 回调函数名（确保唯一性）\n                const callbackName = `jsonpCallback_${Date.now()}`;\n                \n                // 创建 script 元素\n                const script = document.createElement('script');\n                \n                // 设置 JSONP 请求\n                script.src = `https://cx.shouji.360.cn/phonearea.php?number=${phone}&callback=${callbackName}`;\n                \n                // 处理 JSONP 响应\n                window[callbackName] = function(data) {\n                    // 清理\n                    document.body.removeChild(script);\n                    delete window[callbackName];\n                    \n                    spinner.style.display = 'none';\n                    \n                    if (data.code === 0) {\n                        // 更新结果\n                        resultPhone.textContent = formatPhoneNumber(phone);\n                        \n                        const province = data.data.province || '未知';\n                        const city = data.data.city || '未知';\n                        let operator = data.data.sp || '未知';\n                        \n                        // 标准化运营商名称\n                        operator = operator.replace('中国', '');\n                        \n                        resultOperator.textContent = operator;\n                        resultProvince.textContent = province;\n                        resultCity.textContent = city;\n                        \n                        // 添加到查询历史\n                        addToHistory(phone, `${province}·${operator}`);\n                        \n                        // 显示结果\n                        resultContainer.classList.add('active');\n                    } else {\n                        showError('未查询到该号码信息，请重试');\n                    }\n                };\n            \n            // 显示错误信息\n            function showError(message) {\n                errorMsg.textContent = message;\n                errorMsg.style.display = 'block';\n                \n                // 3秒后自动隐藏错误信息\n                setTimeout(() => {\n                    errorMsg.style.display = 'none';\n                }, 3000);\n            }\n            \n            // 格式化手机号显示\n            function formatPhoneNumber(phone) {\n                return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1****$3');\n            }\n            \n            // 添加到查询历史\n            function addToHistory(phone, location) {\n                // 添加到历史数组\n                queryHistory.unshift({\n                    phone: phone,\n                    location: location,\n                    timestamp: new Date()\n                });\n                \n                // 只保留最近的5条记录\n                if (queryHistory.length > 5) {\n                    queryHistory.pop();\n                }\n                \n                // 更新历史列表\n                updateHistoryList();\n            }\n            \n            // 更新历史列表\n            function updateHistoryList() {\n                historyList.innerHTML = '';\n                \n                queryHistory.forEach(item => {\n                    const historyItem = document.createElement('div');\n                    historyItem.className = 'history-item';\n                    historyItem.innerHTML = `\n                        <span class=\"history-phone\">${formatPhoneNumber(item.phone)}</span>\n                        <span class=\"history-location\">${item.location}</span>\n                    `;\n                    historyList.appendChild(historyItem);\n                });\n            }\n            \n            // 页面加载时自动聚焦输入框\n            phoneInput.focus();\n            \n            // 添加一些示例历史记录\n            addToHistory('13800138000', '北京·移动');\n            addToHistory('15912345678', '上海·联通');\n            addToHistory('18698765432', '广州·电信');\n        });\n    </script>\n</bodydiv>\n</html>\n\n{% endraw %}","slug":"shearchphone","published":1,"updated":"2025-07-16T06:59:59.505Z","comments":1,"layout":"post","photos":[],"_id":"cmd71t80x000w3cw69xfecn7e","content":"\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>手机归属地查询工具</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    \n    <style>\n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n            background: linear-gradient(135deg, #ff4b5c 0%, #ff9a9e 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            width: 100%;\n            margin: 0 auto;\n            display: flex;\n            flex-direction: column;\n            gap: 30px;\n        }\n        \n        header {\n            text-align: center;\n            padding: 20px;\n            color: white;\n            animation: fadeInDown 0.8s ease;\n        }\n        \n        header h1 {\n            font-size: 2.8rem;\n            margin-bottom: 10px;\n            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        header p {\n            font-size: 1.2rem;\n            max-width: 600px;\n            margin: 0 auto;\n            opacity: 0.9;\n        }\n        \n        .main-content {\n            display: flex;\n            gap: 30px;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        \n        .query-card {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInLeft 0.8s ease;\n            transition: transform 0.3s ease;\n        }\n        \n        .query-card:hover {\n            transform: translateY(-10px);\n        }\n        \n        .card-title {\n            text-align: center;\n            margin-bottom: 30px;\n            color: #e91e63;\n            font-size: 1.8rem;\n            position: relative;\n            padding-bottom: 15px;\n        }\n        \n        .card-title::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(to right, #ff4b5c, #e91e63);\n            border-radius: 2px;\n        }\n        \n        .input-group {\n            position: relative;\n            margin-bottom: 30px;\n            /* 确保父容器宽度设置正确，例如设置一个宽度或者继承父级宽度 */\n            width: 100%; /* 添加这一行确保宽度约束 */\n        }\n\n        .input-group i {\n            position: absolute;\n            left: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #e91e63;\n            font-size: 22px;\n            z-index: 1; /* 确保图标在输入框之上 */\n        }\n\n        .input-group input {\n            box-sizing: border-box; /* 关键修复 */\n            width: 100%;\n            padding: 18px 18px 18px 50px; /* 上 右 下 左，左侧内边距调整为50px */\n            cursor: pointer;\n            letter-spacing: 1px;\n            position: relative;\n            overflow: hidden;\n            font-size: 18px;\n            border: 2px solid #f8bbd0;\n            border-radius: 12px;\n            outline: none;\n            transition: all 0.3s ease;\n            background: #fff;\n            color: #333;\n        }\n\n        .input-group input:focus {\n            border-color: #e91e63;\n            box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.2);\n        }\n        \n        .btn-query {\n            width: 100%;\n            padding: 18px;\n            background: linear-gradient(to right, #e91e63, #ff4b5c);\n            border: none;\n            border-radius: 12px;\n            color: white;\n            font-size: 18px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            letter-spacing: 1px;\n            box-shadow: 0 5px 15px rgba(233, 30, 99, 0.4);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .btn-query:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(233, 30, 99, 0.6);\n        }\n        \n        .btn-query:active {\n            transform: translateY(1px);\n        }\n        \n        .btn-query::after {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -60%;\n            width: 40%;\n            height: 200%;\n            background: rgba(255, 255, 255, 0.2);\n            transform: rotate(30deg);\n            transition: all 0.6s;\n        }\n        \n        .btn-query:hover::after {\n            left: 120%;\n        }\n        \n        .result-container {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInRight 0.8s ease;\n            display: none;\n        }\n        \n        .result-container.active {\n            display: block;\n        }\n        \n        .result-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #f8bbd0;\n        }\n        \n        .result-header i {\n            font-size: 28px;\n            color: #e91e63;\n            margin-right: 15px;\n        }\n        \n        .result-header h2 {\n            color: #e91e63;\n            font-size: 1.8rem;\n            font-weight: 600;\n        }\n        \n        .result-details {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .info-card {\n            background: linear-gradient(135deg, #fff0f5 0%, #ffeef3 100%);\n            border-radius: 15px;\n            padding: 25px 20px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n            transition: all 0.3s ease;\n            border: 1px solid #ffdbe6;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .info-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);\n        }\n        \n        .info-card::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 5px;\n            height: 100%;\n            background: linear-gradient(to bottom, #e91e63, #ff4b5c);\n        }\n        \n        .info-card h3 {\n            color: #e91e63;\n            font-size: 16px;\n            margin-bottom: 10px;\n            font-weight: 600;\n            opacity: 0.8;\n        }\n        \n        .info-card p {\n            color: #d81b60;\n            font-size: 20px;\n            font-weight: 700;\n        }\n        \n        .spinner {\n            display: none;\n            text-align: center;\n            margin: 30px 0;\n        }\n        \n        .spinner i {\n            font-size: 50px;\n            color: #e91e63;\n            animation: spin 1.5s linear infinite;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        .error-message {\n            display: none;\n            background: #ffebee;\n            color: #c62828;\n            padding: 18px;\n            border-radius: 12px;\n            margin-top: 20px;\n            text-align: center;\n            font-weight: 600;\n            border-left: 4px solid #c62828;\n        }\n        \n        .history-section {\n            margin-top: 30px;\n            padding-top: 25px;\n            border-top: 2px dashed #f8bbd0;\n        }\n        \n        .history-section h3 {\n            color: #e91e63;\n            margin-bottom: 15px;\n            font-size: 1.3rem;\n        }\n        \n        .history-list {\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        \n        .history-item {\n            background: #fff0f5;\n            padding: 12px 15px;\n            border-radius: 10px;\n            margin-bottom: 10px;\n            display: flex;\n            justify-content: space-between;\n            border: 1px solid #ffdbe6;\n        }\n        \n        .history-phone {\n            font-weight: 600;\n            color: #e91e63;\n        }\n        \n        .history-location {\n            color: #d81b60;\n        }\n        \n        footer {\n            text-align: center;\n            color: rgba(255, 255, 255, 0.85);\n            padding: 20px;\n            font-size: 1rem;\n            animation: fadeInUp 0.8s ease;\n        }\n        \n        /* 动画效果 */\n        @keyframes fadeInDown {\n            from {\n                opacity: 0;\n                transform: translateY(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInUp {\n            from {\n                opacity: 0;\n                transform: translateY(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInLeft {\n            from {\n                opacity: 0;\n                transform: translateX(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        @keyframes fadeInRight {\n            from {\n                opacity: 0;\n                transform: translateX(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .main-content {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .query-card, .result-container {\n                max-width: 100%;\n                padding: 30px 20px;\n            }\n            \n            header h1 {\n                font-size: 2.2rem;\n            }\n            \n            .result-details {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<bodydiv>\n    <div class=\"container\">\n        <header>\n            <h1><i class=\"fas fa-mobile-alt\"></i> 手机归属地查询</h1>\n            <p>精准查询手机号码归属地、运营商及地理位置信息</p>\n        </header>\n        \n        <div class=\"main-content\">\n            <div class=\"query-card\">\n                <h2 class=\"card-title\">查询手机归属地</h2>\n                \n                <div class=\"input-group\">\n                    <i class=\"fas fa-phone\"></i>\n                    <input type=\"tel\" id=\"phone-input\" placeholder=\"请输入11位手机号码\" maxlength=\"11\">\n                </div>\n                \n                <button class=\"btn-query\" id=\"query-btn\">\n                    <i class=\"fas fa-search\"></i> 立即查询\n                </button>\n                \n                <div class=\"spinner\" id=\"spinner\">\n                    <i class=\"fas fa-spinner\"></i>\n                </div>\n                \n                <div class=\"error-message\" id=\"error-msg\"></div>\n            </div>\n            \n            <div class=\"result-container\" id=\"result-container\">\n                <div class=\"result-header\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <h2>查询结果</h2>\n                </div>\n                \n                <div class=\"result-details\">\n                    <div class=\"info-card\">\n                        <h3>手机号码</h3>\n                        <p id=\"result-phone\">138****3800</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>运营商</h3>\n                        <p id=\"result-operator\">中国移动</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>省份</h3>\n                        <p id=\"result-province\">北京市</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>城市</h3>\n                        <p id=\"result-city\">北京市</p>\n                    </div>\n                </div>\n                \n                <div class=\"history-section\">\n                    <h3><i class=\"fas fa-history\"></i> 最近查询记录</h3>\n                    <div class=\"history-list\" id=\"history-list\">\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">138****5678</span>\n                            <span class=\"history-location\">北京·移动</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">159****1234</span>\n                            <span class=\"history-location\">上海·联通</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">186****9876</span>\n                            <span class=\"history-location\">广州·电信</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>© 2023 手机归属地查询工具 | 数据来源于360手机归属地API | 仅供查询参考</p>\n        </footer>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const phoneInput = document.getElementById('phone-input');\n            const queryBtn = document.getElementById('query-btn');\n            const resultContainer = document.getElementById('result-container');\n            const spinner = document.getElementById('spinner');\n            const errorMsg = document.getElementById('error-msg');\n            const resultPhone = document.getElementById('result-phone');\n            const resultOperator = document.getElementById('result-operator');\n            const resultProvince = document.getElementById('result-province');\n            const resultCity = document.getElementById('result-city');\n            const historyList = document.getElementById('history-list');\n            \n            // 存储查询历史\n            let queryHistory = [];\n            \n            // 输入框自动格式化\n            phoneInput.addEventListener('input', function() {\n                this.value = this.value.replace(/\\D/g, '');\n                if (this.value.length > 11) {\n                    this.value = this.value.slice(0, 11);\n                }\n            });\n            \n            // 查询按钮点击事件\n            queryBtn.addEventListener('click', function() {\n                const phone = phoneInput.value.trim();\n                \n                // 验证手机号\n                if (!phone) {\n                    showError('请输入手机号码');\n                    return;\n                }\n                \n                if (!/^1[3-9]\\d{9}$/.test(phone)) {\n                    showError('请输入有效的11位手机号码');\n                    return;\n                }\n                \n                // 开始查询\n                startQuery(phone);\n            });\n            \n            // 按Enter键查询\n            phoneInput.addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    queryBtn.click();\n                }\n            });\n            \n            // 开始查询\n            function startQuery(phone) {\n                // 显示加载动画\n                spinner.style.display = 'block';\n                resultContainer.classList.remove('active');\n                errorMsg.style.display = 'none';\n                \n                // JSONP 回调函数名（确保唯一性）\n                const callbackName = `jsonpCallback_${Date.now()}`;\n                \n                // 创建 script 元素\n                const script = document.createElement('script');\n                \n                // 设置 JSONP 请求\n                script.src = `https://cx.shouji.360.cn/phonearea.php?number=${phone}&callback=${callbackName}`;\n                \n                // 处理 JSONP 响应\n                window[callbackName] = function(data) {\n                    // 清理\n                    document.body.removeChild(script);\n                    delete window[callbackName];\n                    \n                    spinner.style.display = 'none';\n                    \n                    if (data.code === 0) {\n                        // 更新结果\n                        resultPhone.textContent = formatPhoneNumber(phone);\n                        \n                        const province = data.data.province || '未知';\n                        const city = data.data.city || '未知';\n                        let operator = data.data.sp || '未知';\n                        \n                        // 标准化运营商名称\n                        operator = operator.replace('中国', '');\n                        \n                        resultOperator.textContent = operator;\n                        resultProvince.textContent = province;\n                        resultCity.textContent = city;\n                        \n                        // 添加到查询历史\n                        addToHistory(phone, `${province}·${operator}`);\n                        \n                        // 显示结果\n                        resultContainer.classList.add('active');\n                    } else {\n                        showError('未查询到该号码信息，请重试');\n                    }\n                };\n            \n            // 显示错误信息\n            function showError(message) {\n                errorMsg.textContent = message;\n                errorMsg.style.display = 'block';\n                \n                // 3秒后自动隐藏错误信息\n                setTimeout(() => {\n                    errorMsg.style.display = 'none';\n                }, 3000);\n            }\n            \n            // 格式化手机号显示\n            function formatPhoneNumber(phone) {\n                return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1****$3');\n            }\n            \n            // 添加到查询历史\n            function addToHistory(phone, location) {\n                // 添加到历史数组\n                queryHistory.unshift({\n                    phone: phone,\n                    location: location,\n                    timestamp: new Date()\n                });\n                \n                // 只保留最近的5条记录\n                if (queryHistory.length > 5) {\n                    queryHistory.pop();\n                }\n                \n                // 更新历史列表\n                updateHistoryList();\n            }\n            \n            // 更新历史列表\n            function updateHistoryList() {\n                historyList.innerHTML = '';\n                \n                queryHistory.forEach(item => {\n                    const historyItem = document.createElement('div');\n                    historyItem.className = 'history-item';\n                    historyItem.innerHTML = `\n                        <span class=\"history-phone\">${formatPhoneNumber(item.phone)}</span>\n                        <span class=\"history-location\">${item.location}</span>\n                    `;\n                    historyList.appendChild(historyItem);\n                });\n            }\n            \n            // 页面加载时自动聚焦输入框\n            phoneInput.focus();\n            \n            // 添加一些示例历史记录\n            addToHistory('13800138000', '北京·移动');\n            addToHistory('15912345678', '上海·联通');\n            addToHistory('18698765432', '广州·电信');\n        });\n    </script>\n</bodydiv>\n</html>\n\n","excerpt":"","more":"\n\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>手机归属地查询工具</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    \n    <style>\n        bodydiv {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;\n            background: linear-gradient(135deg, #ff4b5c 0%, #ff9a9e 100%);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            width: 100%;\n            margin: 0 auto;\n            display: flex;\n            flex-direction: column;\n            gap: 30px;\n        }\n        \n        header {\n            text-align: center;\n            padding: 20px;\n            color: white;\n            animation: fadeInDown 0.8s ease;\n        }\n        \n        header h1 {\n            font-size: 2.8rem;\n            margin-bottom: 10px;\n            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n        }\n        \n        header p {\n            font-size: 1.2rem;\n            max-width: 600px;\n            margin: 0 auto;\n            opacity: 0.9;\n        }\n        \n        .main-content {\n            display: flex;\n            gap: 30px;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        \n        .query-card {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInLeft 0.8s ease;\n            transition: transform 0.3s ease;\n        }\n        \n        .query-card:hover {\n            transform: translateY(-10px);\n        }\n        \n        .card-title {\n            text-align: center;\n            margin-bottom: 30px;\n            color: #e91e63;\n            font-size: 1.8rem;\n            position: relative;\n            padding-bottom: 15px;\n        }\n        \n        .card-title::after {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 80px;\n            height: 4px;\n            background: linear-gradient(to right, #ff4b5c, #e91e63);\n            border-radius: 2px;\n        }\n        \n        .input-group {\n            position: relative;\n            margin-bottom: 30px;\n            /* 确保父容器宽度设置正确，例如设置一个宽度或者继承父级宽度 */\n            width: 100%; /* 添加这一行确保宽度约束 */\n        }\n\n        .input-group i {\n            position: absolute;\n            left: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #e91e63;\n            font-size: 22px;\n            z-index: 1; /* 确保图标在输入框之上 */\n        }\n\n        .input-group input {\n            box-sizing: border-box; /* 关键修复 */\n            width: 100%;\n            padding: 18px 18px 18px 50px; /* 上 右 下 左，左侧内边距调整为50px */\n            cursor: pointer;\n            letter-spacing: 1px;\n            position: relative;\n            overflow: hidden;\n            font-size: 18px;\n            border: 2px solid #f8bbd0;\n            border-radius: 12px;\n            outline: none;\n            transition: all 0.3s ease;\n            background: #fff;\n            color: #333;\n        }\n\n        .input-group input:focus {\n            border-color: #e91e63;\n            box-shadow: 0 0 0 3px rgba(233, 30, 99, 0.2);\n        }\n        \n        .btn-query {\n            width: 100%;\n            padding: 18px;\n            background: linear-gradient(to right, #e91e63, #ff4b5c);\n            border: none;\n            border-radius: 12px;\n            color: white;\n            font-size: 18px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            letter-spacing: 1px;\n            box-shadow: 0 5px 15px rgba(233, 30, 99, 0.4);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .btn-query:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(233, 30, 99, 0.6);\n        }\n        \n        .btn-query:active {\n            transform: translateY(1px);\n        }\n        \n        .btn-query::after {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -60%;\n            width: 40%;\n            height: 200%;\n            background: rgba(255, 255, 255, 0.2);\n            transform: rotate(30deg);\n            transition: all 0.6s;\n        }\n        \n        .btn-query:hover::after {\n            left: 120%;\n        }\n        \n        .result-container {\n            background: rgba(255, 255, 255, 0.95);\n            border-radius: 20px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n            padding: 40px;\n            width: 100%;\n            max-width: 500px;\n            animation: fadeInRight 0.8s ease;\n            display: none;\n        }\n        \n        .result-container.active {\n            display: block;\n        }\n        \n        .result-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #f8bbd0;\n        }\n        \n        .result-header i {\n            font-size: 28px;\n            color: #e91e63;\n            margin-right: 15px;\n        }\n        \n        .result-header h2 {\n            color: #e91e63;\n            font-size: 1.8rem;\n            font-weight: 600;\n        }\n        \n        .result-details {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .info-card {\n            background: linear-gradient(135deg, #fff0f5 0%, #ffeef3 100%);\n            border-radius: 15px;\n            padding: 25px 20px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n            transition: all 0.3s ease;\n            border: 1px solid #ffdbe6;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .info-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);\n        }\n        \n        .info-card::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 5px;\n            height: 100%;\n            background: linear-gradient(to bottom, #e91e63, #ff4b5c);\n        }\n        \n        .info-card h3 {\n            color: #e91e63;\n            font-size: 16px;\n            margin-bottom: 10px;\n            font-weight: 600;\n            opacity: 0.8;\n        }\n        \n        .info-card p {\n            color: #d81b60;\n            font-size: 20px;\n            font-weight: 700;\n        }\n        \n        .spinner {\n            display: none;\n            text-align: center;\n            margin: 30px 0;\n        }\n        \n        .spinner i {\n            font-size: 50px;\n            color: #e91e63;\n            animation: spin 1.5s linear infinite;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        .error-message {\n            display: none;\n            background: #ffebee;\n            color: #c62828;\n            padding: 18px;\n            border-radius: 12px;\n            margin-top: 20px;\n            text-align: center;\n            font-weight: 600;\n            border-left: 4px solid #c62828;\n        }\n        \n        .history-section {\n            margin-top: 30px;\n            padding-top: 25px;\n            border-top: 2px dashed #f8bbd0;\n        }\n        \n        .history-section h3 {\n            color: #e91e63;\n            margin-bottom: 15px;\n            font-size: 1.3rem;\n        }\n        \n        .history-list {\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        \n        .history-item {\n            background: #fff0f5;\n            padding: 12px 15px;\n            border-radius: 10px;\n            margin-bottom: 10px;\n            display: flex;\n            justify-content: space-between;\n            border: 1px solid #ffdbe6;\n        }\n        \n        .history-phone {\n            font-weight: 600;\n            color: #e91e63;\n        }\n        \n        .history-location {\n            color: #d81b60;\n        }\n        \n        footer {\n            text-align: center;\n            color: rgba(255, 255, 255, 0.85);\n            padding: 20px;\n            font-size: 1rem;\n            animation: fadeInUp 0.8s ease;\n        }\n        \n        /* 动画效果 */\n        @keyframes fadeInDown {\n            from {\n                opacity: 0;\n                transform: translateY(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInUp {\n            from {\n                opacity: 0;\n                transform: translateY(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        @keyframes fadeInLeft {\n            from {\n                opacity: 0;\n                transform: translateX(-30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        @keyframes fadeInRight {\n            from {\n                opacity: 0;\n                transform: translateX(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateX(0);\n            }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 768px) {\n            .main-content {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .query-card, .result-container {\n                max-width: 100%;\n                padding: 30px 20px;\n            }\n            \n            header h1 {\n                font-size: 2.2rem;\n            }\n            \n            .result-details {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<bodydiv>\n    <div class=\"container\">\n        <header>\n            <h1><i class=\"fas fa-mobile-alt\"></i> 手机归属地查询</h1>\n            <p>精准查询手机号码归属地、运营商及地理位置信息</p>\n        </header>\n        \n        <div class=\"main-content\">\n            <div class=\"query-card\">\n                <h2 class=\"card-title\">查询手机归属地</h2>\n                \n                <div class=\"input-group\">\n                    <i class=\"fas fa-phone\"></i>\n                    <input type=\"tel\" id=\"phone-input\" placeholder=\"请输入11位手机号码\" maxlength=\"11\">\n                </div>\n                \n                <button class=\"btn-query\" id=\"query-btn\">\n                    <i class=\"fas fa-search\"></i> 立即查询\n                </button>\n                \n                <div class=\"spinner\" id=\"spinner\">\n                    <i class=\"fas fa-spinner\"></i>\n                </div>\n                \n                <div class=\"error-message\" id=\"error-msg\"></div>\n            </div>\n            \n            <div class=\"result-container\" id=\"result-container\">\n                <div class=\"result-header\">\n                    <i class=\"fas fa-info-circle\"></i>\n                    <h2>查询结果</h2>\n                </div>\n                \n                <div class=\"result-details\">\n                    <div class=\"info-card\">\n                        <h3>手机号码</h3>\n                        <p id=\"result-phone\">138****3800</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>运营商</h3>\n                        <p id=\"result-operator\">中国移动</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>省份</h3>\n                        <p id=\"result-province\">北京市</p>\n                    </div>\n                    <div class=\"info-card\">\n                        <h3>城市</h3>\n                        <p id=\"result-city\">北京市</p>\n                    </div>\n                </div>\n                \n                <div class=\"history-section\">\n                    <h3><i class=\"fas fa-history\"></i> 最近查询记录</h3>\n                    <div class=\"history-list\" id=\"history-list\">\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">138****5678</span>\n                            <span class=\"history-location\">北京·移动</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">159****1234</span>\n                            <span class=\"history-location\">上海·联通</span>\n                        </div>\n                        <div class=\"history-item\">\n                            <span class=\"history-phone\">186****9876</span>\n                            <span class=\"history-location\">广州·电信</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>© 2023 手机归属地查询工具 | 数据来源于360手机归属地API | 仅供查询参考</p>\n        </footer>\n    </div>\n\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const phoneInput = document.getElementById('phone-input');\n            const queryBtn = document.getElementById('query-btn');\n            const resultContainer = document.getElementById('result-container');\n            const spinner = document.getElementById('spinner');\n            const errorMsg = document.getElementById('error-msg');\n            const resultPhone = document.getElementById('result-phone');\n            const resultOperator = document.getElementById('result-operator');\n            const resultProvince = document.getElementById('result-province');\n            const resultCity = document.getElementById('result-city');\n            const historyList = document.getElementById('history-list');\n            \n            // 存储查询历史\n            let queryHistory = [];\n            \n            // 输入框自动格式化\n            phoneInput.addEventListener('input', function() {\n                this.value = this.value.replace(/\\D/g, '');\n                if (this.value.length > 11) {\n                    this.value = this.value.slice(0, 11);\n                }\n            });\n            \n            // 查询按钮点击事件\n            queryBtn.addEventListener('click', function() {\n                const phone = phoneInput.value.trim();\n                \n                // 验证手机号\n                if (!phone) {\n                    showError('请输入手机号码');\n                    return;\n                }\n                \n                if (!/^1[3-9]\\d{9}$/.test(phone)) {\n                    showError('请输入有效的11位手机号码');\n                    return;\n                }\n                \n                // 开始查询\n                startQuery(phone);\n            });\n            \n            // 按Enter键查询\n            phoneInput.addEventListener('keypress', function(e) {\n                if (e.key === 'Enter') {\n                    queryBtn.click();\n                }\n            });\n            \n            // 开始查询\n            function startQuery(phone) {\n                // 显示加载动画\n                spinner.style.display = 'block';\n                resultContainer.classList.remove('active');\n                errorMsg.style.display = 'none';\n                \n                // JSONP 回调函数名（确保唯一性）\n                const callbackName = `jsonpCallback_${Date.now()}`;\n                \n                // 创建 script 元素\n                const script = document.createElement('script');\n                \n                // 设置 JSONP 请求\n                script.src = `https://cx.shouji.360.cn/phonearea.php?number=${phone}&callback=${callbackName}`;\n                \n                // 处理 JSONP 响应\n                window[callbackName] = function(data) {\n                    // 清理\n                    document.body.removeChild(script);\n                    delete window[callbackName];\n                    \n                    spinner.style.display = 'none';\n                    \n                    if (data.code === 0) {\n                        // 更新结果\n                        resultPhone.textContent = formatPhoneNumber(phone);\n                        \n                        const province = data.data.province || '未知';\n                        const city = data.data.city || '未知';\n                        let operator = data.data.sp || '未知';\n                        \n                        // 标准化运营商名称\n                        operator = operator.replace('中国', '');\n                        \n                        resultOperator.textContent = operator;\n                        resultProvince.textContent = province;\n                        resultCity.textContent = city;\n                        \n                        // 添加到查询历史\n                        addToHistory(phone, `${province}·${operator}`);\n                        \n                        // 显示结果\n                        resultContainer.classList.add('active');\n                    } else {\n                        showError('未查询到该号码信息，请重试');\n                    }\n                };\n            \n            // 显示错误信息\n            function showError(message) {\n                errorMsg.textContent = message;\n                errorMsg.style.display = 'block';\n                \n                // 3秒后自动隐藏错误信息\n                setTimeout(() => {\n                    errorMsg.style.display = 'none';\n                }, 3000);\n            }\n            \n            // 格式化手机号显示\n            function formatPhoneNumber(phone) {\n                return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1****$3');\n            }\n            \n            // 添加到查询历史\n            function addToHistory(phone, location) {\n                // 添加到历史数组\n                queryHistory.unshift({\n                    phone: phone,\n                    location: location,\n                    timestamp: new Date()\n                });\n                \n                // 只保留最近的5条记录\n                if (queryHistory.length > 5) {\n                    queryHistory.pop();\n                }\n                \n                // 更新历史列表\n                updateHistoryList();\n            }\n            \n            // 更新历史列表\n            function updateHistoryList() {\n                historyList.innerHTML = '';\n                \n                queryHistory.forEach(item => {\n                    const historyItem = document.createElement('div');\n                    historyItem.className = 'history-item';\n                    historyItem.innerHTML = `\n                        <span class=\"history-phone\">${formatPhoneNumber(item.phone)}</span>\n                        <span class=\"history-location\">${item.location}</span>\n                    `;\n                    historyList.appendChild(historyItem);\n                });\n            }\n            \n            // 页面加载时自动聚焦输入框\n            phoneInput.focus();\n            \n            // 添加一些示例历史记录\n            addToHistory('13800138000', '北京·移动');\n            addToHistory('15912345678', '上海·联通');\n            addToHistory('18698765432', '广州·电信');\n        });\n    </script>\n</bodydiv>\n</html>\n\n"},{"title":"情侣小游戏","date":"2025-07-13T09:49:32.000Z","cover":"https://upload-bbs.miyoushe.com/upload/2024/02/14/292762008/f0cb3676199b75980959b7d972a0771f_384819317620854048.jpg?x-oss-process=image/resize,s_600/quality,q_80/auto-orient,0/interlace,1/format,jpg","sponsor":false,"_content":"\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <title>宝贝专属心动小游戏乐园</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&family=Dancing+Script:wght@700&display=swap\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Ma Shan Zheng', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: #5a3e36;\n            min-height: 100vh;\n            overflow-x: hidden;\n            padding: 20px 10px;\n            position: relative;\n        }\n        .container {\n            max-width: 500px;\n            margin: 0 auto;\n            position: relative;\n            z-index: 10;\n        }\n        \n        header {\n            text-align: center;\n            padding: 15px 0 25px;\n            position: relative;\n        }\n        \n        .title {\n            font-size: 2.5rem;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n            margin-bottom: 5px;\n            letter-spacing: 3px;\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6d214f;\n            margin-bottom: 20px;\n        }\n        \n        .heart-divider {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin: 15px 0;\n        }\n        \n        .heart-divider i {\n            color: #e84393;\n            margin: 0 5px;\n            font-size: 1.2rem;\n        }\n        \n        /* 游戏卡片 */\n        .games-container {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .game-card {\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            padding: 20px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            backdrop-filter: blur(10px);\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .game-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .game-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            border-bottom: 2px dashed #f8a5c2;\n            padding-bottom: 10px;\n        }\n        \n        .game-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            font-size: 1.5rem;\n            color: white;\n            box-shadow: 0 4px 8px rgba(232, 67, 147, 0.3);\n        }\n        \n        .game-title {\n            font-size: 1.6rem;\n            color: #e84393;\n        }\n        \n        /* 心情日记 */\n        .mood-container {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n        \n        .mood-btn {\n            flex: 1;\n            min-width: 70px;\n            padding: 8px 5px;\n            border-radius: 15px;\n            border: none;\n            background: #f8a5c2;\n            color: white;\n            font-family: inherit;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .mood-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .mood-btn.selected {\n            background: #e84393;\n            box-shadow: 0 0 0 3px white, 0 0 0 6px #f8a5c2;\n        }\n        \n        .diary-input {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            margin: 10px 0;\n            min-height: 100px;\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .diary-input:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .save-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 15px auto 0;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .save-btn:hover {\n            transform: scale(1.05);\n            box-shadow: 0 7px 18px rgba(232, 67, 147, 0.4);\n        }\n        \n        /* 老虎机 */\n        .slot-machine {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin: 20px 0;\n        }\n        \n        .slot {\n            width: 70px;\n            height: 70px;\n            background: linear-gradient(45deg, #6a89cc, #4a69bd);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.1);\n            border: 3px solid #4a69bd;\n        }\n        \n        .pull-btn {\n            background: linear-gradient(45deg, #4a69bd, #1e3799);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 20px auto 10px;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(74, 105, 189, 0.3);\n        }\n        \n        .pull-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .slot-result {\n            text-align: center;\n            font-size: 1.3rem;\n            color: #1e3799;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        /* 在线空调 */\n        .ac-control {\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .ac-display {\n            width: 200px;\n            height: 200px;\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            border-radius: 20px;\n            margin: 0 auto 20px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .ac-display::before {\n            content: \"\";\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            background: repeating-linear-gradient(\n                transparent,\n                transparent 20px,\n                rgba(255, 255, 255, 0.1) 22px,\n                rgba(255, 255, 255, 0.1) 24px\n            );\n        }\n        \n        .temperature {\n            font-size: 4rem;\n            font-weight: bold;\n            margin: 10px 0;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n        }\n        \n        .ac-controls {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin-top: 15px;\n        }\n        \n        .ac-btn {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            border: none;\n            background: #0984e3;\n            color: white;\n            font-size: 1.5rem;\n            cursor: pointer;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n        \n        /* 星座运势 */\n        .horoscope {\n            text-align: center;\n        }\n        \n        .zodiac-select {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n            margin: 10px 0 20px;\n            color: #5a3e36;\n        }\n        \n        .zodiac-select:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .horoscope-result {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 15px;\n            margin-top: 15px;\n            min-height: 150px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border: 2px dashed #f8a5c2;\n        }\n        \n        .fortune-text {\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .lucky-stars {\n            font-size: 1.8rem;\n            margin: 15px 0;\n            color: gold;\n        }\n        \n        /* 更多游戏 */\n        .game-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin-top: 15px;\n        }\n        \n        .mini-game {\n            background: rgba(255, 255, 255, 0.8);\n            border-radius: 20px;\n            padding: 20px 15px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n            cursor: pointer;\n        }\n        \n        .mini-game:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n        \n        .mini-game i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .mini-game h3 {\n            font-size: 1.3rem;\n            color: #e84393;\n        }\n        \n        footer {\n            text-align: center;\n            padding: 20px 0 10px;\n            color: #6d214f;\n            font-size: 0.9rem;\n        }\n        \n        /* 装饰元素 */\n        .floating {\n            position: absolute;\n            z-index: 1;\n            animation: floating 3s infinite ease-in-out;\n        }\n        \n        .heart {\n            color: rgba(232, 67, 147, 0.4);\n            font-size: 2rem;\n        }\n        \n        @keyframes floating {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-15px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 480px) {\n            .title {\n                font-size: 2rem;\n            }\n            .game-title {\n                font-size: 1.4rem;\n            }\n            .slot {\n                width: 60px;\n                height: 60px;\n                font-size: 1.7rem;\n            }\n            .ac-display {\n                width: 180px;\n                height: 180px;\n            }\n        }\n        \n        /* 新增游戏样式 */\n        .game-detail {\n            display: none;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 20px;\n            padding: 20px;\n            margin-top: 20px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n        \n        .game-content {\n            padding: 15px;\n        }\n        \n        .back-btn {\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 1rem;\n            cursor: pointer;\n            margin-top: 15px;\n            display: block;\n            margin-left: auto;\n        }\n        \n        .love-calculator {\n            text-align: center;\n        }\n        \n        .name-inputs {\n            display: flex;\n            gap: 10px;\n            margin: 15px 0;\n        }\n        \n        .name-input {\n            flex: 1;\n            padding: 10px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .love-result {\n            margin: 20px 0;\n            font-size: 1.3rem;\n        }\n        \n        .love-percentage {\n            font-size: 3rem;\n            font-weight: bold;\n            color: #e84393;\n            margin: 10px 0;\n        }\n        \n        .love-message {\n            font-size: 1.2rem;\n            color: #6d214f;\n        }\n        \n                .memory-game-container {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            gap: 10px;\n            margin: 20px 0;\n            perspective: 1000px;\n        }\n\n        .memory-card {\n            width: 100%;\n            aspect-ratio: 1/1;\n            border-radius: 15px;\n            position: relative;\n            transform-style: preserve-3d;\n            cursor: pointer;\n            transition: transform 0.5s ease;\n        }\n\n        .memory-card-face {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 15px;\n            backface-visibility: hidden;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.8rem;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n\n        .memory-card-front {\n            background: linear-gradient(45deg, #a18cd1, #fbc2eb);\n        }\n\n        .memory-card-back {\n            background: linear-gradient(45deg, #ffecd2, #fcb69f);\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.flipped {\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.matched .memory-card-back {\n            box-shadow: 0 0 15px rgba(232, 67, 147, 0.5);\n            filter: brightness(1.1);\n        }\n\n        .memory-result {\n            text-align: center;\n            font-size: 1.3rem;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        .dessert-options {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .dessert-option {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 20px 10px;\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            border: 2px solid #f8a5c2;\n        }\n        \n        .dessert-option:hover {\n            transform: scale(1.05);\n            background: rgba(248, 165, 194, 0.2);\n        }\n        \n        .dessert-option i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .dessert-result {\n            text-align: center;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            min-height: 100px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n        }\n        \n        .kiss-counter {\n            font-size: 3rem;\n            color: #e84393;\n            margin: 10px 0;\n            font-weight: bold;\n        }\n        \n        .kiss-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            margin: 10px auto;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .kiss-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .fortune-cookie {\n            width: 150px;\n            height: 100px;\n            background: #f3e5ab;\n            border-radius: 0 50% 50% 50%;\n            margin: 0 auto 20px;\n            position: relative;\n            transform: rotate(45deg);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n        }\n        \n        .fortune-cookie:before {\n            content: \"\";\n            position: absolute;\n            width: 80%;\n            height: 20px;\n            background: #d4c690;\n            border-radius: 10px;\n            transform: rotate(-45deg);\n        }\n        \n        .fortune-cookie-text {\n            transform: rotate(-45deg);\n            font-size: 1.5rem;\n            color: #5a3e36;\n        }\n        \n        .fortune-message {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 1.2rem;\n            min-height: 80px;\n        }\n        \n        .compatibility-images {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0;\n        }\n        \n        .compatibility-image {\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            overflow: hidden;\n            background: linear-gradient(45deg, #ff9a9e, #fad0c4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n        }\n        \n        .compatibility-arrow {\n            display: flex;\n            align-items: center;\n            font-size: 2rem;\n            color: #e84393;\n        }\n    </style>\n</head>\n<body>\n    <!-- 飘动的心形装饰 -->\n    <!-- <div class=\"floating\" style=\"top: 5%; left: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"top: 15%; right: 15%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 10%; left: 20%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 15%; right: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div> -->\n    \n    <div class=\"container\">\n        <header>\n            <h1 class=\"title\">❤️ 心动小游戏乐园 ❤️</h1>\n            <p class=\"subtitle\">专属于韩思宇的甜蜜互动空间</p>\n            <div class=\"heart-divider\">\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n            </div>\n        </header>\n        \n        <div class=\"games-container\">\n            <!-- 心情日记本 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-book\"></i>\n                    </div>\n                    <h2 class=\"game-title\">心情日记本</h2>\n                </div>\n                <p>记录今天的点点滴滴，分享你的心情~</p>\n                \n                <div class=\"mood-container\">\n                    <button class=\"mood-btn\" data-mood=\"happy\">😊 开心</button>\n                    <button class=\"mood-btn\" data-mood=\"excited\">😆 兴奋</button>\n                    <button class=\"mood-btn\" data-mood=\"calm\">😌 平静</button>\n                    <button class=\"mood-btn\" data-mood=\"tired\">😴 疲惫</button>\n                </div>\n                \n                <textarea class=\"diary-input\" placeholder=\"今天发生了什么有趣的事情呢？\"></textarea>\n                \n                <button class=\"save-btn\" id=\"save-diary\">\n                    <i class=\"fas fa-save\"></i> 保存心情日记\n                </button>\n            </div>\n            \n            <!-- 老虎机抽奖 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-dice\"></i>\n                    </div>\n                    <h2 class=\"game-title\">幸运老虎机</h2>\n                </div>\n                <p>试试今天的运气，赢取特别奖励！</p>\n                \n                <div class=\"slot-machine\">\n                    <div class=\"slot\" id=\"slot1\">🍓</div>\n                    <div class=\"slot\" id=\"slot2\">🍒</div>\n                    <div class=\"slot\" id=\"slot3\">🍋</div>\n                </div>\n                \n                <div class=\"slot-result\" id=\"slot-result\">等待抽奖...</div>\n                \n                <button class=\"pull-btn\" id=\"pull-lever\">\n                    <i class=\"fas fa-hand-point-down\"></i> 拉杆抽奖\n                </button>\n            </div>\n            \n            <!-- 在线空调 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-wind\"></i>\n                    </div>\n                    <h2 class=\"game-title\">在线小空调</h2>\n                </div>\n                <p>热了吗？打开空调凉爽一下吧！</p>\n                \n                <div class=\"ac-control\">\n                    <div class=\"ac-display\">\n                        <div>当前温度</div>\n                        <div class=\"temperature\" id=\"temp\">26°C</div>\n                        <div>舒适模式</div>\n                    </div>\n                    \n                    <div class=\"ac-controls\">\n                        <button class=\"ac-btn\" id=\"temp-down\">－</button>\n                        <button class=\"ac-btn\" id=\"ac-power\">\n                            <i class=\"fas fa-power-off\"></i>\n                        </button>\n                        <button class=\"ac-btn\" id=\"temp-up\">＋</button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 星座运势 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-star\"></i>\n                    </div>\n                    <h2 class=\"game-title\">星座运势</h2>\n                </div>\n                <p>看看星星们今天想对你说什么？</p>\n                \n                <div class=\"horoscope\">\n                    <select class=\"zodiac-select\" id=\"zodiac\">\n                        <option value=\"\">选择你的星座</option>\n                        <option value=\"aries\">白羊座 ♈</option>\n                        <option value=\"taurus\">金牛座 ♉</option>\n                        <option value=\"gemini\">双子座 ♊</option>\n                        <option value=\"cancer\">巨蟹座 ♋</option>\n                        <option value=\"leo\">狮子座 ♌</option>\n                        <option value=\"virgo\">处女座 ♍</option>\n                        <option value=\"libra\">天秤座 ♎</option>\n                        <option value=\"scorpio\">天蝎座 ♏</option>\n                        <option value=\"sagittarius\">射手座 ♐</option>\n                        <option value=\"capricorn\">摩羯座 ♑</option>\n                        <option value=\"aquarius\">水瓶座 ♒</option>\n                        <option value=\"pisces\">双鱼座 ♓</option>\n                    </select>\n                    \n                    <button class=\"save-btn\" id=\"check-fortune\">\n                        <i class=\"fas fa-crystal-ball\"></i> 查看今日运势\n                    </button>\n                    \n                    <div class=\"horoscope-result\" id=\"fortune-result\">\n                        <p class=\"fortune-text\">选择星座查看今日运势</p>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 更多游戏 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-plus-circle\"></i>\n                    </div>\n                    <h2 class=\"game-title\">更多小游戏</h2>\n                </div>\n                <p>点击图标开启更多有趣游戏！</p>\n                \n                <div class=\"game-grid\" id=\"mini-game-grid\">\n                    <div class=\"mini-game\" data-game=\"love-calculator\">\n                        <i class=\"fas fa-heart\"></i>\n                        <h3>爱情计算器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"memory-game\">\n                        <i class=\"fas fa-brain\"></i>\n                        <h3>记忆挑战</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"dessert-fortune\">\n                        <i class=\"fas fa-cookie-bite\"></i>\n                        <h3>甜品占卜</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"kiss-counter\">\n                        <i class=\"fas fa-kiss-wink-heart\"></i>\n                        <h3>亲亲计数器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"fortune-cookie\">\n                        <i class=\"fas fa-cookie\"></i>\n                        <h3>幸运饼干</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"compatibility\">\n                        <i class=\"fas fa-people-arrows\"></i>\n                        <h3>默契测试</h3>\n                    </div>\n                </div>\n                \n                <!-- 爱情计算器 -->\n                <div id=\"love-calculator\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>❤️ 爱情计算器 ❤️</h3>\n                        <p>计算你们之间的爱情指数</p>\n                        \n                        <div class=\"name-inputs\">\n                            <input type=\"text\" class=\"name-input\" id=\"name1\" placeholder=\"你的名字\">\n                            <input type=\"text\" class=\"name-input\" id=\"name2\" placeholder=\"TA的名字\">\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"calculate-love\">\n                            <i class=\"fas fa-heart\"></i> 计算爱情指数\n                        </button>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"love-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"love-message\">输入名字查看你们的缘分</div>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 记忆挑战 -->\n                <div id=\"memory-game\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🧠 记忆挑战 🧠</h3>\n                        <p>记住卡片位置，找到所有配对！</p>\n                        \n                        <div class=\"memory-game-container\" id=\"memory-game-container\"></div>\n                        \n                        <div class=\"memory-result\" id=\"memory-result\">点击卡片开始游戏</div>\n                        \n                        <button class=\"save-btn\" id=\"restart-memory\">\n                            <i class=\"fas fa-redo\"></i> 重新开始\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 甜品占卜 -->\n                <div id=\"dessert-fortune\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍰 甜品占卜 🍰</h3>\n                        <p>选择你喜欢的甜品，看看今天的运势</p>\n                        \n                        <div class=\"dessert-options\">\n                            <div class=\"dessert-option\" data-dessert=\"cake\">\n                                <i class=\"fas fa-birthday-cake\"></i>\n                                <div>蛋糕</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"icecream\">\n                                <i class=\"fas fa-ice-cream\"></i>\n                                <div>冰淇淋</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"chocolate\">\n                                <i class=\"fas fa-candy-cane\"></i>\n                                <div>巧克力</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"cookie\">\n                                <i class=\"fas fa-cookie\"></i>\n                                <div>饼干</div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"dessert-result\" id=\"dessert-result\">\n                            请选择一种甜品进行占卜\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 亲亲计数器 -->\n                <div id=\"kiss-counter\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>💋 亲亲计数器 💋</h3>\n                        <p>记录你们今天的甜蜜亲亲次数</p>\n                        \n                        <div class=\"kiss-counter\" id=\"kiss-count\">0</div>\n                        \n                        <button class=\"kiss-btn\" id=\"add-kiss\">\n                            <i class=\"fas fa-kiss-wink-heart\"></i> 亲亲 +1\n                        </button>\n                        \n                        <button class=\"kiss-btn\" id=\"reset-kiss\">\n                            <i class=\"fas fa-redo\"></i> 重置计数\n                        </button>\n                        \n                        <div style=\"margin-top: 20px; font-size: 1.1rem;\">\n                            <p>今天也要多多亲亲哦 😘</p>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 幸运饼干 -->\n                <div id=\"fortune-cookie\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍪 幸运饼干 🍪</h3>\n                        <p>点击饼干获取今日专属幸运签</p>\n                        \n                        <div class=\"fortune-cookie\" id=\"fortune-cookie\">\n                            <div class=\"fortune-cookie-text\">?</div>\n                        </div>\n                        \n                        <div class=\"fortune-message\" id=\"fortune-message\">\n                            点击饼干获取你的幸运签\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 默契测试 -->\n                <div id=\"compatibility\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>👫 默契测试 👫</h3>\n                        <p>看看你们有多了解彼此</p>\n                        \n                        <div class=\"compatibility-images\">\n                            <div class=\"compatibility-image\">👩</div>\n                            <div class=\"compatibility-arrow\">❤️</div>\n                            <div class=\"compatibility-image\">👨</div>\n                        </div>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"compatibility-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"compatibility-message\">测试你们的默契程度</div>\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"test-compatibility\">\n                            <i class=\"fas fa-heart\"></i> 测试默契\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>❤️ 专属于你的心动空间 ❤️</p>\n            <p>每一天都因你而甜蜜 | 设计：冯笑一</p>\n        </footer>\n    </div>\n\n    <script>\n        // 心情日记功能\n        const moodButtons = document.querySelectorAll('.mood-btn');\n        const diaryInput = document.querySelector('.diary-input');\n        const saveDiaryBtn = document.getElementById('save-diary');\n        \n        let selectedMood = '';\n        \n        moodButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                moodButtons.forEach(btn => btn.classList.remove('selected'));\n                button.classList.add('selected');\n                selectedMood = button.dataset.mood;\n            });\n        });\n        \n        saveDiaryBtn.addEventListener('click', () => {\n            if (!selectedMood) {\n                alert('请先选择一种心情哦~');\n                return;\n            }\n            \n            if (diaryInput.value.trim() === '') {\n                alert('请写点今天的心情故事吧~');\n                return;\n            }\n            \n            // 这里实际应用中应该保存到本地存储或服务器\n            alert('心情日记已保存！\\n\\n心情: ' + \n                  document.querySelector('.mood-btn.selected').textContent + \n                  '\\n内容: ' + diaryInput.value);\n            \n            // 重置表单\n            moodButtons.forEach(btn => btn.classList.remove('selected'));\n            diaryInput.value = '';\n            selectedMood = '';\n        });\n        \n        // 老虎机功能\n        const slots = ['🍎', '🍊', '🍇', '🍓', '🍒', '🍋', '🍉', '🍑', '🍍', '🥝'];\n        const slotElements = [document.getElementById('slot1'), \n                            document.getElementById('slot2'), \n                            document.getElementById('slot3')];\n        const slotResult = document.getElementById('slot-result');\n        const pullLeverBtn = document.getElementById('pull-lever');\n        \n        function spinSlot(slotElement) {\n            let count = 0;\n            const maxSpins = 20 + Math.floor(Math.random() * 10);\n            const interval = setInterval(() => {\n                slotElement.textContent = slots[Math.floor(Math.random() * slots.length)];\n                count++;\n                if (count > maxSpins) {\n                    clearInterval(interval);\n                }\n            }, 100);\n        }\n        \n        pullLeverBtn.addEventListener('click', () => {\n            // 重置结果\n            slotResult.textContent = \"旋转中...\";\n            pullLeverBtn.disabled = true;\n            \n            // 旋转每个老虎机\n            slotElements.forEach(slot => spinSlot(slot));\n            \n            // 等待所有老虎机停止后显示结果\n            setTimeout(() => {\n                const results = [\n                    slotElements[0].textContent,\n                    slotElements[1].textContent,\n                    slotElements[2].textContent\n                ];\n                \n                // 检查是否中奖\n                if (results[0] === results[1] && results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎉 恭喜！大奖！获得甜蜜之吻 💋\";\n                } else if (results[0] === results[1] || results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎊 恭喜！小奖！获得爱的拥抱 🤗\";\n                } else {\n                    slotResult.textContent = \"😊 感谢参与！明天再来试试吧~\";\n                }\n                \n                pullLeverBtn.disabled = false;\n            }, 3000);\n        });\n        \n        // 在线空调功能\n        const tempDisplay = document.getElementById('temp');\n        const tempDownBtn = document.getElementById('temp-down');\n        const tempUpBtn = document.getElementById('temp-up');\n        const acPowerBtn = document.getElementById('ac-power');\n        \n        let currentTemp = 26;\n        let isPowerOn = true;\n        \n        function updateAC() {\n            tempDisplay.textContent = currentTemp + \"°C\";\n            acPowerBtn.innerHTML = isPowerOn ? '<i class=\"fas fa-power-off\"></i>' : '<i class=\"fas fa-power-off\" style=\"color:#ddd\"></i>';\n            acPowerBtn.style.background = isPowerOn ? \"#0984e3\" : \"#95afc0\";\n        }\n        \n        tempDownBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp > 16) {\n                currentTemp--;\n                updateAC();\n            }\n        });\n        \n        tempUpBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp < 30) {\n                currentTemp++;\n                updateAC();\n            }\n        });\n        \n        acPowerBtn.addEventListener('click', () => {\n            isPowerOn = !isPowerOn;\n            updateAC();\n        });\n        \n        // 初始化空调\n        updateAC();\n        \n        // 星座运势功能\n        const zodiacSelect = document.getElementById('zodiac');\n        const fortuneResult = document.getElementById('fortune-result');\n        const checkFortuneBtn = document.getElementById('check-fortune');\n        \n        const fortunes = [\n            \"今天会有意外惊喜！保持开放心态迎接新机会。\",\n            \"感情运势上升，适合表达心意或约会。\",\n            \"工作上有突破性进展，抓住机会展现能力。\",\n            \"注意健康管理，适当休息放松很重要。\",\n            \"财运亨通，但需谨慎处理投资决策。\",\n            \"人际关系运势上升，适合拓展社交圈。\",\n            \"今天适合独处思考，会有新的领悟。\",\n            \"可能会遇到旧友，重温美好回忆。\",\n            \"尝试新事物会带来意想不到的收获。\",\n            \"保持耐心，好事正在慢慢向你靠近。\"\n        ];\n        \n        const luckyStars = [\"⭐\", \"⭐⭐\", \"⭐⭐⭐\", \"⭐⭐⭐⭐\", \"⭐⭐⭐⭐⭐\"];\n        \n        checkFortuneBtn.addEventListener('click', () => {\n            if (!zodiacSelect.value) {\n                alert('请先选择你的星座哦~');\n                return;\n            }\n            \n            const zodiacName = zodiacSelect.options[zodiacSelect.selectedIndex].text;\n            const randomFortune = fortunes[Math.floor(Math.random() * fortunes.length)];\n            const randomStars = luckyStars[Math.floor(Math.random() * luckyStars.length)];\n            \n            fortuneResult.innerHTML = `\n                <h3>${zodiacName} 今日运势</h3>\n                <p class=\"fortune-text\">${randomFortune}</p>\n                <div class=\"lucky-stars\">幸运指数: ${randomStars}</div>\n                <p>${getZodiacTip(zodiacSelect.value)}</p>\n            `;\n        });\n        \n        function getZodiacTip(zodiac) {\n            const tips = {\n                aries: \"今日幸运色：红色，适合主动出击！\",\n                taurus: \"今日幸运色：绿色，享受美食会带来好运。\",\n                gemini: \"今日幸运色：黄色，多与人交流会带来机会。\",\n                cancer: \"今日幸运色：银色，家庭会给你温暖的力量。\",\n                leo: \"今日幸运色：金色，展现你的领导魅力吧！\",\n                virgo: \"今日幸运色：蓝色，注重细节会带来成功。\",\n                libra: \"今日幸运色：粉色，平衡是你今天的关键词。\",\n                scorpio: \"今日幸运色：紫色，直觉会引导你正确方向。\",\n                sagittarius: \"今日幸运色：橙色，冒险精神会带来惊喜。\",\n                capricorn: \"今日幸运色：棕色，务实的态度会得到回报。\",\n                aquarius: \"今日幸运色：青色，创新思维会解决难题。\",\n                pisces: \"今日幸运色：海蓝色，艺术会激发你的灵感。\"\n            };\n            \n            return tips[zodiac] || \"保持积极心态，今天会是美好的一天！\";\n        }\n        \n        // 新增游戏功能\n        const miniGames = document.querySelectorAll('.mini-game');\n        const gameDetails = document.querySelectorAll('.game-detail');\n        const backButtons = document.querySelectorAll('.back-btn');\n        \n        // 显示游戏详情\n        miniGames.forEach(game => {\n            game.addEventListener('click', () => {\n                const gameId = game.dataset.game;\n                document.getElementById('mini-game-grid').style.display = 'none';\n                document.getElementById(gameId).style.display = 'block';\n            });\n        });\n        \n        // 返回游戏列表\n        backButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                gameDetails.forEach(detail => {\n                    detail.style.display = 'none';\n                });\n                document.getElementById('mini-game-grid').style.display = 'grid';\n            });\n        });\n        \n        // 爱情计算器\n        const calculateLoveBtn = document.getElementById('calculate-love');\n        const lovePercentage = document.getElementById('love-percentage');\n        const loveMessage = document.getElementById('love-message');\n        \n        calculateLoveBtn.addEventListener('click', () => {\n            const name1 = document.getElementById('name1').value.trim();\n            const name2 = document.getElementById('name2').value.trim();\n            \n            if (!name1 || !name2) {\n                alert('请输入两个名字~');\n                return;\n            }\n            \n            // 生成随机爱情指数（60-100%）\n            const percentage = Math.floor(Math.random() * 41) + 60;\n            lovePercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                loveMessage.innerHTML = \"天作之合！你们是命中注定的一对 ❤️\";\n            } else if (percentage >= 75) {\n                loveMessage.innerHTML = \"非常般配！你们的爱情会越来越甜蜜 💕\";\n            } else {\n                loveMessage.innerHTML = \"有发展潜力！多相处会让感情升温 🌹\";\n            }\n        });\n        \n        // 记忆挑战游戏\n        // 记忆挑战游戏\n        const memoryContainer = document.getElementById('memory-game-container');\n        const memoryResult = document.getElementById('memory-result');\n        const restartMemoryBtn = document.getElementById('restart-memory');\n\n        const memorySymbols = ['❤️', '🌟', '🎁', '💋', '🌸', '🎈', '🍭', '🌈'];\n        let memoryCards = [];\n        let flippedCards = [];\n        let matchedPairs = 0;\n\n        function initMemoryGame() {\n            memoryContainer.innerHTML = '';\n            memoryCards = [...memorySymbols, ...memorySymbols];\n            flippedCards = [];\n            matchedPairs = 0;\n            memoryResult.textContent = \"点击卡片开始游戏\";\n\n            // 洗牌\n            for (let i = memoryCards.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [memoryCards[i], memoryCards[j]] = [memoryCards[j], memoryCards[i]];\n            }\n\n            // 创建卡片\n            memoryCards.forEach((symbol, index) => {\n                const card = document.createElement('div');\n                card.classList.add('memory-card');\n                card.dataset.index = index;\n                card.dataset.symbol = symbol;\n                \n                // 卡片正面（默认图标）\n                const front = document.createElement('div');\n                front.classList.add('memory-card-face', 'memory-card-front');\n                front.textContent = '❓'; // 默认图标\n                \n                // 卡片背面（实际图形）\n                const back = document.createElement('div');\n                back.classList.add('memory-card-face', 'memory-card-back');\n                back.textContent = symbol;\n                \n                card.appendChild(front);\n                card.appendChild(back);\n                card.addEventListener('click', flipMemoryCard);\n                memoryContainer.appendChild(card);\n            });\n        }\n\n        function flipMemoryCard() {\n            if (flippedCards.length < 2 && !this.classList.contains('flipped')) {\n                this.classList.add('flipped');\n                flippedCards.push(this);\n\n                if (flippedCards.length === 2) {\n                    setTimeout(checkMatch, 500);\n                }\n            }\n        }\n\n        function checkMatch() {\n            const card1 = flippedCards[0];\n            const card2 = flippedCards[1];\n\n            if (card1.dataset.symbol === card2.dataset.symbol) {\n                card1.classList.add('matched');\n                card2.classList.add('matched');\n                matchedPairs++;\n\n                if (matchedPairs === memorySymbols.length) {\n                    memoryResult.innerHTML = \"🎉 恭喜！你完成了挑战！\";\n                } else {\n                    memoryResult.textContent = `已匹配: ${matchedPairs}/${memorySymbols.length}`;\n                }\n            } else {\n                // 翻回正面时移除flipped类\n                setTimeout(() => {\n                    card1.classList.remove('flipped');\n                    card2.classList.remove('flipped');\n                }, 500);\n            }\n\n            flippedCards = [];\n        }\n\n        // 初始化游戏\n        restartMemoryBtn.addEventListener('click', initMemoryGame);\n        //initMemoryGame();\n        \n        // 甜品占卜\n        const dessertOptions = document.querySelectorAll('.dessert-option');\n        const dessertResult = document.getElementById('dessert-result');\n        \n        dessertOptions.forEach(option => {\n            option.addEventListener('click', () => {\n                const dessert = option.dataset.dessert;\n                let message = \"\";\n                \n                switch (dessert) {\n                    case 'cake':\n                        message = \"🍰 蛋糕代表甜蜜生活！今天会有令人开心的小惊喜，记得留意身边的美好事物哦~\";\n                        break;\n                    case 'icecream':\n                        message = \"🍦 冰淇淋代表清凉心情！今天适合放松自己，做些让自己开心的事情，别太劳累~\";\n                        break;\n                    case 'chocolate':\n                        message = \"🍫 巧克力代表浪漫爱情！今天感情运势上升，适合表达心意或安排甜蜜约会~\";\n                        break;\n                    case 'cookie':\n                        message = \"🍪 饼干代表温馨日常！今天适合与家人朋友共度美好时光，享受简单的小幸福~\";\n                        break;\n                }\n                \n                dessertResult.innerHTML = message;\n            });\n        });\n        \n        // 亲亲计数器\n        const kissCount = document.getElementById('kiss-count');\n        const addKissBtn = document.getElementById('add-kiss');\n        const resetKissBtn = document.getElementById('reset-kiss');\n        let kissCounter = 0;\n        \n        addKissBtn.addEventListener('click', () => {\n            kissCounter++;\n            kissCount.textContent = kissCounter;\n            \n            // 添加动画效果\n            kissCount.style.transform = 'scale(1.2)';\n            setTimeout(() => {\n                kissCount.style.transform = 'scale(1)';\n            }, 300);\n        });\n        \n        resetKissBtn.addEventListener('click', () => {\n            kissCounter = 0;\n            kissCount.textContent = kissCounter;\n        });\n        \n        // 幸运饼干\n        const fortuneCookie = document.querySelector('.fortune-cookie');\n        const fortuneMessage = document.getElementById('fortune-message');\n        \n        const fortuneMessages = [\n            \"今天会有意想不到的好运降临！\",\n            \"微笑是最好的化妆品，今天多笑笑吧~\",\n            \"你的善良会带来美好的回报\",\n            \"勇敢表达你的心意，会有惊喜结果\",\n            \"小小的举动会带来大大的幸福\",\n            \"今天适合尝试新事物，会有意外收获\",\n            \"你的魅力值今天爆表！\",\n            \"放松心情，享受当下的美好时光\",\n            \"给爱的人一个拥抱，温暖彼此\",\n            \"美好的事情正在向你走来\"\n        ];\n        \n        fortuneCookie.addEventListener('click', () => {\n            const randomIndex = Math.floor(Math.random() * fortuneMessages.length);\n            fortuneMessage.textContent = fortuneMessages[randomIndex];\n            \n            // 添加动画效果\n            fortuneCookie.style.transform = 'rotate(10deg)';\n            setTimeout(() => {\n                fortuneCookie.style.transform = 'rotate(0deg)';\n            }, 200);\n        });\n        \n        // 默契测试\n        const testCompatibilityBtn = document.getElementById('test-compatibility');\n        const compatibilityPercentage = document.getElementById('compatibility-percentage');\n        const compatibilityMessage = document.getElementById('compatibility-message');\n        \n        testCompatibilityBtn.addEventListener('click', () => {\n            // 生成随机默契指数（70-100%）\n            const percentage = Math.floor(Math.random() * 31) + 70;\n            compatibilityPercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                compatibilityMessage.innerHTML = \"心灵相通！你们真是天生一对 ❤️\";\n            } else if (percentage >= 80) {\n                compatibilityMessage.innerHTML = \"非常默契！彼此了解程度很高 💕\";\n            } else {\n                compatibilityMessage.innerHTML = \"默契不错！多交流会更加了解彼此 🌹\";\n            }\n        });\n        \n        // 初始化记忆游戏\n        initMemoryGame();\n    </script>\n</body>\n</html>\n{% endraw %}\n\n\n![360X360/bg_xinhai_360.png](https://tc.z.wiki/autoupload/f/pCwQSduTrK74xeM6D4jdFJO7Q2ZCk-TPg9YW4bt5tjGyl5f0KlZfm6UsKj-HyTuv/20250715/QOWX/360X360/bg_xinhai_360.png)","source":"_posts/love.md","raw":"title: 情侣小游戏\ndate: 2025-07-13 17:49:32\ncover: https://upload-bbs.miyoushe.com/upload/2024/02/14/292762008/f0cb3676199b75980959b7d972a0771f_384819317620854048.jpg?x-oss-process=image/resize,s_600/quality,q_80/auto-orient,0/interlace,1/format,jpg\nsponsor: false # 是否展示赞助二维码？\ncategories: 技术分享,开源项目,工具\n---\n\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <title>宝贝专属心动小游戏乐园</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&family=Dancing+Script:wght@700&display=swap\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Ma Shan Zheng', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: #5a3e36;\n            min-height: 100vh;\n            overflow-x: hidden;\n            padding: 20px 10px;\n            position: relative;\n        }\n        .container {\n            max-width: 500px;\n            margin: 0 auto;\n            position: relative;\n            z-index: 10;\n        }\n        \n        header {\n            text-align: center;\n            padding: 15px 0 25px;\n            position: relative;\n        }\n        \n        .title {\n            font-size: 2.5rem;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n            margin-bottom: 5px;\n            letter-spacing: 3px;\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6d214f;\n            margin-bottom: 20px;\n        }\n        \n        .heart-divider {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin: 15px 0;\n        }\n        \n        .heart-divider i {\n            color: #e84393;\n            margin: 0 5px;\n            font-size: 1.2rem;\n        }\n        \n        /* 游戏卡片 */\n        .games-container {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .game-card {\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            padding: 20px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            backdrop-filter: blur(10px);\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .game-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .game-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            border-bottom: 2px dashed #f8a5c2;\n            padding-bottom: 10px;\n        }\n        \n        .game-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            font-size: 1.5rem;\n            color: white;\n            box-shadow: 0 4px 8px rgba(232, 67, 147, 0.3);\n        }\n        \n        .game-title {\n            font-size: 1.6rem;\n            color: #e84393;\n        }\n        \n        /* 心情日记 */\n        .mood-container {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n        \n        .mood-btn {\n            flex: 1;\n            min-width: 70px;\n            padding: 8px 5px;\n            border-radius: 15px;\n            border: none;\n            background: #f8a5c2;\n            color: white;\n            font-family: inherit;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .mood-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .mood-btn.selected {\n            background: #e84393;\n            box-shadow: 0 0 0 3px white, 0 0 0 6px #f8a5c2;\n        }\n        \n        .diary-input {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            margin: 10px 0;\n            min-height: 100px;\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .diary-input:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .save-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 15px auto 0;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .save-btn:hover {\n            transform: scale(1.05);\n            box-shadow: 0 7px 18px rgba(232, 67, 147, 0.4);\n        }\n        \n        /* 老虎机 */\n        .slot-machine {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin: 20px 0;\n        }\n        \n        .slot {\n            width: 70px;\n            height: 70px;\n            background: linear-gradient(45deg, #6a89cc, #4a69bd);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.1);\n            border: 3px solid #4a69bd;\n        }\n        \n        .pull-btn {\n            background: linear-gradient(45deg, #4a69bd, #1e3799);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 20px auto 10px;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(74, 105, 189, 0.3);\n        }\n        \n        .pull-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .slot-result {\n            text-align: center;\n            font-size: 1.3rem;\n            color: #1e3799;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        /* 在线空调 */\n        .ac-control {\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .ac-display {\n            width: 200px;\n            height: 200px;\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            border-radius: 20px;\n            margin: 0 auto 20px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .ac-display::before {\n            content: \"\";\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            background: repeating-linear-gradient(\n                transparent,\n                transparent 20px,\n                rgba(255, 255, 255, 0.1) 22px,\n                rgba(255, 255, 255, 0.1) 24px\n            );\n        }\n        \n        .temperature {\n            font-size: 4rem;\n            font-weight: bold;\n            margin: 10px 0;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n        }\n        \n        .ac-controls {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin-top: 15px;\n        }\n        \n        .ac-btn {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            border: none;\n            background: #0984e3;\n            color: white;\n            font-size: 1.5rem;\n            cursor: pointer;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n        \n        /* 星座运势 */\n        .horoscope {\n            text-align: center;\n        }\n        \n        .zodiac-select {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n            margin: 10px 0 20px;\n            color: #5a3e36;\n        }\n        \n        .zodiac-select:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .horoscope-result {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 15px;\n            margin-top: 15px;\n            min-height: 150px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border: 2px dashed #f8a5c2;\n        }\n        \n        .fortune-text {\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .lucky-stars {\n            font-size: 1.8rem;\n            margin: 15px 0;\n            color: gold;\n        }\n        \n        /* 更多游戏 */\n        .game-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin-top: 15px;\n        }\n        \n        .mini-game {\n            background: rgba(255, 255, 255, 0.8);\n            border-radius: 20px;\n            padding: 20px 15px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n            cursor: pointer;\n        }\n        \n        .mini-game:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n        \n        .mini-game i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .mini-game h3 {\n            font-size: 1.3rem;\n            color: #e84393;\n        }\n        \n        footer {\n            text-align: center;\n            padding: 20px 0 10px;\n            color: #6d214f;\n            font-size: 0.9rem;\n        }\n        \n        /* 装饰元素 */\n        .floating {\n            position: absolute;\n            z-index: 1;\n            animation: floating 3s infinite ease-in-out;\n        }\n        \n        .heart {\n            color: rgba(232, 67, 147, 0.4);\n            font-size: 2rem;\n        }\n        \n        @keyframes floating {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-15px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 480px) {\n            .title {\n                font-size: 2rem;\n            }\n            .game-title {\n                font-size: 1.4rem;\n            }\n            .slot {\n                width: 60px;\n                height: 60px;\n                font-size: 1.7rem;\n            }\n            .ac-display {\n                width: 180px;\n                height: 180px;\n            }\n        }\n        \n        /* 新增游戏样式 */\n        .game-detail {\n            display: none;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 20px;\n            padding: 20px;\n            margin-top: 20px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n        \n        .game-content {\n            padding: 15px;\n        }\n        \n        .back-btn {\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 1rem;\n            cursor: pointer;\n            margin-top: 15px;\n            display: block;\n            margin-left: auto;\n        }\n        \n        .love-calculator {\n            text-align: center;\n        }\n        \n        .name-inputs {\n            display: flex;\n            gap: 10px;\n            margin: 15px 0;\n        }\n        \n        .name-input {\n            flex: 1;\n            padding: 10px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .love-result {\n            margin: 20px 0;\n            font-size: 1.3rem;\n        }\n        \n        .love-percentage {\n            font-size: 3rem;\n            font-weight: bold;\n            color: #e84393;\n            margin: 10px 0;\n        }\n        \n        .love-message {\n            font-size: 1.2rem;\n            color: #6d214f;\n        }\n        \n                .memory-game-container {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            gap: 10px;\n            margin: 20px 0;\n            perspective: 1000px;\n        }\n\n        .memory-card {\n            width: 100%;\n            aspect-ratio: 1/1;\n            border-radius: 15px;\n            position: relative;\n            transform-style: preserve-3d;\n            cursor: pointer;\n            transition: transform 0.5s ease;\n        }\n\n        .memory-card-face {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 15px;\n            backface-visibility: hidden;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.8rem;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n\n        .memory-card-front {\n            background: linear-gradient(45deg, #a18cd1, #fbc2eb);\n        }\n\n        .memory-card-back {\n            background: linear-gradient(45deg, #ffecd2, #fcb69f);\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.flipped {\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.matched .memory-card-back {\n            box-shadow: 0 0 15px rgba(232, 67, 147, 0.5);\n            filter: brightness(1.1);\n        }\n\n        .memory-result {\n            text-align: center;\n            font-size: 1.3rem;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        .dessert-options {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .dessert-option {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 20px 10px;\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            border: 2px solid #f8a5c2;\n        }\n        \n        .dessert-option:hover {\n            transform: scale(1.05);\n            background: rgba(248, 165, 194, 0.2);\n        }\n        \n        .dessert-option i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .dessert-result {\n            text-align: center;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            min-height: 100px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n        }\n        \n        .kiss-counter {\n            font-size: 3rem;\n            color: #e84393;\n            margin: 10px 0;\n            font-weight: bold;\n        }\n        \n        .kiss-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            margin: 10px auto;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .kiss-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .fortune-cookie {\n            width: 150px;\n            height: 100px;\n            background: #f3e5ab;\n            border-radius: 0 50% 50% 50%;\n            margin: 0 auto 20px;\n            position: relative;\n            transform: rotate(45deg);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n        }\n        \n        .fortune-cookie:before {\n            content: \"\";\n            position: absolute;\n            width: 80%;\n            height: 20px;\n            background: #d4c690;\n            border-radius: 10px;\n            transform: rotate(-45deg);\n        }\n        \n        .fortune-cookie-text {\n            transform: rotate(-45deg);\n            font-size: 1.5rem;\n            color: #5a3e36;\n        }\n        \n        .fortune-message {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 1.2rem;\n            min-height: 80px;\n        }\n        \n        .compatibility-images {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0;\n        }\n        \n        .compatibility-image {\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            overflow: hidden;\n            background: linear-gradient(45deg, #ff9a9e, #fad0c4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n        }\n        \n        .compatibility-arrow {\n            display: flex;\n            align-items: center;\n            font-size: 2rem;\n            color: #e84393;\n        }\n    </style>\n</head>\n<body>\n    <!-- 飘动的心形装饰 -->\n    <!-- <div class=\"floating\" style=\"top: 5%; left: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"top: 15%; right: 15%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 10%; left: 20%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 15%; right: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div> -->\n    \n    <div class=\"container\">\n        <header>\n            <h1 class=\"title\">❤️ 心动小游戏乐园 ❤️</h1>\n            <p class=\"subtitle\">专属于韩思宇的甜蜜互动空间</p>\n            <div class=\"heart-divider\">\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n            </div>\n        </header>\n        \n        <div class=\"games-container\">\n            <!-- 心情日记本 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-book\"></i>\n                    </div>\n                    <h2 class=\"game-title\">心情日记本</h2>\n                </div>\n                <p>记录今天的点点滴滴，分享你的心情~</p>\n                \n                <div class=\"mood-container\">\n                    <button class=\"mood-btn\" data-mood=\"happy\">😊 开心</button>\n                    <button class=\"mood-btn\" data-mood=\"excited\">😆 兴奋</button>\n                    <button class=\"mood-btn\" data-mood=\"calm\">😌 平静</button>\n                    <button class=\"mood-btn\" data-mood=\"tired\">😴 疲惫</button>\n                </div>\n                \n                <textarea class=\"diary-input\" placeholder=\"今天发生了什么有趣的事情呢？\"></textarea>\n                \n                <button class=\"save-btn\" id=\"save-diary\">\n                    <i class=\"fas fa-save\"></i> 保存心情日记\n                </button>\n            </div>\n            \n            <!-- 老虎机抽奖 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-dice\"></i>\n                    </div>\n                    <h2 class=\"game-title\">幸运老虎机</h2>\n                </div>\n                <p>试试今天的运气，赢取特别奖励！</p>\n                \n                <div class=\"slot-machine\">\n                    <div class=\"slot\" id=\"slot1\">🍓</div>\n                    <div class=\"slot\" id=\"slot2\">🍒</div>\n                    <div class=\"slot\" id=\"slot3\">🍋</div>\n                </div>\n                \n                <div class=\"slot-result\" id=\"slot-result\">等待抽奖...</div>\n                \n                <button class=\"pull-btn\" id=\"pull-lever\">\n                    <i class=\"fas fa-hand-point-down\"></i> 拉杆抽奖\n                </button>\n            </div>\n            \n            <!-- 在线空调 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-wind\"></i>\n                    </div>\n                    <h2 class=\"game-title\">在线小空调</h2>\n                </div>\n                <p>热了吗？打开空调凉爽一下吧！</p>\n                \n                <div class=\"ac-control\">\n                    <div class=\"ac-display\">\n                        <div>当前温度</div>\n                        <div class=\"temperature\" id=\"temp\">26°C</div>\n                        <div>舒适模式</div>\n                    </div>\n                    \n                    <div class=\"ac-controls\">\n                        <button class=\"ac-btn\" id=\"temp-down\">－</button>\n                        <button class=\"ac-btn\" id=\"ac-power\">\n                            <i class=\"fas fa-power-off\"></i>\n                        </button>\n                        <button class=\"ac-btn\" id=\"temp-up\">＋</button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 星座运势 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-star\"></i>\n                    </div>\n                    <h2 class=\"game-title\">星座运势</h2>\n                </div>\n                <p>看看星星们今天想对你说什么？</p>\n                \n                <div class=\"horoscope\">\n                    <select class=\"zodiac-select\" id=\"zodiac\">\n                        <option value=\"\">选择你的星座</option>\n                        <option value=\"aries\">白羊座 ♈</option>\n                        <option value=\"taurus\">金牛座 ♉</option>\n                        <option value=\"gemini\">双子座 ♊</option>\n                        <option value=\"cancer\">巨蟹座 ♋</option>\n                        <option value=\"leo\">狮子座 ♌</option>\n                        <option value=\"virgo\">处女座 ♍</option>\n                        <option value=\"libra\">天秤座 ♎</option>\n                        <option value=\"scorpio\">天蝎座 ♏</option>\n                        <option value=\"sagittarius\">射手座 ♐</option>\n                        <option value=\"capricorn\">摩羯座 ♑</option>\n                        <option value=\"aquarius\">水瓶座 ♒</option>\n                        <option value=\"pisces\">双鱼座 ♓</option>\n                    </select>\n                    \n                    <button class=\"save-btn\" id=\"check-fortune\">\n                        <i class=\"fas fa-crystal-ball\"></i> 查看今日运势\n                    </button>\n                    \n                    <div class=\"horoscope-result\" id=\"fortune-result\">\n                        <p class=\"fortune-text\">选择星座查看今日运势</p>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 更多游戏 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-plus-circle\"></i>\n                    </div>\n                    <h2 class=\"game-title\">更多小游戏</h2>\n                </div>\n                <p>点击图标开启更多有趣游戏！</p>\n                \n                <div class=\"game-grid\" id=\"mini-game-grid\">\n                    <div class=\"mini-game\" data-game=\"love-calculator\">\n                        <i class=\"fas fa-heart\"></i>\n                        <h3>爱情计算器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"memory-game\">\n                        <i class=\"fas fa-brain\"></i>\n                        <h3>记忆挑战</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"dessert-fortune\">\n                        <i class=\"fas fa-cookie-bite\"></i>\n                        <h3>甜品占卜</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"kiss-counter\">\n                        <i class=\"fas fa-kiss-wink-heart\"></i>\n                        <h3>亲亲计数器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"fortune-cookie\">\n                        <i class=\"fas fa-cookie\"></i>\n                        <h3>幸运饼干</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"compatibility\">\n                        <i class=\"fas fa-people-arrows\"></i>\n                        <h3>默契测试</h3>\n                    </div>\n                </div>\n                \n                <!-- 爱情计算器 -->\n                <div id=\"love-calculator\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>❤️ 爱情计算器 ❤️</h3>\n                        <p>计算你们之间的爱情指数</p>\n                        \n                        <div class=\"name-inputs\">\n                            <input type=\"text\" class=\"name-input\" id=\"name1\" placeholder=\"你的名字\">\n                            <input type=\"text\" class=\"name-input\" id=\"name2\" placeholder=\"TA的名字\">\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"calculate-love\">\n                            <i class=\"fas fa-heart\"></i> 计算爱情指数\n                        </button>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"love-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"love-message\">输入名字查看你们的缘分</div>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 记忆挑战 -->\n                <div id=\"memory-game\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🧠 记忆挑战 🧠</h3>\n                        <p>记住卡片位置，找到所有配对！</p>\n                        \n                        <div class=\"memory-game-container\" id=\"memory-game-container\"></div>\n                        \n                        <div class=\"memory-result\" id=\"memory-result\">点击卡片开始游戏</div>\n                        \n                        <button class=\"save-btn\" id=\"restart-memory\">\n                            <i class=\"fas fa-redo\"></i> 重新开始\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 甜品占卜 -->\n                <div id=\"dessert-fortune\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍰 甜品占卜 🍰</h3>\n                        <p>选择你喜欢的甜品，看看今天的运势</p>\n                        \n                        <div class=\"dessert-options\">\n                            <div class=\"dessert-option\" data-dessert=\"cake\">\n                                <i class=\"fas fa-birthday-cake\"></i>\n                                <div>蛋糕</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"icecream\">\n                                <i class=\"fas fa-ice-cream\"></i>\n                                <div>冰淇淋</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"chocolate\">\n                                <i class=\"fas fa-candy-cane\"></i>\n                                <div>巧克力</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"cookie\">\n                                <i class=\"fas fa-cookie\"></i>\n                                <div>饼干</div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"dessert-result\" id=\"dessert-result\">\n                            请选择一种甜品进行占卜\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 亲亲计数器 -->\n                <div id=\"kiss-counter\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>💋 亲亲计数器 💋</h3>\n                        <p>记录你们今天的甜蜜亲亲次数</p>\n                        \n                        <div class=\"kiss-counter\" id=\"kiss-count\">0</div>\n                        \n                        <button class=\"kiss-btn\" id=\"add-kiss\">\n                            <i class=\"fas fa-kiss-wink-heart\"></i> 亲亲 +1\n                        </button>\n                        \n                        <button class=\"kiss-btn\" id=\"reset-kiss\">\n                            <i class=\"fas fa-redo\"></i> 重置计数\n                        </button>\n                        \n                        <div style=\"margin-top: 20px; font-size: 1.1rem;\">\n                            <p>今天也要多多亲亲哦 😘</p>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 幸运饼干 -->\n                <div id=\"fortune-cookie\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍪 幸运饼干 🍪</h3>\n                        <p>点击饼干获取今日专属幸运签</p>\n                        \n                        <div class=\"fortune-cookie\" id=\"fortune-cookie\">\n                            <div class=\"fortune-cookie-text\">?</div>\n                        </div>\n                        \n                        <div class=\"fortune-message\" id=\"fortune-message\">\n                            点击饼干获取你的幸运签\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 默契测试 -->\n                <div id=\"compatibility\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>👫 默契测试 👫</h3>\n                        <p>看看你们有多了解彼此</p>\n                        \n                        <div class=\"compatibility-images\">\n                            <div class=\"compatibility-image\">👩</div>\n                            <div class=\"compatibility-arrow\">❤️</div>\n                            <div class=\"compatibility-image\">👨</div>\n                        </div>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"compatibility-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"compatibility-message\">测试你们的默契程度</div>\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"test-compatibility\">\n                            <i class=\"fas fa-heart\"></i> 测试默契\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>❤️ 专属于你的心动空间 ❤️</p>\n            <p>每一天都因你而甜蜜 | 设计：冯笑一</p>\n        </footer>\n    </div>\n\n    <script>\n        // 心情日记功能\n        const moodButtons = document.querySelectorAll('.mood-btn');\n        const diaryInput = document.querySelector('.diary-input');\n        const saveDiaryBtn = document.getElementById('save-diary');\n        \n        let selectedMood = '';\n        \n        moodButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                moodButtons.forEach(btn => btn.classList.remove('selected'));\n                button.classList.add('selected');\n                selectedMood = button.dataset.mood;\n            });\n        });\n        \n        saveDiaryBtn.addEventListener('click', () => {\n            if (!selectedMood) {\n                alert('请先选择一种心情哦~');\n                return;\n            }\n            \n            if (diaryInput.value.trim() === '') {\n                alert('请写点今天的心情故事吧~');\n                return;\n            }\n            \n            // 这里实际应用中应该保存到本地存储或服务器\n            alert('心情日记已保存！\\n\\n心情: ' + \n                  document.querySelector('.mood-btn.selected').textContent + \n                  '\\n内容: ' + diaryInput.value);\n            \n            // 重置表单\n            moodButtons.forEach(btn => btn.classList.remove('selected'));\n            diaryInput.value = '';\n            selectedMood = '';\n        });\n        \n        // 老虎机功能\n        const slots = ['🍎', '🍊', '🍇', '🍓', '🍒', '🍋', '🍉', '🍑', '🍍', '🥝'];\n        const slotElements = [document.getElementById('slot1'), \n                            document.getElementById('slot2'), \n                            document.getElementById('slot3')];\n        const slotResult = document.getElementById('slot-result');\n        const pullLeverBtn = document.getElementById('pull-lever');\n        \n        function spinSlot(slotElement) {\n            let count = 0;\n            const maxSpins = 20 + Math.floor(Math.random() * 10);\n            const interval = setInterval(() => {\n                slotElement.textContent = slots[Math.floor(Math.random() * slots.length)];\n                count++;\n                if (count > maxSpins) {\n                    clearInterval(interval);\n                }\n            }, 100);\n        }\n        \n        pullLeverBtn.addEventListener('click', () => {\n            // 重置结果\n            slotResult.textContent = \"旋转中...\";\n            pullLeverBtn.disabled = true;\n            \n            // 旋转每个老虎机\n            slotElements.forEach(slot => spinSlot(slot));\n            \n            // 等待所有老虎机停止后显示结果\n            setTimeout(() => {\n                const results = [\n                    slotElements[0].textContent,\n                    slotElements[1].textContent,\n                    slotElements[2].textContent\n                ];\n                \n                // 检查是否中奖\n                if (results[0] === results[1] && results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎉 恭喜！大奖！获得甜蜜之吻 💋\";\n                } else if (results[0] === results[1] || results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎊 恭喜！小奖！获得爱的拥抱 🤗\";\n                } else {\n                    slotResult.textContent = \"😊 感谢参与！明天再来试试吧~\";\n                }\n                \n                pullLeverBtn.disabled = false;\n            }, 3000);\n        });\n        \n        // 在线空调功能\n        const tempDisplay = document.getElementById('temp');\n        const tempDownBtn = document.getElementById('temp-down');\n        const tempUpBtn = document.getElementById('temp-up');\n        const acPowerBtn = document.getElementById('ac-power');\n        \n        let currentTemp = 26;\n        let isPowerOn = true;\n        \n        function updateAC() {\n            tempDisplay.textContent = currentTemp + \"°C\";\n            acPowerBtn.innerHTML = isPowerOn ? '<i class=\"fas fa-power-off\"></i>' : '<i class=\"fas fa-power-off\" style=\"color:#ddd\"></i>';\n            acPowerBtn.style.background = isPowerOn ? \"#0984e3\" : \"#95afc0\";\n        }\n        \n        tempDownBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp > 16) {\n                currentTemp--;\n                updateAC();\n            }\n        });\n        \n        tempUpBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp < 30) {\n                currentTemp++;\n                updateAC();\n            }\n        });\n        \n        acPowerBtn.addEventListener('click', () => {\n            isPowerOn = !isPowerOn;\n            updateAC();\n        });\n        \n        // 初始化空调\n        updateAC();\n        \n        // 星座运势功能\n        const zodiacSelect = document.getElementById('zodiac');\n        const fortuneResult = document.getElementById('fortune-result');\n        const checkFortuneBtn = document.getElementById('check-fortune');\n        \n        const fortunes = [\n            \"今天会有意外惊喜！保持开放心态迎接新机会。\",\n            \"感情运势上升，适合表达心意或约会。\",\n            \"工作上有突破性进展，抓住机会展现能力。\",\n            \"注意健康管理，适当休息放松很重要。\",\n            \"财运亨通，但需谨慎处理投资决策。\",\n            \"人际关系运势上升，适合拓展社交圈。\",\n            \"今天适合独处思考，会有新的领悟。\",\n            \"可能会遇到旧友，重温美好回忆。\",\n            \"尝试新事物会带来意想不到的收获。\",\n            \"保持耐心，好事正在慢慢向你靠近。\"\n        ];\n        \n        const luckyStars = [\"⭐\", \"⭐⭐\", \"⭐⭐⭐\", \"⭐⭐⭐⭐\", \"⭐⭐⭐⭐⭐\"];\n        \n        checkFortuneBtn.addEventListener('click', () => {\n            if (!zodiacSelect.value) {\n                alert('请先选择你的星座哦~');\n                return;\n            }\n            \n            const zodiacName = zodiacSelect.options[zodiacSelect.selectedIndex].text;\n            const randomFortune = fortunes[Math.floor(Math.random() * fortunes.length)];\n            const randomStars = luckyStars[Math.floor(Math.random() * luckyStars.length)];\n            \n            fortuneResult.innerHTML = `\n                <h3>${zodiacName} 今日运势</h3>\n                <p class=\"fortune-text\">${randomFortune}</p>\n                <div class=\"lucky-stars\">幸运指数: ${randomStars}</div>\n                <p>${getZodiacTip(zodiacSelect.value)}</p>\n            `;\n        });\n        \n        function getZodiacTip(zodiac) {\n            const tips = {\n                aries: \"今日幸运色：红色，适合主动出击！\",\n                taurus: \"今日幸运色：绿色，享受美食会带来好运。\",\n                gemini: \"今日幸运色：黄色，多与人交流会带来机会。\",\n                cancer: \"今日幸运色：银色，家庭会给你温暖的力量。\",\n                leo: \"今日幸运色：金色，展现你的领导魅力吧！\",\n                virgo: \"今日幸运色：蓝色，注重细节会带来成功。\",\n                libra: \"今日幸运色：粉色，平衡是你今天的关键词。\",\n                scorpio: \"今日幸运色：紫色，直觉会引导你正确方向。\",\n                sagittarius: \"今日幸运色：橙色，冒险精神会带来惊喜。\",\n                capricorn: \"今日幸运色：棕色，务实的态度会得到回报。\",\n                aquarius: \"今日幸运色：青色，创新思维会解决难题。\",\n                pisces: \"今日幸运色：海蓝色，艺术会激发你的灵感。\"\n            };\n            \n            return tips[zodiac] || \"保持积极心态，今天会是美好的一天！\";\n        }\n        \n        // 新增游戏功能\n        const miniGames = document.querySelectorAll('.mini-game');\n        const gameDetails = document.querySelectorAll('.game-detail');\n        const backButtons = document.querySelectorAll('.back-btn');\n        \n        // 显示游戏详情\n        miniGames.forEach(game => {\n            game.addEventListener('click', () => {\n                const gameId = game.dataset.game;\n                document.getElementById('mini-game-grid').style.display = 'none';\n                document.getElementById(gameId).style.display = 'block';\n            });\n        });\n        \n        // 返回游戏列表\n        backButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                gameDetails.forEach(detail => {\n                    detail.style.display = 'none';\n                });\n                document.getElementById('mini-game-grid').style.display = 'grid';\n            });\n        });\n        \n        // 爱情计算器\n        const calculateLoveBtn = document.getElementById('calculate-love');\n        const lovePercentage = document.getElementById('love-percentage');\n        const loveMessage = document.getElementById('love-message');\n        \n        calculateLoveBtn.addEventListener('click', () => {\n            const name1 = document.getElementById('name1').value.trim();\n            const name2 = document.getElementById('name2').value.trim();\n            \n            if (!name1 || !name2) {\n                alert('请输入两个名字~');\n                return;\n            }\n            \n            // 生成随机爱情指数（60-100%）\n            const percentage = Math.floor(Math.random() * 41) + 60;\n            lovePercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                loveMessage.innerHTML = \"天作之合！你们是命中注定的一对 ❤️\";\n            } else if (percentage >= 75) {\n                loveMessage.innerHTML = \"非常般配！你们的爱情会越来越甜蜜 💕\";\n            } else {\n                loveMessage.innerHTML = \"有发展潜力！多相处会让感情升温 🌹\";\n            }\n        });\n        \n        // 记忆挑战游戏\n        // 记忆挑战游戏\n        const memoryContainer = document.getElementById('memory-game-container');\n        const memoryResult = document.getElementById('memory-result');\n        const restartMemoryBtn = document.getElementById('restart-memory');\n\n        const memorySymbols = ['❤️', '🌟', '🎁', '💋', '🌸', '🎈', '🍭', '🌈'];\n        let memoryCards = [];\n        let flippedCards = [];\n        let matchedPairs = 0;\n\n        function initMemoryGame() {\n            memoryContainer.innerHTML = '';\n            memoryCards = [...memorySymbols, ...memorySymbols];\n            flippedCards = [];\n            matchedPairs = 0;\n            memoryResult.textContent = \"点击卡片开始游戏\";\n\n            // 洗牌\n            for (let i = memoryCards.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [memoryCards[i], memoryCards[j]] = [memoryCards[j], memoryCards[i]];\n            }\n\n            // 创建卡片\n            memoryCards.forEach((symbol, index) => {\n                const card = document.createElement('div');\n                card.classList.add('memory-card');\n                card.dataset.index = index;\n                card.dataset.symbol = symbol;\n                \n                // 卡片正面（默认图标）\n                const front = document.createElement('div');\n                front.classList.add('memory-card-face', 'memory-card-front');\n                front.textContent = '❓'; // 默认图标\n                \n                // 卡片背面（实际图形）\n                const back = document.createElement('div');\n                back.classList.add('memory-card-face', 'memory-card-back');\n                back.textContent = symbol;\n                \n                card.appendChild(front);\n                card.appendChild(back);\n                card.addEventListener('click', flipMemoryCard);\n                memoryContainer.appendChild(card);\n            });\n        }\n\n        function flipMemoryCard() {\n            if (flippedCards.length < 2 && !this.classList.contains('flipped')) {\n                this.classList.add('flipped');\n                flippedCards.push(this);\n\n                if (flippedCards.length === 2) {\n                    setTimeout(checkMatch, 500);\n                }\n            }\n        }\n\n        function checkMatch() {\n            const card1 = flippedCards[0];\n            const card2 = flippedCards[1];\n\n            if (card1.dataset.symbol === card2.dataset.symbol) {\n                card1.classList.add('matched');\n                card2.classList.add('matched');\n                matchedPairs++;\n\n                if (matchedPairs === memorySymbols.length) {\n                    memoryResult.innerHTML = \"🎉 恭喜！你完成了挑战！\";\n                } else {\n                    memoryResult.textContent = `已匹配: ${matchedPairs}/${memorySymbols.length}`;\n                }\n            } else {\n                // 翻回正面时移除flipped类\n                setTimeout(() => {\n                    card1.classList.remove('flipped');\n                    card2.classList.remove('flipped');\n                }, 500);\n            }\n\n            flippedCards = [];\n        }\n\n        // 初始化游戏\n        restartMemoryBtn.addEventListener('click', initMemoryGame);\n        //initMemoryGame();\n        \n        // 甜品占卜\n        const dessertOptions = document.querySelectorAll('.dessert-option');\n        const dessertResult = document.getElementById('dessert-result');\n        \n        dessertOptions.forEach(option => {\n            option.addEventListener('click', () => {\n                const dessert = option.dataset.dessert;\n                let message = \"\";\n                \n                switch (dessert) {\n                    case 'cake':\n                        message = \"🍰 蛋糕代表甜蜜生活！今天会有令人开心的小惊喜，记得留意身边的美好事物哦~\";\n                        break;\n                    case 'icecream':\n                        message = \"🍦 冰淇淋代表清凉心情！今天适合放松自己，做些让自己开心的事情，别太劳累~\";\n                        break;\n                    case 'chocolate':\n                        message = \"🍫 巧克力代表浪漫爱情！今天感情运势上升，适合表达心意或安排甜蜜约会~\";\n                        break;\n                    case 'cookie':\n                        message = \"🍪 饼干代表温馨日常！今天适合与家人朋友共度美好时光，享受简单的小幸福~\";\n                        break;\n                }\n                \n                dessertResult.innerHTML = message;\n            });\n        });\n        \n        // 亲亲计数器\n        const kissCount = document.getElementById('kiss-count');\n        const addKissBtn = document.getElementById('add-kiss');\n        const resetKissBtn = document.getElementById('reset-kiss');\n        let kissCounter = 0;\n        \n        addKissBtn.addEventListener('click', () => {\n            kissCounter++;\n            kissCount.textContent = kissCounter;\n            \n            // 添加动画效果\n            kissCount.style.transform = 'scale(1.2)';\n            setTimeout(() => {\n                kissCount.style.transform = 'scale(1)';\n            }, 300);\n        });\n        \n        resetKissBtn.addEventListener('click', () => {\n            kissCounter = 0;\n            kissCount.textContent = kissCounter;\n        });\n        \n        // 幸运饼干\n        const fortuneCookie = document.querySelector('.fortune-cookie');\n        const fortuneMessage = document.getElementById('fortune-message');\n        \n        const fortuneMessages = [\n            \"今天会有意想不到的好运降临！\",\n            \"微笑是最好的化妆品，今天多笑笑吧~\",\n            \"你的善良会带来美好的回报\",\n            \"勇敢表达你的心意，会有惊喜结果\",\n            \"小小的举动会带来大大的幸福\",\n            \"今天适合尝试新事物，会有意外收获\",\n            \"你的魅力值今天爆表！\",\n            \"放松心情，享受当下的美好时光\",\n            \"给爱的人一个拥抱，温暖彼此\",\n            \"美好的事情正在向你走来\"\n        ];\n        \n        fortuneCookie.addEventListener('click', () => {\n            const randomIndex = Math.floor(Math.random() * fortuneMessages.length);\n            fortuneMessage.textContent = fortuneMessages[randomIndex];\n            \n            // 添加动画效果\n            fortuneCookie.style.transform = 'rotate(10deg)';\n            setTimeout(() => {\n                fortuneCookie.style.transform = 'rotate(0deg)';\n            }, 200);\n        });\n        \n        // 默契测试\n        const testCompatibilityBtn = document.getElementById('test-compatibility');\n        const compatibilityPercentage = document.getElementById('compatibility-percentage');\n        const compatibilityMessage = document.getElementById('compatibility-message');\n        \n        testCompatibilityBtn.addEventListener('click', () => {\n            // 生成随机默契指数（70-100%）\n            const percentage = Math.floor(Math.random() * 31) + 70;\n            compatibilityPercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                compatibilityMessage.innerHTML = \"心灵相通！你们真是天生一对 ❤️\";\n            } else if (percentage >= 80) {\n                compatibilityMessage.innerHTML = \"非常默契！彼此了解程度很高 💕\";\n            } else {\n                compatibilityMessage.innerHTML = \"默契不错！多交流会更加了解彼此 🌹\";\n            }\n        });\n        \n        // 初始化记忆游戏\n        initMemoryGame();\n    </script>\n</body>\n</html>\n{% endraw %}\n\n\n![360X360/bg_xinhai_360.png](https://tc.z.wiki/autoupload/f/pCwQSduTrK74xeM6D4jdFJO7Q2ZCk-TPg9YW4bt5tjGyl5f0KlZfm6UsKj-HyTuv/20250715/QOWX/360X360/bg_xinhai_360.png)","slug":"love","published":1,"updated":"2025-07-16T06:05:15.896Z","comments":1,"layout":"post","photos":[],"_id":"cmd71t81a002g3cw66m1i1obt","content":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <title>宝贝专属心动小游戏乐园</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&family=Dancing+Script:wght@700&display=swap\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Ma Shan Zheng', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: #5a3e36;\n            min-height: 100vh;\n            overflow-x: hidden;\n            padding: 20px 10px;\n            position: relative;\n        }\n        .container {\n            max-width: 500px;\n            margin: 0 auto;\n            position: relative;\n            z-index: 10;\n        }\n        \n        header {\n            text-align: center;\n            padding: 15px 0 25px;\n            position: relative;\n        }\n        \n        .title {\n            font-size: 2.5rem;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n            margin-bottom: 5px;\n            letter-spacing: 3px;\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6d214f;\n            margin-bottom: 20px;\n        }\n        \n        .heart-divider {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin: 15px 0;\n        }\n        \n        .heart-divider i {\n            color: #e84393;\n            margin: 0 5px;\n            font-size: 1.2rem;\n        }\n        \n        /* 游戏卡片 */\n        .games-container {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .game-card {\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            padding: 20px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            backdrop-filter: blur(10px);\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .game-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .game-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            border-bottom: 2px dashed #f8a5c2;\n            padding-bottom: 10px;\n        }\n        \n        .game-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            font-size: 1.5rem;\n            color: white;\n            box-shadow: 0 4px 8px rgba(232, 67, 147, 0.3);\n        }\n        \n        .game-title {\n            font-size: 1.6rem;\n            color: #e84393;\n        }\n        \n        /* 心情日记 */\n        .mood-container {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n        \n        .mood-btn {\n            flex: 1;\n            min-width: 70px;\n            padding: 8px 5px;\n            border-radius: 15px;\n            border: none;\n            background: #f8a5c2;\n            color: white;\n            font-family: inherit;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .mood-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .mood-btn.selected {\n            background: #e84393;\n            box-shadow: 0 0 0 3px white, 0 0 0 6px #f8a5c2;\n        }\n        \n        .diary-input {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            margin: 10px 0;\n            min-height: 100px;\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .diary-input:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .save-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 15px auto 0;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .save-btn:hover {\n            transform: scale(1.05);\n            box-shadow: 0 7px 18px rgba(232, 67, 147, 0.4);\n        }\n        \n        /* 老虎机 */\n        .slot-machine {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin: 20px 0;\n        }\n        \n        .slot {\n            width: 70px;\n            height: 70px;\n            background: linear-gradient(45deg, #6a89cc, #4a69bd);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.1);\n            border: 3px solid #4a69bd;\n        }\n        \n        .pull-btn {\n            background: linear-gradient(45deg, #4a69bd, #1e3799);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 20px auto 10px;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(74, 105, 189, 0.3);\n        }\n        \n        .pull-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .slot-result {\n            text-align: center;\n            font-size: 1.3rem;\n            color: #1e3799;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        /* 在线空调 */\n        .ac-control {\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .ac-display {\n            width: 200px;\n            height: 200px;\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            border-radius: 20px;\n            margin: 0 auto 20px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .ac-display::before {\n            content: \"\";\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            background: repeating-linear-gradient(\n                transparent,\n                transparent 20px,\n                rgba(255, 255, 255, 0.1) 22px,\n                rgba(255, 255, 255, 0.1) 24px\n            );\n        }\n        \n        .temperature {\n            font-size: 4rem;\n            font-weight: bold;\n            margin: 10px 0;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n        }\n        \n        .ac-controls {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin-top: 15px;\n        }\n        \n        .ac-btn {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            border: none;\n            background: #0984e3;\n            color: white;\n            font-size: 1.5rem;\n            cursor: pointer;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n        \n        /* 星座运势 */\n        .horoscope {\n            text-align: center;\n        }\n        \n        .zodiac-select {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n            margin: 10px 0 20px;\n            color: #5a3e36;\n        }\n        \n        .zodiac-select:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .horoscope-result {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 15px;\n            margin-top: 15px;\n            min-height: 150px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border: 2px dashed #f8a5c2;\n        }\n        \n        .fortune-text {\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .lucky-stars {\n            font-size: 1.8rem;\n            margin: 15px 0;\n            color: gold;\n        }\n        \n        /* 更多游戏 */\n        .game-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin-top: 15px;\n        }\n        \n        .mini-game {\n            background: rgba(255, 255, 255, 0.8);\n            border-radius: 20px;\n            padding: 20px 15px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n            cursor: pointer;\n        }\n        \n        .mini-game:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n        \n        .mini-game i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .mini-game h3 {\n            font-size: 1.3rem;\n            color: #e84393;\n        }\n        \n        footer {\n            text-align: center;\n            padding: 20px 0 10px;\n            color: #6d214f;\n            font-size: 0.9rem;\n        }\n        \n        /* 装饰元素 */\n        .floating {\n            position: absolute;\n            z-index: 1;\n            animation: floating 3s infinite ease-in-out;\n        }\n        \n        .heart {\n            color: rgba(232, 67, 147, 0.4);\n            font-size: 2rem;\n        }\n        \n        @keyframes floating {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-15px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 480px) {\n            .title {\n                font-size: 2rem;\n            }\n            .game-title {\n                font-size: 1.4rem;\n            }\n            .slot {\n                width: 60px;\n                height: 60px;\n                font-size: 1.7rem;\n            }\n            .ac-display {\n                width: 180px;\n                height: 180px;\n            }\n        }\n        \n        /* 新增游戏样式 */\n        .game-detail {\n            display: none;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 20px;\n            padding: 20px;\n            margin-top: 20px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n        \n        .game-content {\n            padding: 15px;\n        }\n        \n        .back-btn {\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 1rem;\n            cursor: pointer;\n            margin-top: 15px;\n            display: block;\n            margin-left: auto;\n        }\n        \n        .love-calculator {\n            text-align: center;\n        }\n        \n        .name-inputs {\n            display: flex;\n            gap: 10px;\n            margin: 15px 0;\n        }\n        \n        .name-input {\n            flex: 1;\n            padding: 10px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .love-result {\n            margin: 20px 0;\n            font-size: 1.3rem;\n        }\n        \n        .love-percentage {\n            font-size: 3rem;\n            font-weight: bold;\n            color: #e84393;\n            margin: 10px 0;\n        }\n        \n        .love-message {\n            font-size: 1.2rem;\n            color: #6d214f;\n        }\n        \n                .memory-game-container {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            gap: 10px;\n            margin: 20px 0;\n            perspective: 1000px;\n        }\n\n        .memory-card {\n            width: 100%;\n            aspect-ratio: 1/1;\n            border-radius: 15px;\n            position: relative;\n            transform-style: preserve-3d;\n            cursor: pointer;\n            transition: transform 0.5s ease;\n        }\n\n        .memory-card-face {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 15px;\n            backface-visibility: hidden;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.8rem;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n\n        .memory-card-front {\n            background: linear-gradient(45deg, #a18cd1, #fbc2eb);\n        }\n\n        .memory-card-back {\n            background: linear-gradient(45deg, #ffecd2, #fcb69f);\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.flipped {\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.matched .memory-card-back {\n            box-shadow: 0 0 15px rgba(232, 67, 147, 0.5);\n            filter: brightness(1.1);\n        }\n\n        .memory-result {\n            text-align: center;\n            font-size: 1.3rem;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        .dessert-options {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .dessert-option {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 20px 10px;\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            border: 2px solid #f8a5c2;\n        }\n        \n        .dessert-option:hover {\n            transform: scale(1.05);\n            background: rgba(248, 165, 194, 0.2);\n        }\n        \n        .dessert-option i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .dessert-result {\n            text-align: center;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            min-height: 100px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n        }\n        \n        .kiss-counter {\n            font-size: 3rem;\n            color: #e84393;\n            margin: 10px 0;\n            font-weight: bold;\n        }\n        \n        .kiss-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            margin: 10px auto;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .kiss-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .fortune-cookie {\n            width: 150px;\n            height: 100px;\n            background: #f3e5ab;\n            border-radius: 0 50% 50% 50%;\n            margin: 0 auto 20px;\n            position: relative;\n            transform: rotate(45deg);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n        }\n        \n        .fortune-cookie:before {\n            content: \"\";\n            position: absolute;\n            width: 80%;\n            height: 20px;\n            background: #d4c690;\n            border-radius: 10px;\n            transform: rotate(-45deg);\n        }\n        \n        .fortune-cookie-text {\n            transform: rotate(-45deg);\n            font-size: 1.5rem;\n            color: #5a3e36;\n        }\n        \n        .fortune-message {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 1.2rem;\n            min-height: 80px;\n        }\n        \n        .compatibility-images {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0;\n        }\n        \n        .compatibility-image {\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            overflow: hidden;\n            background: linear-gradient(45deg, #ff9a9e, #fad0c4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n        }\n        \n        .compatibility-arrow {\n            display: flex;\n            align-items: center;\n            font-size: 2rem;\n            color: #e84393;\n        }\n    </style>\n</head>\n<body>\n    <!-- 飘动的心形装饰 -->\n    <!-- <div class=\"floating\" style=\"top: 5%; left: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"top: 15%; right: 15%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 10%; left: 20%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 15%; right: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div> -->\n    \n    <div class=\"container\">\n        <header>\n            <h1 class=\"title\">❤️ 心动小游戏乐园 ❤️</h1>\n            <p class=\"subtitle\">专属于韩思宇的甜蜜互动空间</p>\n            <div class=\"heart-divider\">\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n            </div>\n        </header>\n        \n        <div class=\"games-container\">\n            <!-- 心情日记本 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-book\"></i>\n                    </div>\n                    <h2 class=\"game-title\">心情日记本</h2>\n                </div>\n                <p>记录今天的点点滴滴，分享你的心情~</p>\n                \n                <div class=\"mood-container\">\n                    <button class=\"mood-btn\" data-mood=\"happy\">😊 开心</button>\n                    <button class=\"mood-btn\" data-mood=\"excited\">😆 兴奋</button>\n                    <button class=\"mood-btn\" data-mood=\"calm\">😌 平静</button>\n                    <button class=\"mood-btn\" data-mood=\"tired\">😴 疲惫</button>\n                </div>\n                \n                <textarea class=\"diary-input\" placeholder=\"今天发生了什么有趣的事情呢？\"></textarea>\n                \n                <button class=\"save-btn\" id=\"save-diary\">\n                    <i class=\"fas fa-save\"></i> 保存心情日记\n                </button>\n            </div>\n            \n            <!-- 老虎机抽奖 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-dice\"></i>\n                    </div>\n                    <h2 class=\"game-title\">幸运老虎机</h2>\n                </div>\n                <p>试试今天的运气，赢取特别奖励！</p>\n                \n                <div class=\"slot-machine\">\n                    <div class=\"slot\" id=\"slot1\">🍓</div>\n                    <div class=\"slot\" id=\"slot2\">🍒</div>\n                    <div class=\"slot\" id=\"slot3\">🍋</div>\n                </div>\n                \n                <div class=\"slot-result\" id=\"slot-result\">等待抽奖...</div>\n                \n                <button class=\"pull-btn\" id=\"pull-lever\">\n                    <i class=\"fas fa-hand-point-down\"></i> 拉杆抽奖\n                </button>\n            </div>\n            \n            <!-- 在线空调 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-wind\"></i>\n                    </div>\n                    <h2 class=\"game-title\">在线小空调</h2>\n                </div>\n                <p>热了吗？打开空调凉爽一下吧！</p>\n                \n                <div class=\"ac-control\">\n                    <div class=\"ac-display\">\n                        <div>当前温度</div>\n                        <div class=\"temperature\" id=\"temp\">26°C</div>\n                        <div>舒适模式</div>\n                    </div>\n                    \n                    <div class=\"ac-controls\">\n                        <button class=\"ac-btn\" id=\"temp-down\">－</button>\n                        <button class=\"ac-btn\" id=\"ac-power\">\n                            <i class=\"fas fa-power-off\"></i>\n                        </button>\n                        <button class=\"ac-btn\" id=\"temp-up\">＋</button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 星座运势 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-star\"></i>\n                    </div>\n                    <h2 class=\"game-title\">星座运势</h2>\n                </div>\n                <p>看看星星们今天想对你说什么？</p>\n                \n                <div class=\"horoscope\">\n                    <select class=\"zodiac-select\" id=\"zodiac\">\n                        <option value=\"\">选择你的星座</option>\n                        <option value=\"aries\">白羊座 ♈</option>\n                        <option value=\"taurus\">金牛座 ♉</option>\n                        <option value=\"gemini\">双子座 ♊</option>\n                        <option value=\"cancer\">巨蟹座 ♋</option>\n                        <option value=\"leo\">狮子座 ♌</option>\n                        <option value=\"virgo\">处女座 ♍</option>\n                        <option value=\"libra\">天秤座 ♎</option>\n                        <option value=\"scorpio\">天蝎座 ♏</option>\n                        <option value=\"sagittarius\">射手座 ♐</option>\n                        <option value=\"capricorn\">摩羯座 ♑</option>\n                        <option value=\"aquarius\">水瓶座 ♒</option>\n                        <option value=\"pisces\">双鱼座 ♓</option>\n                    </select>\n                    \n                    <button class=\"save-btn\" id=\"check-fortune\">\n                        <i class=\"fas fa-crystal-ball\"></i> 查看今日运势\n                    </button>\n                    \n                    <div class=\"horoscope-result\" id=\"fortune-result\">\n                        <p class=\"fortune-text\">选择星座查看今日运势</p>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 更多游戏 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-plus-circle\"></i>\n                    </div>\n                    <h2 class=\"game-title\">更多小游戏</h2>\n                </div>\n                <p>点击图标开启更多有趣游戏！</p>\n                \n                <div class=\"game-grid\" id=\"mini-game-grid\">\n                    <div class=\"mini-game\" data-game=\"love-calculator\">\n                        <i class=\"fas fa-heart\"></i>\n                        <h3>爱情计算器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"memory-game\">\n                        <i class=\"fas fa-brain\"></i>\n                        <h3>记忆挑战</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"dessert-fortune\">\n                        <i class=\"fas fa-cookie-bite\"></i>\n                        <h3>甜品占卜</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"kiss-counter\">\n                        <i class=\"fas fa-kiss-wink-heart\"></i>\n                        <h3>亲亲计数器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"fortune-cookie\">\n                        <i class=\"fas fa-cookie\"></i>\n                        <h3>幸运饼干</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"compatibility\">\n                        <i class=\"fas fa-people-arrows\"></i>\n                        <h3>默契测试</h3>\n                    </div>\n                </div>\n                \n                <!-- 爱情计算器 -->\n                <div id=\"love-calculator\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>❤️ 爱情计算器 ❤️</h3>\n                        <p>计算你们之间的爱情指数</p>\n                        \n                        <div class=\"name-inputs\">\n                            <input type=\"text\" class=\"name-input\" id=\"name1\" placeholder=\"你的名字\">\n                            <input type=\"text\" class=\"name-input\" id=\"name2\" placeholder=\"TA的名字\">\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"calculate-love\">\n                            <i class=\"fas fa-heart\"></i> 计算爱情指数\n                        </button>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"love-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"love-message\">输入名字查看你们的缘分</div>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 记忆挑战 -->\n                <div id=\"memory-game\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🧠 记忆挑战 🧠</h3>\n                        <p>记住卡片位置，找到所有配对！</p>\n                        \n                        <div class=\"memory-game-container\" id=\"memory-game-container\"></div>\n                        \n                        <div class=\"memory-result\" id=\"memory-result\">点击卡片开始游戏</div>\n                        \n                        <button class=\"save-btn\" id=\"restart-memory\">\n                            <i class=\"fas fa-redo\"></i> 重新开始\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 甜品占卜 -->\n                <div id=\"dessert-fortune\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍰 甜品占卜 🍰</h3>\n                        <p>选择你喜欢的甜品，看看今天的运势</p>\n                        \n                        <div class=\"dessert-options\">\n                            <div class=\"dessert-option\" data-dessert=\"cake\">\n                                <i class=\"fas fa-birthday-cake\"></i>\n                                <div>蛋糕</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"icecream\">\n                                <i class=\"fas fa-ice-cream\"></i>\n                                <div>冰淇淋</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"chocolate\">\n                                <i class=\"fas fa-candy-cane\"></i>\n                                <div>巧克力</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"cookie\">\n                                <i class=\"fas fa-cookie\"></i>\n                                <div>饼干</div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"dessert-result\" id=\"dessert-result\">\n                            请选择一种甜品进行占卜\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 亲亲计数器 -->\n                <div id=\"kiss-counter\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>💋 亲亲计数器 💋</h3>\n                        <p>记录你们今天的甜蜜亲亲次数</p>\n                        \n                        <div class=\"kiss-counter\" id=\"kiss-count\">0</div>\n                        \n                        <button class=\"kiss-btn\" id=\"add-kiss\">\n                            <i class=\"fas fa-kiss-wink-heart\"></i> 亲亲 +1\n                        </button>\n                        \n                        <button class=\"kiss-btn\" id=\"reset-kiss\">\n                            <i class=\"fas fa-redo\"></i> 重置计数\n                        </button>\n                        \n                        <div style=\"margin-top: 20px; font-size: 1.1rem;\">\n                            <p>今天也要多多亲亲哦 😘</p>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 幸运饼干 -->\n                <div id=\"fortune-cookie\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍪 幸运饼干 🍪</h3>\n                        <p>点击饼干获取今日专属幸运签</p>\n                        \n                        <div class=\"fortune-cookie\" id=\"fortune-cookie\">\n                            <div class=\"fortune-cookie-text\">?</div>\n                        </div>\n                        \n                        <div class=\"fortune-message\" id=\"fortune-message\">\n                            点击饼干获取你的幸运签\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 默契测试 -->\n                <div id=\"compatibility\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>👫 默契测试 👫</h3>\n                        <p>看看你们有多了解彼此</p>\n                        \n                        <div class=\"compatibility-images\">\n                            <div class=\"compatibility-image\">👩</div>\n                            <div class=\"compatibility-arrow\">❤️</div>\n                            <div class=\"compatibility-image\">👨</div>\n                        </div>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"compatibility-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"compatibility-message\">测试你们的默契程度</div>\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"test-compatibility\">\n                            <i class=\"fas fa-heart\"></i> 测试默契\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>❤️ 专属于你的心动空间 ❤️</p>\n            <p>每一天都因你而甜蜜 | 设计：冯笑一</p>\n        </footer>\n    </div>\n\n    <script>\n        // 心情日记功能\n        const moodButtons = document.querySelectorAll('.mood-btn');\n        const diaryInput = document.querySelector('.diary-input');\n        const saveDiaryBtn = document.getElementById('save-diary');\n        \n        let selectedMood = '';\n        \n        moodButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                moodButtons.forEach(btn => btn.classList.remove('selected'));\n                button.classList.add('selected');\n                selectedMood = button.dataset.mood;\n            });\n        });\n        \n        saveDiaryBtn.addEventListener('click', () => {\n            if (!selectedMood) {\n                alert('请先选择一种心情哦~');\n                return;\n            }\n            \n            if (diaryInput.value.trim() === '') {\n                alert('请写点今天的心情故事吧~');\n                return;\n            }\n            \n            // 这里实际应用中应该保存到本地存储或服务器\n            alert('心情日记已保存！\\n\\n心情: ' + \n                  document.querySelector('.mood-btn.selected').textContent + \n                  '\\n内容: ' + diaryInput.value);\n            \n            // 重置表单\n            moodButtons.forEach(btn => btn.classList.remove('selected'));\n            diaryInput.value = '';\n            selectedMood = '';\n        });\n        \n        // 老虎机功能\n        const slots = ['🍎', '🍊', '🍇', '🍓', '🍒', '🍋', '🍉', '🍑', '🍍', '🥝'];\n        const slotElements = [document.getElementById('slot1'), \n                            document.getElementById('slot2'), \n                            document.getElementById('slot3')];\n        const slotResult = document.getElementById('slot-result');\n        const pullLeverBtn = document.getElementById('pull-lever');\n        \n        function spinSlot(slotElement) {\n            let count = 0;\n            const maxSpins = 20 + Math.floor(Math.random() * 10);\n            const interval = setInterval(() => {\n                slotElement.textContent = slots[Math.floor(Math.random() * slots.length)];\n                count++;\n                if (count > maxSpins) {\n                    clearInterval(interval);\n                }\n            }, 100);\n        }\n        \n        pullLeverBtn.addEventListener('click', () => {\n            // 重置结果\n            slotResult.textContent = \"旋转中...\";\n            pullLeverBtn.disabled = true;\n            \n            // 旋转每个老虎机\n            slotElements.forEach(slot => spinSlot(slot));\n            \n            // 等待所有老虎机停止后显示结果\n            setTimeout(() => {\n                const results = [\n                    slotElements[0].textContent,\n                    slotElements[1].textContent,\n                    slotElements[2].textContent\n                ];\n                \n                // 检查是否中奖\n                if (results[0] === results[1] && results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎉 恭喜！大奖！获得甜蜜之吻 💋\";\n                } else if (results[0] === results[1] || results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎊 恭喜！小奖！获得爱的拥抱 🤗\";\n                } else {\n                    slotResult.textContent = \"😊 感谢参与！明天再来试试吧~\";\n                }\n                \n                pullLeverBtn.disabled = false;\n            }, 3000);\n        });\n        \n        // 在线空调功能\n        const tempDisplay = document.getElementById('temp');\n        const tempDownBtn = document.getElementById('temp-down');\n        const tempUpBtn = document.getElementById('temp-up');\n        const acPowerBtn = document.getElementById('ac-power');\n        \n        let currentTemp = 26;\n        let isPowerOn = true;\n        \n        function updateAC() {\n            tempDisplay.textContent = currentTemp + \"°C\";\n            acPowerBtn.innerHTML = isPowerOn ? '<i class=\"fas fa-power-off\"></i>' : '<i class=\"fas fa-power-off\" style=\"color:#ddd\"></i>';\n            acPowerBtn.style.background = isPowerOn ? \"#0984e3\" : \"#95afc0\";\n        }\n        \n        tempDownBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp > 16) {\n                currentTemp--;\n                updateAC();\n            }\n        });\n        \n        tempUpBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp < 30) {\n                currentTemp++;\n                updateAC();\n            }\n        });\n        \n        acPowerBtn.addEventListener('click', () => {\n            isPowerOn = !isPowerOn;\n            updateAC();\n        });\n        \n        // 初始化空调\n        updateAC();\n        \n        // 星座运势功能\n        const zodiacSelect = document.getElementById('zodiac');\n        const fortuneResult = document.getElementById('fortune-result');\n        const checkFortuneBtn = document.getElementById('check-fortune');\n        \n        const fortunes = [\n            \"今天会有意外惊喜！保持开放心态迎接新机会。\",\n            \"感情运势上升，适合表达心意或约会。\",\n            \"工作上有突破性进展，抓住机会展现能力。\",\n            \"注意健康管理，适当休息放松很重要。\",\n            \"财运亨通，但需谨慎处理投资决策。\",\n            \"人际关系运势上升，适合拓展社交圈。\",\n            \"今天适合独处思考，会有新的领悟。\",\n            \"可能会遇到旧友，重温美好回忆。\",\n            \"尝试新事物会带来意想不到的收获。\",\n            \"保持耐心，好事正在慢慢向你靠近。\"\n        ];\n        \n        const luckyStars = [\"⭐\", \"⭐⭐\", \"⭐⭐⭐\", \"⭐⭐⭐⭐\", \"⭐⭐⭐⭐⭐\"];\n        \n        checkFortuneBtn.addEventListener('click', () => {\n            if (!zodiacSelect.value) {\n                alert('请先选择你的星座哦~');\n                return;\n            }\n            \n            const zodiacName = zodiacSelect.options[zodiacSelect.selectedIndex].text;\n            const randomFortune = fortunes[Math.floor(Math.random() * fortunes.length)];\n            const randomStars = luckyStars[Math.floor(Math.random() * luckyStars.length)];\n            \n            fortuneResult.innerHTML = `\n                <h3>${zodiacName} 今日运势</h3>\n                <p class=\"fortune-text\">${randomFortune}</p>\n                <div class=\"lucky-stars\">幸运指数: ${randomStars}</div>\n                <p>${getZodiacTip(zodiacSelect.value)}</p>\n            `;\n        });\n        \n        function getZodiacTip(zodiac) {\n            const tips = {\n                aries: \"今日幸运色：红色，适合主动出击！\",\n                taurus: \"今日幸运色：绿色，享受美食会带来好运。\",\n                gemini: \"今日幸运色：黄色，多与人交流会带来机会。\",\n                cancer: \"今日幸运色：银色，家庭会给你温暖的力量。\",\n                leo: \"今日幸运色：金色，展现你的领导魅力吧！\",\n                virgo: \"今日幸运色：蓝色，注重细节会带来成功。\",\n                libra: \"今日幸运色：粉色，平衡是你今天的关键词。\",\n                scorpio: \"今日幸运色：紫色，直觉会引导你正确方向。\",\n                sagittarius: \"今日幸运色：橙色，冒险精神会带来惊喜。\",\n                capricorn: \"今日幸运色：棕色，务实的态度会得到回报。\",\n                aquarius: \"今日幸运色：青色，创新思维会解决难题。\",\n                pisces: \"今日幸运色：海蓝色，艺术会激发你的灵感。\"\n            };\n            \n            return tips[zodiac] || \"保持积极心态，今天会是美好的一天！\";\n        }\n        \n        // 新增游戏功能\n        const miniGames = document.querySelectorAll('.mini-game');\n        const gameDetails = document.querySelectorAll('.game-detail');\n        const backButtons = document.querySelectorAll('.back-btn');\n        \n        // 显示游戏详情\n        miniGames.forEach(game => {\n            game.addEventListener('click', () => {\n                const gameId = game.dataset.game;\n                document.getElementById('mini-game-grid').style.display = 'none';\n                document.getElementById(gameId).style.display = 'block';\n            });\n        });\n        \n        // 返回游戏列表\n        backButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                gameDetails.forEach(detail => {\n                    detail.style.display = 'none';\n                });\n                document.getElementById('mini-game-grid').style.display = 'grid';\n            });\n        });\n        \n        // 爱情计算器\n        const calculateLoveBtn = document.getElementById('calculate-love');\n        const lovePercentage = document.getElementById('love-percentage');\n        const loveMessage = document.getElementById('love-message');\n        \n        calculateLoveBtn.addEventListener('click', () => {\n            const name1 = document.getElementById('name1').value.trim();\n            const name2 = document.getElementById('name2').value.trim();\n            \n            if (!name1 || !name2) {\n                alert('请输入两个名字~');\n                return;\n            }\n            \n            // 生成随机爱情指数（60-100%）\n            const percentage = Math.floor(Math.random() * 41) + 60;\n            lovePercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                loveMessage.innerHTML = \"天作之合！你们是命中注定的一对 ❤️\";\n            } else if (percentage >= 75) {\n                loveMessage.innerHTML = \"非常般配！你们的爱情会越来越甜蜜 💕\";\n            } else {\n                loveMessage.innerHTML = \"有发展潜力！多相处会让感情升温 🌹\";\n            }\n        });\n        \n        // 记忆挑战游戏\n        // 记忆挑战游戏\n        const memoryContainer = document.getElementById('memory-game-container');\n        const memoryResult = document.getElementById('memory-result');\n        const restartMemoryBtn = document.getElementById('restart-memory');\n\n        const memorySymbols = ['❤️', '🌟', '🎁', '💋', '🌸', '🎈', '🍭', '🌈'];\n        let memoryCards = [];\n        let flippedCards = [];\n        let matchedPairs = 0;\n\n        function initMemoryGame() {\n            memoryContainer.innerHTML = '';\n            memoryCards = [...memorySymbols, ...memorySymbols];\n            flippedCards = [];\n            matchedPairs = 0;\n            memoryResult.textContent = \"点击卡片开始游戏\";\n\n            // 洗牌\n            for (let i = memoryCards.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [memoryCards[i], memoryCards[j]] = [memoryCards[j], memoryCards[i]];\n            }\n\n            // 创建卡片\n            memoryCards.forEach((symbol, index) => {\n                const card = document.createElement('div');\n                card.classList.add('memory-card');\n                card.dataset.index = index;\n                card.dataset.symbol = symbol;\n                \n                // 卡片正面（默认图标）\n                const front = document.createElement('div');\n                front.classList.add('memory-card-face', 'memory-card-front');\n                front.textContent = '❓'; // 默认图标\n                \n                // 卡片背面（实际图形）\n                const back = document.createElement('div');\n                back.classList.add('memory-card-face', 'memory-card-back');\n                back.textContent = symbol;\n                \n                card.appendChild(front);\n                card.appendChild(back);\n                card.addEventListener('click', flipMemoryCard);\n                memoryContainer.appendChild(card);\n            });\n        }\n\n        function flipMemoryCard() {\n            if (flippedCards.length < 2 && !this.classList.contains('flipped')) {\n                this.classList.add('flipped');\n                flippedCards.push(this);\n\n                if (flippedCards.length === 2) {\n                    setTimeout(checkMatch, 500);\n                }\n            }\n        }\n\n        function checkMatch() {\n            const card1 = flippedCards[0];\n            const card2 = flippedCards[1];\n\n            if (card1.dataset.symbol === card2.dataset.symbol) {\n                card1.classList.add('matched');\n                card2.classList.add('matched');\n                matchedPairs++;\n\n                if (matchedPairs === memorySymbols.length) {\n                    memoryResult.innerHTML = \"🎉 恭喜！你完成了挑战！\";\n                } else {\n                    memoryResult.textContent = `已匹配: ${matchedPairs}/${memorySymbols.length}`;\n                }\n            } else {\n                // 翻回正面时移除flipped类\n                setTimeout(() => {\n                    card1.classList.remove('flipped');\n                    card2.classList.remove('flipped');\n                }, 500);\n            }\n\n            flippedCards = [];\n        }\n\n        // 初始化游戏\n        restartMemoryBtn.addEventListener('click', initMemoryGame);\n        //initMemoryGame();\n        \n        // 甜品占卜\n        const dessertOptions = document.querySelectorAll('.dessert-option');\n        const dessertResult = document.getElementById('dessert-result');\n        \n        dessertOptions.forEach(option => {\n            option.addEventListener('click', () => {\n                const dessert = option.dataset.dessert;\n                let message = \"\";\n                \n                switch (dessert) {\n                    case 'cake':\n                        message = \"🍰 蛋糕代表甜蜜生活！今天会有令人开心的小惊喜，记得留意身边的美好事物哦~\";\n                        break;\n                    case 'icecream':\n                        message = \"🍦 冰淇淋代表清凉心情！今天适合放松自己，做些让自己开心的事情，别太劳累~\";\n                        break;\n                    case 'chocolate':\n                        message = \"🍫 巧克力代表浪漫爱情！今天感情运势上升，适合表达心意或安排甜蜜约会~\";\n                        break;\n                    case 'cookie':\n                        message = \"🍪 饼干代表温馨日常！今天适合与家人朋友共度美好时光，享受简单的小幸福~\";\n                        break;\n                }\n                \n                dessertResult.innerHTML = message;\n            });\n        });\n        \n        // 亲亲计数器\n        const kissCount = document.getElementById('kiss-count');\n        const addKissBtn = document.getElementById('add-kiss');\n        const resetKissBtn = document.getElementById('reset-kiss');\n        let kissCounter = 0;\n        \n        addKissBtn.addEventListener('click', () => {\n            kissCounter++;\n            kissCount.textContent = kissCounter;\n            \n            // 添加动画效果\n            kissCount.style.transform = 'scale(1.2)';\n            setTimeout(() => {\n                kissCount.style.transform = 'scale(1)';\n            }, 300);\n        });\n        \n        resetKissBtn.addEventListener('click', () => {\n            kissCounter = 0;\n            kissCount.textContent = kissCounter;\n        });\n        \n        // 幸运饼干\n        const fortuneCookie = document.querySelector('.fortune-cookie');\n        const fortuneMessage = document.getElementById('fortune-message');\n        \n        const fortuneMessages = [\n            \"今天会有意想不到的好运降临！\",\n            \"微笑是最好的化妆品，今天多笑笑吧~\",\n            \"你的善良会带来美好的回报\",\n            \"勇敢表达你的心意，会有惊喜结果\",\n            \"小小的举动会带来大大的幸福\",\n            \"今天适合尝试新事物，会有意外收获\",\n            \"你的魅力值今天爆表！\",\n            \"放松心情，享受当下的美好时光\",\n            \"给爱的人一个拥抱，温暖彼此\",\n            \"美好的事情正在向你走来\"\n        ];\n        \n        fortuneCookie.addEventListener('click', () => {\n            const randomIndex = Math.floor(Math.random() * fortuneMessages.length);\n            fortuneMessage.textContent = fortuneMessages[randomIndex];\n            \n            // 添加动画效果\n            fortuneCookie.style.transform = 'rotate(10deg)';\n            setTimeout(() => {\n                fortuneCookie.style.transform = 'rotate(0deg)';\n            }, 200);\n        });\n        \n        // 默契测试\n        const testCompatibilityBtn = document.getElementById('test-compatibility');\n        const compatibilityPercentage = document.getElementById('compatibility-percentage');\n        const compatibilityMessage = document.getElementById('compatibility-message');\n        \n        testCompatibilityBtn.addEventListener('click', () => {\n            // 生成随机默契指数（70-100%）\n            const percentage = Math.floor(Math.random() * 31) + 70;\n            compatibilityPercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                compatibilityMessage.innerHTML = \"心灵相通！你们真是天生一对 ❤️\";\n            } else if (percentage >= 80) {\n                compatibilityMessage.innerHTML = \"非常默契！彼此了解程度很高 💕\";\n            } else {\n                compatibilityMessage.innerHTML = \"默契不错！多交流会更加了解彼此 🌹\";\n            }\n        });\n        \n        // 初始化记忆游戏\n        initMemoryGame();\n    </script>\n</body>\n</html>\n\n<p><img src=\"https://tc.z.wiki/autoupload/f/pCwQSduTrK74xeM6D4jdFJO7Q2ZCk-TPg9YW4bt5tjGyl5f0KlZfm6UsKj-HyTuv/20250715/QOWX/360X360/bg_xinhai_360.png\" alt=\"360X360/bg_xinhai_360.png\" /></p>\n","excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <title>宝贝专属心动小游戏乐园</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&family=Dancing+Script:wght@700&display=swap\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Ma Shan Zheng', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: #5a3e36;\n            min-height: 100vh;\n            overflow-x: hidden;\n            padding: 20px 10px;\n            position: relative;\n        }\n        .container {\n            max-width: 500px;\n            margin: 0 auto;\n            position: relative;\n            z-index: 10;\n        }\n        \n        header {\n            text-align: center;\n            padding: 15px 0 25px;\n            position: relative;\n        }\n        \n        .title {\n            font-size: 2.5rem;\n            color: #e84393;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n            margin-bottom: 5px;\n            letter-spacing: 3px;\n        }\n        \n        .subtitle {\n            font-size: 1.2rem;\n            color: #6d214f;\n            margin-bottom: 20px;\n        }\n        \n        .heart-divider {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin: 15px 0;\n        }\n        \n        .heart-divider i {\n            color: #e84393;\n            margin: 0 5px;\n            font-size: 1.2rem;\n        }\n        \n        /* 游戏卡片 */\n        .games-container {\n            display: grid;\n            grid-template-columns: 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .game-card {\n            background: rgba(255, 255, 255, 0.85);\n            border-radius: 20px;\n            padding: 20px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            backdrop-filter: blur(10px);\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .game-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n        }\n        \n        .game-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            border-bottom: 2px dashed #f8a5c2;\n            padding-bottom: 10px;\n        }\n        \n        .game-icon {\n            width: 50px;\n            height: 50px;\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 15px;\n            font-size: 1.5rem;\n            color: white;\n            box-shadow: 0 4px 8px rgba(232, 67, 147, 0.3);\n        }\n        \n        .game-title {\n            font-size: 1.6rem;\n            color: #e84393;\n        }\n        \n        /* 心情日记 */\n        .mood-container {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n        \n        .mood-btn {\n            flex: 1;\n            min-width: 70px;\n            padding: 8px 5px;\n            border-radius: 15px;\n            border: none;\n            background: #f8a5c2;\n            color: white;\n            font-family: inherit;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .mood-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .mood-btn.selected {\n            background: #e84393;\n            box-shadow: 0 0 0 3px white, 0 0 0 6px #f8a5c2;\n        }\n        \n        .diary-input {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            margin: 10px 0;\n            min-height: 100px;\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .diary-input:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .save-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 15px auto 0;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .save-btn:hover {\n            transform: scale(1.05);\n            box-shadow: 0 7px 18px rgba(232, 67, 147, 0.4);\n        }\n        \n        /* 老虎机 */\n        .slot-machine {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin: 20px 0;\n        }\n        \n        .slot {\n            width: 70px;\n            height: 70px;\n            background: linear-gradient(45deg, #6a89cc, #4a69bd);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.1);\n            border: 3px solid #4a69bd;\n        }\n        \n        .pull-btn {\n            background: linear-gradient(45deg, #4a69bd, #1e3799);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            display: block;\n            margin: 20px auto 10px;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(74, 105, 189, 0.3);\n        }\n        \n        .pull-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .slot-result {\n            text-align: center;\n            font-size: 1.3rem;\n            color: #1e3799;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        /* 在线空调 */\n        .ac-control {\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .ac-display {\n            width: 200px;\n            height: 200px;\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            border-radius: 20px;\n            margin: 0 auto 20px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 1.5rem;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .ac-display::before {\n            content: \"\";\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            background: repeating-linear-gradient(\n                transparent,\n                transparent 20px,\n                rgba(255, 255, 255, 0.1) 22px,\n                rgba(255, 255, 255, 0.1) 24px\n            );\n        }\n        \n        .temperature {\n            font-size: 4rem;\n            font-weight: bold;\n            margin: 10px 0;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n        }\n        \n        .ac-controls {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin-top: 15px;\n        }\n        \n        .ac-btn {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            border: none;\n            background: #0984e3;\n            color: white;\n            font-size: 1.5rem;\n            cursor: pointer;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n        \n        /* 星座运势 */\n        .horoscope {\n            text-align: center;\n        }\n        \n        .zodiac-select {\n            width: 100%;\n            padding: 12px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n            margin: 10px 0 20px;\n            color: #5a3e36;\n        }\n        \n        .zodiac-select:focus {\n            outline: none;\n            border-color: #e84393;\n        }\n        \n        .horoscope-result {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 15px;\n            margin-top: 15px;\n            min-height: 150px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border: 2px dashed #f8a5c2;\n        }\n        \n        .fortune-text {\n            font-size: 1.2rem;\n            line-height: 1.6;\n        }\n        \n        .lucky-stars {\n            font-size: 1.8rem;\n            margin: 15px 0;\n            color: gold;\n        }\n        \n        /* 更多游戏 */\n        .game-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin-top: 15px;\n        }\n        \n        .mini-game {\n            background: rgba(255, 255, 255, 0.8);\n            border-radius: 20px;\n            padding: 20px 15px;\n            text-align: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n            cursor: pointer;\n        }\n        \n        .mini-game:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n        \n        .mini-game i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .mini-game h3 {\n            font-size: 1.3rem;\n            color: #e84393;\n        }\n        \n        footer {\n            text-align: center;\n            padding: 20px 0 10px;\n            color: #6d214f;\n            font-size: 0.9rem;\n        }\n        \n        /* 装饰元素 */\n        .floating {\n            position: absolute;\n            z-index: 1;\n            animation: floating 3s infinite ease-in-out;\n        }\n        \n        .heart {\n            color: rgba(232, 67, 147, 0.4);\n            font-size: 2rem;\n        }\n        \n        @keyframes floating {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-15px); }\n            100% { transform: translateY(0px); }\n        }\n        \n        /* 响应式设计 */\n        @media (max-width: 480px) {\n            .title {\n                font-size: 2rem;\n            }\n            .game-title {\n                font-size: 1.4rem;\n            }\n            .slot {\n                width: 60px;\n                height: 60px;\n                font-size: 1.7rem;\n            }\n            .ac-display {\n                width: 180px;\n                height: 180px;\n            }\n        }\n        \n        /* 新增游戏样式 */\n        .game-detail {\n            display: none;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 20px;\n            padding: 20px;\n            margin-top: 20px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n        \n        .game-content {\n            padding: 15px;\n        }\n        \n        .back-btn {\n            background: linear-gradient(45deg, #00cec9, #0984e3);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 1rem;\n            cursor: pointer;\n            margin-top: 15px;\n            display: block;\n            margin-left: auto;\n        }\n        \n        .love-calculator {\n            text-align: center;\n        }\n        \n        .name-inputs {\n            display: flex;\n            gap: 10px;\n            margin: 15px 0;\n        }\n        \n        .name-input {\n            flex: 1;\n            padding: 10px;\n            border-radius: 15px;\n            border: 2px solid #f8a5c2;\n            background: rgba(255, 255, 255, 0.7);\n            font-family: inherit;\n            font-size: 1rem;\n        }\n        \n        .love-result {\n            margin: 20px 0;\n            font-size: 1.3rem;\n        }\n        \n        .love-percentage {\n            font-size: 3rem;\n            font-weight: bold;\n            color: #e84393;\n            margin: 10px 0;\n        }\n        \n        .love-message {\n            font-size: 1.2rem;\n            color: #6d214f;\n        }\n        \n                .memory-game-container {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            gap: 10px;\n            margin: 20px 0;\n            perspective: 1000px;\n        }\n\n        .memory-card {\n            width: 100%;\n            aspect-ratio: 1/1;\n            border-radius: 15px;\n            position: relative;\n            transform-style: preserve-3d;\n            cursor: pointer;\n            transition: transform 0.5s ease;\n        }\n\n        .memory-card-face {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 15px;\n            backface-visibility: hidden;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.8rem;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n\n        .memory-card-front {\n            background: linear-gradient(45deg, #a18cd1, #fbc2eb);\n        }\n\n        .memory-card-back {\n            background: linear-gradient(45deg, #ffecd2, #fcb69f);\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.flipped {\n            transform: rotateY(180deg);\n        }\n\n        .memory-card.matched .memory-card-back {\n            box-shadow: 0 0 15px rgba(232, 67, 147, 0.5);\n            filter: brightness(1.1);\n        }\n\n        .memory-result {\n            text-align: center;\n            font-size: 1.3rem;\n            margin: 15px 0;\n            min-height: 40px;\n        }\n        \n        .dessert-options {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .dessert-option {\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 15px;\n            padding: 20px 10px;\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            border: 2px solid #f8a5c2;\n        }\n        \n        .dessert-option:hover {\n            transform: scale(1.05);\n            background: rgba(248, 165, 194, 0.2);\n        }\n        \n        .dessert-option i {\n            font-size: 2.5rem;\n            color: #e84393;\n            margin-bottom: 10px;\n        }\n        \n        .dessert-result {\n            text-align: center;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            min-height: 100px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n        }\n        \n        .kiss-counter {\n            font-size: 3rem;\n            color: #e84393;\n            margin: 10px 0;\n            font-weight: bold;\n        }\n        \n        .kiss-btn {\n            background: linear-gradient(45deg, #e84393, #fd79a8);\n            color: white;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-size: 1.1rem;\n            cursor: pointer;\n            margin: 10px auto;\n            transition: all 0.3s ease;\n            box-shadow: 0 5px 15px rgba(232, 67, 147, 0.3);\n        }\n        \n        .kiss-btn:hover {\n            transform: scale(1.05);\n        }\n        \n        .fortune-cookie {\n            width: 150px;\n            height: 100px;\n            background: #f3e5ab;\n            border-radius: 0 50% 50% 50%;\n            margin: 0 auto 20px;\n            position: relative;\n            transform: rotate(45deg);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n        }\n        \n        .fortune-cookie:before {\n            content: \"\";\n            position: absolute;\n            width: 80%;\n            height: 20px;\n            background: #d4c690;\n            border-radius: 10px;\n            transform: rotate(-45deg);\n        }\n        \n        .fortune-cookie-text {\n            transform: rotate(-45deg);\n            font-size: 1.5rem;\n            color: #5a3e36;\n        }\n        \n        .fortune-message {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 1.2rem;\n            min-height: 80px;\n        }\n        \n        .compatibility-images {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            margin: 20px 0;\n        }\n        \n        .compatibility-image {\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            overflow: hidden;\n            background: linear-gradient(45deg, #ff9a9e, #fad0c4);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n        }\n        \n        .compatibility-arrow {\n            display: flex;\n            align-items: center;\n            font-size: 2rem;\n            color: #e84393;\n        }\n    </style>\n</head>\n<body>\n    <!-- 飘动的心形装饰 -->\n    <!-- <div class=\"floating\" style=\"top: 5%; left: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"top: 15%; right: 15%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 10%; left: 20%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div>\n    <div class=\"floating\" style=\"bottom: 15%; right: 10%;\">\n        <i class=\"fas fa-heart heart\"></i>\n    </div> -->\n    \n    <div class=\"container\">\n        <header>\n            <h1 class=\"title\">❤️ 心动小游戏乐园 ❤️</h1>\n            <p class=\"subtitle\">专属于韩思宇的甜蜜互动空间</p>\n            <div class=\"heart-divider\">\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n                <i class=\"fas fa-heart\"></i>\n            </div>\n        </header>\n        \n        <div class=\"games-container\">\n            <!-- 心情日记本 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-book\"></i>\n                    </div>\n                    <h2 class=\"game-title\">心情日记本</h2>\n                </div>\n                <p>记录今天的点点滴滴，分享你的心情~</p>\n                \n                <div class=\"mood-container\">\n                    <button class=\"mood-btn\" data-mood=\"happy\">😊 开心</button>\n                    <button class=\"mood-btn\" data-mood=\"excited\">😆 兴奋</button>\n                    <button class=\"mood-btn\" data-mood=\"calm\">😌 平静</button>\n                    <button class=\"mood-btn\" data-mood=\"tired\">😴 疲惫</button>\n                </div>\n                \n                <textarea class=\"diary-input\" placeholder=\"今天发生了什么有趣的事情呢？\"></textarea>\n                \n                <button class=\"save-btn\" id=\"save-diary\">\n                    <i class=\"fas fa-save\"></i> 保存心情日记\n                </button>\n            </div>\n            \n            <!-- 老虎机抽奖 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-dice\"></i>\n                    </div>\n                    <h2 class=\"game-title\">幸运老虎机</h2>\n                </div>\n                <p>试试今天的运气，赢取特别奖励！</p>\n                \n                <div class=\"slot-machine\">\n                    <div class=\"slot\" id=\"slot1\">🍓</div>\n                    <div class=\"slot\" id=\"slot2\">🍒</div>\n                    <div class=\"slot\" id=\"slot3\">🍋</div>\n                </div>\n                \n                <div class=\"slot-result\" id=\"slot-result\">等待抽奖...</div>\n                \n                <button class=\"pull-btn\" id=\"pull-lever\">\n                    <i class=\"fas fa-hand-point-down\"></i> 拉杆抽奖\n                </button>\n            </div>\n            \n            <!-- 在线空调 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-wind\"></i>\n                    </div>\n                    <h2 class=\"game-title\">在线小空调</h2>\n                </div>\n                <p>热了吗？打开空调凉爽一下吧！</p>\n                \n                <div class=\"ac-control\">\n                    <div class=\"ac-display\">\n                        <div>当前温度</div>\n                        <div class=\"temperature\" id=\"temp\">26°C</div>\n                        <div>舒适模式</div>\n                    </div>\n                    \n                    <div class=\"ac-controls\">\n                        <button class=\"ac-btn\" id=\"temp-down\">－</button>\n                        <button class=\"ac-btn\" id=\"ac-power\">\n                            <i class=\"fas fa-power-off\"></i>\n                        </button>\n                        <button class=\"ac-btn\" id=\"temp-up\">＋</button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 星座运势 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-star\"></i>\n                    </div>\n                    <h2 class=\"game-title\">星座运势</h2>\n                </div>\n                <p>看看星星们今天想对你说什么？</p>\n                \n                <div class=\"horoscope\">\n                    <select class=\"zodiac-select\" id=\"zodiac\">\n                        <option value=\"\">选择你的星座</option>\n                        <option value=\"aries\">白羊座 ♈</option>\n                        <option value=\"taurus\">金牛座 ♉</option>\n                        <option value=\"gemini\">双子座 ♊</option>\n                        <option value=\"cancer\">巨蟹座 ♋</option>\n                        <option value=\"leo\">狮子座 ♌</option>\n                        <option value=\"virgo\">处女座 ♍</option>\n                        <option value=\"libra\">天秤座 ♎</option>\n                        <option value=\"scorpio\">天蝎座 ♏</option>\n                        <option value=\"sagittarius\">射手座 ♐</option>\n                        <option value=\"capricorn\">摩羯座 ♑</option>\n                        <option value=\"aquarius\">水瓶座 ♒</option>\n                        <option value=\"pisces\">双鱼座 ♓</option>\n                    </select>\n                    \n                    <button class=\"save-btn\" id=\"check-fortune\">\n                        <i class=\"fas fa-crystal-ball\"></i> 查看今日运势\n                    </button>\n                    \n                    <div class=\"horoscope-result\" id=\"fortune-result\">\n                        <p class=\"fortune-text\">选择星座查看今日运势</p>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 更多游戏 -->\n            <div class=\"game-card\">\n                <div class=\"game-header\">\n                    <div class=\"game-icon\">\n                        <i class=\"fas fa-plus-circle\"></i>\n                    </div>\n                    <h2 class=\"game-title\">更多小游戏</h2>\n                </div>\n                <p>点击图标开启更多有趣游戏！</p>\n                \n                <div class=\"game-grid\" id=\"mini-game-grid\">\n                    <div class=\"mini-game\" data-game=\"love-calculator\">\n                        <i class=\"fas fa-heart\"></i>\n                        <h3>爱情计算器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"memory-game\">\n                        <i class=\"fas fa-brain\"></i>\n                        <h3>记忆挑战</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"dessert-fortune\">\n                        <i class=\"fas fa-cookie-bite\"></i>\n                        <h3>甜品占卜</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"kiss-counter\">\n                        <i class=\"fas fa-kiss-wink-heart\"></i>\n                        <h3>亲亲计数器</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"fortune-cookie\">\n                        <i class=\"fas fa-cookie\"></i>\n                        <h3>幸运饼干</h3>\n                    </div>\n                    <div class=\"mini-game\" data-game=\"compatibility\">\n                        <i class=\"fas fa-people-arrows\"></i>\n                        <h3>默契测试</h3>\n                    </div>\n                </div>\n                \n                <!-- 爱情计算器 -->\n                <div id=\"love-calculator\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>❤️ 爱情计算器 ❤️</h3>\n                        <p>计算你们之间的爱情指数</p>\n                        \n                        <div class=\"name-inputs\">\n                            <input type=\"text\" class=\"name-input\" id=\"name1\" placeholder=\"你的名字\">\n                            <input type=\"text\" class=\"name-input\" id=\"name2\" placeholder=\"TA的名字\">\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"calculate-love\">\n                            <i class=\"fas fa-heart\"></i> 计算爱情指数\n                        </button>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"love-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"love-message\">输入名字查看你们的缘分</div>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 记忆挑战 -->\n                <div id=\"memory-game\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🧠 记忆挑战 🧠</h3>\n                        <p>记住卡片位置，找到所有配对！</p>\n                        \n                        <div class=\"memory-game-container\" id=\"memory-game-container\"></div>\n                        \n                        <div class=\"memory-result\" id=\"memory-result\">点击卡片开始游戏</div>\n                        \n                        <button class=\"save-btn\" id=\"restart-memory\">\n                            <i class=\"fas fa-redo\"></i> 重新开始\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 甜品占卜 -->\n                <div id=\"dessert-fortune\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍰 甜品占卜 🍰</h3>\n                        <p>选择你喜欢的甜品，看看今天的运势</p>\n                        \n                        <div class=\"dessert-options\">\n                            <div class=\"dessert-option\" data-dessert=\"cake\">\n                                <i class=\"fas fa-birthday-cake\"></i>\n                                <div>蛋糕</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"icecream\">\n                                <i class=\"fas fa-ice-cream\"></i>\n                                <div>冰淇淋</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"chocolate\">\n                                <i class=\"fas fa-candy-cane\"></i>\n                                <div>巧克力</div>\n                            </div>\n                            <div class=\"dessert-option\" data-dessert=\"cookie\">\n                                <i class=\"fas fa-cookie\"></i>\n                                <div>饼干</div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"dessert-result\" id=\"dessert-result\">\n                            请选择一种甜品进行占卜\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 亲亲计数器 -->\n                <div id=\"kiss-counter\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>💋 亲亲计数器 💋</h3>\n                        <p>记录你们今天的甜蜜亲亲次数</p>\n                        \n                        <div class=\"kiss-counter\" id=\"kiss-count\">0</div>\n                        \n                        <button class=\"kiss-btn\" id=\"add-kiss\">\n                            <i class=\"fas fa-kiss-wink-heart\"></i> 亲亲 +1\n                        </button>\n                        \n                        <button class=\"kiss-btn\" id=\"reset-kiss\">\n                            <i class=\"fas fa-redo\"></i> 重置计数\n                        </button>\n                        \n                        <div style=\"margin-top: 20px; font-size: 1.1rem;\">\n                            <p>今天也要多多亲亲哦 😘</p>\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 幸运饼干 -->\n                <div id=\"fortune-cookie\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>🍪 幸运饼干 🍪</h3>\n                        <p>点击饼干获取今日专属幸运签</p>\n                        \n                        <div class=\"fortune-cookie\" id=\"fortune-cookie\">\n                            <div class=\"fortune-cookie-text\">?</div>\n                        </div>\n                        \n                        <div class=\"fortune-message\" id=\"fortune-message\">\n                            点击饼干获取你的幸运签\n                        </div>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n                \n                <!-- 默契测试 -->\n                <div id=\"compatibility\" class=\"game-detail\">\n                    <div class=\"game-content\">\n                        <h3>👫 默契测试 👫</h3>\n                        <p>看看你们有多了解彼此</p>\n                        \n                        <div class=\"compatibility-images\">\n                            <div class=\"compatibility-image\">👩</div>\n                            <div class=\"compatibility-arrow\">❤️</div>\n                            <div class=\"compatibility-image\">👨</div>\n                        </div>\n                        \n                        <div class=\"love-result\">\n                            <div class=\"love-percentage\" id=\"compatibility-percentage\">0%</div>\n                            <div class=\"love-message\" id=\"compatibility-message\">测试你们的默契程度</div>\n                        </div>\n                        \n                        <button class=\"save-btn\" id=\"test-compatibility\">\n                            <i class=\"fas fa-heart\"></i> 测试默契\n                        </button>\n                    </div>\n                    <button class=\"back-btn\">返回游戏列表</button>\n                </div>\n            </div>\n        </div>\n        \n        <footer>\n            <p>❤️ 专属于你的心动空间 ❤️</p>\n            <p>每一天都因你而甜蜜 | 设计：冯笑一</p>\n        </footer>\n    </div>\n\n    <script>\n        // 心情日记功能\n        const moodButtons = document.querySelectorAll('.mood-btn');\n        const diaryInput = document.querySelector('.diary-input');\n        const saveDiaryBtn = document.getElementById('save-diary');\n        \n        let selectedMood = '';\n        \n        moodButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                moodButtons.forEach(btn => btn.classList.remove('selected'));\n                button.classList.add('selected');\n                selectedMood = button.dataset.mood;\n            });\n        });\n        \n        saveDiaryBtn.addEventListener('click', () => {\n            if (!selectedMood) {\n                alert('请先选择一种心情哦~');\n                return;\n            }\n            \n            if (diaryInput.value.trim() === '') {\n                alert('请写点今天的心情故事吧~');\n                return;\n            }\n            \n            // 这里实际应用中应该保存到本地存储或服务器\n            alert('心情日记已保存！\\n\\n心情: ' + \n                  document.querySelector('.mood-btn.selected').textContent + \n                  '\\n内容: ' + diaryInput.value);\n            \n            // 重置表单\n            moodButtons.forEach(btn => btn.classList.remove('selected'));\n            diaryInput.value = '';\n            selectedMood = '';\n        });\n        \n        // 老虎机功能\n        const slots = ['🍎', '🍊', '🍇', '🍓', '🍒', '🍋', '🍉', '🍑', '🍍', '🥝'];\n        const slotElements = [document.getElementById('slot1'), \n                            document.getElementById('slot2'), \n                            document.getElementById('slot3')];\n        const slotResult = document.getElementById('slot-result');\n        const pullLeverBtn = document.getElementById('pull-lever');\n        \n        function spinSlot(slotElement) {\n            let count = 0;\n            const maxSpins = 20 + Math.floor(Math.random() * 10);\n            const interval = setInterval(() => {\n                slotElement.textContent = slots[Math.floor(Math.random() * slots.length)];\n                count++;\n                if (count > maxSpins) {\n                    clearInterval(interval);\n                }\n            }, 100);\n        }\n        \n        pullLeverBtn.addEventListener('click', () => {\n            // 重置结果\n            slotResult.textContent = \"旋转中...\";\n            pullLeverBtn.disabled = true;\n            \n            // 旋转每个老虎机\n            slotElements.forEach(slot => spinSlot(slot));\n            \n            // 等待所有老虎机停止后显示结果\n            setTimeout(() => {\n                const results = [\n                    slotElements[0].textContent,\n                    slotElements[1].textContent,\n                    slotElements[2].textContent\n                ];\n                \n                // 检查是否中奖\n                if (results[0] === results[1] && results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎉 恭喜！大奖！获得甜蜜之吻 💋\";\n                } else if (results[0] === results[1] || results[1] === results[2]) {\n                    slotResult.innerHTML = \"🎊 恭喜！小奖！获得爱的拥抱 🤗\";\n                } else {\n                    slotResult.textContent = \"😊 感谢参与！明天再来试试吧~\";\n                }\n                \n                pullLeverBtn.disabled = false;\n            }, 3000);\n        });\n        \n        // 在线空调功能\n        const tempDisplay = document.getElementById('temp');\n        const tempDownBtn = document.getElementById('temp-down');\n        const tempUpBtn = document.getElementById('temp-up');\n        const acPowerBtn = document.getElementById('ac-power');\n        \n        let currentTemp = 26;\n        let isPowerOn = true;\n        \n        function updateAC() {\n            tempDisplay.textContent = currentTemp + \"°C\";\n            acPowerBtn.innerHTML = isPowerOn ? '<i class=\"fas fa-power-off\"></i>' : '<i class=\"fas fa-power-off\" style=\"color:#ddd\"></i>';\n            acPowerBtn.style.background = isPowerOn ? \"#0984e3\" : \"#95afc0\";\n        }\n        \n        tempDownBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp > 16) {\n                currentTemp--;\n                updateAC();\n            }\n        });\n        \n        tempUpBtn.addEventListener('click', () => {\n            if (!isPowerOn) return;\n            if (currentTemp < 30) {\n                currentTemp++;\n                updateAC();\n            }\n        });\n        \n        acPowerBtn.addEventListener('click', () => {\n            isPowerOn = !isPowerOn;\n            updateAC();\n        });\n        \n        // 初始化空调\n        updateAC();\n        \n        // 星座运势功能\n        const zodiacSelect = document.getElementById('zodiac');\n        const fortuneResult = document.getElementById('fortune-result');\n        const checkFortuneBtn = document.getElementById('check-fortune');\n        \n        const fortunes = [\n            \"今天会有意外惊喜！保持开放心态迎接新机会。\",\n            \"感情运势上升，适合表达心意或约会。\",\n            \"工作上有突破性进展，抓住机会展现能力。\",\n            \"注意健康管理，适当休息放松很重要。\",\n            \"财运亨通，但需谨慎处理投资决策。\",\n            \"人际关系运势上升，适合拓展社交圈。\",\n            \"今天适合独处思考，会有新的领悟。\",\n            \"可能会遇到旧友，重温美好回忆。\",\n            \"尝试新事物会带来意想不到的收获。\",\n            \"保持耐心，好事正在慢慢向你靠近。\"\n        ];\n        \n        const luckyStars = [\"⭐\", \"⭐⭐\", \"⭐⭐⭐\", \"⭐⭐⭐⭐\", \"⭐⭐⭐⭐⭐\"];\n        \n        checkFortuneBtn.addEventListener('click', () => {\n            if (!zodiacSelect.value) {\n                alert('请先选择你的星座哦~');\n                return;\n            }\n            \n            const zodiacName = zodiacSelect.options[zodiacSelect.selectedIndex].text;\n            const randomFortune = fortunes[Math.floor(Math.random() * fortunes.length)];\n            const randomStars = luckyStars[Math.floor(Math.random() * luckyStars.length)];\n            \n            fortuneResult.innerHTML = `\n                <h3>${zodiacName} 今日运势</h3>\n                <p class=\"fortune-text\">${randomFortune}</p>\n                <div class=\"lucky-stars\">幸运指数: ${randomStars}</div>\n                <p>${getZodiacTip(zodiacSelect.value)}</p>\n            `;\n        });\n        \n        function getZodiacTip(zodiac) {\n            const tips = {\n                aries: \"今日幸运色：红色，适合主动出击！\",\n                taurus: \"今日幸运色：绿色，享受美食会带来好运。\",\n                gemini: \"今日幸运色：黄色，多与人交流会带来机会。\",\n                cancer: \"今日幸运色：银色，家庭会给你温暖的力量。\",\n                leo: \"今日幸运色：金色，展现你的领导魅力吧！\",\n                virgo: \"今日幸运色：蓝色，注重细节会带来成功。\",\n                libra: \"今日幸运色：粉色，平衡是你今天的关键词。\",\n                scorpio: \"今日幸运色：紫色，直觉会引导你正确方向。\",\n                sagittarius: \"今日幸运色：橙色，冒险精神会带来惊喜。\",\n                capricorn: \"今日幸运色：棕色，务实的态度会得到回报。\",\n                aquarius: \"今日幸运色：青色，创新思维会解决难题。\",\n                pisces: \"今日幸运色：海蓝色，艺术会激发你的灵感。\"\n            };\n            \n            return tips[zodiac] || \"保持积极心态，今天会是美好的一天！\";\n        }\n        \n        // 新增游戏功能\n        const miniGames = document.querySelectorAll('.mini-game');\n        const gameDetails = document.querySelectorAll('.game-detail');\n        const backButtons = document.querySelectorAll('.back-btn');\n        \n        // 显示游戏详情\n        miniGames.forEach(game => {\n            game.addEventListener('click', () => {\n                const gameId = game.dataset.game;\n                document.getElementById('mini-game-grid').style.display = 'none';\n                document.getElementById(gameId).style.display = 'block';\n            });\n        });\n        \n        // 返回游戏列表\n        backButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                gameDetails.forEach(detail => {\n                    detail.style.display = 'none';\n                });\n                document.getElementById('mini-game-grid').style.display = 'grid';\n            });\n        });\n        \n        // 爱情计算器\n        const calculateLoveBtn = document.getElementById('calculate-love');\n        const lovePercentage = document.getElementById('love-percentage');\n        const loveMessage = document.getElementById('love-message');\n        \n        calculateLoveBtn.addEventListener('click', () => {\n            const name1 = document.getElementById('name1').value.trim();\n            const name2 = document.getElementById('name2').value.trim();\n            \n            if (!name1 || !name2) {\n                alert('请输入两个名字~');\n                return;\n            }\n            \n            // 生成随机爱情指数（60-100%）\n            const percentage = Math.floor(Math.random() * 41) + 60;\n            lovePercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                loveMessage.innerHTML = \"天作之合！你们是命中注定的一对 ❤️\";\n            } else if (percentage >= 75) {\n                loveMessage.innerHTML = \"非常般配！你们的爱情会越来越甜蜜 💕\";\n            } else {\n                loveMessage.innerHTML = \"有发展潜力！多相处会让感情升温 🌹\";\n            }\n        });\n        \n        // 记忆挑战游戏\n        // 记忆挑战游戏\n        const memoryContainer = document.getElementById('memory-game-container');\n        const memoryResult = document.getElementById('memory-result');\n        const restartMemoryBtn = document.getElementById('restart-memory');\n\n        const memorySymbols = ['❤️', '🌟', '🎁', '💋', '🌸', '🎈', '🍭', '🌈'];\n        let memoryCards = [];\n        let flippedCards = [];\n        let matchedPairs = 0;\n\n        function initMemoryGame() {\n            memoryContainer.innerHTML = '';\n            memoryCards = [...memorySymbols, ...memorySymbols];\n            flippedCards = [];\n            matchedPairs = 0;\n            memoryResult.textContent = \"点击卡片开始游戏\";\n\n            // 洗牌\n            for (let i = memoryCards.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [memoryCards[i], memoryCards[j]] = [memoryCards[j], memoryCards[i]];\n            }\n\n            // 创建卡片\n            memoryCards.forEach((symbol, index) => {\n                const card = document.createElement('div');\n                card.classList.add('memory-card');\n                card.dataset.index = index;\n                card.dataset.symbol = symbol;\n                \n                // 卡片正面（默认图标）\n                const front = document.createElement('div');\n                front.classList.add('memory-card-face', 'memory-card-front');\n                front.textContent = '❓'; // 默认图标\n                \n                // 卡片背面（实际图形）\n                const back = document.createElement('div');\n                back.classList.add('memory-card-face', 'memory-card-back');\n                back.textContent = symbol;\n                \n                card.appendChild(front);\n                card.appendChild(back);\n                card.addEventListener('click', flipMemoryCard);\n                memoryContainer.appendChild(card);\n            });\n        }\n\n        function flipMemoryCard() {\n            if (flippedCards.length < 2 && !this.classList.contains('flipped')) {\n                this.classList.add('flipped');\n                flippedCards.push(this);\n\n                if (flippedCards.length === 2) {\n                    setTimeout(checkMatch, 500);\n                }\n            }\n        }\n\n        function checkMatch() {\n            const card1 = flippedCards[0];\n            const card2 = flippedCards[1];\n\n            if (card1.dataset.symbol === card2.dataset.symbol) {\n                card1.classList.add('matched');\n                card2.classList.add('matched');\n                matchedPairs++;\n\n                if (matchedPairs === memorySymbols.length) {\n                    memoryResult.innerHTML = \"🎉 恭喜！你完成了挑战！\";\n                } else {\n                    memoryResult.textContent = `已匹配: ${matchedPairs}/${memorySymbols.length}`;\n                }\n            } else {\n                // 翻回正面时移除flipped类\n                setTimeout(() => {\n                    card1.classList.remove('flipped');\n                    card2.classList.remove('flipped');\n                }, 500);\n            }\n\n            flippedCards = [];\n        }\n\n        // 初始化游戏\n        restartMemoryBtn.addEventListener('click', initMemoryGame);\n        //initMemoryGame();\n        \n        // 甜品占卜\n        const dessertOptions = document.querySelectorAll('.dessert-option');\n        const dessertResult = document.getElementById('dessert-result');\n        \n        dessertOptions.forEach(option => {\n            option.addEventListener('click', () => {\n                const dessert = option.dataset.dessert;\n                let message = \"\";\n                \n                switch (dessert) {\n                    case 'cake':\n                        message = \"🍰 蛋糕代表甜蜜生活！今天会有令人开心的小惊喜，记得留意身边的美好事物哦~\";\n                        break;\n                    case 'icecream':\n                        message = \"🍦 冰淇淋代表清凉心情！今天适合放松自己，做些让自己开心的事情，别太劳累~\";\n                        break;\n                    case 'chocolate':\n                        message = \"🍫 巧克力代表浪漫爱情！今天感情运势上升，适合表达心意或安排甜蜜约会~\";\n                        break;\n                    case 'cookie':\n                        message = \"🍪 饼干代表温馨日常！今天适合与家人朋友共度美好时光，享受简单的小幸福~\";\n                        break;\n                }\n                \n                dessertResult.innerHTML = message;\n            });\n        });\n        \n        // 亲亲计数器\n        const kissCount = document.getElementById('kiss-count');\n        const addKissBtn = document.getElementById('add-kiss');\n        const resetKissBtn = document.getElementById('reset-kiss');\n        let kissCounter = 0;\n        \n        addKissBtn.addEventListener('click', () => {\n            kissCounter++;\n            kissCount.textContent = kissCounter;\n            \n            // 添加动画效果\n            kissCount.style.transform = 'scale(1.2)';\n            setTimeout(() => {\n                kissCount.style.transform = 'scale(1)';\n            }, 300);\n        });\n        \n        resetKissBtn.addEventListener('click', () => {\n            kissCounter = 0;\n            kissCount.textContent = kissCounter;\n        });\n        \n        // 幸运饼干\n        const fortuneCookie = document.querySelector('.fortune-cookie');\n        const fortuneMessage = document.getElementById('fortune-message');\n        \n        const fortuneMessages = [\n            \"今天会有意想不到的好运降临！\",\n            \"微笑是最好的化妆品，今天多笑笑吧~\",\n            \"你的善良会带来美好的回报\",\n            \"勇敢表达你的心意，会有惊喜结果\",\n            \"小小的举动会带来大大的幸福\",\n            \"今天适合尝试新事物，会有意外收获\",\n            \"你的魅力值今天爆表！\",\n            \"放松心情，享受当下的美好时光\",\n            \"给爱的人一个拥抱，温暖彼此\",\n            \"美好的事情正在向你走来\"\n        ];\n        \n        fortuneCookie.addEventListener('click', () => {\n            const randomIndex = Math.floor(Math.random() * fortuneMessages.length);\n            fortuneMessage.textContent = fortuneMessages[randomIndex];\n            \n            // 添加动画效果\n            fortuneCookie.style.transform = 'rotate(10deg)';\n            setTimeout(() => {\n                fortuneCookie.style.transform = 'rotate(0deg)';\n            }, 200);\n        });\n        \n        // 默契测试\n        const testCompatibilityBtn = document.getElementById('test-compatibility');\n        const compatibilityPercentage = document.getElementById('compatibility-percentage');\n        const compatibilityMessage = document.getElementById('compatibility-message');\n        \n        testCompatibilityBtn.addEventListener('click', () => {\n            // 生成随机默契指数（70-100%）\n            const percentage = Math.floor(Math.random() * 31) + 70;\n            compatibilityPercentage.textContent = `${percentage}%`;\n            \n            // 根据百分比显示不同消息\n            if (percentage >= 90) {\n                compatibilityMessage.innerHTML = \"心灵相通！你们真是天生一对 ❤️\";\n            } else if (percentage >= 80) {\n                compatibilityMessage.innerHTML = \"非常默契！彼此了解程度很高 💕\";\n            } else {\n                compatibilityMessage.innerHTML = \"默契不错！多交流会更加了解彼此 🌹\";\n            }\n        });\n        \n        // 初始化记忆游戏\n        initMemoryGame();\n    </script>\n</body>\n</html>\n\n<p><img src=\"https://tc.z.wiki/autoupload/f/pCwQSduTrK74xeM6D4jdFJO7Q2ZCk-TPg9YW4bt5tjGyl5f0KlZfm6UsKj-HyTuv/20250715/QOWX/360X360/bg_xinhai_360.png\" alt=\"360X360/bg_xinhai_360.png\" /></p>\n"},{"title":"基于Cortex-M0内核的Bootloader开发指南","mermaid":true,"date":"2025-03-27T16:00:00.000Z","comments":1,"_content":"\n\n> <font style=\"color:rgb(64, 64, 64);\">在嵌入式系统中，Bootloader是芯片上电后运行的第一段代码，负责初始化硬件、验证应用程序完整性，并实现固件升级功能。针对资源受限的</font>**<font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font>**<font style=\"color:rgb(64, 64, 64);\">内核的MM32G0001的MCU实现，过程中设计到中断向量表的不同的区分。</font>\n>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">一、Bootloader的核心作用</font>**\n1. **<font style=\"color:rgb(64, 64, 64);\">硬件初始化</font>**<font style=\"color:rgb(64, 64, 64);\">：配置时钟、外设、中断向量表。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">应用程序跳转</font>**<font style=\"color:rgb(64, 64, 64);\">：验证APP有效性后跳转到用户程序。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">固件升级</font>**<font style=\"color:rgb(64, 64, 64);\">：通过UART、I2C等接口接收新固件并烧录到Flash。</font>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">二、Bootloader工作流程图</font>**\n```plain\n+---------------------+\n|      上电启动        |\n+---------------------+\n           |\n           V\n+---------------------+\n| 初始化时钟、GPIO、串口 |\n+---------------------+\n           |\n           V\n+---------------------+\n| 检测升级触发条件       |\n| (如按键/USB信号)       |\n+---------------------+\n           |------------------- 是 -------------------+\n           |                                         |\n          否                                          |\n           |                                         V\n           V                                +---------------------+\n+---------------------+                     |  进入Bootloader模式  |\n| 检查APP有效性         |                     | (等待固件传输)        |\n| (CRC校验或标志位)      |                     +---------------------+\n+---------------------+                                |\n           |                                           |\n          有效                                          V\n           |                                +---------------------+\n           V                                |  接收数据并写入Flash |\n+---------------------+                     |  (分块校验+烧录)     |\n| 跳转到应用程序(APP)   |                     +---------------------+\n+---------------------+                                |\n           |                                           |\n           +------------------- 完成 ------------------+\n                                           |\n                                           V\n                                +---------------------+\n                                | 复位或跳转到新APP     |\n                                +---------------------+\n```\n\n#### **<font style=\"color:rgb(64, 64, 64);\">三、关键设计步骤</font>**\n##### **<font style=\"color:rgb(64, 64, 64);\">1. 内存分配</font>**\n+ **<font style=\"color:rgb(64, 64, 64);\">Bootloader区域</font>**<font style=\"color:rgb(64, 64, 64);\">：占用Flash起始地址（如0x08000000~0x080013FF）。</font>\n+ **<font style=\"color:rgb(64, 64, 64);\">应用程序区域</font>**<font style=\"color:rgb(64, 64, 64);\">：紧随其后（如0x08001400~0x080037FF）。</font>\n+ **<font style=\"color:rgb(64, 64, 64);\">中断向量表重定向</font>**<font style=\"color:rgb(64, 64, 64);\">：APP中需通过</font>`<font style=\"color:rgb(64, 64, 64);\">SCB->VTOR</font>`<font style=\"color:rgb(64, 64, 64);\">设置偏移量。(M0内核没有)</font>\n\n**<font style=\"color:rgb(64, 64, 64);\">链接脚本示例（APP端）</font>**<font style=\"color:rgb(64, 64, 64);\"> </font><font style=\"color:rgb(64, 64, 64);\">：</font>\n\n```c\nMEMORY {\n        FLASH (rx) : ORIGIN = 0x08001400, LENGTH = 9K\n        RAM (rwx)  : ORIGIN = 0x20000000, LENGTH = 2K\n    }\n```\n\nkeill设置\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png)\n\n##### **<font style=\"color:rgb(64, 64, 64);\">2. 跳转到应用程序</font>**\n```c\ntypedef void (*AppEntry)(void);\n\nvoid JumpToApp(uint32_t appAddress) {\n    // 检查栈顶地址是否合法\n    if (((*(uint32_t*)appAddress) & 0x2FFE0000) == 0x20000000) {\n        // 设置APP的栈指针和复位向量\n        __set_MSP(*(uint32_t*)appAddress);\n        AppEntry entry = (AppEntry)(*(uint32_t*)(appAddress + 4));\n\n        // 关闭所有中断\n        __disable_irq();\n\n        // 跳转到APP\n        entry();\n    }\n}\n```\n\n##### **<font style=\"color:rgb(64, 64, 64);\">3. 固件接收与烧录</font>**\n<font style=\"color:rgb(64, 64, 64);\">通过UART接收数据并写入Flash：</font>\n\n```c\nFLASH_Status flash_bsp_write_block(uint16_t BlockNum, uint8_t *data)\n{\n    FLASH_Status err_Status;\n\n    // 解锁闪存以允许写操作\n    FLASH_Unlock();\n\n    // 清除所有错误标志位，确保写操作前状态标志处于已知状态\n    FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);\n\n    /* 将数据写入指定的页 */\n    for (uint16_t i = 0; i < 128; i += 4)\n    {\n        err_Status += FLASH_ProgramWord(FLASH_APP1_BASE_ADDRESS + (BlockNum * 0x80) + i, *(uint32_t *)(data + i));\n    }\n\n    // 清除操作结束标志位，为后续操作做好准备\n    FLASH_ClearFlag(FLASH_FLAG_EOP);\n\n    // 锁定闪存以防止未经授权的访问或修改\n    FLASH_Lock();\n\n    // 返回写操作的状态\n    return err_Status;\n}\n\n```\n\n##### **<font style=\"color:rgb(64, 64, 64);\">4. 升级触发条件检测</font>**\n<font style=\"color:rgb(64, 64, 64);\">如检测到指令</font>\n\n```c\nif(reg_value == 0x0000)\n    {\n        enter_app();\n    }\n```\n\n#### **<font style=\"color:rgb(64, 64, 64);\">四、调试技巧</font>**\n1. **<font style=\"color:rgb(64, 64, 64);\">半主机问题</font>**<font style=\"color:rgb(64, 64, 64);\">：禁用标准库依赖，避免在Bootloader中使用printf</font><font style=\"color:rgb(64, 64, 64);\">。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">看门狗</font>**<font style=\"color:rgb(64, 64, 64);\">：在长时间操作中复位看门狗。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">Flash保护</font>**<font style=\"color:rgb(64, 64, 64);\">：确保操作前正确解锁Flash。</font>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">五、中断向量表详解</font>**\n##### <font style=\"color:rgb(64, 64, 64);\">1、对比 Cortex-M0 和 M3 内核的中断向量表迁移方式：</font>\n| **<font style=\"color:rgb(64, 64, 64);\">特性</font>** | **<font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font>** | **<font style=\"color:rgb(64, 64, 64);\">Cortex-M3</font>** |\n| --- | --- | --- |\n| <font style=\"color:rgb(64, 64, 64);\">向量表偏移寄存器(VTOR)</font> | **<font style=\"color:rgb(64, 64, 64);\">可选特性</font>**<font style=\"color:rgb(64, 64, 64);\">（依赖芯片厂商实现）</font> | **<font style=\"color:rgb(64, 64, 64);\">强制支持</font>**<font style=\"color:rgb(64, 64, 64);\">（SCB->VTOR 寄存器）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">默认向量表地址</font> | <font style=\"color:rgb(64, 64, 64);\">0x00000000（固定）</font> | <font style=\"color:rgb(64, 64, 64);\">0x00000000（可通过VTOR动态修改）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">重映射灵活性</font> | <font style=\"color:rgb(64, 64, 64);\">依赖Flash物理地址或厂商自定义方法</font> | <font style=\"color:rgb(64, 64, 64);\">任意地址（通过VTOR设置）</font> |\n\n\n**<font style=\"color:rgb(64, 64, 64);\">注</font>**<font style=\"color:rgb(64, 64, 64);\">：MM32G0001 的 VTOR 功能</font>**<font style=\"color:rgb(64, 64, 64);\">由芯片厂商自定义实现</font>**<font style=\"color:rgb(64, 64, 64);\">，需查阅手册确认其行为！MM32G0001没有此功能</font>\n\n<font style=\"color:rgb(64, 64, 64);\">####</font>\n\n##### <font style=\"color:rgb(64, 64, 64);\">2、MM32G0001中断向量表配置方法</font>\n###### **<font style=\"color:rgb(64, 64, 64);\">M0内核中断向量表偏移存在问题</font>**\n+ <font style=\"color:rgb(64, 64, 64);\">芯片复位后默认从 </font><font style=\"color:rgb(64, 64, 64);\">0x08000000</font><font style=\"color:rgb(64, 64, 64);\">（Flash起始地址）加载向量表。向量表的位置由Flash的物理地址决定，无法通过软件动态调整。</font>\n\n###### **<font style=\"color:rgb(64, 64, 64);\">MM32G0001的特殊性</font>**\n+ <font style=\"color:rgb(64, 64, 64);\">MM32G0001虽然是Cortex-M0内核，但支持自定义的向量表映射机制，需参考具体芯片手册。</font>\n\n###### 解决方法\n通过切换内存映射方法，切换中断向量表，系统默认将flash的0x8000000地址映射到地址0x000000地址，通过修改SYSCFG->CFGR寄存器将ram的0x20000000内存映射到地址0x000000，通过查阅可以看到中断入口函数存放在bin文件的最前面：\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png)\n\n再通过启动文件可以看到一共48个中断<font style=\"color:rgb(77, 77, 77);\">53行Vectors---到-->102行Vectors_End 每一个DCD都代表一个中断向量 （ 中断服务程序的入口地址 ）分为内核中断和外部中断，其中32位系统中，每一个中断入口函数指针占4字节。所以一共占用48*4= 192 = 0xC0字节。</font>\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png)\n\n通过查看hex文件可以知道我们16进制文件的0xc前都是中断入口函数指针后面接着是其他函数的入口函数指针。\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png)\n\n所以我们的方式是把前面的0XC0自己的入口函数指针复制到内存空间中。\n\n```c\n// 获取APP的向量表地址\n    memcpy((uint32_t *)RAM_APP1_BASE_ADDRESS, (uint32_t *)FLASH_APP1_BASE_ADDRESS, 48*4);\n```\n\n需要在APP的程序中屏蔽前面部分的内存，防止被修改\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png)\n\n完成上诉步骤，接着就可以实现从以0x2000 0000作为起始地址映射向量表：\n\n```c\nRCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, ENABLE);\nSYSCFG->CFGR &= ~SYSCFG_CFGR_MEM_MODE; // 清除原有配置\nSYSCFG->CFGR |= (0x3 << SYSCFG_CFGR_MEM_MODE_Pos); // MEM_MODE=11\nRCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, DISABLE);\n```\n\n    这里需要注意，MM32和STM32单片机区别，MM32单片机在修改内存映射修改时需要启动相对应的时钟。而在STM32无需这项操作。\n\n##### 跳转APP整体完整操作\n 禁用中断，确保后续操作不会被中断->禁用定时器中断\\禁用发送和接收->获取APP的向量表地址复制RAM中-> 配置SYSCFG，设置RAM映射到0地址->重启中断(减少app代码修改)->定义一个函数指针->获取应用程序的入口地址-> 设置主栈指针(MSP)为应用程序的初始栈指针->调用应用程序的入口函数，开始执行应用程序->APP中屏蔽前0xc0的内存地址\n\n**<font style=\"color:rgb(64, 64, 64);\">流程图</font>**\n\n```plain\ngraph TD\n    A[Bootloader开始] --> B[禁用所有中断]\n    B --> C[复制APP向量表到RAM]\n    C --> D[配置SYSCFG重映射RAM到0x00000000]\n    D --> E[设置MSP为APP栈顶地址]\n    E --> F[跳转到APP入口函数]\n    F --> G[APP运行]\n```\n\n####  **<font style=\"color:rgb(64, 64, 64);\">六：结语</font>**\n<font style=\"color:rgb(64, 64, 64);\">在本次关于MM32G001 MCU（Cortex-M0内核）的Bootloader开发指南中，我们详细探讨了Bootloader在嵌入式系统中的重要角色，特别是在中断向量表映射方面的特殊需求。通过深入分析Cortex-M0与Cortex-M3内核在中断向量表映射机制上的差异，明确了在MM32G001上实现Bootloader的关键步骤和注意事项。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">我回顾了Bootloader的核心功能，包括硬件初始化、应用程序有效性检查、固件升级以及中断向量表的重映射。特别是在MM32G001上，由于其Cortex-M0内核不支持动态修改向量表偏移寄存器（VTOR），我采用了硬件重映射的方法，通过将应用程序的向量表复制到RAM，并配置系统控制寄存器（SYSCFG）以实现中断向量表的重映射。这一过程确保了在不修改应用程序代码的前提下，实现安全可靠的跳转。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">通过完整的代码示例和详细的步骤说明，我们展示了如何禁用中断、复制向量表到RAM、配置SYSCFG寄存器以及跳转到应用程序入口函数。这些步骤不仅确保了系统的稳定性，还为开发者提供了清晰的实现路径。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">在实际开发过程中，强调了以下关键点：</font>\n\n1. **<font style=\"color:rgb(64, 64, 64);\">内存对齐</font>**<font style=\"color:rgb(64, 64, 64);\">：确保Flash和RAM地址按芯片手册要求对齐，避免地址错误导致的系统崩溃。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">中断清除</font>**<font style=\"color:rgb(64, 64, 64);\">：跳转前清除所有挂起的中断，防止在应用程序运行过程中出现意外中断。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">调试验证</font>**<font style=\"color:rgb(64, 64, 64);\">：使用内存查看工具和调试器，确保向量表复制正确，中断向量表重映射成功。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">建议读者在开发过程中参考MM32G001的芯片手册，确保配置和操作符合芯片的具体要求。</font>\n\n> <font style=\"color:rgb(64, 64, 64);\">个人博客：WWW.f123.club</font>\n>\n\n\n","source":"_posts/基于Cortex-M0内核的Bootloader开发指南.md","raw":"---\ntitle: 基于Cortex-M0内核的Bootloader开发指南\nmermaid: true\ndate: 2025-03-28\ntags: [嵌入式, C语言, 笔记, 单片机, bootloader]\ncomments: true\ncategories: [嵌入式]\n---\n\n\n> <font style=\"color:rgb(64, 64, 64);\">在嵌入式系统中，Bootloader是芯片上电后运行的第一段代码，负责初始化硬件、验证应用程序完整性，并实现固件升级功能。针对资源受限的</font>**<font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font>**<font style=\"color:rgb(64, 64, 64);\">内核的MM32G0001的MCU实现，过程中设计到中断向量表的不同的区分。</font>\n>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">一、Bootloader的核心作用</font>**\n1. **<font style=\"color:rgb(64, 64, 64);\">硬件初始化</font>**<font style=\"color:rgb(64, 64, 64);\">：配置时钟、外设、中断向量表。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">应用程序跳转</font>**<font style=\"color:rgb(64, 64, 64);\">：验证APP有效性后跳转到用户程序。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">固件升级</font>**<font style=\"color:rgb(64, 64, 64);\">：通过UART、I2C等接口接收新固件并烧录到Flash。</font>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">二、Bootloader工作流程图</font>**\n```plain\n+---------------------+\n|      上电启动        |\n+---------------------+\n           |\n           V\n+---------------------+\n| 初始化时钟、GPIO、串口 |\n+---------------------+\n           |\n           V\n+---------------------+\n| 检测升级触发条件       |\n| (如按键/USB信号)       |\n+---------------------+\n           |------------------- 是 -------------------+\n           |                                         |\n          否                                          |\n           |                                         V\n           V                                +---------------------+\n+---------------------+                     |  进入Bootloader模式  |\n| 检查APP有效性         |                     | (等待固件传输)        |\n| (CRC校验或标志位)      |                     +---------------------+\n+---------------------+                                |\n           |                                           |\n          有效                                          V\n           |                                +---------------------+\n           V                                |  接收数据并写入Flash |\n+---------------------+                     |  (分块校验+烧录)     |\n| 跳转到应用程序(APP)   |                     +---------------------+\n+---------------------+                                |\n           |                                           |\n           +------------------- 完成 ------------------+\n                                           |\n                                           V\n                                +---------------------+\n                                | 复位或跳转到新APP     |\n                                +---------------------+\n```\n\n#### **<font style=\"color:rgb(64, 64, 64);\">三、关键设计步骤</font>**\n##### **<font style=\"color:rgb(64, 64, 64);\">1. 内存分配</font>**\n+ **<font style=\"color:rgb(64, 64, 64);\">Bootloader区域</font>**<font style=\"color:rgb(64, 64, 64);\">：占用Flash起始地址（如0x08000000~0x080013FF）。</font>\n+ **<font style=\"color:rgb(64, 64, 64);\">应用程序区域</font>**<font style=\"color:rgb(64, 64, 64);\">：紧随其后（如0x08001400~0x080037FF）。</font>\n+ **<font style=\"color:rgb(64, 64, 64);\">中断向量表重定向</font>**<font style=\"color:rgb(64, 64, 64);\">：APP中需通过</font>`<font style=\"color:rgb(64, 64, 64);\">SCB->VTOR</font>`<font style=\"color:rgb(64, 64, 64);\">设置偏移量。(M0内核没有)</font>\n\n**<font style=\"color:rgb(64, 64, 64);\">链接脚本示例（APP端）</font>**<font style=\"color:rgb(64, 64, 64);\"> </font><font style=\"color:rgb(64, 64, 64);\">：</font>\n\n```c\nMEMORY {\n        FLASH (rx) : ORIGIN = 0x08001400, LENGTH = 9K\n        RAM (rwx)  : ORIGIN = 0x20000000, LENGTH = 2K\n    }\n```\n\nkeill设置\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/1.png)\n\n##### **<font style=\"color:rgb(64, 64, 64);\">2. 跳转到应用程序</font>**\n```c\ntypedef void (*AppEntry)(void);\n\nvoid JumpToApp(uint32_t appAddress) {\n    // 检查栈顶地址是否合法\n    if (((*(uint32_t*)appAddress) & 0x2FFE0000) == 0x20000000) {\n        // 设置APP的栈指针和复位向量\n        __set_MSP(*(uint32_t*)appAddress);\n        AppEntry entry = (AppEntry)(*(uint32_t*)(appAddress + 4));\n\n        // 关闭所有中断\n        __disable_irq();\n\n        // 跳转到APP\n        entry();\n    }\n}\n```\n\n##### **<font style=\"color:rgb(64, 64, 64);\">3. 固件接收与烧录</font>**\n<font style=\"color:rgb(64, 64, 64);\">通过UART接收数据并写入Flash：</font>\n\n```c\nFLASH_Status flash_bsp_write_block(uint16_t BlockNum, uint8_t *data)\n{\n    FLASH_Status err_Status;\n\n    // 解锁闪存以允许写操作\n    FLASH_Unlock();\n\n    // 清除所有错误标志位，确保写操作前状态标志处于已知状态\n    FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);\n\n    /* 将数据写入指定的页 */\n    for (uint16_t i = 0; i < 128; i += 4)\n    {\n        err_Status += FLASH_ProgramWord(FLASH_APP1_BASE_ADDRESS + (BlockNum * 0x80) + i, *(uint32_t *)(data + i));\n    }\n\n    // 清除操作结束标志位，为后续操作做好准备\n    FLASH_ClearFlag(FLASH_FLAG_EOP);\n\n    // 锁定闪存以防止未经授权的访问或修改\n    FLASH_Lock();\n\n    // 返回写操作的状态\n    return err_Status;\n}\n\n```\n\n##### **<font style=\"color:rgb(64, 64, 64);\">4. 升级触发条件检测</font>**\n<font style=\"color:rgb(64, 64, 64);\">如检测到指令</font>\n\n```c\nif(reg_value == 0x0000)\n    {\n        enter_app();\n    }\n```\n\n#### **<font style=\"color:rgb(64, 64, 64);\">四、调试技巧</font>**\n1. **<font style=\"color:rgb(64, 64, 64);\">半主机问题</font>**<font style=\"color:rgb(64, 64, 64);\">：禁用标准库依赖，避免在Bootloader中使用printf</font><font style=\"color:rgb(64, 64, 64);\">。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">看门狗</font>**<font style=\"color:rgb(64, 64, 64);\">：在长时间操作中复位看门狗。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">Flash保护</font>**<font style=\"color:rgb(64, 64, 64);\">：确保操作前正确解锁Flash。</font>\n\n#### **<font style=\"color:rgb(64, 64, 64);\">五、中断向量表详解</font>**\n##### <font style=\"color:rgb(64, 64, 64);\">1、对比 Cortex-M0 和 M3 内核的中断向量表迁移方式：</font>\n| **<font style=\"color:rgb(64, 64, 64);\">特性</font>** | **<font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font>** | **<font style=\"color:rgb(64, 64, 64);\">Cortex-M3</font>** |\n| --- | --- | --- |\n| <font style=\"color:rgb(64, 64, 64);\">向量表偏移寄存器(VTOR)</font> | **<font style=\"color:rgb(64, 64, 64);\">可选特性</font>**<font style=\"color:rgb(64, 64, 64);\">（依赖芯片厂商实现）</font> | **<font style=\"color:rgb(64, 64, 64);\">强制支持</font>**<font style=\"color:rgb(64, 64, 64);\">（SCB->VTOR 寄存器）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">默认向量表地址</font> | <font style=\"color:rgb(64, 64, 64);\">0x00000000（固定）</font> | <font style=\"color:rgb(64, 64, 64);\">0x00000000（可通过VTOR动态修改）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">重映射灵活性</font> | <font style=\"color:rgb(64, 64, 64);\">依赖Flash物理地址或厂商自定义方法</font> | <font style=\"color:rgb(64, 64, 64);\">任意地址（通过VTOR设置）</font> |\n\n\n**<font style=\"color:rgb(64, 64, 64);\">注</font>**<font style=\"color:rgb(64, 64, 64);\">：MM32G0001 的 VTOR 功能</font>**<font style=\"color:rgb(64, 64, 64);\">由芯片厂商自定义实现</font>**<font style=\"color:rgb(64, 64, 64);\">，需查阅手册确认其行为！MM32G0001没有此功能</font>\n\n<font style=\"color:rgb(64, 64, 64);\">####</font>\n\n##### <font style=\"color:rgb(64, 64, 64);\">2、MM32G0001中断向量表配置方法</font>\n###### **<font style=\"color:rgb(64, 64, 64);\">M0内核中断向量表偏移存在问题</font>**\n+ <font style=\"color:rgb(64, 64, 64);\">芯片复位后默认从 </font><font style=\"color:rgb(64, 64, 64);\">0x08000000</font><font style=\"color:rgb(64, 64, 64);\">（Flash起始地址）加载向量表。向量表的位置由Flash的物理地址决定，无法通过软件动态调整。</font>\n\n###### **<font style=\"color:rgb(64, 64, 64);\">MM32G0001的特殊性</font>**\n+ <font style=\"color:rgb(64, 64, 64);\">MM32G0001虽然是Cortex-M0内核，但支持自定义的向量表映射机制，需参考具体芯片手册。</font>\n\n###### 解决方法\n通过切换内存映射方法，切换中断向量表，系统默认将flash的0x8000000地址映射到地址0x000000地址，通过修改SYSCFG->CFGR寄存器将ram的0x20000000内存映射到地址0x000000，通过查阅可以看到中断入口函数存放在bin文件的最前面：\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/2.png)\n\n再通过启动文件可以看到一共48个中断<font style=\"color:rgb(77, 77, 77);\">53行Vectors---到-->102行Vectors_End 每一个DCD都代表一个中断向量 （ 中断服务程序的入口地址 ）分为内核中断和外部中断，其中32位系统中，每一个中断入口函数指针占4字节。所以一共占用48*4= 192 = 0xC0字节。</font>\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/3.png)\n\n通过查看hex文件可以知道我们16进制文件的0xc前都是中断入口函数指针后面接着是其他函数的入口函数指针。\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/4.png)\n\n所以我们的方式是把前面的0XC0自己的入口函数指针复制到内存空间中。\n\n```c\n// 获取APP的向量表地址\n    memcpy((uint32_t *)RAM_APP1_BASE_ADDRESS, (uint32_t *)FLASH_APP1_BASE_ADDRESS, 48*4);\n```\n\n需要在APP的程序中屏蔽前面部分的内存，防止被修改\n\n![](/images/posts/基于Cortex-M0内核的Bootloader开发指南/5.png)\n\n完成上诉步骤，接着就可以实现从以0x2000 0000作为起始地址映射向量表：\n\n```c\nRCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, ENABLE);\nSYSCFG->CFGR &= ~SYSCFG_CFGR_MEM_MODE; // 清除原有配置\nSYSCFG->CFGR |= (0x3 << SYSCFG_CFGR_MEM_MODE_Pos); // MEM_MODE=11\nRCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, DISABLE);\n```\n\n    这里需要注意，MM32和STM32单片机区别，MM32单片机在修改内存映射修改时需要启动相对应的时钟。而在STM32无需这项操作。\n\n##### 跳转APP整体完整操作\n 禁用中断，确保后续操作不会被中断->禁用定时器中断\\禁用发送和接收->获取APP的向量表地址复制RAM中-> 配置SYSCFG，设置RAM映射到0地址->重启中断(减少app代码修改)->定义一个函数指针->获取应用程序的入口地址-> 设置主栈指针(MSP)为应用程序的初始栈指针->调用应用程序的入口函数，开始执行应用程序->APP中屏蔽前0xc0的内存地址\n\n**<font style=\"color:rgb(64, 64, 64);\">流程图</font>**\n\n```plain\ngraph TD\n    A[Bootloader开始] --> B[禁用所有中断]\n    B --> C[复制APP向量表到RAM]\n    C --> D[配置SYSCFG重映射RAM到0x00000000]\n    D --> E[设置MSP为APP栈顶地址]\n    E --> F[跳转到APP入口函数]\n    F --> G[APP运行]\n```\n\n####  **<font style=\"color:rgb(64, 64, 64);\">六：结语</font>**\n<font style=\"color:rgb(64, 64, 64);\">在本次关于MM32G001 MCU（Cortex-M0内核）的Bootloader开发指南中，我们详细探讨了Bootloader在嵌入式系统中的重要角色，特别是在中断向量表映射方面的特殊需求。通过深入分析Cortex-M0与Cortex-M3内核在中断向量表映射机制上的差异，明确了在MM32G001上实现Bootloader的关键步骤和注意事项。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">我回顾了Bootloader的核心功能，包括硬件初始化、应用程序有效性检查、固件升级以及中断向量表的重映射。特别是在MM32G001上，由于其Cortex-M0内核不支持动态修改向量表偏移寄存器（VTOR），我采用了硬件重映射的方法，通过将应用程序的向量表复制到RAM，并配置系统控制寄存器（SYSCFG）以实现中断向量表的重映射。这一过程确保了在不修改应用程序代码的前提下，实现安全可靠的跳转。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">通过完整的代码示例和详细的步骤说明，我们展示了如何禁用中断、复制向量表到RAM、配置SYSCFG寄存器以及跳转到应用程序入口函数。这些步骤不仅确保了系统的稳定性，还为开发者提供了清晰的实现路径。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">在实际开发过程中，强调了以下关键点：</font>\n\n1. **<font style=\"color:rgb(64, 64, 64);\">内存对齐</font>**<font style=\"color:rgb(64, 64, 64);\">：确保Flash和RAM地址按芯片手册要求对齐，避免地址错误导致的系统崩溃。</font>\n2. **<font style=\"color:rgb(64, 64, 64);\">中断清除</font>**<font style=\"color:rgb(64, 64, 64);\">：跳转前清除所有挂起的中断，防止在应用程序运行过程中出现意外中断。</font>\n3. **<font style=\"color:rgb(64, 64, 64);\">调试验证</font>**<font style=\"color:rgb(64, 64, 64);\">：使用内存查看工具和调试器，确保向量表复制正确，中断向量表重映射成功。</font>\n\n<font style=\"color:rgb(64, 64, 64);\">建议读者在开发过程中参考MM32G001的芯片手册，确保配置和操作符合芯片的具体要求。</font>\n\n> <font style=\"color:rgb(64, 64, 64);\">个人博客：WWW.f123.club</font>\n>\n\n\n","slug":"基于Cortex-M0内核的Bootloader开发指南","published":1,"updated":"2025-07-16T07:36:21.575Z","layout":"post","photos":[],"_id":"cmd71t81a002h3cw6978wcyrw","content":"<blockquote>\n<p><font style=\"color:rgb(64, 64, 64);\">在嵌入式系统中，Bootloader是芯片上电后运行的第一段代码，负责初始化硬件、验证应用程序完整性，并实现固件升级功能。针对资源受限的</font><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font></strong><font style=\"color:rgb(64, 64, 64);\">内核的MM32G0001的MCU实现，过程中设计到中断向量表的不同的区分。</font></p>\n</blockquote>\n<h4 id=\"font-stylecolorrgb64-64-64一-bootloader的核心作用font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64一-bootloader的核心作用font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">一、Bootloader的核心作用</font></strong></h4>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">硬件初始化</font></strong><font style=\"color:rgb(64, 64, 64);\">：配置时钟、外设、中断向量表。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">应用程序跳转</font></strong><font style=\"color:rgb(64, 64, 64);\">：验证APP有效性后跳转到用户程序。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">固件升级</font></strong><font style=\"color:rgb(64, 64, 64);\">：通过UART、I2C等接口接收新固件并烧录到Flash。</font></li>\n</ol>\n<h4 id=\"font-stylecolorrgb64-64-64二-bootloader工作流程图font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64二-bootloader工作流程图font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">二、Bootloader工作流程图</font></strong></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+---------------------+</span><br><span class=\"line\">|      上电启动        |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |</span><br><span class=\"line\">           V</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">| 初始化时钟、GPIO、串口 |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |</span><br><span class=\"line\">           V</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">| 检测升级触发条件       |</span><br><span class=\"line\">| (如按键/USB信号)       |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |------------------- 是 -------------------+</span><br><span class=\"line\">           |                                         |</span><br><span class=\"line\">          否                                          |</span><br><span class=\"line\">           |                                         V</span><br><span class=\"line\">           V                                +---------------------+</span><br><span class=\"line\">+---------------------+                     |  进入Bootloader模式  |</span><br><span class=\"line\">| 检查APP有效性         |                     | (等待固件传输)        |</span><br><span class=\"line\">| (CRC校验或标志位)      |                     +---------------------+</span><br><span class=\"line\">+---------------------+                                |</span><br><span class=\"line\">           |                                           |</span><br><span class=\"line\">          有效                                          V</span><br><span class=\"line\">           |                                +---------------------+</span><br><span class=\"line\">           V                                |  接收数据并写入Flash |</span><br><span class=\"line\">+---------------------+                     |  (分块校验+烧录)     |</span><br><span class=\"line\">| 跳转到应用程序(APP)   |                     +---------------------+</span><br><span class=\"line\">+---------------------+                                |</span><br><span class=\"line\">           |                                           |</span><br><span class=\"line\">           +------------------- 完成 ------------------+</span><br><span class=\"line\">                                           |</span><br><span class=\"line\">                                           V</span><br><span class=\"line\">                                +---------------------+</span><br><span class=\"line\">                                | 复位或跳转到新APP     |</span><br><span class=\"line\">                                +---------------------+</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64三-关键设计步骤font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64三-关键设计步骤font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">三、关键设计步骤</font></strong></h4>\n<h5 id=\"font-stylecolorrgb64-64-641-内存分配font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-641-内存分配font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">1. 内存分配</font></strong></h5>\n<ul>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">Bootloader区域</font></strong><font style=\"color:rgb(64, 64, 64);\">：占用Flash起始地址（如0x08000000~0x080013FF）。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">应用程序区域</font></strong><font style=\"color:rgb(64, 64, 64);\">：紧随其后（如0x08001400~0x080037FF）。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">中断向量表重定向</font></strong><font style=\"color:rgb(64, 64, 64);\">：APP中需通过</font><code>&lt;font style=&quot;color:rgb(64, 64, 64);&quot;&gt;SCB-&gt;VTOR&lt;/font&gt;</code><font style=\"color:rgb(64, 64, 64);\">设置偏移量。(M0内核没有)</font></li>\n</ul>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">链接脚本示例（APP端）</font></strong><font style=\"color:rgb(64, 64, 64);\"> </font><font style=\"color:rgb(64, 64, 64);\">：</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MEMORY &#123;</span><br><span class=\"line\">        FLASH (rx) : ORIGIN = <span class=\"number\">0x08001400</span>, LENGTH = <span class=\"number\">9</span>K</span><br><span class=\"line\">        RAM (rwx)  : ORIGIN = <span class=\"number\">0x20000000</span>, LENGTH = <span class=\"number\">2</span>K</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>keill设置</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/1.png\" alt=\"\" /></p>\n<h5 id=\"font-stylecolorrgb64-64-642-跳转到应用程序font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-642-跳转到应用程序font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">2. 跳转到应用程序</font></strong></h5>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">void</span> <span class=\"params\">(*AppEntry)</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">JumpToApp</span><span class=\"params\">(<span class=\"type\">uint32_t</span> appAddress)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查栈顶地址是否合法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (((*(<span class=\"type\">uint32_t</span>*)appAddress) &amp; <span class=\"number\">0x2FFE0000</span>) == <span class=\"number\">0x20000000</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 设置APP的栈指针和复位向量</span></span><br><span class=\"line\">        __set_MSP(*(<span class=\"type\">uint32_t</span>*)appAddress);</span><br><span class=\"line\">        AppEntry entry = (AppEntry)(*(<span class=\"type\">uint32_t</span>*)(appAddress + <span class=\"number\">4</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭所有中断</span></span><br><span class=\"line\">        __disable_irq();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 跳转到APP</span></span><br><span class=\"line\">        entry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"font-stylecolorrgb64-64-643-固件接收与烧录font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-643-固件接收与烧录font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">3. 固件接收与烧录</font></strong></h5>\n<p><font style=\"color:rgb(64, 64, 64);\">通过UART接收数据并写入Flash：</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLASH_Status <span class=\"title function_\">flash_bsp_write_block</span><span class=\"params\">(<span class=\"type\">uint16_t</span> BlockNum, <span class=\"type\">uint8_t</span> *data)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FLASH_Status err_Status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解锁闪存以允许写操作</span></span><br><span class=\"line\">    FLASH_Unlock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除所有错误标志位，确保写操作前状态标志处于已知状态</span></span><br><span class=\"line\">    FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* 将数据写入指定的页 */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">uint16_t</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">128</span>; i += <span class=\"number\">4</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        err_Status += FLASH_ProgramWord(FLASH_APP1_BASE_ADDRESS + (BlockNum * <span class=\"number\">0x80</span>) + i, *(<span class=\"type\">uint32_t</span> *)(data + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除操作结束标志位，为后续操作做好准备</span></span><br><span class=\"line\">    FLASH_ClearFlag(FLASH_FLAG_EOP);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 锁定闪存以防止未经授权的访问或修改</span></span><br><span class=\"line\">    FLASH_Lock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 返回写操作的状态</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> err_Status;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"font-stylecolorrgb64-64-644-升级触发条件检测font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-644-升级触发条件检测font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">4. 升级触发条件检测</font></strong></h5>\n<p><font style=\"color:rgb(64, 64, 64);\">如检测到指令</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(reg_value == <span class=\"number\">0x0000</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        enter_app();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64四-调试技巧font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64四-调试技巧font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">四、调试技巧</font></strong></h4>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">半主机问题</font></strong><font style=\"color:rgb(64, 64, 64);\">：禁用标准库依赖，避免在Bootloader中使用printf</font><font style=\"color:rgb(64, 64, 64);\">。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">看门狗</font></strong><font style=\"color:rgb(64, 64, 64);\">：在长时间操作中复位看门狗。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">Flash保护</font></strong><font style=\"color:rgb(64, 64, 64);\">：确保操作前正确解锁Flash。</font></li>\n</ol>\n<h4 id=\"font-stylecolorrgb64-64-64五-中断向量表详解font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64五-中断向量表详解font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">五、中断向量表详解</font></strong></h4>\n<h5 id=\"font-stylecolorrgb64-64-641-对比-cortex-m0-和-m3-内核的中断向量表迁移方式font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-641-对比-cortex-m0-和-m3-内核的中断向量表迁移方式font\"></a> <font style=\"color:rgb(64, 64, 64);\">1、对比 Cortex-M0 和 M3 内核的中断向量表迁移方式：</font></h5>\n<table>\n<thead>\n<tr>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">特性</font></strong></th>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font></strong></th>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M3</font></strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">向量表偏移寄存器(VTOR)</font></td>\n<td><strong><font style=\"color:rgb(64, 64, 64);\">可选特性</font></strong><font style=\"color:rgb(64, 64, 64);\">（依赖芯片厂商实现）</font></td>\n<td><strong><font style=\"color:rgb(64, 64, 64);\">强制支持</font></strong><font style=\"color:rgb(64, 64, 64);\">（SCB-&gt;VTOR 寄存器）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">默认向量表地址</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">0x00000000（固定）</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">0x00000000（可通过VTOR动态修改）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">重映射灵活性</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">依赖Flash物理地址或厂商自定义方法</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">任意地址（通过VTOR设置）</font></td>\n</tr>\n</tbody>\n</table>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">注</font></strong><font style=\"color:rgb(64, 64, 64);\">：MM32G0001 的 VTOR 功能</font><strong><font style=\"color:rgb(64, 64, 64);\">由芯片厂商自定义实现</font></strong><font style=\"color:rgb(64, 64, 64);\">，需查阅手册确认其行为！MM32G0001没有此功能</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">####</font></p>\n<h5 id=\"font-stylecolorrgb64-64-642-mm32g0001中断向量表配置方法font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-642-mm32g0001中断向量表配置方法font\"></a> <font style=\"color:rgb(64, 64, 64);\">2、MM32G0001中断向量表配置方法</font></h5>\n<h6 id=\"font-stylecolorrgb64-64-64m0内核中断向量表偏移存在问题font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64m0内核中断向量表偏移存在问题font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">M0内核中断向量表偏移存在问题</font></strong></h6>\n<ul>\n<li><font style=\"color:rgb(64, 64, 64);\">芯片复位后默认从 </font><font style=\"color:rgb(64, 64, 64);\">0x08000000</font><font style=\"color:rgb(64, 64, 64);\">（Flash起始地址）加载向量表。向量表的位置由Flash的物理地址决定，无法通过软件动态调整。</font></li>\n</ul>\n<h6 id=\"font-stylecolorrgb64-64-64mm32g0001的特殊性font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64mm32g0001的特殊性font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">MM32G0001的特殊性</font></strong></h6>\n<ul>\n<li><font style=\"color:rgb(64, 64, 64);\">MM32G0001虽然是Cortex-M0内核，但支持自定义的向量表映射机制，需参考具体芯片手册。</font></li>\n</ul>\n<h6 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\"></a> 解决方法</h6>\n<p>通过切换内存映射方法，切换中断向量表，系统默认将flash的0x8000000地址映射到地址0x000000地址，通过修改SYSCFG-&gt;CFGR寄存器将ram的0x20000000内存映射到地址0x000000，通过查阅可以看到中断入口函数存放在bin文件的最前面：</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/2.png\" alt=\"\" /></p>\n<p>再通过启动文件可以看到一共48个中断<font style=\"color:rgb(77, 77, 77);\">53行Vectors—到–&gt;102行Vectors_End 每一个DCD都代表一个中断向量 （ 中断服务程序的入口地址 ）分为内核中断和外部中断，其中32位系统中，每一个中断入口函数指针占4字节。所以一共占用48*4= 192 = 0xC0字节。</font></p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/3.png\" alt=\"\" /></p>\n<p>通过查看hex文件可以知道我们16进制文件的0xc前都是中断入口函数指针后面接着是其他函数的入口函数指针。</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/4.png\" alt=\"\" /></p>\n<p>所以我们的方式是把前面的0XC0自己的入口函数指针复制到内存空间中。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取APP的向量表地址</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>((<span class=\"type\">uint32_t</span> *)RAM_APP1_BASE_ADDRESS, (<span class=\"type\">uint32_t</span> *)FLASH_APP1_BASE_ADDRESS, <span class=\"number\">48</span>*<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n<p>需要在APP的程序中屏蔽前面部分的内存，防止被修改</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/5.png\" alt=\"\" /></p>\n<p>完成上诉步骤，接着就可以实现从以0x2000 0000作为起始地址映射向量表：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, ENABLE);</span><br><span class=\"line\">SYSCFG-&gt;CFGR &amp;= ~SYSCFG_CFGR_MEM_MODE; <span class=\"comment\">// 清除原有配置</span></span><br><span class=\"line\">SYSCFG-&gt;CFGR |= (<span class=\"number\">0x3</span> &lt;&lt; SYSCFG_CFGR_MEM_MODE_Pos); <span class=\"comment\">// MEM_MODE=11</span></span><br><span class=\"line\">RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, DISABLE);</span><br></pre></td></tr></table></figure>\n<pre><code>这里需要注意，MM32和STM32单片机区别，MM32单片机在修改内存映射修改时需要启动相对应的时钟。而在STM32无需这项操作。\n</code></pre>\n<h5 id=\"跳转app整体完整操作\"><a class=\"markdownIt-Anchor\" href=\"#跳转app整体完整操作\"></a> 跳转APP整体完整操作</h5>\n<p>禁用中断，确保后续操作不会被中断-&gt;禁用定时器中断\\禁用发送和接收-&gt;获取APP的向量表地址复制RAM中-&gt; 配置SYSCFG，设置RAM映射到0地址-&gt;重启中断(减少app代码修改)-&gt;定义一个函数指针-&gt;获取应用程序的入口地址-&gt; 设置主栈指针(MSP)为应用程序的初始栈指针-&gt;调用应用程序的入口函数，开始执行应用程序-&gt;APP中屏蔽前0xc0的内存地址</p>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">流程图</font></strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">    A[Bootloader开始] --&gt; B[禁用所有中断]</span><br><span class=\"line\">    B --&gt; C[复制APP向量表到RAM]</span><br><span class=\"line\">    C --&gt; D[配置SYSCFG重映射RAM到0x00000000]</span><br><span class=\"line\">    D --&gt; E[设置MSP为APP栈顶地址]</span><br><span class=\"line\">    E --&gt; F[跳转到APP入口函数]</span><br><span class=\"line\">    F --&gt; G[APP运行]</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64六结语font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64六结语font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">六：结语</font></strong></h4>\n<p><font style=\"color:rgb(64, 64, 64);\">在本次关于MM32G001 MCU（Cortex-M0内核）的Bootloader开发指南中，我们详细探讨了Bootloader在嵌入式系统中的重要角色，特别是在中断向量表映射方面的特殊需求。通过深入分析Cortex-M0与Cortex-M3内核在中断向量表映射机制上的差异，明确了在MM32G001上实现Bootloader的关键步骤和注意事项。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">我回顾了Bootloader的核心功能，包括硬件初始化、应用程序有效性检查、固件升级以及中断向量表的重映射。特别是在MM32G001上，由于其Cortex-M0内核不支持动态修改向量表偏移寄存器（VTOR），我采用了硬件重映射的方法，通过将应用程序的向量表复制到RAM，并配置系统控制寄存器（SYSCFG）以实现中断向量表的重映射。这一过程确保了在不修改应用程序代码的前提下，实现安全可靠的跳转。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">通过完整的代码示例和详细的步骤说明，我们展示了如何禁用中断、复制向量表到RAM、配置SYSCFG寄存器以及跳转到应用程序入口函数。这些步骤不仅确保了系统的稳定性，还为开发者提供了清晰的实现路径。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">在实际开发过程中，强调了以下关键点：</font></p>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">内存对齐</font></strong><font style=\"color:rgb(64, 64, 64);\">：确保Flash和RAM地址按芯片手册要求对齐，避免地址错误导致的系统崩溃。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">中断清除</font></strong><font style=\"color:rgb(64, 64, 64);\">：跳转前清除所有挂起的中断，防止在应用程序运行过程中出现意外中断。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">调试验证</font></strong><font style=\"color:rgb(64, 64, 64);\">：使用内存查看工具和调试器，确保向量表复制正确，中断向量表重映射成功。</font></li>\n</ol>\n<p><font style=\"color:rgb(64, 64, 64);\">建议读者在开发过程中参考MM32G001的芯片手册，确保配置和操作符合芯片的具体要求。</font></p>\n<blockquote>\n<p><font style=\"color:rgb(64, 64, 64);\">个人博客：WWW.f123.club</font></p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p><font style=\"color:rgb(64, 64, 64);\">在嵌入式系统中，Bootloader是芯片上电后运行的第一段代码，负责初始化硬件、验证应用程序完整性，并实现固件升级功能。针对资源受限的</font><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font></strong><font style=\"color:rgb(64, 64, 64);\">内核的MM32G0001的MCU实现，过程中设计到中断向量表的不同的区分。</font></p>\n</blockquote>\n<h4 id=\"font-stylecolorrgb64-64-64一-bootloader的核心作用font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64一-bootloader的核心作用font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">一、Bootloader的核心作用</font></strong></h4>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">硬件初始化</font></strong><font style=\"color:rgb(64, 64, 64);\">：配置时钟、外设、中断向量表。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">应用程序跳转</font></strong><font style=\"color:rgb(64, 64, 64);\">：验证APP有效性后跳转到用户程序。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">固件升级</font></strong><font style=\"color:rgb(64, 64, 64);\">：通过UART、I2C等接口接收新固件并烧录到Flash。</font></li>\n</ol>\n<h4 id=\"font-stylecolorrgb64-64-64二-bootloader工作流程图font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64二-bootloader工作流程图font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">二、Bootloader工作流程图</font></strong></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+---------------------+</span><br><span class=\"line\">|      上电启动        |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |</span><br><span class=\"line\">           V</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">| 初始化时钟、GPIO、串口 |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |</span><br><span class=\"line\">           V</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">| 检测升级触发条件       |</span><br><span class=\"line\">| (如按键/USB信号)       |</span><br><span class=\"line\">+---------------------+</span><br><span class=\"line\">           |------------------- 是 -------------------+</span><br><span class=\"line\">           |                                         |</span><br><span class=\"line\">          否                                          |</span><br><span class=\"line\">           |                                         V</span><br><span class=\"line\">           V                                +---------------------+</span><br><span class=\"line\">+---------------------+                     |  进入Bootloader模式  |</span><br><span class=\"line\">| 检查APP有效性         |                     | (等待固件传输)        |</span><br><span class=\"line\">| (CRC校验或标志位)      |                     +---------------------+</span><br><span class=\"line\">+---------------------+                                |</span><br><span class=\"line\">           |                                           |</span><br><span class=\"line\">          有效                                          V</span><br><span class=\"line\">           |                                +---------------------+</span><br><span class=\"line\">           V                                |  接收数据并写入Flash |</span><br><span class=\"line\">+---------------------+                     |  (分块校验+烧录)     |</span><br><span class=\"line\">| 跳转到应用程序(APP)   |                     +---------------------+</span><br><span class=\"line\">+---------------------+                                |</span><br><span class=\"line\">           |                                           |</span><br><span class=\"line\">           +------------------- 完成 ------------------+</span><br><span class=\"line\">                                           |</span><br><span class=\"line\">                                           V</span><br><span class=\"line\">                                +---------------------+</span><br><span class=\"line\">                                | 复位或跳转到新APP     |</span><br><span class=\"line\">                                +---------------------+</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64三-关键设计步骤font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64三-关键设计步骤font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">三、关键设计步骤</font></strong></h4>\n<h5 id=\"font-stylecolorrgb64-64-641-内存分配font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-641-内存分配font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">1. 内存分配</font></strong></h5>\n<ul>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">Bootloader区域</font></strong><font style=\"color:rgb(64, 64, 64);\">：占用Flash起始地址（如0x08000000~0x080013FF）。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">应用程序区域</font></strong><font style=\"color:rgb(64, 64, 64);\">：紧随其后（如0x08001400~0x080037FF）。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">中断向量表重定向</font></strong><font style=\"color:rgb(64, 64, 64);\">：APP中需通过</font><code>&lt;font style=&quot;color:rgb(64, 64, 64);&quot;&gt;SCB-&gt;VTOR&lt;/font&gt;</code><font style=\"color:rgb(64, 64, 64);\">设置偏移量。(M0内核没有)</font></li>\n</ul>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">链接脚本示例（APP端）</font></strong><font style=\"color:rgb(64, 64, 64);\"> </font><font style=\"color:rgb(64, 64, 64);\">：</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MEMORY &#123;</span><br><span class=\"line\">        FLASH (rx) : ORIGIN = <span class=\"number\">0x08001400</span>, LENGTH = <span class=\"number\">9</span>K</span><br><span class=\"line\">        RAM (rwx)  : ORIGIN = <span class=\"number\">0x20000000</span>, LENGTH = <span class=\"number\">2</span>K</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>keill设置</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/1.png\" alt=\"\" /></p>\n<h5 id=\"font-stylecolorrgb64-64-642-跳转到应用程序font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-642-跳转到应用程序font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">2. 跳转到应用程序</font></strong></h5>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"title function_\">void</span> <span class=\"params\">(*AppEntry)</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">JumpToApp</span><span class=\"params\">(<span class=\"type\">uint32_t</span> appAddress)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查栈顶地址是否合法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (((*(<span class=\"type\">uint32_t</span>*)appAddress) &amp; <span class=\"number\">0x2FFE0000</span>) == <span class=\"number\">0x20000000</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 设置APP的栈指针和复位向量</span></span><br><span class=\"line\">        __set_MSP(*(<span class=\"type\">uint32_t</span>*)appAddress);</span><br><span class=\"line\">        AppEntry entry = (AppEntry)(*(<span class=\"type\">uint32_t</span>*)(appAddress + <span class=\"number\">4</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭所有中断</span></span><br><span class=\"line\">        __disable_irq();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 跳转到APP</span></span><br><span class=\"line\">        entry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"font-stylecolorrgb64-64-643-固件接收与烧录font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-643-固件接收与烧录font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">3. 固件接收与烧录</font></strong></h5>\n<p><font style=\"color:rgb(64, 64, 64);\">通过UART接收数据并写入Flash：</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLASH_Status <span class=\"title function_\">flash_bsp_write_block</span><span class=\"params\">(<span class=\"type\">uint16_t</span> BlockNum, <span class=\"type\">uint8_t</span> *data)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FLASH_Status err_Status;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解锁闪存以允许写操作</span></span><br><span class=\"line\">    FLASH_Unlock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除所有错误标志位，确保写操作前状态标志处于已知状态</span></span><br><span class=\"line\">    FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* 将数据写入指定的页 */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">uint16_t</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">128</span>; i += <span class=\"number\">4</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        err_Status += FLASH_ProgramWord(FLASH_APP1_BASE_ADDRESS + (BlockNum * <span class=\"number\">0x80</span>) + i, *(<span class=\"type\">uint32_t</span> *)(data + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清除操作结束标志位，为后续操作做好准备</span></span><br><span class=\"line\">    FLASH_ClearFlag(FLASH_FLAG_EOP);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 锁定闪存以防止未经授权的访问或修改</span></span><br><span class=\"line\">    FLASH_Lock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 返回写操作的状态</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> err_Status;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"font-stylecolorrgb64-64-644-升级触发条件检测font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-644-升级触发条件检测font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">4. 升级触发条件检测</font></strong></h5>\n<p><font style=\"color:rgb(64, 64, 64);\">如检测到指令</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(reg_value == <span class=\"number\">0x0000</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        enter_app();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64四-调试技巧font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64四-调试技巧font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">四、调试技巧</font></strong></h4>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">半主机问题</font></strong><font style=\"color:rgb(64, 64, 64);\">：禁用标准库依赖，避免在Bootloader中使用printf</font><font style=\"color:rgb(64, 64, 64);\">。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">看门狗</font></strong><font style=\"color:rgb(64, 64, 64);\">：在长时间操作中复位看门狗。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">Flash保护</font></strong><font style=\"color:rgb(64, 64, 64);\">：确保操作前正确解锁Flash。</font></li>\n</ol>\n<h4 id=\"font-stylecolorrgb64-64-64五-中断向量表详解font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64五-中断向量表详解font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">五、中断向量表详解</font></strong></h4>\n<h5 id=\"font-stylecolorrgb64-64-641-对比-cortex-m0-和-m3-内核的中断向量表迁移方式font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-641-对比-cortex-m0-和-m3-内核的中断向量表迁移方式font\"></a> <font style=\"color:rgb(64, 64, 64);\">1、对比 Cortex-M0 和 M3 内核的中断向量表迁移方式：</font></h5>\n<table>\n<thead>\n<tr>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">特性</font></strong></th>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M0</font></strong></th>\n<th><strong><font style=\"color:rgb(64, 64, 64);\">Cortex-M3</font></strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">向量表偏移寄存器(VTOR)</font></td>\n<td><strong><font style=\"color:rgb(64, 64, 64);\">可选特性</font></strong><font style=\"color:rgb(64, 64, 64);\">（依赖芯片厂商实现）</font></td>\n<td><strong><font style=\"color:rgb(64, 64, 64);\">强制支持</font></strong><font style=\"color:rgb(64, 64, 64);\">（SCB-&gt;VTOR 寄存器）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">默认向量表地址</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">0x00000000（固定）</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">0x00000000（可通过VTOR动态修改）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">重映射灵活性</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">依赖Flash物理地址或厂商自定义方法</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">任意地址（通过VTOR设置）</font></td>\n</tr>\n</tbody>\n</table>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">注</font></strong><font style=\"color:rgb(64, 64, 64);\">：MM32G0001 的 VTOR 功能</font><strong><font style=\"color:rgb(64, 64, 64);\">由芯片厂商自定义实现</font></strong><font style=\"color:rgb(64, 64, 64);\">，需查阅手册确认其行为！MM32G0001没有此功能</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">####</font></p>\n<h5 id=\"font-stylecolorrgb64-64-642-mm32g0001中断向量表配置方法font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-642-mm32g0001中断向量表配置方法font\"></a> <font style=\"color:rgb(64, 64, 64);\">2、MM32G0001中断向量表配置方法</font></h5>\n<h6 id=\"font-stylecolorrgb64-64-64m0内核中断向量表偏移存在问题font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64m0内核中断向量表偏移存在问题font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">M0内核中断向量表偏移存在问题</font></strong></h6>\n<ul>\n<li><font style=\"color:rgb(64, 64, 64);\">芯片复位后默认从 </font><font style=\"color:rgb(64, 64, 64);\">0x08000000</font><font style=\"color:rgb(64, 64, 64);\">（Flash起始地址）加载向量表。向量表的位置由Flash的物理地址决定，无法通过软件动态调整。</font></li>\n</ul>\n<h6 id=\"font-stylecolorrgb64-64-64mm32g0001的特殊性font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64mm32g0001的特殊性font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">MM32G0001的特殊性</font></strong></h6>\n<ul>\n<li><font style=\"color:rgb(64, 64, 64);\">MM32G0001虽然是Cortex-M0内核，但支持自定义的向量表映射机制，需参考具体芯片手册。</font></li>\n</ul>\n<h6 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\"></a> 解决方法</h6>\n<p>通过切换内存映射方法，切换中断向量表，系统默认将flash的0x8000000地址映射到地址0x000000地址，通过修改SYSCFG-&gt;CFGR寄存器将ram的0x20000000内存映射到地址0x000000，通过查阅可以看到中断入口函数存放在bin文件的最前面：</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/2.png\" alt=\"\" /></p>\n<p>再通过启动文件可以看到一共48个中断<font style=\"color:rgb(77, 77, 77);\">53行Vectors—到–&gt;102行Vectors_End 每一个DCD都代表一个中断向量 （ 中断服务程序的入口地址 ）分为内核中断和外部中断，其中32位系统中，每一个中断入口函数指针占4字节。所以一共占用48*4= 192 = 0xC0字节。</font></p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/3.png\" alt=\"\" /></p>\n<p>通过查看hex文件可以知道我们16进制文件的0xc前都是中断入口函数指针后面接着是其他函数的入口函数指针。</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/4.png\" alt=\"\" /></p>\n<p>所以我们的方式是把前面的0XC0自己的入口函数指针复制到内存空间中。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取APP的向量表地址</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>((<span class=\"type\">uint32_t</span> *)RAM_APP1_BASE_ADDRESS, (<span class=\"type\">uint32_t</span> *)FLASH_APP1_BASE_ADDRESS, <span class=\"number\">48</span>*<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n<p>需要在APP的程序中屏蔽前面部分的内存，防止被修改</p>\n<p><img src=\"/images/posts/%E5%9F%BA%E4%BA%8ECortex-M0%E5%86%85%E6%A0%B8%E7%9A%84Bootloader%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/5.png\" alt=\"\" /></p>\n<p>完成上诉步骤，接着就可以实现从以0x2000 0000作为起始地址映射向量表：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, ENABLE);</span><br><span class=\"line\">SYSCFG-&gt;CFGR &amp;= ~SYSCFG_CFGR_MEM_MODE; <span class=\"comment\">// 清除原有配置</span></span><br><span class=\"line\">SYSCFG-&gt;CFGR |= (<span class=\"number\">0x3</span> &lt;&lt; SYSCFG_CFGR_MEM_MODE_Pos); <span class=\"comment\">// MEM_MODE=11</span></span><br><span class=\"line\">RCC_APB1PeriphClockCmd(RCC_APB1PERIPH_SYSCFG, DISABLE);</span><br></pre></td></tr></table></figure>\n<pre><code>这里需要注意，MM32和STM32单片机区别，MM32单片机在修改内存映射修改时需要启动相对应的时钟。而在STM32无需这项操作。\n</code></pre>\n<h5 id=\"跳转app整体完整操作\"><a class=\"markdownIt-Anchor\" href=\"#跳转app整体完整操作\"></a> 跳转APP整体完整操作</h5>\n<p>禁用中断，确保后续操作不会被中断-&gt;禁用定时器中断\\禁用发送和接收-&gt;获取APP的向量表地址复制RAM中-&gt; 配置SYSCFG，设置RAM映射到0地址-&gt;重启中断(减少app代码修改)-&gt;定义一个函数指针-&gt;获取应用程序的入口地址-&gt; 设置主栈指针(MSP)为应用程序的初始栈指针-&gt;调用应用程序的入口函数，开始执行应用程序-&gt;APP中屏蔽前0xc0的内存地址</p>\n<p><strong><font style=\"color:rgb(64, 64, 64);\">流程图</font></strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">    A[Bootloader开始] --&gt; B[禁用所有中断]</span><br><span class=\"line\">    B --&gt; C[复制APP向量表到RAM]</span><br><span class=\"line\">    C --&gt; D[配置SYSCFG重映射RAM到0x00000000]</span><br><span class=\"line\">    D --&gt; E[设置MSP为APP栈顶地址]</span><br><span class=\"line\">    E --&gt; F[跳转到APP入口函数]</span><br><span class=\"line\">    F --&gt; G[APP运行]</span><br></pre></td></tr></table></figure>\n<h4 id=\"font-stylecolorrgb64-64-64六结语font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-64六结语font\"></a> <strong><font style=\"color:rgb(64, 64, 64);\">六：结语</font></strong></h4>\n<p><font style=\"color:rgb(64, 64, 64);\">在本次关于MM32G001 MCU（Cortex-M0内核）的Bootloader开发指南中，我们详细探讨了Bootloader在嵌入式系统中的重要角色，特别是在中断向量表映射方面的特殊需求。通过深入分析Cortex-M0与Cortex-M3内核在中断向量表映射机制上的差异，明确了在MM32G001上实现Bootloader的关键步骤和注意事项。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">我回顾了Bootloader的核心功能，包括硬件初始化、应用程序有效性检查、固件升级以及中断向量表的重映射。特别是在MM32G001上，由于其Cortex-M0内核不支持动态修改向量表偏移寄存器（VTOR），我采用了硬件重映射的方法，通过将应用程序的向量表复制到RAM，并配置系统控制寄存器（SYSCFG）以实现中断向量表的重映射。这一过程确保了在不修改应用程序代码的前提下，实现安全可靠的跳转。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">通过完整的代码示例和详细的步骤说明，我们展示了如何禁用中断、复制向量表到RAM、配置SYSCFG寄存器以及跳转到应用程序入口函数。这些步骤不仅确保了系统的稳定性，还为开发者提供了清晰的实现路径。</font></p>\n<p><font style=\"color:rgb(64, 64, 64);\">在实际开发过程中，强调了以下关键点：</font></p>\n<ol>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">内存对齐</font></strong><font style=\"color:rgb(64, 64, 64);\">：确保Flash和RAM地址按芯片手册要求对齐，避免地址错误导致的系统崩溃。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">中断清除</font></strong><font style=\"color:rgb(64, 64, 64);\">：跳转前清除所有挂起的中断，防止在应用程序运行过程中出现意外中断。</font></li>\n<li><strong><font style=\"color:rgb(64, 64, 64);\">调试验证</font></strong><font style=\"color:rgb(64, 64, 64);\">：使用内存查看工具和调试器，确保向量表复制正确，中断向量表重映射成功。</font></li>\n</ol>\n<p><font style=\"color:rgb(64, 64, 64);\">建议读者在开发过程中参考MM32G001的芯片手册，确保配置和操作符合芯片的具体要求。</font></p>\n<blockquote>\n<p><font style=\"color:rgb(64, 64, 64);\">个人博客：WWW.f123.club</font></p>\n</blockquote>\n"},{"title":"基于Modbus-RTU协议的Bootloader升级系统设计","mermaid":true,"date":"2025-03-23T16:00:00.000Z","comments":1,"_content":"\n---\n\n## 一、串口协议配置\n### 1. 基本串口参数\n```cpp\n// Qt串口配置代码\nQSerialPort serial;\nserial.setPortName(\"COM1\");       // 用户可选择端口\nserial.setBaudRate(QSerialPort::Baud9600);\nserial.setDataBits(QSerialPort::Data8);\nserial.setParity(QSerialPort::NoParity);\nserial.setStopBits(QSerialPort::OneStop);\nserial.setFlowControl(QSerialPort::NoFlowControl);\n\n// 连接接收槽函数\nconnect(&serial, &QSerialPort::readyRead, this, &ModbusMaster::handleReadyRead);\n```\n\n## 二、Hex文件处理\n### 1. 文件解析与转换\n```cpp\nbool ModbusMaster::loadAndParseHexFile(const QString &filePath) \n{\n    QFile file(filePath);\n    if (!file.open(QIODevice::ReadOnly)) {\n        qWarning() << \"文件打开失败:\" << filePath;\n        return false;\n    }\n\n    // 此处简化处理直接读取二进制数据\n    QByteArray data = file.readAll();\n    file.close();\n\n    // 分块处理（512字节/块）\n    for (int i = 0; i < data.size(); i += 512) {\n        QByteArray block = data.mid(i, 512);\n        if(block.size() < 512) {\n            block.append(QByteArray(512 - block.size(), 0xFF)); // 填充0xFF\n        }\n        dataBlocks.append(block);\n    }\n    \n    return !dataBlocks.isEmpty();\n}\n```\n\n## 三、Modbus-RTU协议帧格式\n### 1. 数据帧结构\n| 字段 | 长度 | 说明 |\n| --- | --- | --- |\n| 从机地址 | 1字节 | 目标设备地址（0x01~0xFF） |\n| 功能码 | 1字节 | 0x03读/0x10写多寄存器 |\n| 数据地址 | 2字节 | 寄存器起始地址 |\n| 数据内容 | N字节 | 最好的方式是block号(2字节)+512字节数据 |\n| CRC校验 | 2字节 | Modbus CRC16校验 |\n\n\n### 2. 关键寄存器定义\n| 寄存器地址 | 类型 | 功能描述 |\n| --- | --- | --- |\n| 0x00E0 | 读写 | 状态寄存器（0:APP, 1:Bootloader）用于确认当前状态（读取回复00 xx，写入需要加校验（cc xx），可使用读UID校验进入bootloder） |\n| 0x00E1 | 读写 | 固件版本号（例如0x0102表示V1.2）上位机读取文件名 |\n| 0x00E2 | 只写 | 总数据块数（数据长度/512 + 1） |\n| 0x00E3 | 写 | 数据块写入接口 |\n| 0x00E4 | 读 | 完整CRC校验 |\n\n\n## 四、核心功能实现\n### 1. 数据发送模块\n```cpp\nQByteArray ModbusMaster::createModbusRequest(const bankNum,const QByteArray &data) {\n    /* 自定义Bootloader协议帧格式：\n       ---------------------------------------------------\n       | 地址(1) | 功能码(1) | 块序号(2) | 数据块(512) | CRC16(2)    |\n       --------------------------------------------------- */\n    QByteArray frame;\n    quint8 slaveAddr = 0x01;       // 从机地址\n    quint8 funcCode = 0x06;        // 自定义写操作\n    \n    // 帧头\n    frame.append(slaveAddr);\n    frame.append(funcCode);\n\n    // 块序号\n    frame.append(bankNum >> 8);\n    frame.append(bankNum & 0xFF);\n    \n    // 数据块（固定512字节）\n    if(data.size() < 512){\n        frame.append(data);\n        frame.append(QByteArray(512 - data.size(), 0xFF)); // 填充\n    } else {\n        frame.append(data.left(512));\n    }\n    \n    // CRC校验\n    quint16 crc = calculateCRC(frame);\n    frame.append(quint8(crc & 0xFF));\n    frame.append(quint8((crc >> 8) & 0xFF));\n    return frame;\n}\n```\n\n### 2. CRC校验实现\n```cpp\nquint16 ModbusMaster::calculateCRC(const QByteArray &data)\n{\n    quint16 crc = 0xFFFF;\n    for (char byte : data) {\n        crc ^= (quint8)byte;\n        for (int i = 0; i < 8; ++i) {\n            if (crc & 0x0001) {\n                crc = (crc >> 1) ^ 0xA001;\n            } else {\n                crc >>= 1;\n            }\n        }\n    }                                                         \n    return crc;\n}\n```\n\n### 3. 响应处理状态机\n```cpp\nvoid ModbusMaster::handleReadyRead()\n{\n    QByteArray response = serial.readAll();\n    \n    // 验证CRC\n    quint16 receivedCRC = (quint8)response.at(response.size()-2) << 8 \n                        | (quint8)response.at(response.size()-1);\n    quint16 calculatedCRC = calculateCRC(response.left(response.size()-2));\n    \n    if(receivedCRC != calculatedCRC) {\n        qWarning() << \"CRC校验失败\";\n        return;\n    }\n\n    // 解析功能码\n    quint8 functionCode = (quint8)response[1];\n    switch(functionCode) {\n    case 0x10: // 写寄存器响应\n        handleWriteResponse(response);\n        break;\n    case 0x03: // 读寄存器响应\n        handleReadResponse(response);\n        break;\n    default:\n        qWarning() << \"未知功能码:\" << functionCode;\n    }\n}\n```\n\n## 五、升级流程控制\n```mermaid\nsequenceDiagram\n    participant 上位机\n    participant 下位机\n    \n    上位机->>下位机: 发送身份验证（挑战-响应）\n    activate 下位机\n    下位机-->>上位机: 返回响应数据+状态\n    deactivate 下位机\n    \n    上位机->>下位机: 写0x00F0进入Bootloader\n    下位机-->>上位机: 操作成功响应(0x00F0 0x0001)\n    \n    上位机->>下位机: 读0x00F0确认状态\n    下位机-->>上位机: 返回当前模式(0x0001)\n    \n    上位机->>下位机: 读0x00F1（固件版本）\n    下位机-->>上位机: 返回版本号\n    上位机->>上位机: 验证版本兼容性\n    \n    alt 版本验证通过\n        上位机->>下位机: 写0x00F2总块数\n        下位机-->>上位机: 确认接收块数\n        \n        loop 数据块传输\n            上位机->>下位机: 写0x00F3发送数据块(n)\n            下位机-->>上位机: 确认接收或错误码\n            alt 传输失败\n                上位机->>上位机: 指数退避重试(最多3次)\n            end\n        end\n        \n        上位机->>下位机: 读0x00F4全局CRC\n        下位机-->>上位机: 返回计算后的CRC\n        \n        alt CRC匹配\n\t\t\t\t\t\t上位机->>下位机: 写0x00F1（固件版本）\n\t\t\t\t    下位机-->>上位机: 返回新版本号\n            上位机->>下位机: 写0x00F0返回APP模式\n            下位机-->>上位机: 操作成功响应\n        else CRC不匹配\n            上位机->>上位机: 触发错误处理流程\n        end\n        \n    else 版本验证失败\n        上位机->>下位机: 写0x00F0返回APP模式\n        下位机-->>上位机: 模式切换确认\n        上位机->>上位机: 记录错误日志并终止\n    end\n```\n\n### 1. 状态转移流程\n```mermaid\nstateDiagram-v2\n    [*] --> Idle\n    Idle --> EnterBootloader: 开始升级\n    EnterBootloader --> SendMetadata: 收到ACK\n    SendMetadata --> TransferData: 收到ACK\n    TransferData --> TransferData: 发送下一块\n    TransferData --> Finalize: 最后一块完成\n    Finalize --> [*]: 收到最终确认\n```\n\n### 2. 错误处理机制\n| 错误类型 | 处理方式 |\n| --- | --- |\n| CRC校验失败 | 自动重发当前数据块（最多3次） |\n| 超时无响应 | 自动重发当前数据块（最多3次） |\n| 版本不匹配 | 终止升级并提示错误 |\n| Flash写入失败 | 记录错误地址并尝试续传 |\n\n\n## 六、下位机响应规范\n### 1. 成功响应格式\n```plain\n01 06 00F3 0001 XXXX (CRC)\n```\n\n+ 第1字节：从机地址\n+ 第2字节：功能码\n+ 第3-4字节：写入地址\n+ 第5-6字节：成功写入的bank号\n+ 最后2字节：CRC校验\n\n### 2. 错误响应格式\n```plain\n01 90 04 XXXX (CRC)\n```\n\n+ 第2字节：功能码+0x80\n+ 第3字节：错误代码\n    - 0x01: 非法功能\n    - 0x02: 非法地址\n    - 0x03: 数据值错误\n    - 0x04: 设备忙\n\n#### <font style=\"color:rgb(64, 64, 64);\">2.2 自定义Bootloader异常码</font>\n| **异常码** | **名称** | **触发场景** | **建议处理方式** |\n| --- | --- | --- | --- |\n| <font style=\"color:rgb(64, 64, 64);\">0x11</font> | <font style=\"color:rgb(64, 64, 64);\">CRC Check Failed</font> | <font style=\"color:rgb(64, 64, 64);\">数据块CRC校验失败</font> | <font style=\"color:rgb(64, 64, 64);\">自动重传（最多3次）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x12</font> | <font style=\"color:rgb(64, 64, 64);\">Flash Write Error</font> | <font style=\"color:rgb(64, 64, 64);\">Flash编程失败</font> | <font style=\"color:rgb(64, 64, 64);\">记录错误地址块，尝试续传</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x13</font> | <font style=\"color:rgb(64, 64, 64);\">Device Busy</font> | <font style=\"color:rgb(64, 64, 64);\">设备处理忙状态</font> | <font style=\"color:rgb(64, 64, 64);\">指数退避重试（最大5次）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x14</font> | <font style=\"color:rgb(64, 64, 64);\">Auth Failed</font> | <font style=\"color:rgb(64, 64, 64);\">身份验证失败</font> | <font style=\"color:rgb(64, 64, 64);\">终止并触发安全锁定</font> |\n\n\n---\n\n# 注意事项\n1. **Hex文件解析**：实际项目需实现完整的HEX或bin格式解析\n2. **内存对齐**：确保数据块地址符合Flash页对齐要求\n3. **CRC校验**：必须在下位机端同步实现相同算法\n4. **超时时间**：根据实际硬件性能调整（3-5秒）\n5. **固件验证**：升级完成后建议执行整体CRC校验\n\n\n\n","source":"_posts/基于Modbus-RTU协议的Bootloader升级系统设计.md","raw":"---\ntitle: 基于Modbus-RTU协议的Bootloader升级系统设计\nmermaid: true\ndate: 2025-03-24\ntags: [嵌入式, C语言, 笔记, 单片机, bootloader]\ncomments: true\ncategories: [嵌入式]\n---\n\n---\n\n## 一、串口协议配置\n### 1. 基本串口参数\n```cpp\n// Qt串口配置代码\nQSerialPort serial;\nserial.setPortName(\"COM1\");       // 用户可选择端口\nserial.setBaudRate(QSerialPort::Baud9600);\nserial.setDataBits(QSerialPort::Data8);\nserial.setParity(QSerialPort::NoParity);\nserial.setStopBits(QSerialPort::OneStop);\nserial.setFlowControl(QSerialPort::NoFlowControl);\n\n// 连接接收槽函数\nconnect(&serial, &QSerialPort::readyRead, this, &ModbusMaster::handleReadyRead);\n```\n\n## 二、Hex文件处理\n### 1. 文件解析与转换\n```cpp\nbool ModbusMaster::loadAndParseHexFile(const QString &filePath) \n{\n    QFile file(filePath);\n    if (!file.open(QIODevice::ReadOnly)) {\n        qWarning() << \"文件打开失败:\" << filePath;\n        return false;\n    }\n\n    // 此处简化处理直接读取二进制数据\n    QByteArray data = file.readAll();\n    file.close();\n\n    // 分块处理（512字节/块）\n    for (int i = 0; i < data.size(); i += 512) {\n        QByteArray block = data.mid(i, 512);\n        if(block.size() < 512) {\n            block.append(QByteArray(512 - block.size(), 0xFF)); // 填充0xFF\n        }\n        dataBlocks.append(block);\n    }\n    \n    return !dataBlocks.isEmpty();\n}\n```\n\n## 三、Modbus-RTU协议帧格式\n### 1. 数据帧结构\n| 字段 | 长度 | 说明 |\n| --- | --- | --- |\n| 从机地址 | 1字节 | 目标设备地址（0x01~0xFF） |\n| 功能码 | 1字节 | 0x03读/0x10写多寄存器 |\n| 数据地址 | 2字节 | 寄存器起始地址 |\n| 数据内容 | N字节 | 最好的方式是block号(2字节)+512字节数据 |\n| CRC校验 | 2字节 | Modbus CRC16校验 |\n\n\n### 2. 关键寄存器定义\n| 寄存器地址 | 类型 | 功能描述 |\n| --- | --- | --- |\n| 0x00E0 | 读写 | 状态寄存器（0:APP, 1:Bootloader）用于确认当前状态（读取回复00 xx，写入需要加校验（cc xx），可使用读UID校验进入bootloder） |\n| 0x00E1 | 读写 | 固件版本号（例如0x0102表示V1.2）上位机读取文件名 |\n| 0x00E2 | 只写 | 总数据块数（数据长度/512 + 1） |\n| 0x00E3 | 写 | 数据块写入接口 |\n| 0x00E4 | 读 | 完整CRC校验 |\n\n\n## 四、核心功能实现\n### 1. 数据发送模块\n```cpp\nQByteArray ModbusMaster::createModbusRequest(const bankNum,const QByteArray &data) {\n    /* 自定义Bootloader协议帧格式：\n       ---------------------------------------------------\n       | 地址(1) | 功能码(1) | 块序号(2) | 数据块(512) | CRC16(2)    |\n       --------------------------------------------------- */\n    QByteArray frame;\n    quint8 slaveAddr = 0x01;       // 从机地址\n    quint8 funcCode = 0x06;        // 自定义写操作\n    \n    // 帧头\n    frame.append(slaveAddr);\n    frame.append(funcCode);\n\n    // 块序号\n    frame.append(bankNum >> 8);\n    frame.append(bankNum & 0xFF);\n    \n    // 数据块（固定512字节）\n    if(data.size() < 512){\n        frame.append(data);\n        frame.append(QByteArray(512 - data.size(), 0xFF)); // 填充\n    } else {\n        frame.append(data.left(512));\n    }\n    \n    // CRC校验\n    quint16 crc = calculateCRC(frame);\n    frame.append(quint8(crc & 0xFF));\n    frame.append(quint8((crc >> 8) & 0xFF));\n    return frame;\n}\n```\n\n### 2. CRC校验实现\n```cpp\nquint16 ModbusMaster::calculateCRC(const QByteArray &data)\n{\n    quint16 crc = 0xFFFF;\n    for (char byte : data) {\n        crc ^= (quint8)byte;\n        for (int i = 0; i < 8; ++i) {\n            if (crc & 0x0001) {\n                crc = (crc >> 1) ^ 0xA001;\n            } else {\n                crc >>= 1;\n            }\n        }\n    }                                                         \n    return crc;\n}\n```\n\n### 3. 响应处理状态机\n```cpp\nvoid ModbusMaster::handleReadyRead()\n{\n    QByteArray response = serial.readAll();\n    \n    // 验证CRC\n    quint16 receivedCRC = (quint8)response.at(response.size()-2) << 8 \n                        | (quint8)response.at(response.size()-1);\n    quint16 calculatedCRC = calculateCRC(response.left(response.size()-2));\n    \n    if(receivedCRC != calculatedCRC) {\n        qWarning() << \"CRC校验失败\";\n        return;\n    }\n\n    // 解析功能码\n    quint8 functionCode = (quint8)response[1];\n    switch(functionCode) {\n    case 0x10: // 写寄存器响应\n        handleWriteResponse(response);\n        break;\n    case 0x03: // 读寄存器响应\n        handleReadResponse(response);\n        break;\n    default:\n        qWarning() << \"未知功能码:\" << functionCode;\n    }\n}\n```\n\n## 五、升级流程控制\n```mermaid\nsequenceDiagram\n    participant 上位机\n    participant 下位机\n    \n    上位机->>下位机: 发送身份验证（挑战-响应）\n    activate 下位机\n    下位机-->>上位机: 返回响应数据+状态\n    deactivate 下位机\n    \n    上位机->>下位机: 写0x00F0进入Bootloader\n    下位机-->>上位机: 操作成功响应(0x00F0 0x0001)\n    \n    上位机->>下位机: 读0x00F0确认状态\n    下位机-->>上位机: 返回当前模式(0x0001)\n    \n    上位机->>下位机: 读0x00F1（固件版本）\n    下位机-->>上位机: 返回版本号\n    上位机->>上位机: 验证版本兼容性\n    \n    alt 版本验证通过\n        上位机->>下位机: 写0x00F2总块数\n        下位机-->>上位机: 确认接收块数\n        \n        loop 数据块传输\n            上位机->>下位机: 写0x00F3发送数据块(n)\n            下位机-->>上位机: 确认接收或错误码\n            alt 传输失败\n                上位机->>上位机: 指数退避重试(最多3次)\n            end\n        end\n        \n        上位机->>下位机: 读0x00F4全局CRC\n        下位机-->>上位机: 返回计算后的CRC\n        \n        alt CRC匹配\n\t\t\t\t\t\t上位机->>下位机: 写0x00F1（固件版本）\n\t\t\t\t    下位机-->>上位机: 返回新版本号\n            上位机->>下位机: 写0x00F0返回APP模式\n            下位机-->>上位机: 操作成功响应\n        else CRC不匹配\n            上位机->>上位机: 触发错误处理流程\n        end\n        \n    else 版本验证失败\n        上位机->>下位机: 写0x00F0返回APP模式\n        下位机-->>上位机: 模式切换确认\n        上位机->>上位机: 记录错误日志并终止\n    end\n```\n\n### 1. 状态转移流程\n```mermaid\nstateDiagram-v2\n    [*] --> Idle\n    Idle --> EnterBootloader: 开始升级\n    EnterBootloader --> SendMetadata: 收到ACK\n    SendMetadata --> TransferData: 收到ACK\n    TransferData --> TransferData: 发送下一块\n    TransferData --> Finalize: 最后一块完成\n    Finalize --> [*]: 收到最终确认\n```\n\n### 2. 错误处理机制\n| 错误类型 | 处理方式 |\n| --- | --- |\n| CRC校验失败 | 自动重发当前数据块（最多3次） |\n| 超时无响应 | 自动重发当前数据块（最多3次） |\n| 版本不匹配 | 终止升级并提示错误 |\n| Flash写入失败 | 记录错误地址并尝试续传 |\n\n\n## 六、下位机响应规范\n### 1. 成功响应格式\n```plain\n01 06 00F3 0001 XXXX (CRC)\n```\n\n+ 第1字节：从机地址\n+ 第2字节：功能码\n+ 第3-4字节：写入地址\n+ 第5-6字节：成功写入的bank号\n+ 最后2字节：CRC校验\n\n### 2. 错误响应格式\n```plain\n01 90 04 XXXX (CRC)\n```\n\n+ 第2字节：功能码+0x80\n+ 第3字节：错误代码\n    - 0x01: 非法功能\n    - 0x02: 非法地址\n    - 0x03: 数据值错误\n    - 0x04: 设备忙\n\n#### <font style=\"color:rgb(64, 64, 64);\">2.2 自定义Bootloader异常码</font>\n| **异常码** | **名称** | **触发场景** | **建议处理方式** |\n| --- | --- | --- | --- |\n| <font style=\"color:rgb(64, 64, 64);\">0x11</font> | <font style=\"color:rgb(64, 64, 64);\">CRC Check Failed</font> | <font style=\"color:rgb(64, 64, 64);\">数据块CRC校验失败</font> | <font style=\"color:rgb(64, 64, 64);\">自动重传（最多3次）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x12</font> | <font style=\"color:rgb(64, 64, 64);\">Flash Write Error</font> | <font style=\"color:rgb(64, 64, 64);\">Flash编程失败</font> | <font style=\"color:rgb(64, 64, 64);\">记录错误地址块，尝试续传</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x13</font> | <font style=\"color:rgb(64, 64, 64);\">Device Busy</font> | <font style=\"color:rgb(64, 64, 64);\">设备处理忙状态</font> | <font style=\"color:rgb(64, 64, 64);\">指数退避重试（最大5次）</font> |\n| <font style=\"color:rgb(64, 64, 64);\">0x14</font> | <font style=\"color:rgb(64, 64, 64);\">Auth Failed</font> | <font style=\"color:rgb(64, 64, 64);\">身份验证失败</font> | <font style=\"color:rgb(64, 64, 64);\">终止并触发安全锁定</font> |\n\n\n---\n\n# 注意事项\n1. **Hex文件解析**：实际项目需实现完整的HEX或bin格式解析\n2. **内存对齐**：确保数据块地址符合Flash页对齐要求\n3. **CRC校验**：必须在下位机端同步实现相同算法\n4. **超时时间**：根据实际硬件性能调整（3-5秒）\n5. **固件验证**：升级完成后建议执行整体CRC校验\n\n\n\n","slug":"基于Modbus-RTU协议的Bootloader升级系统设计","published":1,"updated":"2025-07-16T07:38:11.649Z","layout":"post","photos":[],"_id":"cmd71t81b002i3cw6fpxzb97i","content":"<hr />\n<h2 id=\"一-串口协议配置\"><a class=\"markdownIt-Anchor\" href=\"#一-串口协议配置\"></a> 一、串口协议配置</h2>\n<h3 id=\"1-基本串口参数\"><a class=\"markdownIt-Anchor\" href=\"#1-基本串口参数\"></a> 1. 基本串口参数</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Qt串口配置代码</span></span><br><span class=\"line\">QSerialPort serial;</span><br><span class=\"line\">serial.<span class=\"built_in\">setPortName</span>(<span class=\"string\">&quot;COM1&quot;</span>);       <span class=\"comment\">// 用户可选择端口</span></span><br><span class=\"line\">serial.<span class=\"built_in\">setBaudRate</span>(QSerialPort::Baud9600);</span><br><span class=\"line\">serial.<span class=\"built_in\">setDataBits</span>(QSerialPort::Data8);</span><br><span class=\"line\">serial.<span class=\"built_in\">setParity</span>(QSerialPort::NoParity);</span><br><span class=\"line\">serial.<span class=\"built_in\">setStopBits</span>(QSerialPort::OneStop);</span><br><span class=\"line\">serial.<span class=\"built_in\">setFlowControl</span>(QSerialPort::NoFlowControl);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 连接接收槽函数</span></span><br><span class=\"line\"><span class=\"built_in\">connect</span>(&amp;serial, &amp;QSerialPort::readyRead, <span class=\"keyword\">this</span>, &amp;ModbusMaster::handleReadyRead);</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-hex文件处理\"><a class=\"markdownIt-Anchor\" href=\"#二-hex文件处理\"></a> 二、Hex文件处理</h2>\n<h3 id=\"1-文件解析与转换\"><a class=\"markdownIt-Anchor\" href=\"#1-文件解析与转换\"></a> 1. 文件解析与转换</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">ModbusMaster::loadAndParseHexFile</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;filePath)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(filePath)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;文件打开失败:&quot;</span> &lt;&lt; filePath;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 此处简化处理直接读取二进制数据</span></span><br><span class=\"line\">    QByteArray data = file.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 分块处理（512字节/块）</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"built_in\">size</span>(); i += <span class=\"number\">512</span>) &#123;</span><br><span class=\"line\">        QByteArray block = data.<span class=\"built_in\">mid</span>(i, <span class=\"number\">512</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(block.<span class=\"built_in\">size</span>() &lt; <span class=\"number\">512</span>) &#123;</span><br><span class=\"line\">            block.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(<span class=\"number\">512</span> - block.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>)); <span class=\"comment\">// 填充0xFF</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dataBlocks.<span class=\"built_in\">append</span>(block);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> !dataBlocks.<span class=\"built_in\">isEmpty</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-modbus-rtu协议帧格式\"><a class=\"markdownIt-Anchor\" href=\"#三-modbus-rtu协议帧格式\"></a> 三、Modbus-RTU协议帧格式</h2>\n<h3 id=\"1-数据帧结构\"><a class=\"markdownIt-Anchor\" href=\"#1-数据帧结构\"></a> 1. 数据帧结构</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>长度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>从机地址</td>\n<td>1字节</td>\n<td>目标设备地址（0x01~0xFF）</td>\n</tr>\n<tr>\n<td>功能码</td>\n<td>1字节</td>\n<td>0x03读/0x10写多寄存器</td>\n</tr>\n<tr>\n<td>数据地址</td>\n<td>2字节</td>\n<td>寄存器起始地址</td>\n</tr>\n<tr>\n<td>数据内容</td>\n<td>N字节</td>\n<td>最好的方式是block号(2字节)+512字节数据</td>\n</tr>\n<tr>\n<td>CRC校验</td>\n<td>2字节</td>\n<td>Modbus CRC16校验</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-关键寄存器定义\"><a class=\"markdownIt-Anchor\" href=\"#2-关键寄存器定义\"></a> 2. 关键寄存器定义</h3>\n<table>\n<thead>\n<tr>\n<th>寄存器地址</th>\n<th>类型</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0x00E0</td>\n<td>读写</td>\n<td>状态寄存器（0:APP, 1:Bootloader）用于确认当前状态（读取回复00 xx，写入需要加校验（cc xx），可使用读UID校验进入bootloder）</td>\n</tr>\n<tr>\n<td>0x00E1</td>\n<td>读写</td>\n<td>固件版本号（例如0x0102表示V1.2）上位机读取文件名</td>\n</tr>\n<tr>\n<td>0x00E2</td>\n<td>只写</td>\n<td>总数据块数（数据长度/512 + 1）</td>\n</tr>\n<tr>\n<td>0x00E3</td>\n<td>写</td>\n<td>数据块写入接口</td>\n</tr>\n<tr>\n<td>0x00E4</td>\n<td>读</td>\n<td>完整CRC校验</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四-核心功能实现\"><a class=\"markdownIt-Anchor\" href=\"#四-核心功能实现\"></a> 四、核心功能实现</h2>\n<h3 id=\"1-数据发送模块\"><a class=\"markdownIt-Anchor\" href=\"#1-数据发送模块\"></a> 1. 数据发送模块</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QByteArray <span class=\"title\">ModbusMaster::createModbusRequest</span><span class=\"params\">(<span class=\"type\">const</span> bankNum,<span class=\"type\">const</span> QByteArray &amp;data)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 自定义Bootloader协议帧格式：</span></span><br><span class=\"line\"><span class=\"comment\">       ---------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">       | 地址(1) | 功能码(1) | 块序号(2) | 数据块(512) | CRC16(2)    |</span></span><br><span class=\"line\"><span class=\"comment\">       --------------------------------------------------- */</span></span><br><span class=\"line\">    QByteArray frame;</span><br><span class=\"line\">    quint8 slaveAddr = <span class=\"number\">0x01</span>;       <span class=\"comment\">// 从机地址</span></span><br><span class=\"line\">    quint8 funcCode = <span class=\"number\">0x06</span>;        <span class=\"comment\">// 自定义写操作</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 帧头</span></span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(slaveAddr);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(funcCode);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 块序号</span></span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(bankNum &gt;&gt; <span class=\"number\">8</span>);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(bankNum &amp; <span class=\"number\">0xFF</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 数据块（固定512字节）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(data.<span class=\"built_in\">size</span>() &lt; <span class=\"number\">512</span>)&#123;</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(data);</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(<span class=\"number\">512</span> - data.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>)); <span class=\"comment\">// 填充</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(data.<span class=\"built_in\">left</span>(<span class=\"number\">512</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// CRC校验</span></span><br><span class=\"line\">    quint16 crc = <span class=\"built_in\">calculateCRC</span>(frame);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">quint8</span>(crc &amp; <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">quint8</span>((crc &gt;&gt; <span class=\"number\">8</span>) &amp; <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> frame;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-crc校验实现\"><a class=\"markdownIt-Anchor\" href=\"#2-crc校验实现\"></a> 2. CRC校验实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">quint16 <span class=\"title\">ModbusMaster::calculateCRC</span><span class=\"params\">(<span class=\"type\">const</span> QByteArray &amp;data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    quint16 crc = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> byte : data) &#123;</span><br><span class=\"line\">        crc ^= (quint8)byte;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (crc &amp; <span class=\"number\">0x0001</span>) &#123;</span><br><span class=\"line\">                crc = (crc &gt;&gt; <span class=\"number\">1</span>) ^ <span class=\"number\">0xA001</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                crc &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;                                                         </span><br><span class=\"line\">    <span class=\"keyword\">return</span> crc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-响应处理状态机\"><a class=\"markdownIt-Anchor\" href=\"#3-响应处理状态机\"></a> 3. 响应处理状态机</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ModbusMaster::handleReadyRead</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    QByteArray response = serial.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证CRC</span></span><br><span class=\"line\">    quint16 receivedCRC = (quint8)response.<span class=\"built_in\">at</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-2</span>) &lt;&lt; <span class=\"number\">8</span> </span><br><span class=\"line\">                        | (quint8)response.<span class=\"built_in\">at</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>);</span><br><span class=\"line\">    quint16 calculatedCRC = <span class=\"built_in\">calculateCRC</span>(response.<span class=\"built_in\">left</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-2</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(receivedCRC != calculatedCRC) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;CRC校验失败&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解析功能码</span></span><br><span class=\"line\">    quint8 functionCode = (quint8)response[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(functionCode) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0x10</span>: <span class=\"comment\">// 写寄存器响应</span></span><br><span class=\"line\">        <span class=\"built_in\">handleWriteResponse</span>(response);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0x03</span>: <span class=\"comment\">// 读寄存器响应</span></span><br><span class=\"line\">        <span class=\"built_in\">handleReadResponse</span>(response);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;未知功能码:&quot;</span> &lt;&lt; functionCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-升级流程控制\"><a class=\"markdownIt-Anchor\" href=\"#五-升级流程控制\"></a> 五、升级流程控制</h2>\n<pre class=\"mermaid\">sequenceDiagram\n    participant 上位机\n    participant 下位机\n    \n    上位机->>下位机: 发送身份验证（挑战-响应）\n    activate 下位机\n    下位机-->>上位机: 返回响应数据+状态\n    deactivate 下位机\n    \n    上位机->>下位机: 写0x00F0进入Bootloader\n    下位机-->>上位机: 操作成功响应(0x00F0 0x0001)\n    \n    上位机->>下位机: 读0x00F0确认状态\n    下位机-->>上位机: 返回当前模式(0x0001)\n    \n    上位机->>下位机: 读0x00F1（固件版本）\n    下位机-->>上位机: 返回版本号\n    上位机->>上位机: 验证版本兼容性\n    \n    alt 版本验证通过\n        上位机->>下位机: 写0x00F2总块数\n        下位机-->>上位机: 确认接收块数\n        \n        loop 数据块传输\n            上位机->>下位机: 写0x00F3发送数据块(n)\n            下位机-->>上位机: 确认接收或错误码\n            alt 传输失败\n                上位机->>上位机: 指数退避重试(最多3次)\n            end\n        end\n        \n        上位机->>下位机: 读0x00F4全局CRC\n        下位机-->>上位机: 返回计算后的CRC\n        \n        alt CRC匹配\n\t\t\t\t\t\t上位机->>下位机: 写0x00F1（固件版本）\n\t\t\t\t    下位机-->>上位机: 返回新版本号\n            上位机->>下位机: 写0x00F0返回APP模式\n            下位机-->>上位机: 操作成功响应\n        else CRC不匹配\n            上位机->>上位机: 触发错误处理流程\n        end\n        \n    else 版本验证失败\n        上位机->>下位机: 写0x00F0返回APP模式\n        下位机-->>上位机: 模式切换确认\n        上位机->>上位机: 记录错误日志并终止\n    end</pre>\n<h3 id=\"1-状态转移流程\"><a class=\"markdownIt-Anchor\" href=\"#1-状态转移流程\"></a> 1. 状态转移流程</h3>\n<pre class=\"mermaid\">stateDiagram-v2\n    [*] --> Idle\n    Idle --> EnterBootloader: 开始升级\n    EnterBootloader --> SendMetadata: 收到ACK\n    SendMetadata --> TransferData: 收到ACK\n    TransferData --> TransferData: 发送下一块\n    TransferData --> Finalize: 最后一块完成\n    Finalize --> [*]: 收到最终确认</pre>\n<h3 id=\"2-错误处理机制\"><a class=\"markdownIt-Anchor\" href=\"#2-错误处理机制\"></a> 2. 错误处理机制</h3>\n<table>\n<thead>\n<tr>\n<th>错误类型</th>\n<th>处理方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CRC校验失败</td>\n<td>自动重发当前数据块（最多3次）</td>\n</tr>\n<tr>\n<td>超时无响应</td>\n<td>自动重发当前数据块（最多3次）</td>\n</tr>\n<tr>\n<td>版本不匹配</td>\n<td>终止升级并提示错误</td>\n</tr>\n<tr>\n<td>Flash写入失败</td>\n<td>记录错误地址并尝试续传</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"六-下位机响应规范\"><a class=\"markdownIt-Anchor\" href=\"#六-下位机响应规范\"></a> 六、下位机响应规范</h2>\n<h3 id=\"1-成功响应格式\"><a class=\"markdownIt-Anchor\" href=\"#1-成功响应格式\"></a> 1. 成功响应格式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01 06 00F3 0001 XXXX (CRC)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第1字节：从机地址</li>\n<li>第2字节：功能码</li>\n<li>第3-4字节：写入地址</li>\n<li>第5-6字节：成功写入的bank号</li>\n<li>最后2字节：CRC校验</li>\n</ul>\n<h3 id=\"2-错误响应格式\"><a class=\"markdownIt-Anchor\" href=\"#2-错误响应格式\"></a> 2. 错误响应格式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01 90 04 XXXX (CRC)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第2字节：功能码+0x80</li>\n<li>第3字节：错误代码\n<ul>\n<li>0x01: 非法功能</li>\n<li>0x02: 非法地址</li>\n<li>0x03: 数据值错误</li>\n<li>0x04: 设备忙</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"font-stylecolorrgb64-64-6422-自定义bootloader异常码font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-6422-自定义bootloader异常码font\"></a> <font style=\"color:rgb(64, 64, 64);\">2.2 自定义Bootloader异常码</font></h4>\n<table>\n<thead>\n<tr>\n<th><strong>异常码</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>触发场景</strong></th>\n<th><strong>建议处理方式</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x11</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">CRC Check Failed</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">数据块CRC校验失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">自动重传（最多3次）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x12</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Flash Write Error</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Flash编程失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">记录错误地址块，尝试续传</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x13</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Device Busy</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">设备处理忙状态</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">指数退避重试（最大5次）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x14</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Auth Failed</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">身份验证失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">终止并触发安全锁定</font></td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\"></a> 注意事项</h1>\n<ol>\n<li><strong>Hex文件解析</strong>：实际项目需实现完整的HEX或bin格式解析</li>\n<li><strong>内存对齐</strong>：确保数据块地址符合Flash页对齐要求</li>\n<li><strong>CRC校验</strong>：必须在下位机端同步实现相同算法</li>\n<li><strong>超时时间</strong>：根据实际硬件性能调整（3-5秒）</li>\n<li><strong>固件验证</strong>：升级完成后建议执行整体CRC校验</li>\n</ol>\n","excerpt":"","more":"<hr />\n<h2 id=\"一-串口协议配置\"><a class=\"markdownIt-Anchor\" href=\"#一-串口协议配置\"></a> 一、串口协议配置</h2>\n<h3 id=\"1-基本串口参数\"><a class=\"markdownIt-Anchor\" href=\"#1-基本串口参数\"></a> 1. 基本串口参数</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Qt串口配置代码</span></span><br><span class=\"line\">QSerialPort serial;</span><br><span class=\"line\">serial.<span class=\"built_in\">setPortName</span>(<span class=\"string\">&quot;COM1&quot;</span>);       <span class=\"comment\">// 用户可选择端口</span></span><br><span class=\"line\">serial.<span class=\"built_in\">setBaudRate</span>(QSerialPort::Baud9600);</span><br><span class=\"line\">serial.<span class=\"built_in\">setDataBits</span>(QSerialPort::Data8);</span><br><span class=\"line\">serial.<span class=\"built_in\">setParity</span>(QSerialPort::NoParity);</span><br><span class=\"line\">serial.<span class=\"built_in\">setStopBits</span>(QSerialPort::OneStop);</span><br><span class=\"line\">serial.<span class=\"built_in\">setFlowControl</span>(QSerialPort::NoFlowControl);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 连接接收槽函数</span></span><br><span class=\"line\"><span class=\"built_in\">connect</span>(&amp;serial, &amp;QSerialPort::readyRead, <span class=\"keyword\">this</span>, &amp;ModbusMaster::handleReadyRead);</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-hex文件处理\"><a class=\"markdownIt-Anchor\" href=\"#二-hex文件处理\"></a> 二、Hex文件处理</h2>\n<h3 id=\"1-文件解析与转换\"><a class=\"markdownIt-Anchor\" href=\"#1-文件解析与转换\"></a> 1. 文件解析与转换</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">ModbusMaster::loadAndParseHexFile</span><span class=\"params\">(<span class=\"type\">const</span> QString &amp;filePath)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">file</span><span class=\"params\">(filePath)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.<span class=\"built_in\">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;文件打开失败:&quot;</span> &lt;&lt; filePath;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 此处简化处理直接读取二进制数据</span></span><br><span class=\"line\">    QByteArray data = file.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    file.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 分块处理（512字节/块）</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"built_in\">size</span>(); i += <span class=\"number\">512</span>) &#123;</span><br><span class=\"line\">        QByteArray block = data.<span class=\"built_in\">mid</span>(i, <span class=\"number\">512</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(block.<span class=\"built_in\">size</span>() &lt; <span class=\"number\">512</span>) &#123;</span><br><span class=\"line\">            block.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(<span class=\"number\">512</span> - block.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>)); <span class=\"comment\">// 填充0xFF</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dataBlocks.<span class=\"built_in\">append</span>(block);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> !dataBlocks.<span class=\"built_in\">isEmpty</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三-modbus-rtu协议帧格式\"><a class=\"markdownIt-Anchor\" href=\"#三-modbus-rtu协议帧格式\"></a> 三、Modbus-RTU协议帧格式</h2>\n<h3 id=\"1-数据帧结构\"><a class=\"markdownIt-Anchor\" href=\"#1-数据帧结构\"></a> 1. 数据帧结构</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>长度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>从机地址</td>\n<td>1字节</td>\n<td>目标设备地址（0x01~0xFF）</td>\n</tr>\n<tr>\n<td>功能码</td>\n<td>1字节</td>\n<td>0x03读/0x10写多寄存器</td>\n</tr>\n<tr>\n<td>数据地址</td>\n<td>2字节</td>\n<td>寄存器起始地址</td>\n</tr>\n<tr>\n<td>数据内容</td>\n<td>N字节</td>\n<td>最好的方式是block号(2字节)+512字节数据</td>\n</tr>\n<tr>\n<td>CRC校验</td>\n<td>2字节</td>\n<td>Modbus CRC16校验</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-关键寄存器定义\"><a class=\"markdownIt-Anchor\" href=\"#2-关键寄存器定义\"></a> 2. 关键寄存器定义</h3>\n<table>\n<thead>\n<tr>\n<th>寄存器地址</th>\n<th>类型</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0x00E0</td>\n<td>读写</td>\n<td>状态寄存器（0:APP, 1:Bootloader）用于确认当前状态（读取回复00 xx，写入需要加校验（cc xx），可使用读UID校验进入bootloder）</td>\n</tr>\n<tr>\n<td>0x00E1</td>\n<td>读写</td>\n<td>固件版本号（例如0x0102表示V1.2）上位机读取文件名</td>\n</tr>\n<tr>\n<td>0x00E2</td>\n<td>只写</td>\n<td>总数据块数（数据长度/512 + 1）</td>\n</tr>\n<tr>\n<td>0x00E3</td>\n<td>写</td>\n<td>数据块写入接口</td>\n</tr>\n<tr>\n<td>0x00E4</td>\n<td>读</td>\n<td>完整CRC校验</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四-核心功能实现\"><a class=\"markdownIt-Anchor\" href=\"#四-核心功能实现\"></a> 四、核心功能实现</h2>\n<h3 id=\"1-数据发送模块\"><a class=\"markdownIt-Anchor\" href=\"#1-数据发送模块\"></a> 1. 数据发送模块</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QByteArray <span class=\"title\">ModbusMaster::createModbusRequest</span><span class=\"params\">(<span class=\"type\">const</span> bankNum,<span class=\"type\">const</span> QByteArray &amp;data)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 自定义Bootloader协议帧格式：</span></span><br><span class=\"line\"><span class=\"comment\">       ---------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">       | 地址(1) | 功能码(1) | 块序号(2) | 数据块(512) | CRC16(2)    |</span></span><br><span class=\"line\"><span class=\"comment\">       --------------------------------------------------- */</span></span><br><span class=\"line\">    QByteArray frame;</span><br><span class=\"line\">    quint8 slaveAddr = <span class=\"number\">0x01</span>;       <span class=\"comment\">// 从机地址</span></span><br><span class=\"line\">    quint8 funcCode = <span class=\"number\">0x06</span>;        <span class=\"comment\">// 自定义写操作</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 帧头</span></span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(slaveAddr);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(funcCode);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 块序号</span></span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(bankNum &gt;&gt; <span class=\"number\">8</span>);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(bankNum &amp; <span class=\"number\">0xFF</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 数据块（固定512字节）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(data.<span class=\"built_in\">size</span>() &lt; <span class=\"number\">512</span>)&#123;</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(data);</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(<span class=\"number\">512</span> - data.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>)); <span class=\"comment\">// 填充</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        frame.<span class=\"built_in\">append</span>(data.<span class=\"built_in\">left</span>(<span class=\"number\">512</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// CRC校验</span></span><br><span class=\"line\">    quint16 crc = <span class=\"built_in\">calculateCRC</span>(frame);</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">quint8</span>(crc &amp; <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">    frame.<span class=\"built_in\">append</span>(<span class=\"built_in\">quint8</span>((crc &gt;&gt; <span class=\"number\">8</span>) &amp; <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> frame;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-crc校验实现\"><a class=\"markdownIt-Anchor\" href=\"#2-crc校验实现\"></a> 2. CRC校验实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">quint16 <span class=\"title\">ModbusMaster::calculateCRC</span><span class=\"params\">(<span class=\"type\">const</span> QByteArray &amp;data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    quint16 crc = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">char</span> byte : data) &#123;</span><br><span class=\"line\">        crc ^= (quint8)byte;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (crc &amp; <span class=\"number\">0x0001</span>) &#123;</span><br><span class=\"line\">                crc = (crc &gt;&gt; <span class=\"number\">1</span>) ^ <span class=\"number\">0xA001</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                crc &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;                                                         </span><br><span class=\"line\">    <span class=\"keyword\">return</span> crc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-响应处理状态机\"><a class=\"markdownIt-Anchor\" href=\"#3-响应处理状态机\"></a> 3. 响应处理状态机</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ModbusMaster::handleReadyRead</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    QByteArray response = serial.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证CRC</span></span><br><span class=\"line\">    quint16 receivedCRC = (quint8)response.<span class=\"built_in\">at</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-2</span>) &lt;&lt; <span class=\"number\">8</span> </span><br><span class=\"line\">                        | (quint8)response.<span class=\"built_in\">at</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>);</span><br><span class=\"line\">    quint16 calculatedCRC = <span class=\"built_in\">calculateCRC</span>(response.<span class=\"built_in\">left</span>(response.<span class=\"built_in\">size</span>()<span class=\"number\">-2</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(receivedCRC != calculatedCRC) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;CRC校验失败&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解析功能码</span></span><br><span class=\"line\">    quint8 functionCode = (quint8)response[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(functionCode) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0x10</span>: <span class=\"comment\">// 写寄存器响应</span></span><br><span class=\"line\">        <span class=\"built_in\">handleWriteResponse</span>(response);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0x03</span>: <span class=\"comment\">// 读寄存器响应</span></span><br><span class=\"line\">        <span class=\"built_in\">handleReadResponse</span>(response);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;未知功能码:&quot;</span> &lt;&lt; functionCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"五-升级流程控制\"><a class=\"markdownIt-Anchor\" href=\"#五-升级流程控制\"></a> 五、升级流程控制</h2>\n<pre class=\"mermaid\">sequenceDiagram\n    participant 上位机\n    participant 下位机\n    \n    上位机->>下位机: 发送身份验证（挑战-响应）\n    activate 下位机\n    下位机-->>上位机: 返回响应数据+状态\n    deactivate 下位机\n    \n    上位机->>下位机: 写0x00F0进入Bootloader\n    下位机-->>上位机: 操作成功响应(0x00F0 0x0001)\n    \n    上位机->>下位机: 读0x00F0确认状态\n    下位机-->>上位机: 返回当前模式(0x0001)\n    \n    上位机->>下位机: 读0x00F1（固件版本）\n    下位机-->>上位机: 返回版本号\n    上位机->>上位机: 验证版本兼容性\n    \n    alt 版本验证通过\n        上位机->>下位机: 写0x00F2总块数\n        下位机-->>上位机: 确认接收块数\n        \n        loop 数据块传输\n            上位机->>下位机: 写0x00F3发送数据块(n)\n            下位机-->>上位机: 确认接收或错误码\n            alt 传输失败\n                上位机->>上位机: 指数退避重试(最多3次)\n            end\n        end\n        \n        上位机->>下位机: 读0x00F4全局CRC\n        下位机-->>上位机: 返回计算后的CRC\n        \n        alt CRC匹配\n\t\t\t\t\t\t上位机->>下位机: 写0x00F1（固件版本）\n\t\t\t\t    下位机-->>上位机: 返回新版本号\n            上位机->>下位机: 写0x00F0返回APP模式\n            下位机-->>上位机: 操作成功响应\n        else CRC不匹配\n            上位机->>上位机: 触发错误处理流程\n        end\n        \n    else 版本验证失败\n        上位机->>下位机: 写0x00F0返回APP模式\n        下位机-->>上位机: 模式切换确认\n        上位机->>上位机: 记录错误日志并终止\n    end</pre>\n<h3 id=\"1-状态转移流程\"><a class=\"markdownIt-Anchor\" href=\"#1-状态转移流程\"></a> 1. 状态转移流程</h3>\n<pre class=\"mermaid\">stateDiagram-v2\n    [*] --> Idle\n    Idle --> EnterBootloader: 开始升级\n    EnterBootloader --> SendMetadata: 收到ACK\n    SendMetadata --> TransferData: 收到ACK\n    TransferData --> TransferData: 发送下一块\n    TransferData --> Finalize: 最后一块完成\n    Finalize --> [*]: 收到最终确认</pre>\n<h3 id=\"2-错误处理机制\"><a class=\"markdownIt-Anchor\" href=\"#2-错误处理机制\"></a> 2. 错误处理机制</h3>\n<table>\n<thead>\n<tr>\n<th>错误类型</th>\n<th>处理方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CRC校验失败</td>\n<td>自动重发当前数据块（最多3次）</td>\n</tr>\n<tr>\n<td>超时无响应</td>\n<td>自动重发当前数据块（最多3次）</td>\n</tr>\n<tr>\n<td>版本不匹配</td>\n<td>终止升级并提示错误</td>\n</tr>\n<tr>\n<td>Flash写入失败</td>\n<td>记录错误地址并尝试续传</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"六-下位机响应规范\"><a class=\"markdownIt-Anchor\" href=\"#六-下位机响应规范\"></a> 六、下位机响应规范</h2>\n<h3 id=\"1-成功响应格式\"><a class=\"markdownIt-Anchor\" href=\"#1-成功响应格式\"></a> 1. 成功响应格式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01 06 00F3 0001 XXXX (CRC)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第1字节：从机地址</li>\n<li>第2字节：功能码</li>\n<li>第3-4字节：写入地址</li>\n<li>第5-6字节：成功写入的bank号</li>\n<li>最后2字节：CRC校验</li>\n</ul>\n<h3 id=\"2-错误响应格式\"><a class=\"markdownIt-Anchor\" href=\"#2-错误响应格式\"></a> 2. 错误响应格式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01 90 04 XXXX (CRC)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第2字节：功能码+0x80</li>\n<li>第3字节：错误代码\n<ul>\n<li>0x01: 非法功能</li>\n<li>0x02: 非法地址</li>\n<li>0x03: 数据值错误</li>\n<li>0x04: 设备忙</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"font-stylecolorrgb64-64-6422-自定义bootloader异常码font\"><a class=\"markdownIt-Anchor\" href=\"#font-stylecolorrgb64-64-6422-自定义bootloader异常码font\"></a> <font style=\"color:rgb(64, 64, 64);\">2.2 自定义Bootloader异常码</font></h4>\n<table>\n<thead>\n<tr>\n<th><strong>异常码</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>触发场景</strong></th>\n<th><strong>建议处理方式</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x11</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">CRC Check Failed</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">数据块CRC校验失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">自动重传（最多3次）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x12</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Flash Write Error</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Flash编程失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">记录错误地址块，尝试续传</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x13</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Device Busy</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">设备处理忙状态</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">指数退避重试（最大5次）</font></td>\n</tr>\n<tr>\n<td><font style=\"color:rgb(64, 64, 64);\">0x14</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">Auth Failed</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">身份验证失败</font></td>\n<td><font style=\"color:rgb(64, 64, 64);\">终止并触发安全锁定</font></td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\"></a> 注意事项</h1>\n<ol>\n<li><strong>Hex文件解析</strong>：实际项目需实现完整的HEX或bin格式解析</li>\n<li><strong>内存对齐</strong>：确保数据块地址符合Flash页对齐要求</li>\n<li><strong>CRC校验</strong>：必须在下位机端同步实现相同算法</li>\n<li><strong>超时时间</strong>：根据实际硬件性能调整（3-5秒）</li>\n<li><strong>固件验证</strong>：升级完成后建议执行整体CRC校验</li>\n</ol>\n"},{"title":"汽车电子固件升级（OTA）实现详解","date":"2025-07-13T16:00:00.000Z","mermaid":true,"cover":"https://pic4.zhimg.com/v2-1db2a15e30e57389a8456fca9b47223d_1440w.jpg","comment":{"title":{"en":"Leave a comment","zh-CN":"说些什么吧！","zh-TW":"說些什麼吧！","ja":"コメントを残す"},"default":"waline"},"_content":"## 引言\n随着汽车电子技术的飞速发展，**固件空中升级(OTA)** 技术已成为现代汽车电子系统中不可或缺的功能。在车身控制领域，**LIN总线**作为低成本、低复杂度的通信协议被广泛应用。本文将深入探讨基于LIN总线的OTA升级实现方案，从协议设计到代码实现，全面解析这一关键技术。\n\n## 第一部分：LIN总线基础\n### LIN总线概述\nLIN(Local Interconnect Network)是一种低成本串行通信协议，主要特点包括：\n\n+ **单主多从架构**：一个主节点控制多个从节点\n+ **低传输速率**：最高20kbps（典型应用19.2kbps）\n+ **单线传输**：简化布线，降低成本\n+ **时间触发通信**：主节点控制通信时序\n\n### LIN帧结构\n| 字段 | 长度 | 说明 |\n| --- | --- | --- |\n| 间隔场 | 13位以上低电平 | 帧起始标识 |\n| 同步场 | 1字节(0x55) | 时钟同步 |\n| 标识符 | 1字节 | 6位ID+2位校验 |\n| 数据场 | 0-8字节 | 传输数据 |\n| 校验和 | 1字节 | 数据完整性校验 |\n\n\n## 第二部分：OTA协议设计\n### ID枚举定义\n```c\ntypedef enum\n{\n    gID_OtapCmd_c = 0x31,   // 命令ID\n    gID_OtapGetStatus_c,    // 状态查询ID\n    gID_OtapData_c          // 数据传输ID\n} lin_id_t;\n```\n\n### 命令与状态枚举\n**命令枚举：**\n\n```c\ntypedef enum\n{\n    LIN_OTA_CMD_NONE = 0x00,  // 无命令\n    LIN_OTA_CMD_START,        // 开始传输\n    LIN_OTA_CMD_END,          // 结束传输\n    LIN_OTA_CMD_CONTINUE      // 继续传输\n} lin_ota_cmd_c;\n```\n\n**状态枚举：**\n\n```c\ntypedef enum\n{\n    LIN_OTA_STATUS_IDLE = 0x00,   // 空闲\n    LIN_OTA_STATUS_READY,         // 准备就绪\n    LIN_OTA_STATUS_RUNNING,       // 传输中\n    LIN_OTA_STATUS_FINISH,        // 完成\n    LIN_OTA_STATUS_ABORT          // 中止\n} lin_ota_status_t;\n```\n\n### 数据帧格式定义\n| ID类型 | 长度 | 数据帧结构 |\n| --- | --- | --- |\n| gID_OtapCmd_c | 8字节 | [状态码(1B)] [扇区号(1B)] [版本号(2B)] [保留(4B)] |\n| gID_OtapGetStatus_c | 8字节 | [状态码(1B)] [扇区号(1B)] [CRC(2B)] [保留(4B)] |\n| gID_OtapData_c | 8字节 | [固件数据(8B)] |\n\n\n### CRC校验机制\n```c\nuint16_t CalculateCrc16(const uint8_t *data, uint16_t len) {\n    uint16_t crc = 0xFFFF;\n    for (uint16_t i = 0; i < len; i++) {\n        crc ^= (uint16_t)data[i] << 8;\n        for (uint8_t j = 0; j < 8; j++) {\n            if (crc & 0x8000) {\n                crc = (crc << 1) ^ 0x1021;\n            } else {\n                crc <<= 1;\n            }\n        }\n    }\n    return crc;\n}\n```\n\n## 第三部分：OTA升级流程\n### 整体流程图\n```mermaid\ngraph TD\n    A[开始] --> B[发送开始命令]\n    B --> C{设备就绪?}\n    C -->|是| D[发送继续命令]\n    C -->|否| B\n    D --> E[发送扇区数据]\n    E --> F[查询状态]\n    F --> G{完成且CRC正确?}\n    G -->|是| H[还有扇区?]\n    G -->|否| E\n    H -->|是| D\n    H -->|否| I[发送结束命令]\n    I --> J[升级完成]\n```\n\n### 1. 初始化与开始传输\n```c\n// 主节点发送开始命令\nuint8_t start_cmd[8] = {\n    LIN_OTA_CMD_START, // 命令\n    0,                 // 扇区号0\n    0x01, 0x00,        // 固件版本1.0 (大端序)\n    0,0,0,0            // 保留字段\n};\nLIN_SendFrame(gID_OtapCmd_c, start_cmd);\n```\n\n### 2. 数据传输阶段（扇区处理）\n```c\n// 传输单个扇区数据\nfor (int frame = 0; frame < 128; frame++) {\n    uint8_t data_frame[8];\n    // 填充8字节数据\n    memcpy(data_frame, &firmware[frame*8], 8);\n    LIN_SendFrame(gID_OtapData_c, data_frame);\n}\n\n// 查询扇区状态\nuint8_t status_frame[8];\nLIN_QueryStatus(gID_OtapGetStatus_c, status_frame);\n\n// 验证CRC\nuint16_t remote_crc = (status_frame[2] << 8) | status_frame[3];\nif (remote_crc != local_crc) {\n    // CRC校验失败，重传\n}\n```\n\n### 3. 传输结束阶段\n```c\nuint8_t end_cmd[8] = {\n    LIN_OTA_CMD_END, // 结束命令\n    0,               // 扇区号0\n    0x01, 0x00,      // 固件版本1.0\n    0,0,0,0          // 保留字段\n};\nLIN_SendFrame(gID_OtapCmd_c, end_cmd);\n```\n\n## 第四部分：下位机实现\n### 状态机设计\n```c\ntypedef enum {\n    OTA_IDLE = 0,       // 空闲状态\n    OTA_READY,          // 准备就绪\n    OTA_RECEIVING,       // 接收数据中\n    OTA_VERIFYING,       // 校验中\n    OTA_COMPLETE,        // 完成\n    OTA_ERROR            // 错误\n} OtaState;\n```\n\n### 数据结构\n```c\ntypedef struct {\n    OtaState state;            // 当前状态\n    uint8_t current_sector;    // 当前扇区\n    uint16_t firmware_version; // 固件版本\n    uint16_t expected_crc;     // 期望CRC\n    uint16_t calculated_crc;   // 计算CRC\n    uint32_t bytes_received;   // 已接收字节数\n    uint8_t sector_buffer[1024]; // 扇区缓冲区(1KB)\n} OtaUpdater;\n```\n\n### 命令处理\n```c\nvoid OTA_HandleCommand(uint8_t* data) {\n    uint8_t command = data[0];\n    uint8_t sector = data[1];\n    uint16_t version = (data[2] << 8) | data[3];\n    \n    switch(command) {\n        case LIN_OTA_CMD_START:\n            // 初始化OTA状态\n            ota_updater.state = OTA_READY;\n            ota_updater.current_sector = 0;\n            ota_updater.firmware_version = version;\n            ota_updater.bytes_received = 0;\n            memset(ota_updater.sector_buffer, 0xFF, \n                   sizeof(ota_updater.sector_buffer));\n            break;\n            \n        case LIN_OTA_CMD_CONTINUE:\n            // 准备接收新扇区数据\n            if (ota_updater.state == OTA_VERIFYING || \n                ota_updater.state == OTA_READY) {\n                ota_updater.state = OTA_RECEIVING;\n                ota_updater.current_sector = sector;\n                ota_updater.bytes_received = 0;\n                memset(ota_updater.sector_buffer, 0xFF, \n                       sizeof(ota_updater.sector_buffer));\n            }\n            break;\n            \n        case LIN_OTA_CMD_END:\n            // 结束传输\n            if (ota_updater.state == OTA_VERIFYING || \n                ota_updater.state == OTA_COMPLETE) {\n                OTA_WriteSectorToFlash(); // 写入Flash\n                ota_updater.state = OTA_COMPLETE;\n                // 执行固件跳转\n            }\n            break;\n    }\n}\n```\n\n## 第五部分：上位机实现\n### 线程架构\n```mermaid\nclassDiagram\n    class LinOtaUpdater {\n        -QThread* m_workerThread\n        -OtaWorker* m_worker\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    class OtaWorker {\n        -int m_devHandle\n        -quint8 m_channel\n        -bool m_cancelRequested\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    LinOtaUpdater --> OtaWorker : 包含\n```\n\n### 核心升级流程\n```cpp\nvoid OtaWorker::startUpgrade(const QByteArray &firmwareData, \n                             quint16 firmwareVersion) \n{\n    const int SECTOR_SIZE = 1024;\n    const int totalSectors = (firmwareData.size() + SECTOR_SIZE - 1) / SECTOR_SIZE;\n\n    // 1. 发送开始命令\n    if (!sendStartCommand(firmwareVersion)) {\n        emit finished(false, \"开始命令发送失败\");\n        return;\n    }\n\n    // 2. 等待设备就绪\n    int retry = 0;\n    while (retry++ < 20) {\n        if (queryStatus(0) == LIN_OTA_STATUS_READY) break;\n        QThread::msleep(100);\n    }\n    if (retry >= 20) {\n        emit finished(false, \"设备未就绪\");\n        return;\n    }\n\n    // 3. 分扇区传输数据\n    for (int sector = 0; sector < totalSectors; ++sector) {\n        if (m_cancelRequested) return;\n        \n        if (sector > 0 && !sendContinueCommand(sector, firmwareVersion)) {\n            emit finished(false, QString(\"扇区%1继续命令失败\").arg(sector));\n            return;\n        }\n        \n        QByteArray sectorData = firmwareData.mid(sector * SECTOR_SIZE, SECTOR_SIZE);\n        if (sectorData.size() < SECTOR_SIZE) {\n            sectorData.append(QByteArray(SECTOR_SIZE - sectorData.size(), 0xFF));\n        }\n        \n        if (!transferSectorData(sector, sectorData)) {\n            emit finished(false, QString(\"扇区%1传输失败\").arg(sector));\n            return;\n        }\n        \n        emit progressChanged(sector * 100 / totalSectors);\n    }\n\n    // 4. 发送结束命令\n    if (sendEndCommand(firmwareVersion)) {\n        emit finished(true, \"升级成功完成\");\n    } else {\n        emit finished(false, \"结束命令发送失败\");\n    }\n}\n```\n\n### 扇区传输实现\n```cpp\nbool OtaWorker::transferSectorData(int sectorIndex, \n                                   const QByteArray &sectorData) \n{\n    // 发送128帧数据\n    for (int i = 0; i < 128; ++i) {\n        if (m_cancelRequested) return false;\n        \n        QByteArray frame = sectorData.mid(i * 8, 8);\n        if (!sendDataFrame(frame)) {\n            return false;\n        }\n    }\n\n    // 计算本地CRC\n    quint16 localCrc = calculateCrc16(sectorData);\n    \n    // 验证扇区状态\n    int retry = 0;\n    while (retry++ < 10) {\n        if (m_cancelRequested) return false;\n        \n        quint16 remoteCrc = 0;\n        LinOtaStatus status = queryStatus(sectorIndex, &remoteCrc);\n        \n        if (status == LIN_OTA_STATUS_FINISH) {\n            if (localCrc == remoteCrc) {\n                return true; // 校验成功\n            } else {\n                emit statusMessage(QString(\"CRC校验失败: 本地=0x%1, 远程=0x%2\")\n                                  .arg(localCrc, 4, 16, QChar('0'))\n                                  .arg(remoteCrc, 4, 16, QChar('0')));\n                return false;\n            }\n        }\n        QThread::msleep(100);\n    }\n    return false; // 超时\n}\n```\n\n## 第六部分：关键技术点\n### 1. 数据分片机制\n| 参数 | 值 | 说明 |\n| --- | --- | --- |\n| 单帧数据 | 8字节 | LIN帧最大数据长度 |\n| 单扇区 | 1KB | 1024字节 |\n| 扇区帧数 | 128帧 | 1024/8=128 |\n| 典型固件 | 64KB | 64个扇区 |\n\n\n### 2. 错误处理机制\n**关键错误处理策略：**\n\n1. **超时重传**：\n\n```cpp\nint retry = 0;\nwhile (retry++ < MAX_RETRY) {\n    // 尝试操作\n    if (success) break;\n    QThread::msleep(RETRY_DELAY);\n}\n```\n\n2. **CRC校验失败处理**：\n\n```cpp\nif (localCrc != remoteCrc) {\n    // 记录错误\n    // 触发重传流程\n}\n```\n\n3. **状态异常处理**：\n\n```c\nif (ota_updater.state == OTA_ERROR) {\n    // 重置状态机\n    // 通知主节点\n}\n```\n\n### 3. 性能优化策略（仅介绍）\n1. **并行处理**：多个扇区预取数据\n2. **压缩传输**：固件压缩减少传输量\n3. **差分升级**：仅传输差异部分\n4. **流控制**：动态调整传输速率\n\n## 第七部分：安全设计\n### 固件验证机制\n```c\nbool VerifyFirmwareIntegrity() {\n    // 1. 检查固件头\n    if (firmware_header.magic != FIRMWARE_MAGIC) \n        return false;\n    \n    // 2. 验证签名\n    if (!VerifyDigitalSignature(firmware_header.signature))\n        return false;\n    \n    // 3. 校验整体CRC\n    uint16_t total_crc = CalculateCrc16(firmware_data, firmware_size);\n    if (total_crc != firmware_header.crc)\n        return false;\n    \n    return true;\n}\n```\n\n### 安全启动流程\n```mermaid\nsequenceDiagram\n    设备->>Bootloader: 上电启动\n    Bootloader->>Flash: 读取固件头\n    Bootloader->>Crypto: 验证签名\n    alt 验证成功\n        Bootloader->>Application: 跳转到应用\n    else 验证失败\n        Bootloader->>Recovery: 进入恢复模式\n        Recovery->>LIN: 请求固件更新\n    end\n```\n\n## 第八部分：实际应用挑战与解决方案\n### 典型挑战及应对\n| 挑战 | 解决方案 | 实现要点 |\n| --- | --- | --- |\n| 带宽限制 | 增量更新 | 仅传输差异部分 |\n| 升级中断 | 断点续传 | 记录最后成功扇区 |\n| 电源不稳 | 双Bank设计 | BankA/B交替升级 |\n| 内存有限 | 流式处理 | 分块处理不缓存完整固件 |\n| 版本兼容 | 元数据校验 | 校验硬件ID和版本号 |\n\n\n### 双Bank设计实现\n```c\n// Flash布局\n#define BANK_A_START  0x08000000\n#define BANK_A_END    0x0801FFFF\n#define BANK_B_START  0x08020000\n#define BANK_B_END    0x0803FFFF\n\n// 升级流程\nvoid PerformOTA() {\n    uint32_t target_bank = (current_bank == BANK_A) ? BANK_B : BANK_A;\n    \n    // 擦除目标Bank\n    FLASH_EraseBank(target_bank);\n    \n    // 写入新固件\n    for (int i = 0; i < sector_count; i++) {\n        WriteSector(target_bank + i*1024, sector_data[i]);\n    }\n    \n    // 验证固件\n    if (VerifyFirmware(target_bank)) {\n        // 更新启动标志\n        SetBootBank(target_bank);\n    }\n}\n```\n\n## 第九部分：测试与验证\n### 测试用例设计\n| 测试项 | 测试方法 | 预期结果 |\n| --- | --- | --- |\n| 正常升级 | 完整传输固件 | 升级成功，设备运行新固件 |\n| 断电恢复 | 随机断电后重启 | 恢复升级流程，无损坏 |\n| 带宽测试 | 模拟不同总线负载 | 升级时间在可接受范围 |\n| 错误注入 | 模拟数据错误 | 触发重传机制，最终成功 |\n| 边界测试 | 传输最大尺寸固件 | 完整处理无溢出 |\n\n\n### 性能测试数据\n| 固件大小 | 理论时间 | 实测时间 | 传输效率 |\n| --- | --- | --- | --- |\n| 32KB | 13.6s |  | 89% |\n| 64KB | 27.3s |  | 88% |\n| 128KB | 54.6s |  | 87% |\n\n\n_测试条件：LIN波特率19.2kbps，含协议开销_\n\n## 结论\n基于LIN总线的OTA升级方案在汽车电子系统中具有重要价值。本文详细介绍了从协议设计到代码实现的全过程，重点解决了以下关键问题：\n\n1. **协议设计**：设计了精简高效的LIN OTA协议，包括命令集、状态机和数据格式\n2. **分片传输**：通过128帧/扇区的机制克服了LIN帧长度限制\n3. **完整性保障**：实现CRC校验和双Bank存储确保升级可靠性\n4. **错误恢复**：完善的超时重传和状态机设计应对各种异常场景\n5. **性能优化**：多线程架构和流式处理提高升级效率\n\n随着汽车电子架构的演进，LIN OTA技术将在车身控制领域持续发挥重要作用。未来可探索与CAN FD、以太网等高速总线的协同升级方案，以满足日益增长的固件更新需求。\n\n> **技术交流**：欢迎访问作者博客 [冯笑一的小窝](https://www.f123.club) 获取更多技术文章和源码示例\n>\n\n## 附录：关键代码片段\n### PID计算函数\n```cpp\nquint8 OtaWorker::calculatePid(quint8 id) {\n    id &= 0x3F; // 确保6位ID\n    quint8 p0 = ((id >> 0) & 1) ^ ((id >> 1) & 1) ^ \n                ((id >> 2) & 1) ^ ((id >> 4) & 1);\n    quint8 p1 = ~(((id >> 1) & 1) ^ ((id >> 3) & 1) ^ \n                 ((id >> 4) & 1) ^ ((id >> 5) & 1)) & 1;\n    return id | (p0 << 6) | (p1 << 7);\n}\n```\n\n### 状态响应处理\n```c\nvoid OTA_SendStatusResponse(void) {\n    uint8_t response[8] = {0};\n    response[0] = (uint8_t)ota_updater.state; // 状态码\n    response[1] = ota_updater.current_sector; // 扇区号\n    \n    // 计算CRC\n    if (ota_updater.state == OTA_VERIFYING) {\n        response[2] = (ota_updater.calculated_crc >> 8) & 0xFF;\n        response[3] = ota_updater.calculated_crc & 0xFF;\n    }\n    \n    // 发送响应\n    LIN_slaveSend(response, sizeof(response));\n}\n```\n\n### 上位机实现\n```cpp\n// 在主窗口中使用\nvoid MainWindow::startOtaUpgrade() {\n    // 初始化参数\n    int devHandle = DevHandle[0];// 获取设备句柄\n    if (devHandle == 0) {\n        qWarning() << \"Failed to open LIN device\";\n        return;\n    }\n\n    quint8 channel = ui->comboBox->currentIndex();   // LIN通道号 (根据实际情况设置)\n\n    // 加载固件文件\n    QFile firmwareFile(\"firmware.bin\");\n    if (!firmwareFile.open(QIODevice::ReadOnly)) {\n        qWarning() << \"Failed to open firmware file\";\n        return;\n    }\n    QByteArray firmwareData = firmwareFile.readAll();\n    firmwareFile.close();\n\n    quint16 version = 0x0100; // 固件版本号\n\n    // 创建升级器\n    m_otaUpdater = new LinOtaUpdater(devHandle, channel, this);\n\n    connect(m_otaUpdater, &LinOtaUpdater::progressChanged,\n            ui->progressBar, &QProgressBar::setValue);\n    connect(m_otaUpdater, &LinOtaUpdater::statusMessage,\n            this, [this](QString msg) {\n                 ui->Message->showMessage(msg, MessageConsole::Success);\n            });\n    connect(m_otaUpdater, &LinOtaUpdater::finished,\n            this, &MainWindow::handleOtaResult);\n    connect(m_otaUpdater, &LinOtaUpdater::errorOccurred,\n            this, [this](QString error) {\n                QMessageBox::critical(this, \"OTA Error\", error);\n            });\n\n    //开始升级\n    m_otaUpdater->startUpgrade(firmwareData, version);\n}\n\nvoid MainWindow::handleOtaResult(bool success, QString message) {\n    if (success) {\n        QMessageBox::information(this, \"Success\", message);\n    } else {\n        QMessageBox::warning(this, \"Failure\", message);\n    }\n\n    // 清理资源\n   if (m_otaUpdater) {\n       int devHandle = m_otaUpdater->getDeviceHandle(); // 需要添加getter\n       m_otaUpdater->deleteLater();\n       m_otaUpdater = nullptr;\n       LIN_EX_CloseDevice(devHandle);\n   }\n}\n\nvoid MainWindow::cancelOtaUpgrade() {\n\n    if (m_otaUpdater) {\n        m_otaUpdater->cancelUpgrade();\n    }\n}\n```\n\n![360X360/0e42cf925940.png](https://cdn.nlark.com/yuque/0/2025/png/33668333/1751981435368-6439468c-bc6d-40bf-9e36-0e42cf925940.png)\n\n","source":"_posts/汽车电子固件升级（OTA）实现详解.md","raw":"---\ntitle: 汽车电子固件升级（OTA）实现详解\ndate: 2025-07-14\ntags: [嵌入式,C#,教程，技术分享]\nmermaid: true\ncategories: [嵌入式]\ncover: https://pic4.zhimg.com/v2-1db2a15e30e57389a8456fca9b47223d_1440w.jpg\ncomment:\n  title: # 评论框标题\n    en: Leave a comment\n    zh-CN: 说些什么吧！\n    zh-TW: 說些什麼吧！\n    ja: コメントを残す\n  default: waline # 多评论下，默认使用的评论系统\n---\n## 引言\n随着汽车电子技术的飞速发展，**固件空中升级(OTA)** 技术已成为现代汽车电子系统中不可或缺的功能。在车身控制领域，**LIN总线**作为低成本、低复杂度的通信协议被广泛应用。本文将深入探讨基于LIN总线的OTA升级实现方案，从协议设计到代码实现，全面解析这一关键技术。\n\n## 第一部分：LIN总线基础\n### LIN总线概述\nLIN(Local Interconnect Network)是一种低成本串行通信协议，主要特点包括：\n\n+ **单主多从架构**：一个主节点控制多个从节点\n+ **低传输速率**：最高20kbps（典型应用19.2kbps）\n+ **单线传输**：简化布线，降低成本\n+ **时间触发通信**：主节点控制通信时序\n\n### LIN帧结构\n| 字段 | 长度 | 说明 |\n| --- | --- | --- |\n| 间隔场 | 13位以上低电平 | 帧起始标识 |\n| 同步场 | 1字节(0x55) | 时钟同步 |\n| 标识符 | 1字节 | 6位ID+2位校验 |\n| 数据场 | 0-8字节 | 传输数据 |\n| 校验和 | 1字节 | 数据完整性校验 |\n\n\n## 第二部分：OTA协议设计\n### ID枚举定义\n```c\ntypedef enum\n{\n    gID_OtapCmd_c = 0x31,   // 命令ID\n    gID_OtapGetStatus_c,    // 状态查询ID\n    gID_OtapData_c          // 数据传输ID\n} lin_id_t;\n```\n\n### 命令与状态枚举\n**命令枚举：**\n\n```c\ntypedef enum\n{\n    LIN_OTA_CMD_NONE = 0x00,  // 无命令\n    LIN_OTA_CMD_START,        // 开始传输\n    LIN_OTA_CMD_END,          // 结束传输\n    LIN_OTA_CMD_CONTINUE      // 继续传输\n} lin_ota_cmd_c;\n```\n\n**状态枚举：**\n\n```c\ntypedef enum\n{\n    LIN_OTA_STATUS_IDLE = 0x00,   // 空闲\n    LIN_OTA_STATUS_READY,         // 准备就绪\n    LIN_OTA_STATUS_RUNNING,       // 传输中\n    LIN_OTA_STATUS_FINISH,        // 完成\n    LIN_OTA_STATUS_ABORT          // 中止\n} lin_ota_status_t;\n```\n\n### 数据帧格式定义\n| ID类型 | 长度 | 数据帧结构 |\n| --- | --- | --- |\n| gID_OtapCmd_c | 8字节 | [状态码(1B)] [扇区号(1B)] [版本号(2B)] [保留(4B)] |\n| gID_OtapGetStatus_c | 8字节 | [状态码(1B)] [扇区号(1B)] [CRC(2B)] [保留(4B)] |\n| gID_OtapData_c | 8字节 | [固件数据(8B)] |\n\n\n### CRC校验机制\n```c\nuint16_t CalculateCrc16(const uint8_t *data, uint16_t len) {\n    uint16_t crc = 0xFFFF;\n    for (uint16_t i = 0; i < len; i++) {\n        crc ^= (uint16_t)data[i] << 8;\n        for (uint8_t j = 0; j < 8; j++) {\n            if (crc & 0x8000) {\n                crc = (crc << 1) ^ 0x1021;\n            } else {\n                crc <<= 1;\n            }\n        }\n    }\n    return crc;\n}\n```\n\n## 第三部分：OTA升级流程\n### 整体流程图\n```mermaid\ngraph TD\n    A[开始] --> B[发送开始命令]\n    B --> C{设备就绪?}\n    C -->|是| D[发送继续命令]\n    C -->|否| B\n    D --> E[发送扇区数据]\n    E --> F[查询状态]\n    F --> G{完成且CRC正确?}\n    G -->|是| H[还有扇区?]\n    G -->|否| E\n    H -->|是| D\n    H -->|否| I[发送结束命令]\n    I --> J[升级完成]\n```\n\n### 1. 初始化与开始传输\n```c\n// 主节点发送开始命令\nuint8_t start_cmd[8] = {\n    LIN_OTA_CMD_START, // 命令\n    0,                 // 扇区号0\n    0x01, 0x00,        // 固件版本1.0 (大端序)\n    0,0,0,0            // 保留字段\n};\nLIN_SendFrame(gID_OtapCmd_c, start_cmd);\n```\n\n### 2. 数据传输阶段（扇区处理）\n```c\n// 传输单个扇区数据\nfor (int frame = 0; frame < 128; frame++) {\n    uint8_t data_frame[8];\n    // 填充8字节数据\n    memcpy(data_frame, &firmware[frame*8], 8);\n    LIN_SendFrame(gID_OtapData_c, data_frame);\n}\n\n// 查询扇区状态\nuint8_t status_frame[8];\nLIN_QueryStatus(gID_OtapGetStatus_c, status_frame);\n\n// 验证CRC\nuint16_t remote_crc = (status_frame[2] << 8) | status_frame[3];\nif (remote_crc != local_crc) {\n    // CRC校验失败，重传\n}\n```\n\n### 3. 传输结束阶段\n```c\nuint8_t end_cmd[8] = {\n    LIN_OTA_CMD_END, // 结束命令\n    0,               // 扇区号0\n    0x01, 0x00,      // 固件版本1.0\n    0,0,0,0          // 保留字段\n};\nLIN_SendFrame(gID_OtapCmd_c, end_cmd);\n```\n\n## 第四部分：下位机实现\n### 状态机设计\n```c\ntypedef enum {\n    OTA_IDLE = 0,       // 空闲状态\n    OTA_READY,          // 准备就绪\n    OTA_RECEIVING,       // 接收数据中\n    OTA_VERIFYING,       // 校验中\n    OTA_COMPLETE,        // 完成\n    OTA_ERROR            // 错误\n} OtaState;\n```\n\n### 数据结构\n```c\ntypedef struct {\n    OtaState state;            // 当前状态\n    uint8_t current_sector;    // 当前扇区\n    uint16_t firmware_version; // 固件版本\n    uint16_t expected_crc;     // 期望CRC\n    uint16_t calculated_crc;   // 计算CRC\n    uint32_t bytes_received;   // 已接收字节数\n    uint8_t sector_buffer[1024]; // 扇区缓冲区(1KB)\n} OtaUpdater;\n```\n\n### 命令处理\n```c\nvoid OTA_HandleCommand(uint8_t* data) {\n    uint8_t command = data[0];\n    uint8_t sector = data[1];\n    uint16_t version = (data[2] << 8) | data[3];\n    \n    switch(command) {\n        case LIN_OTA_CMD_START:\n            // 初始化OTA状态\n            ota_updater.state = OTA_READY;\n            ota_updater.current_sector = 0;\n            ota_updater.firmware_version = version;\n            ota_updater.bytes_received = 0;\n            memset(ota_updater.sector_buffer, 0xFF, \n                   sizeof(ota_updater.sector_buffer));\n            break;\n            \n        case LIN_OTA_CMD_CONTINUE:\n            // 准备接收新扇区数据\n            if (ota_updater.state == OTA_VERIFYING || \n                ota_updater.state == OTA_READY) {\n                ota_updater.state = OTA_RECEIVING;\n                ota_updater.current_sector = sector;\n                ota_updater.bytes_received = 0;\n                memset(ota_updater.sector_buffer, 0xFF, \n                       sizeof(ota_updater.sector_buffer));\n            }\n            break;\n            \n        case LIN_OTA_CMD_END:\n            // 结束传输\n            if (ota_updater.state == OTA_VERIFYING || \n                ota_updater.state == OTA_COMPLETE) {\n                OTA_WriteSectorToFlash(); // 写入Flash\n                ota_updater.state = OTA_COMPLETE;\n                // 执行固件跳转\n            }\n            break;\n    }\n}\n```\n\n## 第五部分：上位机实现\n### 线程架构\n```mermaid\nclassDiagram\n    class LinOtaUpdater {\n        -QThread* m_workerThread\n        -OtaWorker* m_worker\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    class OtaWorker {\n        -int m_devHandle\n        -quint8 m_channel\n        -bool m_cancelRequested\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    LinOtaUpdater --> OtaWorker : 包含\n```\n\n### 核心升级流程\n```cpp\nvoid OtaWorker::startUpgrade(const QByteArray &firmwareData, \n                             quint16 firmwareVersion) \n{\n    const int SECTOR_SIZE = 1024;\n    const int totalSectors = (firmwareData.size() + SECTOR_SIZE - 1) / SECTOR_SIZE;\n\n    // 1. 发送开始命令\n    if (!sendStartCommand(firmwareVersion)) {\n        emit finished(false, \"开始命令发送失败\");\n        return;\n    }\n\n    // 2. 等待设备就绪\n    int retry = 0;\n    while (retry++ < 20) {\n        if (queryStatus(0) == LIN_OTA_STATUS_READY) break;\n        QThread::msleep(100);\n    }\n    if (retry >= 20) {\n        emit finished(false, \"设备未就绪\");\n        return;\n    }\n\n    // 3. 分扇区传输数据\n    for (int sector = 0; sector < totalSectors; ++sector) {\n        if (m_cancelRequested) return;\n        \n        if (sector > 0 && !sendContinueCommand(sector, firmwareVersion)) {\n            emit finished(false, QString(\"扇区%1继续命令失败\").arg(sector));\n            return;\n        }\n        \n        QByteArray sectorData = firmwareData.mid(sector * SECTOR_SIZE, SECTOR_SIZE);\n        if (sectorData.size() < SECTOR_SIZE) {\n            sectorData.append(QByteArray(SECTOR_SIZE - sectorData.size(), 0xFF));\n        }\n        \n        if (!transferSectorData(sector, sectorData)) {\n            emit finished(false, QString(\"扇区%1传输失败\").arg(sector));\n            return;\n        }\n        \n        emit progressChanged(sector * 100 / totalSectors);\n    }\n\n    // 4. 发送结束命令\n    if (sendEndCommand(firmwareVersion)) {\n        emit finished(true, \"升级成功完成\");\n    } else {\n        emit finished(false, \"结束命令发送失败\");\n    }\n}\n```\n\n### 扇区传输实现\n```cpp\nbool OtaWorker::transferSectorData(int sectorIndex, \n                                   const QByteArray &sectorData) \n{\n    // 发送128帧数据\n    for (int i = 0; i < 128; ++i) {\n        if (m_cancelRequested) return false;\n        \n        QByteArray frame = sectorData.mid(i * 8, 8);\n        if (!sendDataFrame(frame)) {\n            return false;\n        }\n    }\n\n    // 计算本地CRC\n    quint16 localCrc = calculateCrc16(sectorData);\n    \n    // 验证扇区状态\n    int retry = 0;\n    while (retry++ < 10) {\n        if (m_cancelRequested) return false;\n        \n        quint16 remoteCrc = 0;\n        LinOtaStatus status = queryStatus(sectorIndex, &remoteCrc);\n        \n        if (status == LIN_OTA_STATUS_FINISH) {\n            if (localCrc == remoteCrc) {\n                return true; // 校验成功\n            } else {\n                emit statusMessage(QString(\"CRC校验失败: 本地=0x%1, 远程=0x%2\")\n                                  .arg(localCrc, 4, 16, QChar('0'))\n                                  .arg(remoteCrc, 4, 16, QChar('0')));\n                return false;\n            }\n        }\n        QThread::msleep(100);\n    }\n    return false; // 超时\n}\n```\n\n## 第六部分：关键技术点\n### 1. 数据分片机制\n| 参数 | 值 | 说明 |\n| --- | --- | --- |\n| 单帧数据 | 8字节 | LIN帧最大数据长度 |\n| 单扇区 | 1KB | 1024字节 |\n| 扇区帧数 | 128帧 | 1024/8=128 |\n| 典型固件 | 64KB | 64个扇区 |\n\n\n### 2. 错误处理机制\n**关键错误处理策略：**\n\n1. **超时重传**：\n\n```cpp\nint retry = 0;\nwhile (retry++ < MAX_RETRY) {\n    // 尝试操作\n    if (success) break;\n    QThread::msleep(RETRY_DELAY);\n}\n```\n\n2. **CRC校验失败处理**：\n\n```cpp\nif (localCrc != remoteCrc) {\n    // 记录错误\n    // 触发重传流程\n}\n```\n\n3. **状态异常处理**：\n\n```c\nif (ota_updater.state == OTA_ERROR) {\n    // 重置状态机\n    // 通知主节点\n}\n```\n\n### 3. 性能优化策略（仅介绍）\n1. **并行处理**：多个扇区预取数据\n2. **压缩传输**：固件压缩减少传输量\n3. **差分升级**：仅传输差异部分\n4. **流控制**：动态调整传输速率\n\n## 第七部分：安全设计\n### 固件验证机制\n```c\nbool VerifyFirmwareIntegrity() {\n    // 1. 检查固件头\n    if (firmware_header.magic != FIRMWARE_MAGIC) \n        return false;\n    \n    // 2. 验证签名\n    if (!VerifyDigitalSignature(firmware_header.signature))\n        return false;\n    \n    // 3. 校验整体CRC\n    uint16_t total_crc = CalculateCrc16(firmware_data, firmware_size);\n    if (total_crc != firmware_header.crc)\n        return false;\n    \n    return true;\n}\n```\n\n### 安全启动流程\n```mermaid\nsequenceDiagram\n    设备->>Bootloader: 上电启动\n    Bootloader->>Flash: 读取固件头\n    Bootloader->>Crypto: 验证签名\n    alt 验证成功\n        Bootloader->>Application: 跳转到应用\n    else 验证失败\n        Bootloader->>Recovery: 进入恢复模式\n        Recovery->>LIN: 请求固件更新\n    end\n```\n\n## 第八部分：实际应用挑战与解决方案\n### 典型挑战及应对\n| 挑战 | 解决方案 | 实现要点 |\n| --- | --- | --- |\n| 带宽限制 | 增量更新 | 仅传输差异部分 |\n| 升级中断 | 断点续传 | 记录最后成功扇区 |\n| 电源不稳 | 双Bank设计 | BankA/B交替升级 |\n| 内存有限 | 流式处理 | 分块处理不缓存完整固件 |\n| 版本兼容 | 元数据校验 | 校验硬件ID和版本号 |\n\n\n### 双Bank设计实现\n```c\n// Flash布局\n#define BANK_A_START  0x08000000\n#define BANK_A_END    0x0801FFFF\n#define BANK_B_START  0x08020000\n#define BANK_B_END    0x0803FFFF\n\n// 升级流程\nvoid PerformOTA() {\n    uint32_t target_bank = (current_bank == BANK_A) ? BANK_B : BANK_A;\n    \n    // 擦除目标Bank\n    FLASH_EraseBank(target_bank);\n    \n    // 写入新固件\n    for (int i = 0; i < sector_count; i++) {\n        WriteSector(target_bank + i*1024, sector_data[i]);\n    }\n    \n    // 验证固件\n    if (VerifyFirmware(target_bank)) {\n        // 更新启动标志\n        SetBootBank(target_bank);\n    }\n}\n```\n\n## 第九部分：测试与验证\n### 测试用例设计\n| 测试项 | 测试方法 | 预期结果 |\n| --- | --- | --- |\n| 正常升级 | 完整传输固件 | 升级成功，设备运行新固件 |\n| 断电恢复 | 随机断电后重启 | 恢复升级流程，无损坏 |\n| 带宽测试 | 模拟不同总线负载 | 升级时间在可接受范围 |\n| 错误注入 | 模拟数据错误 | 触发重传机制，最终成功 |\n| 边界测试 | 传输最大尺寸固件 | 完整处理无溢出 |\n\n\n### 性能测试数据\n| 固件大小 | 理论时间 | 实测时间 | 传输效率 |\n| --- | --- | --- | --- |\n| 32KB | 13.6s |  | 89% |\n| 64KB | 27.3s |  | 88% |\n| 128KB | 54.6s |  | 87% |\n\n\n_测试条件：LIN波特率19.2kbps，含协议开销_\n\n## 结论\n基于LIN总线的OTA升级方案在汽车电子系统中具有重要价值。本文详细介绍了从协议设计到代码实现的全过程，重点解决了以下关键问题：\n\n1. **协议设计**：设计了精简高效的LIN OTA协议，包括命令集、状态机和数据格式\n2. **分片传输**：通过128帧/扇区的机制克服了LIN帧长度限制\n3. **完整性保障**：实现CRC校验和双Bank存储确保升级可靠性\n4. **错误恢复**：完善的超时重传和状态机设计应对各种异常场景\n5. **性能优化**：多线程架构和流式处理提高升级效率\n\n随着汽车电子架构的演进，LIN OTA技术将在车身控制领域持续发挥重要作用。未来可探索与CAN FD、以太网等高速总线的协同升级方案，以满足日益增长的固件更新需求。\n\n> **技术交流**：欢迎访问作者博客 [冯笑一的小窝](https://www.f123.club) 获取更多技术文章和源码示例\n>\n\n## 附录：关键代码片段\n### PID计算函数\n```cpp\nquint8 OtaWorker::calculatePid(quint8 id) {\n    id &= 0x3F; // 确保6位ID\n    quint8 p0 = ((id >> 0) & 1) ^ ((id >> 1) & 1) ^ \n                ((id >> 2) & 1) ^ ((id >> 4) & 1);\n    quint8 p1 = ~(((id >> 1) & 1) ^ ((id >> 3) & 1) ^ \n                 ((id >> 4) & 1) ^ ((id >> 5) & 1)) & 1;\n    return id | (p0 << 6) | (p1 << 7);\n}\n```\n\n### 状态响应处理\n```c\nvoid OTA_SendStatusResponse(void) {\n    uint8_t response[8] = {0};\n    response[0] = (uint8_t)ota_updater.state; // 状态码\n    response[1] = ota_updater.current_sector; // 扇区号\n    \n    // 计算CRC\n    if (ota_updater.state == OTA_VERIFYING) {\n        response[2] = (ota_updater.calculated_crc >> 8) & 0xFF;\n        response[3] = ota_updater.calculated_crc & 0xFF;\n    }\n    \n    // 发送响应\n    LIN_slaveSend(response, sizeof(response));\n}\n```\n\n### 上位机实现\n```cpp\n// 在主窗口中使用\nvoid MainWindow::startOtaUpgrade() {\n    // 初始化参数\n    int devHandle = DevHandle[0];// 获取设备句柄\n    if (devHandle == 0) {\n        qWarning() << \"Failed to open LIN device\";\n        return;\n    }\n\n    quint8 channel = ui->comboBox->currentIndex();   // LIN通道号 (根据实际情况设置)\n\n    // 加载固件文件\n    QFile firmwareFile(\"firmware.bin\");\n    if (!firmwareFile.open(QIODevice::ReadOnly)) {\n        qWarning() << \"Failed to open firmware file\";\n        return;\n    }\n    QByteArray firmwareData = firmwareFile.readAll();\n    firmwareFile.close();\n\n    quint16 version = 0x0100; // 固件版本号\n\n    // 创建升级器\n    m_otaUpdater = new LinOtaUpdater(devHandle, channel, this);\n\n    connect(m_otaUpdater, &LinOtaUpdater::progressChanged,\n            ui->progressBar, &QProgressBar::setValue);\n    connect(m_otaUpdater, &LinOtaUpdater::statusMessage,\n            this, [this](QString msg) {\n                 ui->Message->showMessage(msg, MessageConsole::Success);\n            });\n    connect(m_otaUpdater, &LinOtaUpdater::finished,\n            this, &MainWindow::handleOtaResult);\n    connect(m_otaUpdater, &LinOtaUpdater::errorOccurred,\n            this, [this](QString error) {\n                QMessageBox::critical(this, \"OTA Error\", error);\n            });\n\n    //开始升级\n    m_otaUpdater->startUpgrade(firmwareData, version);\n}\n\nvoid MainWindow::handleOtaResult(bool success, QString message) {\n    if (success) {\n        QMessageBox::information(this, \"Success\", message);\n    } else {\n        QMessageBox::warning(this, \"Failure\", message);\n    }\n\n    // 清理资源\n   if (m_otaUpdater) {\n       int devHandle = m_otaUpdater->getDeviceHandle(); // 需要添加getter\n       m_otaUpdater->deleteLater();\n       m_otaUpdater = nullptr;\n       LIN_EX_CloseDevice(devHandle);\n   }\n}\n\nvoid MainWindow::cancelOtaUpgrade() {\n\n    if (m_otaUpdater) {\n        m_otaUpdater->cancelUpgrade();\n    }\n}\n```\n\n![360X360/0e42cf925940.png](https://cdn.nlark.com/yuque/0/2025/png/33668333/1751981435368-6439468c-bc6d-40bf-9e36-0e42cf925940.png)\n\n","slug":"汽车电子固件升级（OTA）实现详解","published":1,"updated":"2025-07-16T07:42:32.203Z","comments":1,"layout":"post","photos":[],"_id":"cmd71t81c002k3cw6a8pgdfl2","content":"<h2 id=\"引言\"><a class=\"markdownIt-Anchor\" href=\"#引言\"></a> 引言</h2>\n<p>随着汽车电子技术的飞速发展，<strong>固件空中升级(OTA)</strong> 技术已成为现代汽车电子系统中不可或缺的功能。在车身控制领域，<strong>LIN总线</strong>作为低成本、低复杂度的通信协议被广泛应用。本文将深入探讨基于LIN总线的OTA升级实现方案，从协议设计到代码实现，全面解析这一关键技术。</p>\n<h2 id=\"第一部分lin总线基础\"><a class=\"markdownIt-Anchor\" href=\"#第一部分lin总线基础\"></a> 第一部分：LIN总线基础</h2>\n<h3 id=\"lin总线概述\"><a class=\"markdownIt-Anchor\" href=\"#lin总线概述\"></a> LIN总线概述</h3>\n<p>LIN(Local Interconnect Network)是一种低成本串行通信协议，主要特点包括：</p>\n<ul>\n<li><strong>单主多从架构</strong>：一个主节点控制多个从节点</li>\n<li><strong>低传输速率</strong>：最高20kbps（典型应用19.2kbps）</li>\n<li><strong>单线传输</strong>：简化布线，降低成本</li>\n<li><strong>时间触发通信</strong>：主节点控制通信时序</li>\n</ul>\n<h3 id=\"lin帧结构\"><a class=\"markdownIt-Anchor\" href=\"#lin帧结构\"></a> LIN帧结构</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>长度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>间隔场</td>\n<td>13位以上低电平</td>\n<td>帧起始标识</td>\n</tr>\n<tr>\n<td>同步场</td>\n<td>1字节(0x55)</td>\n<td>时钟同步</td>\n</tr>\n<tr>\n<td>标识符</td>\n<td>1字节</td>\n<td>6位ID+2位校验</td>\n</tr>\n<tr>\n<td>数据场</td>\n<td>0-8字节</td>\n<td>传输数据</td>\n</tr>\n<tr>\n<td>校验和</td>\n<td>1字节</td>\n<td>数据完整性校验</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第二部分ota协议设计\"><a class=\"markdownIt-Anchor\" href=\"#第二部分ota协议设计\"></a> 第二部分：OTA协议设计</h2>\n<h3 id=\"id枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#id枚举定义\"></a> ID枚举定义</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    gID_OtapCmd_c = <span class=\"number\">0x31</span>,   <span class=\"comment\">// 命令ID</span></span><br><span class=\"line\">    gID_OtapGetStatus_c,    <span class=\"comment\">// 状态查询ID</span></span><br><span class=\"line\">    gID_OtapData_c          <span class=\"comment\">// 数据传输ID</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_id_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令与状态枚举\"><a class=\"markdownIt-Anchor\" href=\"#命令与状态枚举\"></a> 命令与状态枚举</h3>\n<p><strong>命令枚举：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_CMD_NONE = <span class=\"number\">0x00</span>,  <span class=\"comment\">// 无命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_START,        <span class=\"comment\">// 开始传输</span></span><br><span class=\"line\">    LIN_OTA_CMD_END,          <span class=\"comment\">// 结束传输</span></span><br><span class=\"line\">    LIN_OTA_CMD_CONTINUE      <span class=\"comment\">// 继续传输</span></span><br><span class=\"line\">&#125; lin_ota_cmd_c;</span><br></pre></td></tr></table></figure>\n<p><strong>状态枚举：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_STATUS_IDLE = <span class=\"number\">0x00</span>,   <span class=\"comment\">// 空闲</span></span><br><span class=\"line\">    LIN_OTA_STATUS_READY,         <span class=\"comment\">// 准备就绪</span></span><br><span class=\"line\">    LIN_OTA_STATUS_RUNNING,       <span class=\"comment\">// 传输中</span></span><br><span class=\"line\">    LIN_OTA_STATUS_FINISH,        <span class=\"comment\">// 完成</span></span><br><span class=\"line\">    LIN_OTA_STATUS_ABORT          <span class=\"comment\">// 中止</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_ota_status_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据帧格式定义\"><a class=\"markdownIt-Anchor\" href=\"#数据帧格式定义\"></a> 数据帧格式定义</h3>\n<table>\n<thead>\n<tr>\n<th>ID类型</th>\n<th>长度</th>\n<th>数据帧结构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gID_OtapCmd_c</td>\n<td>8字节</td>\n<td>[状态码(1B)] [扇区号(1B)] [版本号(2B)] [保留(4B)]</td>\n</tr>\n<tr>\n<td>gID_OtapGetStatus_c</td>\n<td>8字节</td>\n<td>[状态码(1B)] [扇区号(1B)] [CRC(2B)] [保留(4B)]</td>\n</tr>\n<tr>\n<td>gID_OtapData_c</td>\n<td>8字节</td>\n<td>[固件数据(8B)]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"crc校验机制\"><a class=\"markdownIt-Anchor\" href=\"#crc校验机制\"></a> CRC校验机制</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">uint16_t</span> <span class=\"title function_\">CalculateCrc16</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *data, <span class=\"type\">uint16_t</span> len)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> crc = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">uint16_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        crc ^= (<span class=\"type\">uint16_t</span>)data[i] &lt;&lt; <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">uint8_t</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">8</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (crc &amp; <span class=\"number\">0x8000</span>) &#123;</span><br><span class=\"line\">                crc = (crc &lt;&lt; <span class=\"number\">1</span>) ^ <span class=\"number\">0x1021</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                crc &lt;&lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> crc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第三部分ota升级流程\"><a class=\"markdownIt-Anchor\" href=\"#第三部分ota升级流程\"></a> 第三部分：OTA升级流程</h2>\n<h3 id=\"整体流程图\"><a class=\"markdownIt-Anchor\" href=\"#整体流程图\"></a> 整体流程图</h3>\n<pre class=\"mermaid\">graph TD\n    A[开始] --> B[发送开始命令]\n    B --> C{设备就绪?}\n    C -->|是| D[发送继续命令]\n    C -->|否| B\n    D --> E[发送扇区数据]\n    E --> F[查询状态]\n    F --> G{完成且CRC正确?}\n    G -->|是| H[还有扇区?]\n    G -->|否| E\n    H -->|是| D\n    H -->|否| I[发送结束命令]\n    I --> J[升级完成]</pre>\n<h3 id=\"1-初始化与开始传输\"><a class=\"markdownIt-Anchor\" href=\"#1-初始化与开始传输\"></a> 1. 初始化与开始传输</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主节点发送开始命令</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> start_cmd[<span class=\"number\">8</span>] = &#123;</span><br><span class=\"line\">    LIN_OTA_CMD_START, <span class=\"comment\">// 命令</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,                 <span class=\"comment\">// 扇区号0</span></span><br><span class=\"line\">    <span class=\"number\">0x01</span>, <span class=\"number\">0x00</span>,        <span class=\"comment\">// 固件版本1.0 (大端序)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>            <span class=\"comment\">// 保留字段</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">LIN_SendFrame(gID_OtapCmd_c, start_cmd);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-数据传输阶段扇区处理\"><a class=\"markdownIt-Anchor\" href=\"#2-数据传输阶段扇区处理\"></a> 2. 数据传输阶段（扇区处理）</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 传输单个扇区数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> frame = <span class=\"number\">0</span>; frame &lt; <span class=\"number\">128</span>; frame++) &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> data_frame[<span class=\"number\">8</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 填充8字节数据</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(data_frame, &amp;firmware[frame*<span class=\"number\">8</span>], <span class=\"number\">8</span>);</span><br><span class=\"line\">    LIN_SendFrame(gID_OtapData_c, data_frame);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查询扇区状态</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> status_frame[<span class=\"number\">8</span>];</span><br><span class=\"line\">LIN_QueryStatus(gID_OtapGetStatus_c, status_frame);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 验证CRC</span></span><br><span class=\"line\"><span class=\"type\">uint16_t</span> remote_crc = (status_frame[<span class=\"number\">2</span>] &lt;&lt; <span class=\"number\">8</span>) | status_frame[<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (remote_crc != local_crc) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// CRC校验失败，重传</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-传输结束阶段\"><a class=\"markdownIt-Anchor\" href=\"#3-传输结束阶段\"></a> 3. 传输结束阶段</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">uint8_t</span> end_cmd[<span class=\"number\">8</span>] = &#123;</span><br><span class=\"line\">    LIN_OTA_CMD_END, <span class=\"comment\">// 结束命令</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,               <span class=\"comment\">// 扇区号0</span></span><br><span class=\"line\">    <span class=\"number\">0x01</span>, <span class=\"number\">0x00</span>,      <span class=\"comment\">// 固件版本1.0</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>          <span class=\"comment\">// 保留字段</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">LIN_SendFrame(gID_OtapCmd_c, end_cmd);</span><br></pre></td></tr></table></figure>\n<h2 id=\"第四部分下位机实现\"><a class=\"markdownIt-Anchor\" href=\"#第四部分下位机实现\"></a> 第四部分：下位机实现</h2>\n<h3 id=\"状态机设计\"><a class=\"markdownIt-Anchor\" href=\"#状态机设计\"></a> 状态机设计</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span> &#123;</span></span><br><span class=\"line\">    OTA_IDLE = <span class=\"number\">0</span>,       <span class=\"comment\">// 空闲状态</span></span><br><span class=\"line\">    OTA_READY,          <span class=\"comment\">// 准备就绪</span></span><br><span class=\"line\">    OTA_RECEIVING,       <span class=\"comment\">// 接收数据中</span></span><br><span class=\"line\">    OTA_VERIFYING,       <span class=\"comment\">// 校验中</span></span><br><span class=\"line\">    OTA_COMPLETE,        <span class=\"comment\">// 完成</span></span><br><span class=\"line\">    OTA_ERROR            <span class=\"comment\">// 错误</span></span><br><span class=\"line\">&#125; OtaState;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构\"></a> 数据结构</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    OtaState state;            <span class=\"comment\">// 当前状态</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> current_sector;    <span class=\"comment\">// 当前扇区</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> firmware_version; <span class=\"comment\">// 固件版本</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> expected_crc;     <span class=\"comment\">// 期望CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> calculated_crc;   <span class=\"comment\">// 计算CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> bytes_received;   <span class=\"comment\">// 已接收字节数</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> sector_buffer[<span class=\"number\">1024</span>]; <span class=\"comment\">// 扇区缓冲区(1KB)</span></span><br><span class=\"line\">&#125; OtaUpdater;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令处理\"><a class=\"markdownIt-Anchor\" href=\"#命令处理\"></a> 命令处理</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">OTA_HandleCommand</span><span class=\"params\">(<span class=\"type\">uint8_t</span>* data)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> command = data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> sector = data[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> version = (data[<span class=\"number\">2</span>] &lt;&lt; <span class=\"number\">8</span>) | data[<span class=\"number\">3</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(command) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_START:</span><br><span class=\"line\">            <span class=\"comment\">// 初始化OTA状态</span></span><br><span class=\"line\">            ota_updater.state = OTA_READY;</span><br><span class=\"line\">            ota_updater.current_sector = <span class=\"number\">0</span>;</span><br><span class=\"line\">            ota_updater.firmware_version = version;</span><br><span class=\"line\">            ota_updater.bytes_received = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(ota_updater.sector_buffer, <span class=\"number\">0xFF</span>, </span><br><span class=\"line\">                   <span class=\"keyword\">sizeof</span>(ota_updater.sector_buffer));</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_CONTINUE:</span><br><span class=\"line\">            <span class=\"comment\">// 准备接收新扇区数据</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING || </span><br><span class=\"line\">                ota_updater.state == OTA_READY) &#123;</span><br><span class=\"line\">                ota_updater.state = OTA_RECEIVING;</span><br><span class=\"line\">                ota_updater.current_sector = sector;</span><br><span class=\"line\">                ota_updater.bytes_received = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"built_in\">memset</span>(ota_updater.sector_buffer, <span class=\"number\">0xFF</span>, </span><br><span class=\"line\">                       <span class=\"keyword\">sizeof</span>(ota_updater.sector_buffer));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_END:</span><br><span class=\"line\">            <span class=\"comment\">// 结束传输</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING || </span><br><span class=\"line\">                ota_updater.state == OTA_COMPLETE) &#123;</span><br><span class=\"line\">                OTA_WriteSectorToFlash(); <span class=\"comment\">// 写入Flash</span></span><br><span class=\"line\">                ota_updater.state = OTA_COMPLETE;</span><br><span class=\"line\">                <span class=\"comment\">// 执行固件跳转</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第五部分上位机实现\"><a class=\"markdownIt-Anchor\" href=\"#第五部分上位机实现\"></a> 第五部分：上位机实现</h2>\n<h3 id=\"线程架构\"><a class=\"markdownIt-Anchor\" href=\"#线程架构\"></a> 线程架构</h3>\n<pre class=\"mermaid\">classDiagram\n    class LinOtaUpdater {\n        -QThread* m_workerThread\n        -OtaWorker* m_worker\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    class OtaWorker {\n        -int m_devHandle\n        -quint8 m_channel\n        -bool m_cancelRequested\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    LinOtaUpdater --> OtaWorker : 包含</pre>\n<h3 id=\"核心升级流程\"><a class=\"markdownIt-Anchor\" href=\"#核心升级流程\"></a> 核心升级流程</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OtaWorker::startUpgrade</span><span class=\"params\">(<span class=\"type\">const</span> QByteArray &amp;firmwareData, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                             quint16 firmwareVersion)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> SECTOR_SIZE = <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> totalSectors = (firmwareData.<span class=\"built_in\">size</span>() + SECTOR_SIZE - <span class=\"number\">1</span>) / SECTOR_SIZE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. 发送开始命令</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">sendStartCommand</span>(firmwareVersion)) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, <span class=\"string\">&quot;开始命令发送失败&quot;</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 等待设备就绪</span></span><br><span class=\"line\">    <span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (retry++ &lt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">queryStatus</span>(<span class=\"number\">0</span>) == LIN_OTA_STATUS_READY) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        QThread::<span class=\"built_in\">msleep</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retry &gt;= <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, <span class=\"string\">&quot;设备未就绪&quot;</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 分扇区传输数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> sector = <span class=\"number\">0</span>; sector &lt; totalSectors; ++sector) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sector &gt; <span class=\"number\">0</span> &amp;&amp; !<span class=\"built_in\">sendContinueCommand</span>(sector, firmwareVersion)) &#123;</span><br><span class=\"line\">            <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, QString(<span class=\"string\">&quot;扇区%1继续命令失败&quot;</span>).arg(sector))</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        QByteArray sectorData = firmwareData.<span class=\"built_in\">mid</span>(sector * SECTOR_SIZE, SECTOR_SIZE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sectorData.<span class=\"built_in\">size</span>() &lt; SECTOR_SIZE) &#123;</span><br><span class=\"line\">            sectorData.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(SECTOR_SIZE - sectorData.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">transferSectorData</span>(sector, sectorData)) &#123;</span><br><span class=\"line\">            <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, QString(<span class=\"string\">&quot;扇区%1传输失败&quot;</span>).arg(sector))</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">progressChanged</span><span class=\"params\">(sector * <span class=\"number\">100</span> / totalSectors)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4. 发送结束命令</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">sendEndCommand</span>(firmwareVersion)) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">true</span>, <span class=\"string\">&quot;升级成功完成&quot;</span>)</span></span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        emit <span class=\"built_in\">finished</span>(<span class=\"literal\">false</span>, <span class=\"string\">&quot;结束命令发送失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"扇区传输实现\"><a class=\"markdownIt-Anchor\" href=\"#扇区传输实现\"></a> 扇区传输实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">OtaWorker::transferSectorData</span><span class=\"params\">(<span class=\"type\">int</span> sectorIndex, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                   <span class=\"type\">const</span> QByteArray &amp;sectorData)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 发送128帧数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">128</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        QByteArray frame = sectorData.<span class=\"built_in\">mid</span>(i * <span class=\"number\">8</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">sendDataFrame</span>(frame)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 计算本地CRC</span></span><br><span class=\"line\">    quint16 localCrc = <span class=\"built_in\">calculateCrc16</span>(sectorData);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证扇区状态</span></span><br><span class=\"line\">    <span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (retry++ &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        quint16 remoteCrc = <span class=\"number\">0</span>;</span><br><span class=\"line\">        LinOtaStatus status = <span class=\"built_in\">queryStatus</span>(sectorIndex, &amp;remoteCrc);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (status == LIN_OTA_STATUS_FINISH) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (localCrc == remoteCrc) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// 校验成功</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                emit <span class=\"built_in\">statusMessage</span>(<span class=\"built_in\">QString</span>(<span class=\"string\">&quot;CRC校验失败: 本地=0x%1, 远程=0x%2&quot;</span>)</span><br><span class=\"line\">                                  .<span class=\"built_in\">arg</span>(localCrc, <span class=\"number\">4</span>, <span class=\"number\">16</span>, <span class=\"built_in\">QChar</span>(<span class=\"string\">&#x27;0&#x27;</span>))</span><br><span class=\"line\">                                  .<span class=\"built_in\">arg</span>(remoteCrc, <span class=\"number\">4</span>, <span class=\"number\">16</span>, <span class=\"built_in\">QChar</span>(<span class=\"string\">&#x27;0&#x27;</span>)));</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        QThread::<span class=\"built_in\">msleep</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 超时</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第六部分关键技术点\"><a class=\"markdownIt-Anchor\" href=\"#第六部分关键技术点\"></a> 第六部分：关键技术点</h2>\n<h3 id=\"1-数据分片机制\"><a class=\"markdownIt-Anchor\" href=\"#1-数据分片机制\"></a> 1. 数据分片机制</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单帧数据</td>\n<td>8字节</td>\n<td>LIN帧最大数据长度</td>\n</tr>\n<tr>\n<td>单扇区</td>\n<td>1KB</td>\n<td>1024字节</td>\n</tr>\n<tr>\n<td>扇区帧数</td>\n<td>128帧</td>\n<td>1024/8=128</td>\n</tr>\n<tr>\n<td>典型固件</td>\n<td>64KB</td>\n<td>64个扇区</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-错误处理机制\"><a class=\"markdownIt-Anchor\" href=\"#2-错误处理机制\"></a> 2. 错误处理机制</h3>\n<p><strong>关键错误处理策略：</strong></p>\n<ol>\n<li><strong>超时重传</strong>：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (retry++ &lt; MAX_RETRY) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 尝试操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (success) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    QThread::<span class=\"built_in\">msleep</span>(RETRY_DELAY);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>CRC校验失败处理</strong>：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (localCrc != remoteCrc) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 记录错误</span></span><br><span class=\"line\">    <span class=\"comment\">// 触发重传流程</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>状态异常处理</strong>：</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (ota_updater.state == OTA_ERROR) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 重置状态机</span></span><br><span class=\"line\">    <span class=\"comment\">// 通知主节点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-性能优化策略仅介绍\"><a class=\"markdownIt-Anchor\" href=\"#3-性能优化策略仅介绍\"></a> 3. 性能优化策略（仅介绍）</h3>\n<ol>\n<li><strong>并行处理</strong>：多个扇区预取数据</li>\n<li><strong>压缩传输</strong>：固件压缩减少传输量</li>\n<li><strong>差分升级</strong>：仅传输差异部分</li>\n<li><strong>流控制</strong>：动态调整传输速率</li>\n</ol>\n<h2 id=\"第七部分安全设计\"><a class=\"markdownIt-Anchor\" href=\"#第七部分安全设计\"></a> 第七部分：安全设计</h2>\n<h3 id=\"固件验证机制\"><a class=\"markdownIt-Anchor\" href=\"#固件验证机制\"></a> 固件验证机制</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">VerifyFirmwareIntegrity</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 检查固件头</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (firmware_header.magic != FIRMWARE_MAGIC) </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. 验证签名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!VerifyDigitalSignature(firmware_header.signature))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 3. 校验整体CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> total_crc = CalculateCrc16(firmware_data, firmware_size);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (total_crc != firmware_header.crc)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"安全启动流程\"><a class=\"markdownIt-Anchor\" href=\"#安全启动流程\"></a> 安全启动流程</h3>\n<pre class=\"mermaid\">sequenceDiagram\n    设备->>Bootloader: 上电启动\n    Bootloader->>Flash: 读取固件头\n    Bootloader->>Crypto: 验证签名\n    alt 验证成功\n        Bootloader->>Application: 跳转到应用\n    else 验证失败\n        Bootloader->>Recovery: 进入恢复模式\n        Recovery->>LIN: 请求固件更新\n    end</pre>\n<h2 id=\"第八部分实际应用挑战与解决方案\"><a class=\"markdownIt-Anchor\" href=\"#第八部分实际应用挑战与解决方案\"></a> 第八部分：实际应用挑战与解决方案</h2>\n<h3 id=\"典型挑战及应对\"><a class=\"markdownIt-Anchor\" href=\"#典型挑战及应对\"></a> 典型挑战及应对</h3>\n<table>\n<thead>\n<tr>\n<th>挑战</th>\n<th>解决方案</th>\n<th>实现要点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>带宽限制</td>\n<td>增量更新</td>\n<td>仅传输差异部分</td>\n</tr>\n<tr>\n<td>升级中断</td>\n<td>断点续传</td>\n<td>记录最后成功扇区</td>\n</tr>\n<tr>\n<td>电源不稳</td>\n<td>双Bank设计</td>\n<td>BankA/B交替升级</td>\n</tr>\n<tr>\n<td>内存有限</td>\n<td>流式处理</td>\n<td>分块处理不缓存完整固件</td>\n</tr>\n<tr>\n<td>版本兼容</td>\n<td>元数据校验</td>\n<td>校验硬件ID和版本号</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"双bank设计实现\"><a class=\"markdownIt-Anchor\" href=\"#双bank设计实现\"></a> 双Bank设计实现</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Flash布局</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_A_START  0x08000000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_A_END    0x0801FFFF</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_B_START  0x08020000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_B_END    0x0803FFFF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 升级流程</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PerformOTA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> target_bank = (current_bank == BANK_A) ? BANK_B : BANK_A;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 擦除目标Bank</span></span><br><span class=\"line\">    FLASH_EraseBank(target_bank);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 写入新固件</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; sector_count; i++) &#123;</span><br><span class=\"line\">        WriteSector(target_bank + i*<span class=\"number\">1024</span>, sector_data[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证固件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (VerifyFirmware(target_bank)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 更新启动标志</span></span><br><span class=\"line\">        SetBootBank(target_bank);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第九部分测试与验证\"><a class=\"markdownIt-Anchor\" href=\"#第九部分测试与验证\"></a> 第九部分：测试与验证</h2>\n<h3 id=\"测试用例设计\"><a class=\"markdownIt-Anchor\" href=\"#测试用例设计\"></a> 测试用例设计</h3>\n<table>\n<thead>\n<tr>\n<th>测试项</th>\n<th>测试方法</th>\n<th>预期结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>正常升级</td>\n<td>完整传输固件</td>\n<td>升级成功，设备运行新固件</td>\n</tr>\n<tr>\n<td>断电恢复</td>\n<td>随机断电后重启</td>\n<td>恢复升级流程，无损坏</td>\n</tr>\n<tr>\n<td>带宽测试</td>\n<td>模拟不同总线负载</td>\n<td>升级时间在可接受范围</td>\n</tr>\n<tr>\n<td>错误注入</td>\n<td>模拟数据错误</td>\n<td>触发重传机制，最终成功</td>\n</tr>\n<tr>\n<td>边界测试</td>\n<td>传输最大尺寸固件</td>\n<td>完整处理无溢出</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"性能测试数据\"><a class=\"markdownIt-Anchor\" href=\"#性能测试数据\"></a> 性能测试数据</h3>\n<table>\n<thead>\n<tr>\n<th>固件大小</th>\n<th>理论时间</th>\n<th>实测时间</th>\n<th>传输效率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>32KB</td>\n<td>13.6s</td>\n<td></td>\n<td>89%</td>\n</tr>\n<tr>\n<td>64KB</td>\n<td>27.3s</td>\n<td></td>\n<td>88%</td>\n</tr>\n<tr>\n<td>128KB</td>\n<td>54.6s</td>\n<td></td>\n<td>87%</td>\n</tr>\n</tbody>\n</table>\n<p><em>测试条件：LIN波特率19.2kbps，含协议开销</em></p>\n<h2 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论</h2>\n<p>基于LIN总线的OTA升级方案在汽车电子系统中具有重要价值。本文详细介绍了从协议设计到代码实现的全过程，重点解决了以下关键问题：</p>\n<ol>\n<li><strong>协议设计</strong>：设计了精简高效的LIN OTA协议，包括命令集、状态机和数据格式</li>\n<li><strong>分片传输</strong>：通过128帧/扇区的机制克服了LIN帧长度限制</li>\n<li><strong>完整性保障</strong>：实现CRC校验和双Bank存储确保升级可靠性</li>\n<li><strong>错误恢复</strong>：完善的超时重传和状态机设计应对各种异常场景</li>\n<li><strong>性能优化</strong>：多线程架构和流式处理提高升级效率</li>\n</ol>\n<p>随着汽车电子架构的演进，LIN OTA技术将在车身控制领域持续发挥重要作用。未来可探索与CAN FD、以太网等高速总线的协同升级方案，以满足日益增长的固件更新需求。</p>\n<blockquote>\n<p><strong>技术交流</strong>：欢迎访问作者博客 <a href=\"https://www.f123.club\">冯笑一的小窝</a> 获取更多技术文章和源码示例</p>\n</blockquote>\n<h2 id=\"附录关键代码片段\"><a class=\"markdownIt-Anchor\" href=\"#附录关键代码片段\"></a> 附录：关键代码片段</h2>\n<h3 id=\"pid计算函数\"><a class=\"markdownIt-Anchor\" href=\"#pid计算函数\"></a> PID计算函数</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">quint8 <span class=\"title\">OtaWorker::calculatePid</span><span class=\"params\">(quint8 id)</span> </span>&#123;</span><br><span class=\"line\">    id &amp;= <span class=\"number\">0x3F</span>; <span class=\"comment\">// 确保6位ID</span></span><br><span class=\"line\">    quint8 p0 = ((id &gt;&gt; <span class=\"number\">0</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">1</span>) &amp; <span class=\"number\">1</span>) ^ </span><br><span class=\"line\">                ((id &gt;&gt; <span class=\"number\">2</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">4</span>) &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">    quint8 p1 = ~(((id &gt;&gt; <span class=\"number\">1</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">3</span>) &amp; <span class=\"number\">1</span>) ^ </span><br><span class=\"line\">                 ((id &gt;&gt; <span class=\"number\">4</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">5</span>) &amp; <span class=\"number\">1</span>)) &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id | (p0 &lt;&lt; <span class=\"number\">6</span>) | (p1 &lt;&lt; <span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"状态响应处理\"><a class=\"markdownIt-Anchor\" href=\"#状态响应处理\"></a> 状态响应处理</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">OTA_SendStatusResponse</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> response[<span class=\"number\">8</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    response[<span class=\"number\">0</span>] = (<span class=\"type\">uint8_t</span>)ota_updater.state; <span class=\"comment\">// 状态码</span></span><br><span class=\"line\">    response[<span class=\"number\">1</span>] = ota_updater.current_sector; <span class=\"comment\">// 扇区号</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算CRC</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING) &#123;</span><br><span class=\"line\">        response[<span class=\"number\">2</span>] = (ota_updater.calculated_crc &gt;&gt; <span class=\"number\">8</span>) &amp; <span class=\"number\">0xFF</span>;</span><br><span class=\"line\">        response[<span class=\"number\">3</span>] = ota_updater.calculated_crc &amp; <span class=\"number\">0xFF</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 发送响应</span></span><br><span class=\"line\">    LIN_slaveSend(response, <span class=\"keyword\">sizeof</span>(response));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"上位机实现\"><a class=\"markdownIt-Anchor\" href=\"#上位机实现\"></a> 上位机实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在主窗口中使用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::startOtaUpgrade</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> devHandle = DevHandle[<span class=\"number\">0</span>];<span class=\"comment\">// 获取设备句柄</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (devHandle == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open LIN device&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    quint8 channel = ui-&gt;comboBox-&gt;<span class=\"built_in\">currentIndex</span>();   <span class=\"comment\">// LIN通道号 (根据实际情况设置)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 加载固件文件</span></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">firmwareFile</span><span class=\"params\">(<span class=\"string\">&quot;firmware.bin&quot;</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!firmwareFile.<span class=\"built_in\">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open firmware file&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    QByteArray firmwareData = firmwareFile.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    firmwareFile.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    quint16 version = <span class=\"number\">0x0100</span>; <span class=\"comment\">// 固件版本号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建升级器</span></span><br><span class=\"line\">    m_otaUpdater = <span class=\"keyword\">new</span> <span class=\"built_in\">LinOtaUpdater</span>(devHandle, channel, <span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::progressChanged,</span><br><span class=\"line\">            ui-&gt;progressBar, &amp;QProgressBar::setValue);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::statusMessage,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, [<span class=\"keyword\">this</span>](QString msg) &#123;</span><br><span class=\"line\">                 ui-&gt;Message-&gt;<span class=\"built_in\">showMessage</span>(msg, MessageConsole::Success);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::finished,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, &amp;MainWindow::handleOtaResult);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::errorOccurred,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, [<span class=\"keyword\">this</span>](QString error) &#123;</span><br><span class=\"line\">                QMessageBox::<span class=\"built_in\">critical</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;OTA Error&quot;</span>, error);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//开始升级</span></span><br><span class=\"line\">    m_otaUpdater-&gt;<span class=\"built_in\">startUpgrade</span>(firmwareData, version);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::handleOtaResult</span><span class=\"params\">(<span class=\"type\">bool</span> success, QString message)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (success) &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">information</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Success&quot;</span>, message);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">warning</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Failure&quot;</span>, message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清理资源</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (m_otaUpdater) &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span> devHandle = m_otaUpdater-&gt;<span class=\"built_in\">getDeviceHandle</span>(); <span class=\"comment\">// 需要添加getter</span></span><br><span class=\"line\">       m_otaUpdater-&gt;<span class=\"built_in\">deleteLater</span>();</span><br><span class=\"line\">       m_otaUpdater = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">       <span class=\"built_in\">LIN_EX_CloseDevice</span>(devHandle);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::cancelOtaUpgrade</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m_otaUpdater) &#123;</span><br><span class=\"line\">        m_otaUpdater-&gt;<span class=\"built_in\">cancelUpgrade</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2025/png/33668333/1751981435368-6439468c-bc6d-40bf-9e36-0e42cf925940.png\" alt=\"360X360/0e42cf925940.png\" /></p>\n","excerpt":"","more":"<h2 id=\"引言\"><a class=\"markdownIt-Anchor\" href=\"#引言\"></a> 引言</h2>\n<p>随着汽车电子技术的飞速发展，<strong>固件空中升级(OTA)</strong> 技术已成为现代汽车电子系统中不可或缺的功能。在车身控制领域，<strong>LIN总线</strong>作为低成本、低复杂度的通信协议被广泛应用。本文将深入探讨基于LIN总线的OTA升级实现方案，从协议设计到代码实现，全面解析这一关键技术。</p>\n<h2 id=\"第一部分lin总线基础\"><a class=\"markdownIt-Anchor\" href=\"#第一部分lin总线基础\"></a> 第一部分：LIN总线基础</h2>\n<h3 id=\"lin总线概述\"><a class=\"markdownIt-Anchor\" href=\"#lin总线概述\"></a> LIN总线概述</h3>\n<p>LIN(Local Interconnect Network)是一种低成本串行通信协议，主要特点包括：</p>\n<ul>\n<li><strong>单主多从架构</strong>：一个主节点控制多个从节点</li>\n<li><strong>低传输速率</strong>：最高20kbps（典型应用19.2kbps）</li>\n<li><strong>单线传输</strong>：简化布线，降低成本</li>\n<li><strong>时间触发通信</strong>：主节点控制通信时序</li>\n</ul>\n<h3 id=\"lin帧结构\"><a class=\"markdownIt-Anchor\" href=\"#lin帧结构\"></a> LIN帧结构</h3>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>长度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>间隔场</td>\n<td>13位以上低电平</td>\n<td>帧起始标识</td>\n</tr>\n<tr>\n<td>同步场</td>\n<td>1字节(0x55)</td>\n<td>时钟同步</td>\n</tr>\n<tr>\n<td>标识符</td>\n<td>1字节</td>\n<td>6位ID+2位校验</td>\n</tr>\n<tr>\n<td>数据场</td>\n<td>0-8字节</td>\n<td>传输数据</td>\n</tr>\n<tr>\n<td>校验和</td>\n<td>1字节</td>\n<td>数据完整性校验</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第二部分ota协议设计\"><a class=\"markdownIt-Anchor\" href=\"#第二部分ota协议设计\"></a> 第二部分：OTA协议设计</h2>\n<h3 id=\"id枚举定义\"><a class=\"markdownIt-Anchor\" href=\"#id枚举定义\"></a> ID枚举定义</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    gID_OtapCmd_c = <span class=\"number\">0x31</span>,   <span class=\"comment\">// 命令ID</span></span><br><span class=\"line\">    gID_OtapGetStatus_c,    <span class=\"comment\">// 状态查询ID</span></span><br><span class=\"line\">    gID_OtapData_c          <span class=\"comment\">// 数据传输ID</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_id_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令与状态枚举\"><a class=\"markdownIt-Anchor\" href=\"#命令与状态枚举\"></a> 命令与状态枚举</h3>\n<p><strong>命令枚举：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_CMD_NONE = <span class=\"number\">0x00</span>,  <span class=\"comment\">// 无命令</span></span><br><span class=\"line\">    LIN_OTA_CMD_START,        <span class=\"comment\">// 开始传输</span></span><br><span class=\"line\">    LIN_OTA_CMD_END,          <span class=\"comment\">// 结束传输</span></span><br><span class=\"line\">    LIN_OTA_CMD_CONTINUE      <span class=\"comment\">// 继续传输</span></span><br><span class=\"line\">&#125; lin_ota_cmd_c;</span><br></pre></td></tr></table></figure>\n<p><strong>状态枚举：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    LIN_OTA_STATUS_IDLE = <span class=\"number\">0x00</span>,   <span class=\"comment\">// 空闲</span></span><br><span class=\"line\">    LIN_OTA_STATUS_READY,         <span class=\"comment\">// 准备就绪</span></span><br><span class=\"line\">    LIN_OTA_STATUS_RUNNING,       <span class=\"comment\">// 传输中</span></span><br><span class=\"line\">    LIN_OTA_STATUS_FINISH,        <span class=\"comment\">// 完成</span></span><br><span class=\"line\">    LIN_OTA_STATUS_ABORT          <span class=\"comment\">// 中止</span></span><br><span class=\"line\">&#125; <span class=\"type\">lin_ota_status_t</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据帧格式定义\"><a class=\"markdownIt-Anchor\" href=\"#数据帧格式定义\"></a> 数据帧格式定义</h3>\n<table>\n<thead>\n<tr>\n<th>ID类型</th>\n<th>长度</th>\n<th>数据帧结构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gID_OtapCmd_c</td>\n<td>8字节</td>\n<td>[状态码(1B)] [扇区号(1B)] [版本号(2B)] [保留(4B)]</td>\n</tr>\n<tr>\n<td>gID_OtapGetStatus_c</td>\n<td>8字节</td>\n<td>[状态码(1B)] [扇区号(1B)] [CRC(2B)] [保留(4B)]</td>\n</tr>\n<tr>\n<td>gID_OtapData_c</td>\n<td>8字节</td>\n<td>[固件数据(8B)]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"crc校验机制\"><a class=\"markdownIt-Anchor\" href=\"#crc校验机制\"></a> CRC校验机制</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">uint16_t</span> <span class=\"title function_\">CalculateCrc16</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *data, <span class=\"type\">uint16_t</span> len)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> crc = <span class=\"number\">0xFFFF</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">uint16_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        crc ^= (<span class=\"type\">uint16_t</span>)data[i] &lt;&lt; <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">uint8_t</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">8</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (crc &amp; <span class=\"number\">0x8000</span>) &#123;</span><br><span class=\"line\">                crc = (crc &lt;&lt; <span class=\"number\">1</span>) ^ <span class=\"number\">0x1021</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                crc &lt;&lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> crc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第三部分ota升级流程\"><a class=\"markdownIt-Anchor\" href=\"#第三部分ota升级流程\"></a> 第三部分：OTA升级流程</h2>\n<h3 id=\"整体流程图\"><a class=\"markdownIt-Anchor\" href=\"#整体流程图\"></a> 整体流程图</h3>\n<pre class=\"mermaid\">graph TD\n    A[开始] --> B[发送开始命令]\n    B --> C{设备就绪?}\n    C -->|是| D[发送继续命令]\n    C -->|否| B\n    D --> E[发送扇区数据]\n    E --> F[查询状态]\n    F --> G{完成且CRC正确?}\n    G -->|是| H[还有扇区?]\n    G -->|否| E\n    H -->|是| D\n    H -->|否| I[发送结束命令]\n    I --> J[升级完成]</pre>\n<h3 id=\"1-初始化与开始传输\"><a class=\"markdownIt-Anchor\" href=\"#1-初始化与开始传输\"></a> 1. 初始化与开始传输</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主节点发送开始命令</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> start_cmd[<span class=\"number\">8</span>] = &#123;</span><br><span class=\"line\">    LIN_OTA_CMD_START, <span class=\"comment\">// 命令</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,                 <span class=\"comment\">// 扇区号0</span></span><br><span class=\"line\">    <span class=\"number\">0x01</span>, <span class=\"number\">0x00</span>,        <span class=\"comment\">// 固件版本1.0 (大端序)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>            <span class=\"comment\">// 保留字段</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">LIN_SendFrame(gID_OtapCmd_c, start_cmd);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-数据传输阶段扇区处理\"><a class=\"markdownIt-Anchor\" href=\"#2-数据传输阶段扇区处理\"></a> 2. 数据传输阶段（扇区处理）</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 传输单个扇区数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> frame = <span class=\"number\">0</span>; frame &lt; <span class=\"number\">128</span>; frame++) &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> data_frame[<span class=\"number\">8</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 填充8字节数据</span></span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(data_frame, &amp;firmware[frame*<span class=\"number\">8</span>], <span class=\"number\">8</span>);</span><br><span class=\"line\">    LIN_SendFrame(gID_OtapData_c, data_frame);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查询扇区状态</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> status_frame[<span class=\"number\">8</span>];</span><br><span class=\"line\">LIN_QueryStatus(gID_OtapGetStatus_c, status_frame);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 验证CRC</span></span><br><span class=\"line\"><span class=\"type\">uint16_t</span> remote_crc = (status_frame[<span class=\"number\">2</span>] &lt;&lt; <span class=\"number\">8</span>) | status_frame[<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (remote_crc != local_crc) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// CRC校验失败，重传</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-传输结束阶段\"><a class=\"markdownIt-Anchor\" href=\"#3-传输结束阶段\"></a> 3. 传输结束阶段</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">uint8_t</span> end_cmd[<span class=\"number\">8</span>] = &#123;</span><br><span class=\"line\">    LIN_OTA_CMD_END, <span class=\"comment\">// 结束命令</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,               <span class=\"comment\">// 扇区号0</span></span><br><span class=\"line\">    <span class=\"number\">0x01</span>, <span class=\"number\">0x00</span>,      <span class=\"comment\">// 固件版本1.0</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>          <span class=\"comment\">// 保留字段</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">LIN_SendFrame(gID_OtapCmd_c, end_cmd);</span><br></pre></td></tr></table></figure>\n<h2 id=\"第四部分下位机实现\"><a class=\"markdownIt-Anchor\" href=\"#第四部分下位机实现\"></a> 第四部分：下位机实现</h2>\n<h3 id=\"状态机设计\"><a class=\"markdownIt-Anchor\" href=\"#状态机设计\"></a> 状态机设计</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span> &#123;</span></span><br><span class=\"line\">    OTA_IDLE = <span class=\"number\">0</span>,       <span class=\"comment\">// 空闲状态</span></span><br><span class=\"line\">    OTA_READY,          <span class=\"comment\">// 准备就绪</span></span><br><span class=\"line\">    OTA_RECEIVING,       <span class=\"comment\">// 接收数据中</span></span><br><span class=\"line\">    OTA_VERIFYING,       <span class=\"comment\">// 校验中</span></span><br><span class=\"line\">    OTA_COMPLETE,        <span class=\"comment\">// 完成</span></span><br><span class=\"line\">    OTA_ERROR            <span class=\"comment\">// 错误</span></span><br><span class=\"line\">&#125; OtaState;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构\"></a> 数据结构</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    OtaState state;            <span class=\"comment\">// 当前状态</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> current_sector;    <span class=\"comment\">// 当前扇区</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> firmware_version; <span class=\"comment\">// 固件版本</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> expected_crc;     <span class=\"comment\">// 期望CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> calculated_crc;   <span class=\"comment\">// 计算CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> bytes_received;   <span class=\"comment\">// 已接收字节数</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> sector_buffer[<span class=\"number\">1024</span>]; <span class=\"comment\">// 扇区缓冲区(1KB)</span></span><br><span class=\"line\">&#125; OtaUpdater;</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令处理\"><a class=\"markdownIt-Anchor\" href=\"#命令处理\"></a> 命令处理</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">OTA_HandleCommand</span><span class=\"params\">(<span class=\"type\">uint8_t</span>* data)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> command = data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> sector = data[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> version = (data[<span class=\"number\">2</span>] &lt;&lt; <span class=\"number\">8</span>) | data[<span class=\"number\">3</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(command) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_START:</span><br><span class=\"line\">            <span class=\"comment\">// 初始化OTA状态</span></span><br><span class=\"line\">            ota_updater.state = OTA_READY;</span><br><span class=\"line\">            ota_updater.current_sector = <span class=\"number\">0</span>;</span><br><span class=\"line\">            ota_updater.firmware_version = version;</span><br><span class=\"line\">            ota_updater.bytes_received = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"built_in\">memset</span>(ota_updater.sector_buffer, <span class=\"number\">0xFF</span>, </span><br><span class=\"line\">                   <span class=\"keyword\">sizeof</span>(ota_updater.sector_buffer));</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_CONTINUE:</span><br><span class=\"line\">            <span class=\"comment\">// 准备接收新扇区数据</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING || </span><br><span class=\"line\">                ota_updater.state == OTA_READY) &#123;</span><br><span class=\"line\">                ota_updater.state = OTA_RECEIVING;</span><br><span class=\"line\">                ota_updater.current_sector = sector;</span><br><span class=\"line\">                ota_updater.bytes_received = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"built_in\">memset</span>(ota_updater.sector_buffer, <span class=\"number\">0xFF</span>, </span><br><span class=\"line\">                       <span class=\"keyword\">sizeof</span>(ota_updater.sector_buffer));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">case</span> LIN_OTA_CMD_END:</span><br><span class=\"line\">            <span class=\"comment\">// 结束传输</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING || </span><br><span class=\"line\">                ota_updater.state == OTA_COMPLETE) &#123;</span><br><span class=\"line\">                OTA_WriteSectorToFlash(); <span class=\"comment\">// 写入Flash</span></span><br><span class=\"line\">                ota_updater.state = OTA_COMPLETE;</span><br><span class=\"line\">                <span class=\"comment\">// 执行固件跳转</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第五部分上位机实现\"><a class=\"markdownIt-Anchor\" href=\"#第五部分上位机实现\"></a> 第五部分：上位机实现</h2>\n<h3 id=\"线程架构\"><a class=\"markdownIt-Anchor\" href=\"#线程架构\"></a> 线程架构</h3>\n<pre class=\"mermaid\">classDiagram\n    class LinOtaUpdater {\n        -QThread* m_workerThread\n        -OtaWorker* m_worker\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    class OtaWorker {\n        -int m_devHandle\n        -quint8 m_channel\n        -bool m_cancelRequested\n        +startUpgrade()\n        +cancelUpgrade()\n    }\n    \n    LinOtaUpdater --> OtaWorker : 包含</pre>\n<h3 id=\"核心升级流程\"><a class=\"markdownIt-Anchor\" href=\"#核心升级流程\"></a> 核心升级流程</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OtaWorker::startUpgrade</span><span class=\"params\">(<span class=\"type\">const</span> QByteArray &amp;firmwareData, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                             quint16 firmwareVersion)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> SECTOR_SIZE = <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> totalSectors = (firmwareData.<span class=\"built_in\">size</span>() + SECTOR_SIZE - <span class=\"number\">1</span>) / SECTOR_SIZE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1. 发送开始命令</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">sendStartCommand</span>(firmwareVersion)) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, <span class=\"string\">&quot;开始命令发送失败&quot;</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 等待设备就绪</span></span><br><span class=\"line\">    <span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (retry++ &lt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">queryStatus</span>(<span class=\"number\">0</span>) == LIN_OTA_STATUS_READY) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        QThread::<span class=\"built_in\">msleep</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retry &gt;= <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, <span class=\"string\">&quot;设备未就绪&quot;</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 分扇区传输数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> sector = <span class=\"number\">0</span>; sector &lt; totalSectors; ++sector) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sector &gt; <span class=\"number\">0</span> &amp;&amp; !<span class=\"built_in\">sendContinueCommand</span>(sector, firmwareVersion)) &#123;</span><br><span class=\"line\">            <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, QString(<span class=\"string\">&quot;扇区%1继续命令失败&quot;</span>).arg(sector))</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        QByteArray sectorData = firmwareData.<span class=\"built_in\">mid</span>(sector * SECTOR_SIZE, SECTOR_SIZE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sectorData.<span class=\"built_in\">size</span>() &lt; SECTOR_SIZE) &#123;</span><br><span class=\"line\">            sectorData.<span class=\"built_in\">append</span>(<span class=\"built_in\">QByteArray</span>(SECTOR_SIZE - sectorData.<span class=\"built_in\">size</span>(), <span class=\"number\">0xFF</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">transferSectorData</span>(sector, sectorData)) &#123;</span><br><span class=\"line\">            <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">false</span>, QString(<span class=\"string\">&quot;扇区%1传输失败&quot;</span>).arg(sector))</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">progressChanged</span><span class=\"params\">(sector * <span class=\"number\">100</span> / totalSectors)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4. 发送结束命令</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">sendEndCommand</span>(firmwareVersion)) &#123;</span><br><span class=\"line\">        <span class=\"function\">emit <span class=\"title\">finished</span><span class=\"params\">(<span class=\"literal\">true</span>, <span class=\"string\">&quot;升级成功完成&quot;</span>)</span></span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        emit <span class=\"built_in\">finished</span>(<span class=\"literal\">false</span>, <span class=\"string\">&quot;结束命令发送失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"扇区传输实现\"><a class=\"markdownIt-Anchor\" href=\"#扇区传输实现\"></a> 扇区传输实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">OtaWorker::transferSectorData</span><span class=\"params\">(<span class=\"type\">int</span> sectorIndex, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                   <span class=\"type\">const</span> QByteArray &amp;sectorData)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 发送128帧数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">128</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        QByteArray frame = sectorData.<span class=\"built_in\">mid</span>(i * <span class=\"number\">8</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">sendDataFrame</span>(frame)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 计算本地CRC</span></span><br><span class=\"line\">    quint16 localCrc = <span class=\"built_in\">calculateCrc16</span>(sectorData);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证扇区状态</span></span><br><span class=\"line\">    <span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (retry++ &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_cancelRequested) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        quint16 remoteCrc = <span class=\"number\">0</span>;</span><br><span class=\"line\">        LinOtaStatus status = <span class=\"built_in\">queryStatus</span>(sectorIndex, &amp;remoteCrc);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (status == LIN_OTA_STATUS_FINISH) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (localCrc == remoteCrc) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// 校验成功</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                emit <span class=\"built_in\">statusMessage</span>(<span class=\"built_in\">QString</span>(<span class=\"string\">&quot;CRC校验失败: 本地=0x%1, 远程=0x%2&quot;</span>)</span><br><span class=\"line\">                                  .<span class=\"built_in\">arg</span>(localCrc, <span class=\"number\">4</span>, <span class=\"number\">16</span>, <span class=\"built_in\">QChar</span>(<span class=\"string\">&#x27;0&#x27;</span>))</span><br><span class=\"line\">                                  .<span class=\"built_in\">arg</span>(remoteCrc, <span class=\"number\">4</span>, <span class=\"number\">16</span>, <span class=\"built_in\">QChar</span>(<span class=\"string\">&#x27;0&#x27;</span>)));</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        QThread::<span class=\"built_in\">msleep</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 超时</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第六部分关键技术点\"><a class=\"markdownIt-Anchor\" href=\"#第六部分关键技术点\"></a> 第六部分：关键技术点</h2>\n<h3 id=\"1-数据分片机制\"><a class=\"markdownIt-Anchor\" href=\"#1-数据分片机制\"></a> 1. 数据分片机制</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单帧数据</td>\n<td>8字节</td>\n<td>LIN帧最大数据长度</td>\n</tr>\n<tr>\n<td>单扇区</td>\n<td>1KB</td>\n<td>1024字节</td>\n</tr>\n<tr>\n<td>扇区帧数</td>\n<td>128帧</td>\n<td>1024/8=128</td>\n</tr>\n<tr>\n<td>典型固件</td>\n<td>64KB</td>\n<td>64个扇区</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-错误处理机制\"><a class=\"markdownIt-Anchor\" href=\"#2-错误处理机制\"></a> 2. 错误处理机制</h3>\n<p><strong>关键错误处理策略：</strong></p>\n<ol>\n<li><strong>超时重传</strong>：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (retry++ &lt; MAX_RETRY) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 尝试操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (success) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    QThread::<span class=\"built_in\">msleep</span>(RETRY_DELAY);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>CRC校验失败处理</strong>：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (localCrc != remoteCrc) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 记录错误</span></span><br><span class=\"line\">    <span class=\"comment\">// 触发重传流程</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>状态异常处理</strong>：</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (ota_updater.state == OTA_ERROR) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 重置状态机</span></span><br><span class=\"line\">    <span class=\"comment\">// 通知主节点</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-性能优化策略仅介绍\"><a class=\"markdownIt-Anchor\" href=\"#3-性能优化策略仅介绍\"></a> 3. 性能优化策略（仅介绍）</h3>\n<ol>\n<li><strong>并行处理</strong>：多个扇区预取数据</li>\n<li><strong>压缩传输</strong>：固件压缩减少传输量</li>\n<li><strong>差分升级</strong>：仅传输差异部分</li>\n<li><strong>流控制</strong>：动态调整传输速率</li>\n</ol>\n<h2 id=\"第七部分安全设计\"><a class=\"markdownIt-Anchor\" href=\"#第七部分安全设计\"></a> 第七部分：安全设计</h2>\n<h3 id=\"固件验证机制\"><a class=\"markdownIt-Anchor\" href=\"#固件验证机制\"></a> 固件验证机制</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">VerifyFirmwareIntegrity</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 检查固件头</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (firmware_header.magic != FIRMWARE_MAGIC) </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2. 验证签名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!VerifyDigitalSignature(firmware_header.signature))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 3. 校验整体CRC</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> total_crc = CalculateCrc16(firmware_data, firmware_size);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (total_crc != firmware_header.crc)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"安全启动流程\"><a class=\"markdownIt-Anchor\" href=\"#安全启动流程\"></a> 安全启动流程</h3>\n<pre class=\"mermaid\">sequenceDiagram\n    设备->>Bootloader: 上电启动\n    Bootloader->>Flash: 读取固件头\n    Bootloader->>Crypto: 验证签名\n    alt 验证成功\n        Bootloader->>Application: 跳转到应用\n    else 验证失败\n        Bootloader->>Recovery: 进入恢复模式\n        Recovery->>LIN: 请求固件更新\n    end</pre>\n<h2 id=\"第八部分实际应用挑战与解决方案\"><a class=\"markdownIt-Anchor\" href=\"#第八部分实际应用挑战与解决方案\"></a> 第八部分：实际应用挑战与解决方案</h2>\n<h3 id=\"典型挑战及应对\"><a class=\"markdownIt-Anchor\" href=\"#典型挑战及应对\"></a> 典型挑战及应对</h3>\n<table>\n<thead>\n<tr>\n<th>挑战</th>\n<th>解决方案</th>\n<th>实现要点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>带宽限制</td>\n<td>增量更新</td>\n<td>仅传输差异部分</td>\n</tr>\n<tr>\n<td>升级中断</td>\n<td>断点续传</td>\n<td>记录最后成功扇区</td>\n</tr>\n<tr>\n<td>电源不稳</td>\n<td>双Bank设计</td>\n<td>BankA/B交替升级</td>\n</tr>\n<tr>\n<td>内存有限</td>\n<td>流式处理</td>\n<td>分块处理不缓存完整固件</td>\n</tr>\n<tr>\n<td>版本兼容</td>\n<td>元数据校验</td>\n<td>校验硬件ID和版本号</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"双bank设计实现\"><a class=\"markdownIt-Anchor\" href=\"#双bank设计实现\"></a> 双Bank设计实现</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Flash布局</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_A_START  0x08000000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_A_END    0x0801FFFF</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_B_START  0x08020000</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BANK_B_END    0x0803FFFF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 升级流程</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">PerformOTA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> target_bank = (current_bank == BANK_A) ? BANK_B : BANK_A;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 擦除目标Bank</span></span><br><span class=\"line\">    FLASH_EraseBank(target_bank);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 写入新固件</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; sector_count; i++) &#123;</span><br><span class=\"line\">        WriteSector(target_bank + i*<span class=\"number\">1024</span>, sector_data[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 验证固件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (VerifyFirmware(target_bank)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 更新启动标志</span></span><br><span class=\"line\">        SetBootBank(target_bank);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第九部分测试与验证\"><a class=\"markdownIt-Anchor\" href=\"#第九部分测试与验证\"></a> 第九部分：测试与验证</h2>\n<h3 id=\"测试用例设计\"><a class=\"markdownIt-Anchor\" href=\"#测试用例设计\"></a> 测试用例设计</h3>\n<table>\n<thead>\n<tr>\n<th>测试项</th>\n<th>测试方法</th>\n<th>预期结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>正常升级</td>\n<td>完整传输固件</td>\n<td>升级成功，设备运行新固件</td>\n</tr>\n<tr>\n<td>断电恢复</td>\n<td>随机断电后重启</td>\n<td>恢复升级流程，无损坏</td>\n</tr>\n<tr>\n<td>带宽测试</td>\n<td>模拟不同总线负载</td>\n<td>升级时间在可接受范围</td>\n</tr>\n<tr>\n<td>错误注入</td>\n<td>模拟数据错误</td>\n<td>触发重传机制，最终成功</td>\n</tr>\n<tr>\n<td>边界测试</td>\n<td>传输最大尺寸固件</td>\n<td>完整处理无溢出</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"性能测试数据\"><a class=\"markdownIt-Anchor\" href=\"#性能测试数据\"></a> 性能测试数据</h3>\n<table>\n<thead>\n<tr>\n<th>固件大小</th>\n<th>理论时间</th>\n<th>实测时间</th>\n<th>传输效率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>32KB</td>\n<td>13.6s</td>\n<td></td>\n<td>89%</td>\n</tr>\n<tr>\n<td>64KB</td>\n<td>27.3s</td>\n<td></td>\n<td>88%</td>\n</tr>\n<tr>\n<td>128KB</td>\n<td>54.6s</td>\n<td></td>\n<td>87%</td>\n</tr>\n</tbody>\n</table>\n<p><em>测试条件：LIN波特率19.2kbps，含协议开销</em></p>\n<h2 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论</h2>\n<p>基于LIN总线的OTA升级方案在汽车电子系统中具有重要价值。本文详细介绍了从协议设计到代码实现的全过程，重点解决了以下关键问题：</p>\n<ol>\n<li><strong>协议设计</strong>：设计了精简高效的LIN OTA协议，包括命令集、状态机和数据格式</li>\n<li><strong>分片传输</strong>：通过128帧/扇区的机制克服了LIN帧长度限制</li>\n<li><strong>完整性保障</strong>：实现CRC校验和双Bank存储确保升级可靠性</li>\n<li><strong>错误恢复</strong>：完善的超时重传和状态机设计应对各种异常场景</li>\n<li><strong>性能优化</strong>：多线程架构和流式处理提高升级效率</li>\n</ol>\n<p>随着汽车电子架构的演进，LIN OTA技术将在车身控制领域持续发挥重要作用。未来可探索与CAN FD、以太网等高速总线的协同升级方案，以满足日益增长的固件更新需求。</p>\n<blockquote>\n<p><strong>技术交流</strong>：欢迎访问作者博客 <a href=\"https://www.f123.club\">冯笑一的小窝</a> 获取更多技术文章和源码示例</p>\n</blockquote>\n<h2 id=\"附录关键代码片段\"><a class=\"markdownIt-Anchor\" href=\"#附录关键代码片段\"></a> 附录：关键代码片段</h2>\n<h3 id=\"pid计算函数\"><a class=\"markdownIt-Anchor\" href=\"#pid计算函数\"></a> PID计算函数</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">quint8 <span class=\"title\">OtaWorker::calculatePid</span><span class=\"params\">(quint8 id)</span> </span>&#123;</span><br><span class=\"line\">    id &amp;= <span class=\"number\">0x3F</span>; <span class=\"comment\">// 确保6位ID</span></span><br><span class=\"line\">    quint8 p0 = ((id &gt;&gt; <span class=\"number\">0</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">1</span>) &amp; <span class=\"number\">1</span>) ^ </span><br><span class=\"line\">                ((id &gt;&gt; <span class=\"number\">2</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">4</span>) &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">    quint8 p1 = ~(((id &gt;&gt; <span class=\"number\">1</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">3</span>) &amp; <span class=\"number\">1</span>) ^ </span><br><span class=\"line\">                 ((id &gt;&gt; <span class=\"number\">4</span>) &amp; <span class=\"number\">1</span>) ^ ((id &gt;&gt; <span class=\"number\">5</span>) &amp; <span class=\"number\">1</span>)) &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id | (p0 &lt;&lt; <span class=\"number\">6</span>) | (p1 &lt;&lt; <span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"状态响应处理\"><a class=\"markdownIt-Anchor\" href=\"#状态响应处理\"></a> 状态响应处理</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">OTA_SendStatusResponse</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> response[<span class=\"number\">8</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    response[<span class=\"number\">0</span>] = (<span class=\"type\">uint8_t</span>)ota_updater.state; <span class=\"comment\">// 状态码</span></span><br><span class=\"line\">    response[<span class=\"number\">1</span>] = ota_updater.current_sector; <span class=\"comment\">// 扇区号</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 计算CRC</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ota_updater.state == OTA_VERIFYING) &#123;</span><br><span class=\"line\">        response[<span class=\"number\">2</span>] = (ota_updater.calculated_crc &gt;&gt; <span class=\"number\">8</span>) &amp; <span class=\"number\">0xFF</span>;</span><br><span class=\"line\">        response[<span class=\"number\">3</span>] = ota_updater.calculated_crc &amp; <span class=\"number\">0xFF</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 发送响应</span></span><br><span class=\"line\">    LIN_slaveSend(response, <span class=\"keyword\">sizeof</span>(response));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"上位机实现\"><a class=\"markdownIt-Anchor\" href=\"#上位机实现\"></a> 上位机实现</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在主窗口中使用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::startOtaUpgrade</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> devHandle = DevHandle[<span class=\"number\">0</span>];<span class=\"comment\">// 获取设备句柄</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (devHandle == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open LIN device&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    quint8 channel = ui-&gt;comboBox-&gt;<span class=\"built_in\">currentIndex</span>();   <span class=\"comment\">// LIN通道号 (根据实际情况设置)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 加载固件文件</span></span><br><span class=\"line\">    <span class=\"function\">QFile <span class=\"title\">firmwareFile</span><span class=\"params\">(<span class=\"string\">&quot;firmware.bin&quot;</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!firmwareFile.<span class=\"built_in\">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">qWarning</span>() &lt;&lt; <span class=\"string\">&quot;Failed to open firmware file&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    QByteArray firmwareData = firmwareFile.<span class=\"built_in\">readAll</span>();</span><br><span class=\"line\">    firmwareFile.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    quint16 version = <span class=\"number\">0x0100</span>; <span class=\"comment\">// 固件版本号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建升级器</span></span><br><span class=\"line\">    m_otaUpdater = <span class=\"keyword\">new</span> <span class=\"built_in\">LinOtaUpdater</span>(devHandle, channel, <span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::progressChanged,</span><br><span class=\"line\">            ui-&gt;progressBar, &amp;QProgressBar::setValue);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::statusMessage,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, [<span class=\"keyword\">this</span>](QString msg) &#123;</span><br><span class=\"line\">                 ui-&gt;Message-&gt;<span class=\"built_in\">showMessage</span>(msg, MessageConsole::Success);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::finished,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, &amp;MainWindow::handleOtaResult);</span><br><span class=\"line\">    <span class=\"built_in\">connect</span>(m_otaUpdater, &amp;LinOtaUpdater::errorOccurred,</span><br><span class=\"line\">            <span class=\"keyword\">this</span>, [<span class=\"keyword\">this</span>](QString error) &#123;</span><br><span class=\"line\">                QMessageBox::<span class=\"built_in\">critical</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;OTA Error&quot;</span>, error);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//开始升级</span></span><br><span class=\"line\">    m_otaUpdater-&gt;<span class=\"built_in\">startUpgrade</span>(firmwareData, version);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::handleOtaResult</span><span class=\"params\">(<span class=\"type\">bool</span> success, QString message)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (success) &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">information</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Success&quot;</span>, message);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        QMessageBox::<span class=\"built_in\">warning</span>(<span class=\"keyword\">this</span>, <span class=\"string\">&quot;Failure&quot;</span>, message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清理资源</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (m_otaUpdater) &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span> devHandle = m_otaUpdater-&gt;<span class=\"built_in\">getDeviceHandle</span>(); <span class=\"comment\">// 需要添加getter</span></span><br><span class=\"line\">       m_otaUpdater-&gt;<span class=\"built_in\">deleteLater</span>();</span><br><span class=\"line\">       m_otaUpdater = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">       <span class=\"built_in\">LIN_EX_CloseDevice</span>(devHandle);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MainWindow::cancelOtaUpgrade</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m_otaUpdater) &#123;</span><br><span class=\"line\">        m_otaUpdater-&gt;<span class=\"built_in\">cancelUpgrade</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2025/png/33668333/1751981435368-6439468c-bc6d-40bf-9e36-0e42cf925940.png\" alt=\"360X360/0e42cf925940.png\" /></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmd71t80q00093cw633rj683i","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80u000i3cw6c0c39m7v"},{"post_id":"cmd71t80j00013cw6e98a8iiy","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80v000n3cw62c2n57nx"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80v000q3cw6bgvi5h8x"},{"post_id":"cmd71t80s000f3cw68px82txx","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80x000u3cw6ahcq183z"},{"post_id":"cmd71t80m00033cw6go59gc7k","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80y000x3cw6b491acia"},{"post_id":"cmd71t80t000h3cw68tgg2t7t","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80y00103cw65umrhzqv"},{"post_id":"cmd71t80u000m3cw6et4t4dto","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80y00123cw69wxn2qg7"},{"post_id":"cmd71t80p00073cw63h5n1mqf","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t80z00143cw6b4mm5h1h"},{"post_id":"cmd71t80x000w3cw69xfecn7e","category_id":"cmd71t80y00113cw63i9p4cov","_id":"cmd71t80z00193cw622xr45d1"},{"post_id":"cmd71t81a002g3cw66m1i1obt","category_id":"cmd71t80y00113cw63i9p4cov","_id":"cmd71t81c002l3cw6bgmz0xjt"},{"post_id":"cmd71t81a002h3cw6978wcyrw","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t81c002m3cw64waf35v3"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t81d002o3cw6grd6bh55"},{"post_id":"cmd71t81c002k3cw6a8pgdfl2","category_id":"cmd71t80n00043cw6cz8w05r2","_id":"cmd71t81d002q3cw6a82n1hiw"}],"PostTag":[{"post_id":"cmd71t80j00013cw6e98a8iiy","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t80v000o3cw610g18oes"},{"post_id":"cmd71t80j00013cw6e98a8iiy","tag_id":"cmd71t80r000d3cw6de3p6our","_id":"cmd71t80w000r3cw6a6zhbato"},{"post_id":"cmd71t80u000m3cw6et4t4dto","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t80x000v3cw67cha7ejc"},{"post_id":"cmd71t80u000m3cw6et4t4dto","tag_id":"cmd71t80r000d3cw6de3p6our","_id":"cmd71t80y000y3cw63w3r101e"},{"post_id":"cmd71t80m00033cw6go59gc7k","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t80z00153cw6cvhvcizz"},{"post_id":"cmd71t80m00033cw6go59gc7k","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t80z00163cw68goj4u5i"},{"post_id":"cmd71t80m00033cw6go59gc7k","tag_id":"cmd71t80y000z3cw6bue4159f","_id":"cmd71t80z00183cw6ck767gtk"},{"post_id":"cmd71t80p00073cw63h5n1mqf","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t810001d3cw60yc9gfxd"},{"post_id":"cmd71t80p00073cw63h5n1mqf","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t810001e3cw6ejro2q8t"},{"post_id":"cmd71t80p00073cw63h5n1mqf","tag_id":"cmd71t80z001a3cw67ani9nkt","_id":"cmd71t811001g3cw639x51mcs"},{"post_id":"cmd71t80p00073cw63h5n1mqf","tag_id":"cmd71t810001b3cw69cj6c8dk","_id":"cmd71t811001h3cw634de3cwp"},{"post_id":"cmd71t80q00093cw633rj683i","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t811001j3cw6hyqx9hue"},{"post_id":"cmd71t80q00093cw633rj683i","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t811001k3cw6eg4vbbm4"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t812001o3cw6aqtagmpk"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","tag_id":"cmd71t810001f3cw6g4l96lq5","_id":"cmd71t812001p3cw661pna72s"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","tag_id":"cmd71t80z001a3cw67ani9nkt","_id":"cmd71t813001r3cw60oy3ezpt"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","tag_id":"cmd71t811001l3cw645d36i5g","_id":"cmd71t813001s3cw6axlm51ll"},{"post_id":"cmd71t80r000b3cw6d8upc2zn","tag_id":"cmd71t811001m3cw6bocu4iqr","_id":"cmd71t813001u3cw655bv548c"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t815001y3cw65y3kf019"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t815001z3cw6celo87r6"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t80z001a3cw67ani9nkt","_id":"cmd71t81500213cw68jsx99hk"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t813001t3cw6grclaipj","_id":"cmd71t81500223cw6bc2s3d6f"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t814001v3cw6a5u39jih","_id":"cmd71t81500243cw676aogb1p"},{"post_id":"cmd71t80s000f3cw68px82txx","tag_id":"cmd71t814001w3cw6e9k45ywq","_id":"cmd71t81500253cw60kdu6s6g"},{"post_id":"cmd71t80t000h3cw68tgg2t7t","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t81600273cw60aop6mqn"},{"post_id":"cmd71t80t000h3cw68tgg2t7t","tag_id":"cmd71t810001b3cw69cj6c8dk","_id":"cmd71t81600283cw67lw912oy"},{"post_id":"cmd71t80t000h3cw68tgg2t7t","tag_id":"cmd71t80y000z3cw6bue4159f","_id":"cmd71t816002a3cw6b8js633i"},{"post_id":"cmd71t80t000h3cw68tgg2t7t","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t816002b3cw6cu407z8i"},{"post_id":"cmd71t80x000w3cw69xfecn7e","tag_id":"cmd71t81500263cw6341acttp","_id":"cmd71t816002d3cw6hz224pft"},{"post_id":"cmd71t80x000w3cw69xfecn7e","tag_id":"cmd71t81600293cw63oaq3hye","_id":"cmd71t816002e3cw682258qvk"},{"post_id":"cmd71t80x000w3cw69xfecn7e","tag_id":"cmd71t816002c3cw6g2j84c9p","_id":"cmd71t817002f3cw6ewwscvky"},{"post_id":"cmd71t81a002h3cw6978wcyrw","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t81d002p3cw62dj37b1a"},{"post_id":"cmd71t81a002h3cw6978wcyrw","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t81d002r3cw6asmbdm9p"},{"post_id":"cmd71t81a002h3cw6978wcyrw","tag_id":"cmd71t80z001a3cw67ani9nkt","_id":"cmd71t81d002t3cw6an4ociek"},{"post_id":"cmd71t81a002h3cw6978wcyrw","tag_id":"cmd71t810001b3cw69cj6c8dk","_id":"cmd71t81d002u3cw60hl8dzh4"},{"post_id":"cmd71t81a002h3cw6978wcyrw","tag_id":"cmd71t81c002j3cw6af5395ba","_id":"cmd71t81d002v3cw6gcxmbnxd"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t81d002w3cw68hi5012c"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","tag_id":"cmd71t80w000s3cw682ptcrc4","_id":"cmd71t81d002x3cw6enr5dmkt"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","tag_id":"cmd71t80z001a3cw67ani9nkt","_id":"cmd71t81d002y3cw6drq30bu9"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","tag_id":"cmd71t810001b3cw69cj6c8dk","_id":"cmd71t81d002z3cw66em275d4"},{"post_id":"cmd71t81b002i3cw6fpxzb97i","tag_id":"cmd71t81c002j3cw6af5395ba","_id":"cmd71t81d00303cw69jjfho2p"},{"post_id":"cmd71t81c002k3cw6a8pgdfl2","tag_id":"cmd71t80o00053cw6fp98g0z4","_id":"cmd71t81d00313cw64rw02ldh"},{"post_id":"cmd71t81c002k3cw6a8pgdfl2","tag_id":"cmd71t80r000d3cw6de3p6our","_id":"cmd71t81e00323cw65osr00ft"},{"post_id":"cmd71t81c002k3cw6a8pgdfl2","tag_id":"cmd71t81d002s3cw654p85p0r","_id":"cmd71t81e00333cw655l238ms"}],"Tag":[{"name":"嵌入式","_id":"cmd71t80o00053cw6fp98g0z4"},{"name":"C#","_id":"cmd71t80r000d3cw6de3p6our"},{"name":"C语言","_id":"cmd71t80w000s3cw682ptcrc4"},{"name":"技术","_id":"cmd71t80y000z3cw6bue4159f"},{"name":"笔记","_id":"cmd71t80z001a3cw67ani9nkt"},{"name":"单片机","_id":"cmd71t810001b3cw69cj6c8dk"},{"name":"C++","_id":"cmd71t810001f3cw6g4l96lq5"},{"name":"Qt","_id":"cmd71t811001l3cw645d36i5g"},{"name":"QML","_id":"cmd71t811001m3cw6bocu4iqr"},{"name":"python","_id":"cmd71t813001t3cw6grclaipj"},{"name":"linux","_id":"cmd71t814001v3cw6a5u39jih"},{"name":"ros","_id":"cmd71t814001w3cw6e9k45ywq"},{"name":"小程序","_id":"cmd71t81500263cw6341acttp"},{"name":"工具","_id":"cmd71t81600293cw63oaq3hye"},{"name":"应用","_id":"cmd71t816002c3cw6g2j84c9p"},{"name":"bootloader","_id":"cmd71t81c002j3cw6af5395ba"},{"name":"教程，技术分享","_id":"cmd71t81d002s3cw654p85p0r"}]}}